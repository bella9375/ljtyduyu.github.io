<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>raindu&#39;s home</title>
  <subtitle>A lifelong learner!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.raindu.com/"/>
  <updated>2017-07-19T10:33:25.686Z</updated>
  <id>http://www.raindu.com/</id>
  
  <author>
    <name>RainDu</name>
    <email>578708965@.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>超强脑洞第三弹之——ggplot构造瀑布图</title>
    <link href="http://www.raindu.com/2017/07/19/%E8%B6%85%E5%BC%BA%E8%84%91%E6%B4%9E%E7%AC%AC%E4%B8%89%E5%BC%B9%E4%B9%8B%E2%80%94%E2%80%94ggplot%E6%9E%84%E9%80%A0%E7%80%91%E5%B8%83%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/07/19/超强脑洞第三弹之——ggplot构造瀑布图/</id>
    <published>2017-07-19T10:27:25.000Z</published>
    <updated>2017-07-19T10:33:25.686Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orpzs13ft.bkt.clouddn.com/waterfall/%E7%80%91%E5%B8%83%E5%9B%BE2.png" alt=""></p>
<p>对，就是瀑布图，你没看错。而且是使用ggplot现有图层叠加构造，并没有用任何ggplot的外挂插件。</p>
<a id="more"></a>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>作图理念是在数据源的构造上，方法与《Excel图表之道》《Excel图表拒绝平庸》中的方法一致，我只是加入了自己的技巧。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggmap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>构造瀑布图数据源：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Item&lt;-c(<span class="string">"Before"</span>,<span class="string">"Factor A"</span>,<span class="string">"Factor B"</span>,<span class="string">"Factor C"</span>,<span class="string">"Factor D"</span>,<span class="string">"Factor E"</span>,<span class="string">"Factor F"</span>,<span class="string">"Factor G"</span>,<span class="string">"After"</span>)</div><div class="line">Data&lt;-c(<span class="number">325</span>,-<span class="number">32</span>,-<span class="number">105</span>,<span class="number">38</span>,<span class="number">86</span>,<span class="number">97</span>,<span class="number">232</span>,<span class="number">389</span>,<span class="number">1030</span>)</div><div class="line">mydata&lt;-data.frame(Item,Data,stringsAsFactors =<span class="literal">F</span>)</div><div class="line">mydata$BA&lt;-mydata$Data</div><div class="line">mydata$Dummy&lt;-<span class="number">0</span></div><div class="line">mydata$add&lt;-<span class="number">0</span></div><div class="line">mydata$Reduc&lt;-<span class="number">0</span></div><div class="line">mydata$BA[<span class="number">2</span>:<span class="number">8</span>]&lt;-<span class="number">0</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:<span class="number">8</span>)&#123;</div><div class="line">ifelse(mydata$Data[i]&lt;<span class="number">0</span>,mydata$Dummy[i]&lt;-sum(mydata$Data[<span class="number">1</span>:i]),mydata$Dummy[i]&lt;-sum(mydata$Data[<span class="number">1</span>:i-<span class="number">1</span>]))</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:<span class="number">8</span>)&#123;</div><div class="line">ifelse(mydata$Data[i]&lt;<span class="number">0</span>,mydata$add[i]&lt;-<span class="number">0</span>,mydata$add[i]&lt;-mydata$Data[i])</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:<span class="number">8</span>)&#123;</div><div class="line">ifelse(mydata$Data[i]&lt;<span class="number">0</span>,mydata$Reduc[i]&lt;-abs(mydata$Data[i]),mydata$add[i]&lt;-<span class="number">0</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata1&lt;-mydata[,-<span class="number">2</span>]</div><div class="line">mydataA&lt;- melt(mydata1,id.vars =<span class="string">"Item"</span>,variable.name = <span class="string">"class"</span>, value.name = <span class="string">"scope"</span>)</div><div class="line">mydataA$class&lt;-factor(mydataA$class,levels=c(<span class="string">"Reduc"</span>,<span class="string">"add"</span>,<span class="string">"Dummy"</span>,<span class="string">"BA"</span>),order=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<h3 id="图形可视化："><a href="#图形可视化：" class="headerlink" title="图形可视化："></a>图形可视化：</h3><p><strong>色盘设置：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Color&lt;-c(<span class="string">"#A6442A"</span>,<span class="string">"#015313"</span>,<span class="string">"#FFFFFF"</span>,<span class="string">"#131F37"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>作图函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/瀑布图1.png"</span>,width=<span class="number">650</span>,height=<span class="number">360</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydataA,aes(x=Item,y=scope,fill=class),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">1</span>)+</div><div class="line">scale_x_discrete(limits=Item)+</div><div class="line">scale_fill_manual(values=Color)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=BA/<span class="number">2</span>),label=ifelse(mydata1$BA!=<span class="number">0</span>,mydata1$BA,<span class="string">""</span>),col=<span class="string">"white"</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=Dummy+add),label=ifelse(mydata1$add!=<span class="number">0</span>,paste(<span class="string">"+"</span>,mydata1$add,sep=<span class="string">""</span>),<span class="string">""</span>),col=<span class="string">"#015313"</span>,vjust=-<span class="number">.5</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=Dummy),label=ifelse(mydata1$Reduc!=<span class="number">0</span>,paste(<span class="string">"-"</span>,mydata1$Reduc,sep=<span class="string">""</span>),<span class="string">""</span>),col=<span class="string">"#A6442A"</span>,vjust=<span class="number">1.2</span>)+</div><div class="line">theme(</div><div class="line">panel.background=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text = element_text(colour =<span class="string">"black"</span>,size=<span class="number">12</span>,face=<span class="string">"italic"</span>),</div><div class="line">axis.text.y=element_blank(),</div><div class="line">axis.ticks=element_blank()</div><div class="line">)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/waterfall/%E7%80%91%E5%B8%83%E5%9B%BE1.png" alt=""></p>
<p><strong>通过角度旋转，得到水平方向瀑布图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/瀑布图2.png"</span>,width=<span class="number">650</span>,height=<span class="number">360</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydataA,aes(x=Item,y=scope,fill=class),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">1</span>)+</div><div class="line">scale_x_discrete(limits=Item)+</div><div class="line">scale_fill_manual(values=Color)+</div><div class="line">coord_flip()+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=BA/<span class="number">2</span>),label=ifelse(mydata1$BA!=<span class="number">0</span>,mydata1$BA,<span class="string">""</span>),col=<span class="string">"white"</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=Dummy+add),label=ifelse(mydata1$add!=<span class="number">0</span>,paste(<span class="string">"+"</span>,mydata1$add,sep=<span class="string">""</span>),<span class="string">""</span>),col=<span class="string">"#015313"</span>,hjust=-<span class="number">.20</span>)+</div><div class="line">geom_text(data=mydata1,aes(x=Item,y=Dummy),label=ifelse(mydata1$Reduc!=<span class="number">0</span>,paste(<span class="string">"-"</span>,mydata1$Reduc,sep=<span class="string">""</span>),<span class="string">""</span>),col=<span class="string">"#A6442A"</span>,hjust=<span class="number">1.2</span>)+</div><div class="line">theme(</div><div class="line">panel.background=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text = element_text(colour =<span class="string">"black"</span>,size=<span class="number">12</span>,face=<span class="string">"italic"</span>),</div><div class="line">axis.text.x=element_blank(),</div><div class="line">axis.ticks=element_blank()</div><div class="line">)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/waterfall/%E7%80%91%E5%B8%83%E5%9B%BE2.png" alt=""></p>
<h3 id="核心要点总结"><a href="#核心要点总结" class="headerlink" title="核心要点总结:"></a>核心要点总结:</h3><ul>
<li>数据源组织：瀑布图高度依赖数据源组织，如果你不太熟悉R中的数据操纵，完全可以将数据源组织过程在excel使用函数完成，然后倒入R并转为长数据进行作图。</li>
<li>数据宽转长过程：转换后的因子变量的四个水平顺序要重点注意。因子水平顺序为：降低值&lt;增加值&lt;占位值&lt;开头/结尾值。（顺序万不能乱）。</li>
<li>色盘颜色顺序：与因子水平顺序一致。第三个为白色，其他与之对应。</li>
</ul>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orpzs13ft.bkt.clouddn.com/waterfall/%E7%80%91%E5%B8%83%E5%9B%BE2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对，就是瀑布图，你没看错。而且是使用ggplot现有图层叠加构造，并没有用任何ggplot的外挂插件。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>给R语言初学者的几个建议~</title>
    <link href="http://www.raindu.com/2017/07/14/%E7%BB%99R%E8%AF%AD%E8%A8%80%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%87%A0%E4%B8%AA%E5%BB%BA%E8%AE%AE/"/>
    <id>http://www.raindu.com/2017/07/14/给R语言初学者的几个建议/</id>
    <published>2017-07-14T11:38:19.000Z</published>
    <updated>2017-07-14T12:14:46.549Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oqdvmreg2.bkt.clouddn.com/guide/image.jpg" alt=""></p>
<p>最近有很多人在问我关于R语言学习入门的问题。</p>
<a id="more"></a>
<p>有在公众号文章留言的，有后台回复的，有加qq或者微信直接交流的、有知乎私信或者文章留言的，还有微信群里直接@我的。</p>
<p>说实话，这个话题，如果由一个在数据科学领域叱咤多年、项目经验丰富，代码写的很溜的老司机来回答，结果会更有信服力。</p>
<p><strong>而我并不适合来回答这个问题，理由如下：</strong></p>
<ul>
<li>首先我的学习周期很短，正式开始于2016年的9月份，算起来仅有10个月左右，有点速成的意味；</li>
<li>其次我在学习R语言之前并没有任何的编程基础（如果不算大学修过的SQL和自己只会一点儿皮毛的VBA的话）；</li>
<li>第三我是一个文科生，没有很强大的数理基础和统计背景。</li>
</ul>
<p><strong>但是如果换一个角度来思考，我又觉得我很有资格来回答这个问题，理由如下：</strong></p>
<ul>
<li>作为一个文科编程小白和数学盲，我更懂和我一样编程零基础、数学又不好的初学者在初次接触R语言之时，内心的困惑和挣扎；</li>
<li>按照我的学习周期及其效果来看，我的学习效果得到了实战检验和诸多读者的认可；</li>
<li>我的R语言学习之旅是在大学校园里完成的，而非是在职场的强压下被逼无奈之下开始的，所以不带很多的功利性和企图速成的快节奏，同样也是按需去学，学的都是真把式和投入回报率最高的部分，所以对于基础的把握及学习的节奏的经验更值得大家借鉴。</li>
</ul>
<p>下面我开始我的回答（biaoyan!!!）</p>
<p><strong>关于学习初衷：</strong></p>
<p>首先我想说的是，在打算学习R之前一定要先问自己一句，你学习R语言的目的是什么？</p>
<p>是大学专业课程的需要？或者提前储备自己的数据分析技能？还是为了应对职场压力，被动充电？亦或者仅仅一时心血来潮，看到如今的大数据发展的如火如荼、不由自主的来凑一波热闹？或者是纯粹只是为了兴趣、实现自己的某些想法。</p>
<p>因为目标定位不同，意味着你能为此打算花费的时间长度不同、付出的心血不同、学习的路径不同、学习学习的模块不同，达到的效果也不同。</p>
<p>一定要确定好目标，按需去学，否则你在入门之前就首先会陷入迷茫和困顿，因为R语言除了内置的几个基础包之外，CRAN上可用的有不下上万个扩展包，如果再算上GitHub上 托管的个人开发的小众包，可能有好几万了，掰着指头数一数，够学一辈子了。</p>
<p><strong>关于对R语言的理解：</strong></p>
<p>这里我讲一下自己对于R语言的理念，我不想重复那些已经被转播烂了的概念解释、发展历史、及其功能简介。</p>
<p>R语言是统计学家开发的，出生之初就决定了它的使命是统计计算和数据可视化，这算是R语言核心功能的两个大方向。</p>
<p>对于这两个方向而言，统计计算的学习，基础都在课堂理论与专业背景上，说实话，R语言只是提供了一个实现的平台而已，它并不该改变或者创造新的理论、模型。</p>
<p>而这些统计计算所使用的公式、用到的模型算法，大部分都被封装成一个个扩展包里，导入包之后，仅需调用对应函数、设置对应参数即可，这些函数与Excel里面的函数本无区别，无需恐惧。</p>
<p>至于参数的调优、模型的检验与优化，这些东西所依赖的知识背景，也基本都是来源于课堂学习和专业背景，与R软件的关系并不大，对于需要自己写算法的情况，你也仅是在函数的基础上按照成熟的理论算法进行调优和计算，这与软件无关（除了基础语法之外），而与软件之外的专业背景和行业经验有关。</p>
<p>说到底，对于统计学习这一块，重要的是理论背景、业务经验、而真正需要R来实现的，仅仅是内置的扩展包函数、基础语法而已。</p>
<p>类比一下SPSS的学习，一个不懂统计学的人很难学好SPSS，尽管他知道各种功能模块和菜单（比如我），同样，一个不懂统计学和数学的人也难学好R语言（统计计算模块），尽管他很熟悉R语言的基础语法和很多扩展包所能实现的功能（比如我）。</p>
<p>而对于R语言的数据可视化方向来讲，则稍有不同。数据可视化确实并不十分依赖数学（除了专门用于算法呈现的图形之外，很少有需要大量运算的），但是他高度依赖图形语法，依赖可视化视觉呈现理念。</p>
<p>R语言中被疯传有四套语法（分别是基础图形语法、高级图形语法、lattice语法、ggplot2语法）。但是遗憾的我只会其中之一——ggplot2。</p>
<p>我学东西的初衷很纯粹，要把一个东西做好，不是一般的好，而是要令效果赏心悦目、达到惊艳众人的目的，最重要的，要让老板赞不绝口（难道你不想升职加薪嘛）。</p>
<p>这就意味着我要学一套优雅、高效、兼容性强、更加贴近可视化理念的语法。因为我的精力和时间不容许我把付出的心血平摊在四条任务线上，毕竟我的多任务处理能力极差。</p>
<p>倘若贪多，这样造成的后果可能是，每一套都语法都能懂一些，但是每一套都表现平平，这是我不能容忍的。而ggplot2对我来说既是绝佳的选择。</p>
<p>即便如此，语法熟练或者说能够顺记于心就真的够了吗？当然不是，即便能能够熟记于心，也并不能保证自己能够游刃有余的实现自己的想法，因为数据可视化除了依赖实现的工具和平台语法之外，更多的是对于数据源的理解、对于可视化的理解、对于设计理念的融会贯通（怎么去配色、怎么去排版、怎么去搭配字体等）。</p>
<p>如果说软件的学习也遵循二八定律的话，我觉得，R语言的学习也是如此。</p>
<p>百分之八十的精力需要花费在软件之外的统计学理论背景、业务知识（可以自学呀），而需要使用R软件来实现的部分，不要干巴巴的去学（当然R语言的基础语法要牢固），理论搞透了很多事情就会水到渠成，迎刃而解了。这一点特别体现在对于统计与数据分析的学习上。</p>
<p>而数据可视化则需要你在牢固掌握基础上（基础语法运用、数据清洗技能），能够熟练运用一套图形语法（推荐ggplot2）,然后不要过于将精力放在工具和代码本身，而是多积累可视化素养和提升设计审美水平。（这里我将数据可视化的二八定律稍稍修改一下，五五定律比较合适，因为ggplot2不是很好掌握）。</p>
<p>至于设计、审美、创意这些柔性的东西，很难去通过一两本书或者一两套课程搞定，这些是内化于生活，积累于日常的点点滴滴，当然如果有意识的去通过一些课程、书籍慢慢培养，日积月累也会见效的。</p>
<p><strong>关于R语言学习技能路径：</strong></p>
<blockquote>
<p>通用技能学习：</p>
<ul>
<li>基础：数据结构、变量类型、数据导入/导出、数据合并追加、长宽转换、数据索引、切片、聚合。</li>
<li>进阶：正则表达式、合并与分列、匹配与替换、缺失值插补、去重与排序，控制流：循环与判断。</li>
</ul>
<p>专用技能学习：</p>
<ul>
<li>统计与分析：去学课本吧</li>
<li>数据可视化：ggplot2语法+设计+审美+创意</li>
</ul>
</blockquote>
<p>基本上只要自己的通用技能学的差不多之后，就没有必要一直钻在这个小圈子里来回转了，可以自己去找数据做案例，案例是最好的学习，进步大多源于案例中解决未知问题的能力。</p>
<p>我没有读过很多R语言的书，所以这里还是不荐书了，如果你真的有心去学，还用别人荐书吗，看下豆瓣的图书榜就成了。</p>
<p>平时多用搜索引擎去解决临时性问题，基本上你遇到的问题，前人在网络上都已经给出了很详细的答案。</p>
<p><strong>回答一些初学者的问题：</strong></p>
<ol>
<li><p>R语言是不是需要很深厚的编程基础，我编程基础基本为0，是不是不适合学这个？<br>我在学习R之前编程基础也为0的，有编程基础那叫程序员，程序员学习R语言都不用眨眼的~</p>
</li>
<li><p>学习R语言是不是需要很厉害的数学背景，我是文科生，数学超级差，是不是学不会啦！<br>握个手，我情况跟你一样，也是文科生，数学超级差，如果你打算往数据挖掘方向转型的话，可能需要补一下高数、线代、概率论统计与算法的东西，如果仅是作为业务分析工具、可视化之用，可能你的数学水平已经超越门槛了。</p>
</li>
<li><p>我R语言学了很长时间，好像也有一年了，看了很多书，所有的基础语法都会、ggplot2也都理解，但是就是自己写代码的时候写不出来，画图的时候干着急。<br>你是不是一直在看课本，一直在看，连练习代码都是copy课本上的，你做过多少实战案例，分析过多少真实业务数据、有多少新知识是在课本之外的实战过程中解决的，多看不如多练。</p>
</li>
<li><p>求地图模板！！！<br>抱歉，我不提供模板，我只提供代码和案例数据！（R语言很难做成模板）</p>
</li>
<li><p>你好，在吗，可以帮我画个图嘛~<br>……（我想说一句不在的）</p>
</li>
<li><p>可以推荐一下入门书吗？<br>其实我并不觉得R语言的入门需要入门书，因为我在入门阶段也没有照着书去学，但是既然大家提出来这个问题，我还是给些建议吧，如果你是在校学生，时间充裕，推荐《R语言实战》，不过一定要有选择性的去看，不要通篇看，前面几张关于数据结构、变量类型、数据清洗的要好好看（略过概念性和纯解释性内容），中间统计学习部分按需酌情去看，最后的文档报告输出部分谨慎去看（LaTeX和HTML你不一定能用得到的）。<br>数据可视化推荐两本吧，《R语言可视化手册》、《ggplot2：数据分析与图形艺术》（首选第一本，比较接地气，第二本虽然是作者本人大作，但是立意较为独特、高远、对初学者不是很友好）。<br>如果你是职场人士的话，那么并不十分推荐以课本为主，因为工作时间占用太多，不可能抽出大量时间用于练习，推荐工作之余利用碎片化时间听一些在线课程。（入门可以听免费的，天善智能社区就是很好地免费课程学习平台，我自己在天善智能也有开课哦，而且里面有大数据主题的多门免费课程，此外网易云课堂里也可以淘到很多好课）。免费课程用于入门，然后借助接触一线业务数据的机会，多把R语言用工作实践，你会进步的更快。</p>
</li>
<li><p>小魔方，你是如何学习R语言的，可以传授一些经验吗？<br>这个问题我太不好意思回答了，不过我还是舔着脸讲一下吧，我属于实战派，平时练习都是直接使用爬虫抓网络上的数据，实习的时候也是能用R的场合坚决不用Excel，逼着自己找R语言的使用场景，然后通过微信公众号、知乎专栏和个人博客进行持续性的内容输出(强迫自己去持续练习)。<br>当然，打捞基础很重要，否则只能每次写代码的时候都放着笔记本在身边，那里不会看哪里（很浪费时间的）</p>
</li>
</ol>
<p>善用帮助文档，R语言中有强大的帮助系统，你可以直接进入扩展包的文档主页， 也可以使用？info来搜索某个函数的详细使用方法及参数设定规则。</p>
<p>保证规律性的练习，每天都要抽出固定时间来练习，具体安排视个人的具体情况。</p>
<p>最后给一句忠告，一门用于数据分析的编程语言，其只有用于数据分析实战才能发挥作用，就像老虎只有在森林里才能具备兽王的野性，所以一旦感觉自己掌握了基础之后，最后的进阶方式就是用于实战。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oqdvmreg2.bkt.clouddn.com/guide/image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近有很多人在问我关于R语言学习入门的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>超强脑洞第二弹之——ggplot构造漏斗图</title>
    <link href="http://www.raindu.com/2017/07/13/%E8%B6%85%E5%BC%BA%E8%84%91%E6%B4%9E%E7%AC%AC%E4%BA%8C%E5%BC%B9%E4%B9%8B%E2%80%94%E2%80%94ggplot%E6%9E%84%E9%80%A0%E6%BC%8F%E6%96%97%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/07/13/超强脑洞第二弹之——ggplot构造漏斗图/</id>
    <published>2017-07-13T01:01:32.000Z</published>
    <updated>2017-07-13T16:11:58.047Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image.jpg" alt=""></p>
<p>今天这篇要用ggplot构造漏斗图，其实ggplot内置图层函数中不存在所谓的漏斗图、子弹图等比较复杂的图表类型，但是ggplot的现有图层函数和标度设置完全可以胜任这些图形，以下是利用ggplot临摹漏斗图的代码过程。</p>
<a id="more"></a>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">scope&lt;-c(<span class="number">0.9</span>,<span class="number">0.8</span>,<span class="number">0.6</span>,<span class="number">0.4</span>,<span class="number">0.2</span>)</div><div class="line">Part&lt;-paste(<span class="string">"part"</span>,<span class="number">1</span>:<span class="number">5</span>,sep=<span class="string">""</span>)</div><div class="line">Order&lt;-<span class="number">1</span>:<span class="number">5</span></div><div class="line">help&lt;-(<span class="number">1</span>-scope)/<span class="number">2</span></div><div class="line">mydata&lt;-data.frame(Order,Part,help,scope)</div><div class="line">mydata1&lt;-melt(mydata,id.vars=c(<span class="string">"Order"</span>,<span class="string">"Part"</span>),variable.name=<span class="string">"perform"</span>,value.name=<span class="string">"scope"</span>)</div><div class="line">mydata1$perform&lt;-factor(mydata1$perform,level=c(<span class="string">"scope"</span>,<span class="string">"help"</span>),order=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p>很重要的一步，需要构造有序因子变量，两个因子水平，分别是实际指标值和辅助值，在构造有序因子变量时，注意辅助值因子水平要高于实际值数据。柱形图堆叠时，按照因子水平由高到低堆叠（底层因子水平高，顶层因子水平低，这样才能将指标值的数据条撑起，其实水平均居中）。</p>
<h3 id="可视化过程："><a href="#可视化过程：" class="headerlink" title="可视化过程："></a>可视化过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata1,aes(Order,scope,order=desc(scope),fill=perform))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image1.png" alt=""></p>
<p><strong>制作色盘：</strong><br>（其实使用了一个白色色值隐藏掉了辅助列，理念跟在excel里面制作漏斗图一致，但是色盘颜色顺序白色要在第一个，这样将来颜色映射的时候颜色顺序与因子水平由大到小进行匹配的。）这一点非常重要，也是ggplot临摹漏斗图的核心技巧。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Color&lt;-c(<span class="string">"#FFFFFF"</span>,<span class="string">"#088158"</span>)</div><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/漏斗图1.png"</span>,width=<span class="number">330</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=Order,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>)+</div><div class="line">scale_fill_manual(values=sort(Color))+ </div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>-<span class="number">.025</span>,label=Part),col=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>+<span class="number">.035</span>,label=paste(<span class="number">100</span>*mydata$scope,<span class="string">"%"</span>,sep=<span class="string">""</span>)),col=<span class="string">"white"</span>,size=<span class="number">5.5</span>)+</div><div class="line">theme_nothing()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image2.png" alt=""></p>
<p><strong>转向</strong>（反转坐标轴）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/漏斗图2.png"</span>,width=<span class="number">330</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=Order,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>)+</div><div class="line">scale_fill_manual(values=sort(Color))+ </div><div class="line">scale_x_reverse()+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>-<span class="number">.025</span>,label=Part),col=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>+<span class="number">.035</span>,label=paste(<span class="number">100</span>*mydata$scope,<span class="string">"%"</span>,sep=<span class="string">""</span>)),col=<span class="string">"white"</span>,size=<span class="number">5.5</span>)+</div><div class="line">theme_nothing()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image3.png" alt=""></p>
<p><strong>水平漏斗图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/漏斗图3.png"</span>,width=<span class="number">330</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=Order,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>)+</div><div class="line">scale_fill_manual(values=sort(Color))+ </div><div class="line">coord_flip()+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>-<span class="number">.04</span>,label=Part),col=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>+<span class="number">.04</span>,label=paste(<span class="number">100</span>*mydata$scope,<span class="string">"%"</span>,sep=<span class="string">""</span>)),col=<span class="string">"white"</span>,size=<span class="number">5.5</span>)+</div><div class="line">theme_nothing()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image4.png" alt=""></p>
<p><strong>反转坐标轴：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/漏斗图4.png"</span>,width=<span class="number">330</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=Order,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>)+</div><div class="line">scale_fill_manual(values=sort(Color))+ </div><div class="line">coord_flip()+</div><div class="line">scale_x_reverse()+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>-<span class="number">.05</span>,label=Part),col=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=mydata,aes(x=Order,y=help+scope/<span class="number">2</span>+<span class="number">.05</span>,label=paste(<span class="number">100</span>*mydata$scope,<span class="string">"%"</span>,sep=<span class="string">""</span>)),col=<span class="string">"white"</span>,size=<span class="number">5.5</span>)+</div><div class="line">theme_nothing()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://oro3igf2g.bkt.clouddn.com/funnel/image5.png" alt=""></p>
<h3 id="本文小结："><a href="#本文小结：" class="headerlink" title="本文小结："></a>本文小结：</h3><p><strong>下面总结以下使用ggplot临摹漏斗图的核心技巧：</strong></p>
<ul>
<li>指标值和辅助列值这两个因子水平的设置上，需要设置成有序因子，因子水平大小为指标值因子水平&lt;辅助值因子水平。因为柱状图堆叠时因子水平由大到小从底部顺次向顶部堆积。这样辅助列可以堆在底部，刚好撑起数据列，将其置于水平居中位置。因此模拟漏斗图。</li>
<li>色盘设置，色值顺序白色在前，数值色在后。颜色映射时，色板颜色会顺次分配给由高到低的因子水平。（其实因为就两个颜色，即便是颜色色值写反了，使用逆序函数倒过来就好了）。</li>
</ul>
<p>好了，期待下一篇ggplot的脑洞吧，可能是甘特图，也有可能是瀑布图，或者其他不知名的图表~</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oro3igf2g.bkt.clouddn.com/funnel/image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天这篇要用ggplot构造漏斗图，其实ggplot内置图层函数中不存在所谓的漏斗图、子弹图等比较复杂的图表类型，但是ggplot的现有图层函数和标度设置完全可以胜任这些图形，以下是利用ggplot临摹漏斗图的代码过程。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>一言不合就爬虫系列之——爬取小姐姐的秒拍MV</title>
    <link href="http://www.raindu.com/2017/07/12/%E4%B8%80%E8%A8%80%E4%B8%8D%E5%90%88%E5%B0%B1%E7%88%AC%E8%99%AB%E7%B3%BB%E5%88%97%E4%B9%8B%E2%80%94%E2%80%94%E7%88%AC%E5%8F%96%E5%B0%8F%E5%A7%90%E5%A7%90%E7%9A%84%E7%A7%92%E6%8B%8DMV/"/>
    <id>http://www.raindu.com/2017/07/12/一言不合就爬虫系列之——爬取小姐姐的秒拍MV/</id>
    <published>2017-07-12T14:30:30.000Z</published>
    <updated>2017-07-12T14:54:07.216Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image.jpg" alt=""></p>
<p>大连的盛夏实在是热的让人心烦（对于我这种既怕热又怕冷的真的没地呆了）。</p>
<a id="more"></a>
<p>再加上令人头疼的毕业论文，这种日子怎能缺少MV来解暑呢。</p>
<p>既然要听，怎么只听一首呢，既然学了爬虫怎么让技能荒废呢。</p>
<p>好吧，烦躁的心情+想听MV的冲动+爬虫技能，今天小魔方教你使用R语言批量爬取秒拍小姐姐的MV视频短片。</p>
<p><a href="http://www.miaopai.com/u/paike_wgleqt8r08" target="_blank" rel="external">小姐姐主页</a></p>
<p>今天要爬的主页是一位叫陶心瑶小姐姐，刷微博偶然听到她翻唱薛之谦的《方圆万里》，感觉蛮有味道的，于是搜了她的秒拍主页。</p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image1.jpg" alt=""></p>
<p>主页的作品不多，仅有5首，但是因为仅作为爬虫练习只用，五首也够了（毕竟只是构造循环而已，1000首的步骤也是如此，可能需要构造翻页请求）。<br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image2.jpg" alt=""></p>
<p>MV挺长比较占内存，所以这里就不演示怎么去大批量的爬MV了（刚买的m本内存都快被掏空了）。</p>
<h3 id="爬虫三步走："><a href="#爬虫三步走：" class="headerlink" title="爬虫三步走："></a>爬虫三步走：</h3><h4 id="第一步：分析网页："><a href="#第一步：分析网页：" class="headerlink" title="第一步：分析网页："></a>第一步：分析网页：</h4><p><strong>首先是到主页之后分析它的网页结构：</strong></p>
<p>可以看到该主页只有5首mv列表，这时候鼠标随便定位到其中一首（我定位的是第一首），然后右键单击，打开开发者工具。<br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image3.jpg" alt=""><br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image4.jpg" alt=""></p>
<p>可以看到该首MV的视频地址存放在：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">div.videoCont&gt;</div><div class="line">div.videoList&gt;</div><div class="line">div.video&gt;</div><div class="line">div.MIAOPAI_player&gt;</div><div class="line">div.video-player&gt;</div><div class="line">video</div><div class="line">src</div></pre></td></tr></table></figure>
<p><a href="//gslb.miaopai.com/stream/AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa.mp4"></a></p>
<p><strong>尝试着用这个地址来浏览器中运行：</strong></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image5.jpg" alt=""></p>
<p>OK，一切正常，说明这个地址很给力！</p>
<p>随然完整的视频地址仅在video子节点的src属性中存放着，但是其实只要仔细研究就会发现，父节点MIAOPAI_player下的data-scid属性，data-img，子节点video内src,poster属性所存储的名称你图片链接名称中也是含有该视频的信息的。（共享一部分视频链接中的地址）。<br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image6.jpg" alt=""></p>
<p>事实上网页中展示的视频信息，最起码会给出三处可用的视频信息，即视频名称、视频封面页、视频的源地址。</p>
<p>（给出这里的解析只是想让大家知道，爬虫不要钻牛角尖，不要以为只有视频原地址的链接一条路可走，万一节点的链接你抓不出来，那岂不是要哭瞎了）。</p>
<h4 id="第二部：抓取网页："><a href="#第二部：抓取网页：" class="headerlink" title="第二部：抓取网页："></a>第二部：抓取网页：</h4><p>然后该干嘛呢，当然是抓视频地址了（这里使用rvest包来抓）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"E:/CloudMusic"</span>)</div><div class="line"><span class="keyword">library</span>(tidyverse)</div><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">(read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_nodes(<span class="string">"div.videoCont&gt;div.videoList&gt;div.video&gt;div.MIAOPAI_player&gt;div.video-player&gt;video"</span>))</div></pre></td></tr></table></figure></p>
<blockquote>
<p>{xml_nodeset (0)}</p>
</blockquote>
<p>啊哦，这意味着，软件不想理你，并向给你了个鄙视的眼神（请自己体会）。</p>
<p>抓不到地址很心酸的（自己去网页里面复制那也太low啦）。</p>
<p>肿么办，肿么办，肿么办？？？</p>
<p>之前已经说过了，视频地址链接并非唯一的手段，因为视频的中的id在好几个属性值里面都有包含，所有我们只需任意抓一个属性值，通过观察原始视频地址进行链接的拼接即可。</p>
<p>如果不想做复杂的字符串处理，那就抓最原始的名称吧。（这次目标是父节点MIAOPAI_player下的data-scid属性）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mylinks&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_nodes(<span class="string">"div.videoCont&gt;div.videoList&gt;div.video&gt;div.MIAOPAI_player"</span>)%&gt;%html_attr(<span class="string">"data-scid"</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>[1] “AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa” “ugJzN6LvH3emoPlSU2b52Cu-SbIQ5LFa” “wJ4AsVMgek6jp6lXDxIpXExCig9cVXo~” “I-J6u~qy7V5CpRIq-FoFA3pYtc6Yr0Sz”<br>[5] “pCLMPKezqWVWHyhjNHaRyKrX16APCeuw”</p>
</blockquote>
<p>OK，完美搞定，接下来该干啥呢（快想快想）。（因为视频数量少，没有换页存储，所以这里不用构造换页请求，整个代码效率都提高了很多）</p>
<p>接下来当然是构造可用的视频地址啦，因为我们刚才抓的并非完整的可直接传递到视频源的地址，仅仅是视频的id而已。</p>
<p>好吧现在我们对比之前手工复制的视频源地址和这次抓到的视频id信息，观察规律。</p>
<blockquote>
<p>AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa<br><a href="http://gslb.miaopai.com/stream/AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa.mp4" target="_blank" rel="external">http://gslb.miaopai.com/stream/AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa.mp4</a></p>
</blockquote>
<p>好吧，这次是不是一看就看明白咋回事儿啦，没错，视频源地址就是在视频id的基础上左侧添加了秒拍服务端的视频流服务器主网址，右侧添加了.MP4的视频格式而已，OK，接下我们的任务就是构造可用的视频下载地址。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baseurl&lt;-<span class="string">"http://gslb.miaopai.com/stream/"</span></div><div class="line">mymvlinks&lt;-paste0(baseurl,mylinks,<span class="string">".mp4"</span>)</div></pre></td></tr></table></figure>
<p>OK两部搞定，敢不敢相信自己的眼睛哈哈。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#[1] "http://gslb.miaopai.com/stream/AUTy2nx4l-T~BhG-zX60wSDwwqoWfwpa.mp4" "http://gslb.miaopai.com/stream/ugJzN6LvH3emoPlSU2b52Cu-SbIQ5LFa.mp4"</span></div><div class="line"><span class="comment">#[3] "http://gslb.miaopai.com/stream/wJ4AsVMgek6jp6lXDxIpXExCig9cVXo~.mp4" "http://gslb.miaopai.com/stream/I-J6u~qy7V5CpRIq-FoFA3pYtc6Yr0Sz.mp4"</span></div><div class="line"><span class="comment">#[5] "http://gslb.miaopai.com/stream/pCLMPKezqWVWHyhjNHaRyKrX16APCeuw.mp4"</span></div></pre></td></tr></table></figure>
<p>如果不放心的话，可以使用这个地址再再浏览器中打开看一看，预览下是否可以观看视频。(放心吧我都替你试过了)</p>
<p>现在我们只是获取了视频下载地址，可是没有MV的歌名呀（命名和123最后下载完事你可以需要打开听一听才知道是啥歌，如果使用ID的话一串字母数字组合也很烦人）。</p>
<p><strong>好吧索性再把名字趴下来：</strong></p>
<p>可以看到每首MV下面都有个含歌名的句子，就抓这句文字就行。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">myinfo&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_nodes(<span class="string">"div.viedoAbout"</span>)%&gt;%html_text(trim = <span class="literal">TRUE</span>)</div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"温暖女声陶心瑶翻唱薛之谦《方圆几里》                                 \n                                #陶心瑶第二自我##纪念青春的那些歌#"</span>    </div><div class="line">[<span class="number">2</span>] <span class="string">"陶心瑶首张实体专辑《第二自我》众筹宣传片                                 \n                                #陶心瑶第二自我##纪念青春的那些歌#"</span></div><div class="line">[<span class="number">3</span>] <span class="string">"上课中《丑八怪》"</span>                                                                                                                             </div><div class="line">[<span class="number">4</span>] <span class="string">"陶心瑶暖心翻唱JJ《她说》                                 \n                                #陶心瑶##林俊杰的第36页#"</span>                          </div><div class="line">[<span class="number">5</span>] <span class="string">"这个《双截棍》也太柔了吧！唱的心都醉啦"</span></div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image7.jpg" alt=""></p>
<p>抓完发现每一个句子里面的歌名都是带有书名号的（特么的中文的书名号怎么匹配内部中文呀，正则不会写~_~）</p>
<p>好吧，技不如人但是我勤快呀，就用字符串匹配函数一个个匹配吧！<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mymvname&lt;-c()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length(myinfo) )&#123;</div><div class="line">mymvname[i]&lt;-substr(myinfo[i],regexpr(<span class="string">"《"</span>,myinfo[i])[<span class="number">1</span>]+<span class="number">1</span>,regexpr(<span class="string">"》"</span>,myinfo[i])[<span class="number">1</span>]-<span class="number">1</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>匹配完成之后，把MP4的后缀带上。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mymvname&lt;-paste0(mymvname,<span class="string">".mp4"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"方圆几里.mp4"</span> <span class="string">"第二自我.mp4"</span> <span class="string">"丑八怪.mp4"</span>   <span class="string">"她说.mp4"</span>     <span class="string">"双截棍.mp4"</span></div></pre></td></tr></table></figure></p>
<p>都到了这份上了你还想怎样–好吧我只想把小姐姐的视频下载下来而已。</p>
<h4 id="爬虫第三部：构建下载函数："><a href="#爬虫第三部：构建下载函数：" class="headerlink" title="爬虫第三部：构建下载函数："></a>爬虫第三部：构建下载函数：</h4><p>因为是五个视频文件要下载，所以需要构造循环下载函数：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length(myinfo))&#123;</div><div class="line">download.file(mymvlinks[i],mymvname[i],mode=<span class="string">"wb"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image8.jpg" alt=""><br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image9.jpg" alt=""><br><img src="http://orz60j4aw.bkt.clouddn.com/taoxinyao/image10.jpg" alt=""></p>
<p>OK，爬完收工，是不是很简单呀，感觉去找个视频网站试一下吧，这个夏天，让音乐来的更猛烈一些吧！</p>
<h3 id="接下来做一个完整的代码汇总："><a href="#接下来做一个完整的代码汇总：" class="headerlink" title="接下来做一个完整的代码汇总："></a>接下来做一个完整的代码汇总：</h3><p><strong>第一步：分析网页：</strong></p>
<p><strong>第二部：爬取网页：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"E:/CloudMusic"</span>)</div><div class="line"><span class="keyword">library</span>(tidyverse)</div><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">mylinks&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_nodes(<span class="string">"div.videoCont&gt;div.videoList&gt;div.video&gt;div.MIAOPAI_player"</span>)%&gt;%html_attr(<span class="string">"data-scid"</span>)<span class="comment">#爬取视频ID：</span></div><div class="line">baseurl&lt;-<span class="string">"http://gslb.miaopai.com/stream/"</span></div><div class="line">mymvlinks&lt;-paste0(baseurl,mylinks,<span class="string">".mp4"</span>) <span class="comment">#构造视频链接：</span></div><div class="line">myinfo&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_nodes(<span class="string">"div.viedoAbout"</span>)%&gt;%html_text(trim = <span class="literal">TRUE</span>)<span class="comment">#爬取评论文本</span></div><div class="line">mymvname&lt;-c()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length(myinfo) )&#123;</div><div class="line">mymvname[i]&lt;-substr(myinfo[i],regexpr(<span class="string">"《"</span>,myinfo[i])[<span class="number">1</span>]+<span class="number">1</span>,regexpr(<span class="string">"》"</span>,myinfo[i])[<span class="number">1</span>]-<span class="number">1</span>)</div><div class="line">&#125;<span class="comment">#提取视频名称</span></div><div class="line">mymvname&lt;-paste0(mymvname,<span class="string">".mp4"</span>)<span class="comment">#构造视频名称（带格式）</span></div></pre></td></tr></table></figure></p>
<p><strong>第三步：构造下载函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:length(myinfo))&#123;</div><div class="line">download.file(mymvlinks[i],mymvname[i],mode=<span class="string">"wb"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orz60j4aw.bkt.clouddn.com/taoxinyao/image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;大连的盛夏实在是热的让人心烦（对于我这种既怕热又怕冷的真的没地呆了）。&lt;/p&gt;
    
    </summary>
    
      <category term="网络爬虫" scheme="http://www.raindu.com/categories/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="网络爬虫" scheme="http://www.raindu.com/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>左手用R右手Python系列——因子变量与分类重编码</title>
    <link href="http://www.raindu.com/2017/07/10/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E5%9B%A0%E5%AD%90%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E9%87%8D%E7%BC%96%E7%A0%81/"/>
    <id>http://www.raindu.com/2017/07/10/左手用R右手Python系列——因子变量与分类重编码/</id>
    <published>2017-07-10T04:44:32.000Z</published>
    <updated>2017-07-10T04:59:57.017Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orssvamao.bkt.clouddn.com/factor/image.jpg" alt=""></p>
<p>今天这篇介绍数据类型中因子变量的运用在R语言和Python中的实现。</p>
<a id="more"></a>
<p>因子变量是数据结构中用于描述分类事物的一类重要变量。其在现实生活中对应着大量具有实际意义的分类事物。</p>
<p>比如年龄段、性别、职位、爱好，星座等。</p>
<p>之所以给其单独列出一个篇幅进行讲解，除了其在数据结构中的特殊地位之外，在数据可视化和数据分析与建模过程中，因子变量往往也承担中描述某一事物重要维度特征的作用，其意义非同寻常，无论是在数据处理过程中还是后期的分析与建模，都不容忽视。</p>
<p>通常意义上，按照其所描述的维度实际意义，因子变量一般又可细分为无序因子（类别之间没有特定顺序，水平相等）和有序因子（类别中间存在某种约定俗成的顺序，如年龄段、职称、学历、体重等）。</p>
<p>在统计学中对变量进行了如下四类划分：定类变量、定序变量、定距变量、定比变量。而其中的定类和定比变量就对应着我们今天将要讲解的因子变量（无序因子和有序因子变量）。</p>
<p>因子变量从信息含量上来看，其要比单纯的定性变量（文本变量）所包含的描述信息多一些，但是又比数值型变量（定距变量和定比变量）所表述的信息含量少一些。</p>
<p>因而原则上来讲，数值型变量可以转换为因子变量，因子变量可以转换为文本型变量，但是以上顺序却是不可逆的（信息含量多的变量可以放弃信息量，转换为信息含量较少的变量类型，但是信息含量较少的变量却无法增加信息含量）。</p>
<p>以下将分别讲解在R语言和Python中如何生成因子变量、如何将数值型变量转换为因子变量、以及如何对因子变量进行重编码。</p>
<h3 id="R语言因子变量处理函数："><a href="#R语言因子变量处理函数：" class="headerlink" title="R语言因子变量处理函数："></a>R语言因子变量处理函数：</h3><p>在R语言中，通常使用factor直接生成因子变量，我们仅需一个向量（原则上可以是文本型、也可以是数字型，但是通常从实际意义上来说，被转换的应该是一个含有多类别的类别型文本变量）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">factor(x, levels,labels=levels,ordered=)</div></pre></td></tr></table></figure>
<p>以上参数中，x即是我们将要转换的变量，levels是将要设定的因子水平（可选参数，省略则自动以向量中的不重复对象为因子水平），labels作为因子标签（可选参数，与前述因子水平对应，若设置，则打印时显示的是对应因子标签，省略则同因子水平一样，使用向量中不重复值【即类别】作为标签），ordered是逻辑参数，设定是否对因子水平排序。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vector&lt;-rep(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">6</span>);print(vector);plyr::count(vector)</div><div class="line">myfactor&lt;-(factor(vector,levels=c(<span class="string">"E"</span>,<span class="string">"D"</span>,<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>),labels=c(<span class="string">"EEE"</span>,<span class="string">"DDD"</span>,<span class="string">"CCC"</span>,<span class="string">"BBB"</span>,<span class="string">"AAA"</span>),ordered=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image1.jpg" alt=""></p>
<p>通常来说，factor函数中，levels一般不用设置，函数会自动判断向量内有几个水平，但是倘若要生成有序因子的话，默认会根据字母顺序排列，如果自然顺序与目标有序因子顺序不一致，则一定要指定levels，labels则视具体需求而定，如果本身就是文本类别的话，一般无需设定标签。</p>
<p>如果是问卷类数据，而且编码为数值，则一定要通过labels标签的设定来还原每一个编码的真实意义。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">factor(vector,labels=c(<span class="string">"AAA"</span>,<span class="string">"BBB"</span>,<span class="string">"CCC"</span>,<span class="string">"DDD"</span>,<span class="string">"EEE"</span>),ordered=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image2.jpg" alt=""></p>
<p>因子变量与文本变量数值变量之间的互转则通过as.character()或者as.numeric()函数来实现。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">as.character(as.factor(<span class="number">1</span>:<span class="number">10</span>))%&gt;%str()</div><div class="line">as.numeric(as.factor(<span class="number">1</span>:<span class="number">10</span>))%&gt;%str()</div></pre></td></tr></table></figure>
<p><strong>R语言中的因子变量重编码</strong></p>
<p>如果你有一个度量指标，需要将其转换为分段的因子变量，则可以通过cut函数来实现这种转换。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scale&lt;-runif(<span class="number">100</span>,<span class="number">0</span>,<span class="number">100</span>)</div><div class="line">cut(x,breaks,labels=<span class="literal">NULL</span>,include.lowest=<span class="literal">FALSE</span>,right=<span class="literal">TRUE</span>,ordered=)</div></pre></td></tr></table></figure></p>
<ul>
<li>cut函数参数如上，接受一个数值型向量，breaks接受一个数值向量（标识分割点）或者单个数值（分割 数目）。</li>
<li>right是逻辑参数，设定分割带是左开右闭或者左闭右开。（默认左开右闭）。</li>
<li>include.lowest则根据right的设定，决定是否应该包含端点值（如果right为TRUE，左开右闭区间，则包含最小值，如果right为FALSE，左闭右开区间则包含最大值）,默认为FALSE。</li>
<li>ordered则设定是否对因子水平进行排序。</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(factor1&lt;-cut(scale,breaks=c(<span class="number">0</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">100</span>),labels=c(<span class="string">"0~20"</span>,<span class="string">"20~40"</span>,<span class="string">"40~60"</span>,<span class="string">"60~80"</span>,<span class="string">"80~100"</span>),include.lowest=<span class="literal">TRUE</span>,ordered=<span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image3.jpg" alt=""></p>
<p><strong>另一种分割场景是使用分位数函数进行分割</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(scale, c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">(cut(scale,breaks=qa,labels=c(<span class="string">"0%~20%"</span>,<span class="string">"20%~40%"</span>,<span class="string">"40%~60%"</span>,<span class="string">"60%~80%"</span>,<span class="string">"80%~100%"</span>),include.lowest=<span class="literal">TRUE</span>,ordered=<span class="literal">TRUE</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image4.jpg" alt=""></p>
<p>以上分割方法在是较为常用的因子变量转换方法，当然你可以使用if函数进行类似分割，但是相比较来讲，使用cut函数进行分割要高效很多。</p>
<h3 id="Python因子编码处理函数："><a href="#Python因子编码处理函数：" class="headerlink" title="Python因子编码处理函数："></a>Python因子编码处理函数：</h3><p>在Python中，Pandas库包含了处理因子变量的一整套完整语法函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> string</div></pre></td></tr></table></figure>
<p>在pandas中的官方在线文档中，给出了pandas因子变量的详细论述，并在适当位置与R语言进行了对比描述。</p>
<p><a href="http://pandas.pydata.org/pandas-docs/stable/categorical.html#working-with-categories" target="_blank" rel="external"></a></p>
<p>当利用pandas生成序列时，可以在序列函数内的dtype参数设定因子变量类型。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s = pd.Series([<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>], dtype=<span class="string">"category"</span>)</div></pre></td></tr></table></figure></p>
<p>生成数据框时，也可以直接生成因子变量。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(&#123;<span class="string">"A"</span>:[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>]&#125;)</div><div class="line">df[<span class="string">"B"</span>] = df[<span class="string">"A"</span>].astype(<span class="string">'category'</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image5.jpg" alt=""></p>
<p>除了直接在生成序列或者数据框时生成因子变量之外，也可以通过一个特殊的函数pd.Categorical来完成在序列和数据框中创建因子变量。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s = pd.Series(pd.Categorical([<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>], categories=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>],ordered=<span class="keyword">False</span>))</div><div class="line">df = pd.DataFrame(&#123;<span class="string">"A"</span>:[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>]&#125;)</div><div class="line">df[<span class="string">"B"</span>] =pd.Series(pd.Categorical([<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>], categories=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>],ordered=<span class="keyword">False</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image6.jpg" alt=""></p>
<p>因子顺序的添加可以通过设定序列或者数框框列的.astype来进行详细的操作。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s = pd.Series([<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>])</div><div class="line">s_cat = s.astype(<span class="string">"category"</span>, categories=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>], ordered=<span class="keyword">True</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image7.jpg" alt=""></p>
<p>无论是序列中还是数据框中的因子变量生成之后，都可以通过以下属性查看其具体的类型、因子类别、以及是否含有顺序。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s_cat.dtypes</div><div class="line">s_cat.cat.categories</div><div class="line">s_cat.cat.ordered</div></pre></td></tr></table></figure>
<p>一种比较迂回的方法是，先生成普通序列，然后通过设定序列类型完成因子变量的转化。而想要舍弃因子变量，还原成普通的文本序列，则同样只需再其astype中进行格式设定。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s = pd.Series([<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"a"</span>])</div><div class="line">s2 = s.astype(<span class="string">'category'</span>,categories=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>],ordered=<span class="keyword">True</span>)</div><div class="line">s2.astype(str)</div></pre></td></tr></table></figure>
<p>最后讲一下，如何在数据框中分割数值型变量为因子变量，pandas的数据框也有与R语言同名的函数——cut。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(&#123;<span class="string">'value'</span>: np.random.randint(<span class="number">0</span>, <span class="number">100</span>, <span class="number">20</span>)&#125;)</div><div class="line">labels = [ <span class="string">"&#123;0&#125; - &#123;1&#125;"</span>.format(i, i + <span class="number">9</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>,<span class="number">10</span>) ]</div><div class="line">df[<span class="string">'group'</span>] = pd.cut(df.value, range(<span class="number">0</span>, <span class="number">105</span>, <span class="number">10</span>), right=<span class="keyword">False</span>, labels=labels)</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/factor/image8.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pd.cut(x, bins, right=, labels=,include_lowest=<span class="keyword">False</span>)</div><div class="line"><span class="comment">#df.value代表待风格的变量，第二项是bins可以是一个列表（作为分割点），也可以是一个整数（作为分割带箱数），</span></div><div class="line"><span class="comment">#right控制带宽是左开右闭还是左闭右开，</span></div><div class="line"><span class="comment">#labels设定输出显示标签，</span></div><div class="line"><span class="comment">#include_lowest=控制是否包含边界点（以上参数可以类比R语言中的cut函数）。</span></div></pre></td></tr></table></figure>
<h3 id="最后做一个小总结："><a href="#最后做一个小总结：" class="headerlink" title="最后做一个小总结："></a>最后做一个小总结：</h3><p>关于因子变量在R语言和Python中涉及到的操作函数;</p>
<p><strong>R语言：</strong></p>
<p>创建因子变量：<br>factor<br>转换因子变量：<br>as.factor<br>as.numeric(as.character)<br>分割因子变量：<br>cut函数</p>
<p><strong>Python:</strong></p>
<p>创建因子变量：<br>pd.Categorical(categories=,ordered=)<br>pd.Series(dtype=”category”)<br>转换因子变量：<br>df.astype(‘category’,categories,ordered)<br>分割因子变量：<br>df.cut(df.value,breaks=,right=,labels)</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orssvamao.bkt.clouddn.com/factor/image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天这篇介绍数据类型中因子变量的运用在R语言和Python中的实现。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>超强脑洞第一弹——子弹图~~~</title>
    <link href="http://www.raindu.com/2017/07/08/%E5%B0%8F%E9%AD%94%E6%96%B9%E4%B8%8D%E6%83%B3%E8%B7%9F%E4%BD%A0%E8%AF%B4%E8%AF%9D%EF%BC%8C%E5%B9%B6%E5%90%91%E4%BD%A0%E6%89%94%E4%BA%86%E4%B8%80%E5%A0%86%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.raindu.com/2017/07/08/小魔方不想跟你说话，并向你扔了一堆代码/</id>
    <published>2017-07-08T02:51:38.000Z</published>
    <updated>2017-07-08T03:05:27.152Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db6.png" alt=""></p>
<p>很早就跟大家说过，ggplot是一个黑洞，哈神是一个艺术家，真正体会到ggplot的强大，也就是近几个月的事儿，只要你的灵感不受束缚，它真的……无所不能，今天看一个商务场合经常使用的，绩效与目标管理工具——子弹图。</p>
<a id="more"></a>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p><strong>导入包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggmap)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(Cairo)</div></pre></td></tr></table></figure></p>
<h3 id="构建作图数据："><a href="#构建作图数据：" class="headerlink" title="构建作图数据："></a>构建作图数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">KPI&lt;-c(<span class="string">"KPI1"</span>,<span class="string">"KPI2"</span>,<span class="string">"KPI3"</span>,<span class="string">"KPI4"</span>,<span class="string">"KPI5"</span>)</div><div class="line">INDEX&lt;-<span class="number">1</span>:<span class="number">5</span></div><div class="line">good&lt;-rep(<span class="number">0.2</span>,<span class="number">5</span>)</div><div class="line">excellent&lt;-good</div><div class="line">pass&lt;-rep(<span class="number">0.6</span>,<span class="number">5</span>)</div><div class="line">target&lt;-c(<span class="number">0.84</span>,<span class="number">0.85</span>,<span class="number">0.7</span>,<span class="number">0.92</span>,<span class="number">0.78</span>)</div><div class="line">fact&lt;-c(<span class="number">0.91</span>,<span class="number">0.8</span>,<span class="number">0.68</span>,<span class="number">0.91</span>,<span class="number">0.8</span>)</div><div class="line">mydata&lt;-data.frame(KPI,INDEX,excellent,good,pass,target,fact)</div><div class="line">mydata1&lt;-melt(mydata,id.vars=c(<span class="string">"KPI"</span>,<span class="string">"target"</span>,<span class="string">"INDEX"</span>,<span class="string">"fact"</span>),variable.name=<span class="string">"perform"</span>,value.name=<span class="string">"scope"</span>)</div><div class="line">color&lt;-c(<span class="string">"#43546C"</span>,<span class="string">"#8695B2"</span>,<span class="string">"#D9DBDF"</span>)</div></pre></td></tr></table></figure>
<p><strong>这个是第一张图的数据源：双柱图</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata2&lt;-mydata</div><div class="line">mydata2$zhibiao&lt;-round(runif(<span class="number">5</span>,<span class="number">1</span>,<span class="number">10</span>),<span class="number">0</span>)</div><div class="line">mydata2$zhibiao2&lt;-round(runif(<span class="number">5</span>,<span class="number">5</span>,<span class="number">9</span>),<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/dbq.png"</span>,width=<span class="number">300</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata2,aes(x=KPI,y=zhibiao),stat=<span class="string">"identity"</span>,width=<span class="number">.3</span>,fill=<span class="string">"#43546C"</span>,col=<span class="literal">NA</span>)+</div><div class="line">geom_bar(data=mydata2,aes(x=KPI,y=zhibiao2),stat=<span class="string">"identity"</span>,width=<span class="number">.7</span>,fill=<span class="literal">NA</span>,col=<span class="string">"#43546C"</span>)+</div><div class="line">ylim(-<span class="number">2</span>,<span class="number">15</span>)+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=<span class="number">1</span>:<span class="number">5</span>,y=rep(-<span class="number">1</span>,<span class="number">5</span>),label=KPI))+</div><div class="line">geom_text(data=mydata2,aes(x=KPI,y=zhibiao,label=zhibiao),vjust=-<span class="number">.5</span>)+</div><div class="line">theme_nothing()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db2.png" alt=""></p>
<p><strong>不带目标标识点的子弹图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/db.png"</span>,width=<span class="number">300</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=INDEX,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">.7</span>)+</div><div class="line">ylim(-<span class="number">0.15</span>,<span class="number">1.2</span>)+</div><div class="line">geom_linerange(data=mydata1,aes(x=INDEX,ymin=<span class="number">0</span>,ymax=fact),col=<span class="string">"#000002"</span>,size=<span class="number">5</span>)+</div><div class="line">scale_fill_manual(values=sort(color,decreasing=<span class="literal">T</span>) ) +  </div><div class="line">geom_errorbarh(data=mydata,aes(x=INDEX,y=target,xmax =INDEX+<span class="number">.25</span>, xmin =INDEX-<span class="number">.25</span>),height=<span class="number">0</span>,size=<span class="number">1.5</span>,colour=<span class="string">"#BA262A"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=<span class="number">1</span>:<span class="number">5</span>,y=rep(-<span class="number">.05</span>,<span class="number">5</span>),label=KPI))+</div><div class="line">theme_nothing(legend=<span class="literal">TRUE</span>)+</div><div class="line">theme(</div><div class="line">legend.direction=<span class="string">"horizontal"</span>,</div><div class="line">legend.position=c(<span class="number">0.5</span>,<span class="number">.88</span>),</div><div class="line">legend.text=element_text(size=<span class="number">12</span>)</div><div class="line">)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db3.png" alt=""></p>
<p><strong>翻倒：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/db11.png"</span>,width=<span class="number">400</span>,height=<span class="number">300</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=INDEX,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">.7</span>)+</div><div class="line">ylim(-<span class="number">0.15</span>,<span class="number">1</span>)+</div><div class="line">coord_flip()+</div><div class="line">scale_x_reverse()+</div><div class="line">geom_linerange(data=mydata1,aes(x=INDEX,ymin=<span class="number">0</span>,ymax=fact),col=<span class="string">"#000002"</span>,size=<span class="number">5</span>)+</div><div class="line">scale_fill_manual(values=sort(color,decreasing=<span class="literal">T</span>) ) +  </div><div class="line">geom_errorbarh(data=mydata,aes(x=INDEX,y=target,xmax =INDEX+<span class="number">.25</span>, xmin =INDEX-<span class="number">.25</span>),height=<span class="number">0</span>,size=<span class="number">1.5</span>,colour=<span class="string">"#BA262A"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=<span class="number">1</span>:<span class="number">5</span>,y=rep(-<span class="number">.1</span>,<span class="number">5</span>),label=KPI))+</div><div class="line">theme_nothing(legend=<span class="literal">TRUE</span>)+</div><div class="line">theme(</div><div class="line">legend.text=element_text(size=<span class="number">12</span>)</div><div class="line">)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db4.png" alt=""></p>
<p><strong>带目标标识点的子弹图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/db1.png"</span>,width=<span class="number">300</span>,height=<span class="number">400</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=KPI,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">.7</span>)+</div><div class="line">ylim(-<span class="number">.15</span>,<span class="number">1.2</span>)+</div><div class="line">geom_linerange(data=mydata1,aes(x=KPI,ymin=<span class="number">0</span>,ymax=fact),col=<span class="string">"#000002"</span>,size=<span class="number">5</span>)+</div><div class="line">scale_fill_manual(values=sort(color,decreasing=<span class="literal">T</span>) ) +  </div><div class="line">geom_errorbarh(data=mydata,aes(x=KPI,y=target,xmax =KPI+<span class="number">.25</span>, xmin =KPI-<span class="number">.25</span>),height=<span class="number">0</span>,size=<span class="number">1.5</span>,colour=<span class="string">"#BA262A"</span>)+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=<span class="number">1</span>:<span class="number">5</span>,y=rep(-<span class="number">.05</span>,<span class="number">5</span>),label=KPI))+</div><div class="line">theme_nothing(legend=<span class="literal">TRUE</span>)+</div><div class="line">theme(</div><div class="line">legend.direction=<span class="string">"horizontal"</span>,</div><div class="line">legend.position=c(<span class="number">0.5</span>,<span class="number">.88</span>),</div><div class="line">legend.text=element_text(size=<span class="number">12</span>)</div><div class="line">)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db5.png" alt=""></p>
<p><strong>翻倒：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/db13.png"</span>,width=<span class="number">400</span>,height=<span class="number">300</span>)</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata1,aes(x=KPI,y=scope,fill=perform),stat=<span class="string">"identity"</span>,position=<span class="string">"stack"</span>,width=<span class="number">.7</span>)+</div><div class="line">ylim(-<span class="number">.15</span>,<span class="number">1</span>)+</div><div class="line">coord_flip()+</div><div class="line">geom_linerange(data=mydata1,aes(x=KPI,ymin=<span class="number">0</span>,ymax=fact),col=<span class="string">"#000002"</span>,size=<span class="number">5</span>)+</div><div class="line">scale_fill_manual(values=sort(color,decreasing=<span class="literal">T</span>))+ </div><div class="line">geom_errorbarh(data=mydata,aes(x=KPI,y=target,xmax =KPI+<span class="number">.25</span>, xmin =KPI-<span class="number">.25</span>),height=<span class="number">0</span>,size=<span class="number">1.5</span>,colour=<span class="string">"#BA262A"</span>)+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=<span class="number">1</span>:<span class="number">5</span>,y=rep(-<span class="number">.1</span>,<span class="number">5</span>),label=KPI))+</div><div class="line">theme_nothing(legend=<span class="literal">TRUE</span>)+</div><div class="line">theme(</div><div class="line">legend.text=element_text(size=<span class="number">12</span>)</div><div class="line">)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/rounte/db6.png" alt=""></p>
<p>所以大家就期待着之后的更新会出现什么奇葩图形吧，这里就不剧透了，说实话，我也不知道我能用ggplot画出什么超强脑洞出来，因为真的，灵感来了，挡都挡不住呀~</p>
<p>不想多说什么了，感兴趣的就赶紧学起来吧，ggplot弄熟了，未来一片光明哈哈哈~~~~</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orn9f9laz.bkt.clouddn.com/rounte/db6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;很早就跟大家说过，ggplot是一个黑洞，哈神是一个艺术家，真正体会到ggplot的强大，也就是近几个月的事儿，只要你的灵感不受束缚，它真的……无所不能，今天看一个商务场合经常使用的，绩效与目标管理工具——子弹图。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="路径图" scheme="http://www.raindu.com/tags/%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>让执着成为一种习惯——仿网易数独玫瑰气泡图</title>
    <link href="http://www.raindu.com/2017/07/06/%E8%AE%A9%E6%89%A7%E7%9D%80%E6%88%90%E4%B8%BA%E4%B8%80%E7%A7%8D%E4%B9%A0%E6%83%AF%E2%80%94%E2%80%94%E4%BB%BF%E7%BD%91%E6%98%93%E6%95%B0%E7%8B%AC%E7%8E%AB%E7%91%B0%E6%B0%94%E6%B3%A1%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/07/06/让执着成为一种习惯——仿网易数独玫瑰气泡图/</id>
    <published>2017-07-06T14:49:33.000Z</published>
    <updated>2017-07-06T15:01:46.721Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/%E5%B0%81%E9%9D%A2%E5%9B%BE.png" alt=""></p>
<p>没有难学的技艺，只有不够辛勤的付出！</p>
<a id="more"></a>
<p>今天这篇文章推送仿的的是网易数独的一幅信息图，内容呈现的是全球各国人民对于养老所持的态度，数据来源于Pew Reserch Centre。</p>
<p>图表整体难度中等，使用ggplot2来写代码，主要考察关于极坐标转换与应用。（ggplot2系统中，两个较为高阶的用法分别为：极坐标系、地理空间的多边形填充）。</p>
<h3 id="环境准备加载包："><a href="#环境准备加载包：" class="headerlink" title="环境准备加载包："></a>环境准备加载包：</h3><p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"tidyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>载入字体：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfontl"</span>,<span class="string">"msyhl.ttc"</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">font.add(<span class="string">"myfzhzh"</span>,<span class="string">"方正正粗黑简体.TTF"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>锁定文件临时目录：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/File"</span>)</div></pre></td></tr></table></figure></p>
<h3 id="导入并整理数据"><a href="#导入并整理数据" class="headerlink" title="导入并整理数据:"></a>导入并整理数据:</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">circle_bubble&lt;-read.csv(<span class="string">"circle_bubble.csv"</span>,stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image2.jpg" alt=""></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image1.png" alt=""></p>
<p>仔细观察该图，你会发现，玫瑰图内侧并非底边对齐，而是靠上下中心对齐，要想做到这种效果，必须将一个 细分维度转化为负值（柱形图堆积时会自动将负值堆积在负坐标轴上）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">circle_bubble$Government&lt;--circle_bubble$Government</div><div class="line">level&lt;-circle_bubble[,<span class="string">"State"</span>]</div><div class="line">circle_bubble$State&lt;-factor(circle_bubble$State,levels=level,ordered=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><strong>筛选出制作堆积条形图的数据源：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">circle_data&lt;-circle_bubble %&gt;% select(State,Government,Family,Youself) %&gt;% gather(Class,Value,-State)</div><div class="line">circle_data$Class&lt;-factor(circle_data$Class,levels=c(<span class="string">"Government"</span>,<span class="string">"Youself"</span>,<span class="string">"Family"</span>),ordered=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image3.jpg" alt=""></p>
<p><strong>构造三个序列的气泡图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">circle_point&lt;-circle_bubble[,c(<span class="string">"State"</span>,<span class="string">"General"</span>,<span class="string">"Very"</span>,<span class="string">"Raito"</span>)]</div><div class="line">circle_point_data&lt;-gather(circle_point,Class,Value,-State)</div><div class="line">circle_point_data$Class&lt;-factor(circle_point_data$Class,levels=c(<span class="string">"General"</span>,<span class="string">"Very"</span>,<span class="string">"Raito"</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image4.jpg" alt=""></p>
<h3 id="构造作图数据："><a href="#构造作图数据：" class="headerlink" title="构造作图数据："></a>构造作图数据：</h3><p><strong>构造气泡图模拟Y轴：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">circle_point_data &lt;- within(circle_point_data,&#123;</div><div class="line"> mood_y &lt;- <span class="literal">NA</span></div><div class="line"> mood_y[Class==<span class="string">"General"</span>]&lt;--<span class="number">150</span></div><div class="line"> mood_y[Class==<span class="string">"Very"</span>]&lt;--<span class="number">100</span></div><div class="line"> mood_y[Class==<span class="string">"Raito"</span>]&lt;-<span class="number">140</span>&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>构造模拟气泡大小</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">circle_point_data$Value_y&lt;-ifelse(circle_point_data$Class==<span class="string">"Raito"</span>,circle_point_data$Value,<span class="number">0.3</span>*circle_point_data$Value)</div></pre></td></tr></table></figure></p>
<p>（这里没有使用气泡图对应真实值作为气泡大小，而是将除Raito系列之外的两个序列真实值缩小了70%，这么做的目的是为了整体的气泡大小比例显示更为匀称和谐，因为Ratio序列是单值序列，其与自身的100%单位标度比较，剩余两个序列相互比较）。</p>
<p><strong>构造模拟标签位置</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">circle_data &lt;- within(circle_data,&#123;</div><div class="line"> label_y &lt;- <span class="literal">NA</span></div><div class="line"> label_y[Class==<span class="string">"Government"</span>]&lt;-circle_bubble$Government/<span class="number">2</span></div><div class="line"> label_y[Class==<span class="string">"Family"</span>]&lt;-circle_bubble$Family/<span class="number">2</span></div><div class="line"> label_y[Class==<span class="string">"Youself"</span>]&lt;-circle_bubble$Family+circle_bubble$Youself-circle_bubble$Youself/<span class="number">2</span>&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="可视化过程："><a href="#可视化过程：" class="headerlink" title="可视化过程："></a>可视化过程：</h3><p><strong>极坐标化前的柱形图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_linerange(data=circle_bubble,aes(x=State,ymin=-<span class="number">150</span>,ymax=<span class="number">140</span>),size=<span class="number">.25</span>,color=<span class="string">"#D8E5F2"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_col(data=circle_data,aes(x=State,y=Value,fill=Class),width=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">.25</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image5.jpg" alt=""></p>
<p><strong>极坐标化前的柱形图和气泡图</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_linerange(data=circle_bubble,aes(x=State,ymin=-<span class="number">150</span>,ymax=<span class="number">140</span>),size=<span class="number">.25</span>,color=<span class="string">"#D8E5F2"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_col(data=circle_data,aes(x=State,y=Value,fill=Class),width=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">.25</span>)+</div><div class="line">geom_point(data=circle_bubble,aes(State,y=<span class="number">140</span>),size=<span class="number">40</span>,colour=<span class="string">"#FEFCD3"</span>,alpha=<span class="number">.8</span>)+</div><div class="line">geom_point(data=circle_point_data,aes(State,y=mood_y,size=Value_y,colour=Class))+</div><div class="line">geom_text(data=circle_data,aes(x=State,y=label_y,group=Class,label=abs(Value)),family=<span class="string">"myfont"</span>,colour=<span class="string">"white"</span>,size=<span class="number">5</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">150</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#AA1A66"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">100</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#A31067"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==<span class="number">140</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#F29E4A"</span>,size=<span class="number">5</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image6.jpg" alt=""></p>
<p><strong>极坐标化后的柱形图和气泡图</strong>（完整标签版）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_linerange(data=circle_bubble,aes(x=State,ymin=-<span class="number">150</span>,ymax=<span class="number">140</span>),size=<span class="number">.25</span>,color=<span class="string">"#D8E5F2"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_col(data=circle_data,aes(x=State,y=Value,fill=Class),width=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">.25</span>)+</div><div class="line">geom_point(data=circle_bubble,aes(State,y=<span class="number">140</span>),size=<span class="number">40</span>,colour=<span class="string">"#FEFCD3"</span>,alpha=<span class="number">.8</span>)+</div><div class="line">geom_point(data=circle_point_data,aes(State,y=mood_y,size=Value_y,colour=Class))+</div><div class="line">geom_text(data=circle_data,aes(x=State,y=label_y,group=Class,label=abs(Value)),family=<span class="string">"myfont"</span>,colour=<span class="string">"white"</span>,size=<span class="number">5</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">150</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#AA1A66"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">100</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#A31067"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==<span class="number">140</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#F29E4A"</span>,size=<span class="number">5</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#FA844F"</span>,<span class="string">"#BDCCD4"</span>,<span class="string">"#00C4B5"</span>))+</div><div class="line">scale_colour_manual(values=c(<span class="string">"#FAC0A1"</span>,<span class="string">"#F35C57"</span>,<span class="string">"#FBEB1B"</span>))+</div><div class="line">labs(title=<span class="string">"各国人民\n对于养老的态度"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">34.8</span>)+</div><div class="line">coord_polar()</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image7.jpg" alt=""></p>
<p><strong>最终成品图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"circle_bubble.png"</span>,width=<span class="number">1000</span>,height=<span class="number">1000</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_linerange(data=circle_bubble,aes(x=State,ymin=-<span class="number">150</span>,ymax=<span class="number">140</span>),size=<span class="number">.25</span>,color=<span class="string">"#D8E5F2"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_col(data=circle_data,aes(x=State,y=Value,fill=Class),width=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">.25</span>)+</div><div class="line">geom_point(data=circle_bubble,aes(State,y=<span class="number">140</span>),size=<span class="number">40</span>,colour=<span class="string">"#FEFCD3"</span>,alpha=<span class="number">.8</span>)+</div><div class="line">geom_point(data=circle_point_data,aes(State,y=mood_y,size=Value_y,colour=Class))+</div><div class="line">geom_text(data=circle_data,aes(x=State,y=label_y,group=Class,label=abs(Value)),family=<span class="string">"myfont"</span>,colour=<span class="string">"white"</span>,size=<span class="number">5</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">150</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#AA1A66"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==-<span class="number">100</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#A31067"</span>,size=<span class="number">4</span>)+</div><div class="line">geom_text(data=filter(circle_point_data,mood_y==<span class="number">140</span>),aes(x=State,y=mood_y,label=Value),family=<span class="string">"myfontl"</span>,colour=<span class="string">"#F29E4A"</span>,size=<span class="number">5</span>)+</div><div class="line">geom_text(data=circle_bubble,aes(State,y=Government-<span class="number">12</span>,label=State,angle=angle),family=<span class="string">"myfontl"</span>,size=<span class="number">4</span>,alpha=<span class="number">.8</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#FA844F"</span>,<span class="string">"#BDCCD4"</span>,<span class="string">"#00C4B5"</span>))+</div><div class="line">scale_colour_manual(values=c(<span class="string">"#FAC0A1"</span>,<span class="string">"#F35C57"</span>,<span class="string">"#FBEB1B"</span>))+</div><div class="line">labs(title=<span class="string">"各国人民\n对于养老的态度"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">34.8</span>)+</div><div class="line">coord_polar()+</div><div class="line">ylim(-<span class="number">250</span>,<span class="number">150</span>)+</div><div class="line">guides(colour=<span class="literal">FALSE</span>,size=<span class="literal">FALSE</span>,fill=<span class="literal">FALSE</span>)+</div><div class="line">theme_map() %+replace%theme(plot.title=element_text(family=<span class="string">"myfzhzh"</span>,size=<span class="number">50</span>,hjust=<span class="number">0</span>,lineheight=<span class="number">1.2</span>))</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image8.png" alt=""></p>
<p>最终效果图：</p>
<p><img src="http://orvigieh3.bkt.clouddn.com/circle_bubble/image9.jpg" alt=""></p>
<p>PS修饰后的最终效果（以上进过PS修饰细节）。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orvigieh3.bkt.clouddn.com/circle_bubble/%E5%B0%81%E9%9D%A2%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;没有难学的技艺，只有不够辛勤的付出！&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="信息图" scheme="http://www.raindu.com/tags/%E4%BF%A1%E6%81%AF%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>这么牛X的包，一般人我不告诉他！！！</title>
    <link href="http://www.raindu.com/2017/07/04/%E8%BF%99%E4%B9%88%E7%89%9BX%E7%9A%84%E5%8C%85%EF%BC%8C%E4%B8%80%E8%88%AC%E4%BA%BA%E6%88%91%E4%B8%8D%E5%91%8A%E8%AF%89%E4%BB%96%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    <id>http://www.raindu.com/2017/07/04/这么牛X的包，一般人我不告诉他！！！/</id>
    <published>2017-07-04T01:17:37.000Z</published>
    <updated>2017-07-04T02:00:40.429Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image1.png" alt=""></p>
<a id="more"></a>
<p>本文将给大家介绍一个ggplot2灰常牛X的可视化扩展包，我将该包主页的包用法介绍整理成中文，分享给大家。</p>
<p>包名叫geofacet，有经验的charter大概能猜出来个大概，没错该包是关于可视化数据中的地理信息，以及维度分面。</p>
<p>作者命名非常讲究，将该包的两个主要核心功能进行组合命名。</p>
<p>地理信息可视化分面，这么吊的包你肯定是第一次看到吧（其实之前介绍过一些地图上的mini 柱形图、饼图等都算这一类），但是这里的分面功能做的更加彻底，作者还是遵循惯例，将这种基于地理信息分面的可视化功能对接了ggplot2,并以分面函数facet_geo()的形式呈现。</p>
<p>这样了解ggplot2的用户学习成本就低了很多，因为只需了解这个分面参数的具体设定，组织对应数据源格式就OK了。</p>
<p><strong>以下是本文的主要内容：</strong></p>
<p>geofacet包扩展了ggplot2的分面函数，进而提供了基于地理信息的更加灵活的数据可视化方案。这个分面函数并无特别指出，如同内置的分面函数（facet_grid、facet_wrap等）用法没有太大差别。唯一的区别是，在最终的图形版面呈现结果上，允许单个图表分面刻画在对应的地理多边形中心位置。</p>
<p>该包的核心功能可以概括为以下几点：</p>
<p>每一个分面单元格都可以呈现一个维度的数据（而非单个数值）；</p>
<p>每一个分面单元格可以容纳任何一种ggplot2内置图表对象（看清楚了，是任何一种，任何一种，任何一种，就问你这包屌不屌！）；</p>
<p>分面系统支持任何的地理多边形（可以是内建的，也可以是用户自定义的）。</p>
<p>该包的强大优势绝不仅仅只有以下展示的这些内容，很快我们将会建立一个该包的专属博客（如果建好了会将其网站分享在本页面）。</p>
<h3 id="下载安装："><a href="#下载安装：" class="headerlink" title="下载安装："></a>下载安装：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">install.packages(<span class="string">"geofacet"</span>)</div><div class="line"><span class="comment"># or from github:</span></div><div class="line"><span class="comment"># devtools::install_github("hafen/geofacet")</span></div><div class="line"><span class="keyword">library</span>(geofacet)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure>
<h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><p>该包内的主要函数是facet_geo()，它的用法可以类比ggplot2的内置分面函数facet_warp()\facet_grid()(当然在输出方式上略有不同)。只要你已经熟练掌握了ggplot2语法，那么你就可以轻松搞定这个包。</p>
<p>接下来让我们展示一个例子，该包内置了一个数据集——state_ranks。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(state_ranks)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image13.jpg" alt=""></p>
<p>这是一个包含美国各州不同社会指标优略程度的数据集（按照排名由低到高排序）。</p>
<p>然后让我们使用geofacet来给每一个州都创造一个柱形图，我仅需使用一个ggplot2内的geom_col()函数即可，至于分面参数，这里我们摒弃使用传统的facet_wrap（）分面函数，而是使用geofacet包提供的facet_geo（）函数来替代。</p>
<h3 id="定义一个主题："><a href="#定义一个主题：" class="headerlink" title="定义一个主题："></a>定义一个主题：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mytheme&lt;-<span class="keyword">function</span> (base_size = <span class="number">12</span>, base_family = <span class="string">""</span>)&#123;</div><div class="line">    theme_bw(base_size = base_size, base_family = base_family) %+replace% </div><div class="line">    theme(axis.line = element_blank(), axis.text.x=element_blank(), </div><div class="line">          axis.ticks=element_blank(), axis.title = element_blank(), </div><div class="line">          panel.background=element_blank(),panel.border =element_blank(), </div><div class="line">          panel.grid = element_blank(), plot.background = element_blank(), </div><div class="line">          strip.background=element_blank(),legend.position = c(<span class="number">0.9</span>,<span class="number">0.15</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="案例赏析："><a href="#案例赏析：" class="headerlink" title="案例赏析："></a>案例赏析：</h3><p><strong>分面柱形图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot(state_ranks, aes(variable,rank,fill=variable)) +</div><div class="line">  geom_col() +</div><div class="line">  coord_flip() +</div><div class="line">  scale_fill_wsj()+</div><div class="line">  facet_geo(~state)+</div><div class="line">  mytheme()</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image2.jpg" alt=""></p>
<p><strong>geofacet内部重要参数：</strong></p>
<ul>
<li>grid参数：可以理解为网格id，可以选择内建的id名称，或者是提供一个自建的已经命名有网格名称的数据框。</li>
<li>label参数：可以指定任何我们想要指定的变量作为网格显示的标签。</li>
</ul>
<p>以下是两一个自带数据集的例子：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(us_state_grid2)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image3.jpg" alt=""></p>
<p>这一次，我们用来呈现美国季节调整后的失业率随时间的变化。使用对应州名作为对应网格标签。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(state_unemp, aes(year, rate)) +</div><div class="line">  geom_line() +</div><div class="line">  facet_geo(~ state, grid = <span class="string">"us_state_grid2"</span>, label = <span class="string">"name"</span>) +</div><div class="line">  scale_x_continuous(labels = <span class="keyword">function</span>(x) paste0(<span class="string">"'"</span>, substr(x, <span class="number">3</span>, <span class="number">4</span>))) +</div><div class="line">  labs(title = <span class="string">"Seasonally Adjusted US Unemployment Rate 2000-2016"</span>,</div><div class="line">    caption = <span class="string">"Data Source: bls.gov"</span>,</div><div class="line">    x = <span class="string">"Year"</span>,</div><div class="line">    y = <span class="string">"Unemployment Rate (%)"</span>) +</div><div class="line">  theme(strip.text.x = element_text(size = <span class="number">6</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image4.jpg" alt=""></p>
<p>指定网格非常容易，我们只需提供一个内含地区名称和地区代码的数据框即可。</p>
<p>以下是该包内已经内建好的，我们画图可利用的带地区编码的数据集。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">get_grid_names()</div><div class="line"><span class="comment">#[1] "us_state_grid1" "us_state_grid2" "eu_grid1" "aus_grid1" "sa_prov_grid1" "london_boroughs_grid"</span></div><div class="line"><span class="comment">#[7] "nhs_scot_grid" "india_grid1" "india_grid2" "argentina_grid1" "br_grid1"</span></div></pre></td></tr></table></figure></p>
<p>OMG，WAKM ,竟然没有China，这不科学啊（等我弄明白了我亲自给大家做一个）。</p>
<p>接下来是其他国家的几个例子！</p>
<p><strong>欧盟成员国GDP增长情况：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(aus_pop, aes(age_group, pop / <span class="number">1e6</span>, fill = age_group)) +</div><div class="line">  geom_col() +</div><div class="line">  facet_geo(~ code, grid = <span class="string">"aus_grid1"</span>) +</div><div class="line">  coord_flip() +</div><div class="line">  labs(</div><div class="line">    title = <span class="string">"Australian Population Breakdown"</span>,</div><div class="line">    caption = <span class="string">"Data Source: ABS Labour Force Survey, 12 month average"</span>,</div><div class="line">    y = <span class="string">"Population [Millions]"</span>) +</div><div class="line">  theme_bw()</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image5.jpg" alt=""></p>
<p><strong>奥地利人口分组可视化：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot(aus_pop, aes(age_group, pop / <span class="number">1e6</span>, fill = age_group)) +  </div><div class="line">geom_col() +  </div><div class="line">facet_geo(~ code, grid = <span class="string">"aus_grid1"</span>) +  </div><div class="line">coord_flip() +  </div><div class="line">labs(    title = <span class="string">"Australian Population Breakdown"</span>,    caption = <span class="string">"Data Source: ABS Labour Force Survey, 12 month average"</span>,    y = <span class="string">"Population [Millions]"</span>) +  </div><div class="line">theme_bw()</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image6.jpg" alt=""></p>
<p><strong>南非</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(sa_pop_dens, aes(factor(year), density, fill = factor(year))) +</div><div class="line">  geom_col() +</div><div class="line">  facet_geo(~ province, grid = <span class="string">"sa_prov_grid1"</span>) +</div><div class="line">  labs(title = <span class="string">"South Africa population density by province"</span>,</div><div class="line">    caption = <span class="string">"Data Source: Statistics SA Census"</span>,</div><div class="line">    y = <span class="string">"Population density per square km"</span>) +</div><div class="line">  theme_bw()</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image7.jpg" alt=""></p>
<p><strong>关于伦敦房价</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot(london_afford, aes(x = year, y = starts, fill = year)) +</div><div class="line">  geom_col(position = position_dodge()) +</div><div class="line">  facet_geo(~ code, grid = <span class="string">"london_boroughs_grid"</span>, label = <span class="string">"name"</span>) +</div><div class="line">  labs(title = <span class="string">"Affordable Housing Starts in London"</span>,</div><div class="line">    subtitle = <span class="string">"Each Borough, 2015-16 to 2016-17"</span>,</div><div class="line">    caption = <span class="string">"Source: London Datastore"</span>, x = <span class="string">""</span>, y = <span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image8.jpg" alt=""></p>
<p><strong>苏格兰居民牙齿健康程度</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(nhs_scot_dental, aes(x = year, y = percent)) +</div><div class="line">  geom_line() +</div><div class="line">  facet_geo(~ name, grid = <span class="string">"nhs_scot_grid"</span>) +</div><div class="line">  scale_x_continuous(breaks = c(<span class="number">2004</span>, <span class="number">2007</span>, <span class="number">2010</span>, <span class="number">2013</span>)) +</div><div class="line">  scale_y_continuous(breaks = c(<span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>)) +</div><div class="line">  labs(title = <span class="string">"Child Dental Health in Scotland"</span>,</div><div class="line">    subtitle = <span class="string">"Percentage of P1 children in Scotland with no obvious decay experience."</span>,</div><div class="line">    caption = <span class="string">"Source: statistics.gov.scot"</span>, x = <span class="string">""</span>, y = <span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image9.jpg" alt=""></p>
<p><strong>印度人口分布</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(subset(india_pop, type == <span class="string">"state"</span>),</div><div class="line">  aes(pop_type, value / <span class="number">1e6</span>, fill = pop_type)) +</div><div class="line">  geom_col() +</div><div class="line">  facet_geo(~ name, grid = <span class="string">"india_grid2"</span>, label = <span class="string">"code"</span>) +</div><div class="line">  labs(title = <span class="string">"Indian Population Breakdown"</span>,</div><div class="line">       caption = <span class="string">"Data Source: Wikipedia"</span>,</div><div class="line">       x = <span class="string">""</span>,</div><div class="line">       y = <span class="string">"Population [Millions]"</span>) +</div><div class="line">  theme_bw() +</div><div class="line">  theme(axis.text.x = element_text(angle = <span class="number">40</span>, hjust = <span class="number">1</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image10.jpg" alt=""></p>
<p><strong>2016年美国总统大选：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(election, aes(<span class="string">""</span>, pct, fill = candidate)) +</div><div class="line">  geom_col(alpha = <span class="number">0.8</span>, width = <span class="number">1</span>) +</div><div class="line">  scale_fill_manual(values = c(<span class="string">"#4e79a7"</span>, <span class="string">"#e15759"</span>, <span class="string">"#59a14f"</span>)) +</div><div class="line">  facet_geo(~ state, grid = <span class="string">"us_state_grid2"</span>) +</div><div class="line">  scale_y_continuous(expand = c(<span class="number">0</span>, <span class="number">0</span>)) +</div><div class="line">  labs(title = <span class="string">"2016 Election Results"</span>,</div><div class="line">    caption = <span class="string">"Data Source: http://bit.ly/2016votecount"</span>,</div><div class="line">    x = <span class="literal">NULL</span>,</div><div class="line">    y = <span class="string">"Percentage of Voters"</span>) +</div><div class="line">  theme(axis.title.x = element_blank(),</div><div class="line">    axis.text.x = element_blank(),</div><div class="line">    axis.ticks.x = element_blank(),</div><div class="line">    strip.text.x = element_text(size = <span class="number">6</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image11.jpg" alt=""></p>
<p><strong>换成条形图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ggplot(election, aes(candidate, pct, fill = candidate)) +</div><div class="line">  geom_col() +</div><div class="line">  scale_fill_manual(values = c(<span class="string">"#4e79a7"</span>, <span class="string">"#e15759"</span>, <span class="string">"#59a14f"</span>)) +</div><div class="line">  facet_geo(~ state, grid = <span class="string">"us_state_grid2"</span>) +</div><div class="line">  theme_bw() +</div><div class="line">  coord_flip() +</div><div class="line">  labs(title = <span class="string">"2016 Election Results"</span>,</div><div class="line">    caption = <span class="string">"Data Source: http://bit.ly/2016votecount"</span>,</div><div class="line">    x = <span class="literal">NULL</span>,</div><div class="line">    y = <span class="string">"Percentage of Voters"</span>) +</div><div class="line">  theme(strip.text.x = element_text(size = <span class="number">6</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/us-map/image12.jpg" alt=""></p>
<p>好了就写这几个吧，看完是不是觉得这个包很牛掰啊哈哈哈~_~</p>
<p>我也是被他给惊艳到才立马写出来分享给大家，不过可惜的是这些只能使用内建数据，如果你要呈现的地域包含在内建的地区里面，应该是可以用的，但是内部没有定义的地区编码，需要自己使用JS编辑器定义、提交、审核，灰常麻烦，但是我有信心把源码搞明白，然后写一套可以自定义的地区分面系统。（不知道要猴年马月才能出来哈哈哈~）</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ory93arir.bkt.clouddn.com/us-map/image1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>那些年做过的图表</title>
    <link href="http://www.raindu.com/2017/07/03/%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%81%9A%E8%BF%87%E7%9A%84%E5%9B%BE%E8%A1%A8/"/>
    <id>http://www.raindu.com/2017/07/03/那些年做过的图表/</id>
    <published>2017-07-03T13:35:31.000Z</published>
    <updated>2017-07-03T14:04:27.162Z</updated>
    
    <content type="html"><![CDATA[<p>数据可视化是我平时最大的爱好。</p>
<p>但是作为一个初学者、行外人。总觉得自己学的不够扎实、没有系统、缺乏一线的业务锻炼。</p>
<p>我只能以不停地写代码、开脑洞来避开自己的弱项。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-3.jpg" alt=""></p>
<a id="more"></a>
<p>所以有了这个合集，我最喜欢的几张图表，其中所用的到的大部分数据也是自己写爬虫从网上抓取来的，经历过各种失败和的困扰、各种排错、同一段代码要不停地调参做细节优化。</p>
<p>常常是别人觉得已经做得很精致的图表了，自己还是能找出很多瑕疵。虽然自己是白羊座，可是硬生生的给逼成了处女座。</p>
<p>所以才有了这些看起来赏心悦目的可视化作品。</p>
<p>作为一个双非财经大学的文科硕士，我没有循着传统的老路走（尽管包了全科的CPA，也不曾去过一次考场）。尽管自己也顶着很大的职业压力，可是 不想强迫自己做不喜欢的事情，毕竟我本就不是一个逆来顺受的人。</p>
<p>学的久了最大的感触就是，如果能寻得一些心法，那么自己的技能会形成网络效应，即你会发现同样的问题用不同的工具来解决，其大体的思路都是差不多的，不同的只是软件的界面、不同的菜单以及命名方法的差异。</p>
<p>那么这种学习的好处，最终可以让你对同一个领域的不同工具之间能够无师自通、信手拈来。</p>
<p>我学了很长一段时间Excel，之后才入手的R语言，掌握到一定程度，我可以用两种不同的工具来模仿同一个图表案例，而且仿制的结果根本无法分辨有任何工具的痕迹。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-1.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-2.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-3.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-4.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-5.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-6.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-7.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-8.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-9.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-10.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-11.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-12.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-13.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据可视化是我平时最大的爱好。&lt;/p&gt;
&lt;p&gt;但是作为一个初学者、行外人。总觉得自己学的不够扎实、没有系统、缺乏一线的业务锻炼。&lt;/p&gt;
&lt;p&gt;我只能以不停地写代码、开脑洞来避开自己的弱项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ortu7ddty.bkt.clouddn.com/visualization/%E6%A1%88%E4%BE%8B%E6%AC%A3%E8%B5%8F-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>左手用R右手Python系列——数据塑型与长宽转换</title>
    <link href="http://www.raindu.com/2017/07/02/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%A1%91%E5%9E%8B%E4%B8%8E%E9%95%BF%E5%AE%BD%E8%BD%AC%E6%8D%A2/"/>
    <id>http://www.raindu.com/2017/07/02/左手用R右手Python系列——数据塑型与长宽转换/</id>
    <published>2017-07-02T01:08:23.000Z</published>
    <updated>2017-07-03T13:58:46.287Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/title.jpg" alt=""></p>
<p>今天这篇是R语言 with Python系列的第三篇，主要跟大家分享数据处理过程中的数据塑型与长宽转换。</p>
<a id="more"></a>
<p>其实这个系列算是我对于之前学习的R语言系列的一个总结，再加上刚好最近入门Python，这样在总结R语言的同时，对比R语言与Pyhton在数据处理中常用解决方案的差异，每一个小节只讲一个小知识点，但是这些知识点都是日常数据处理与清洗过程中非常高频的需求。</p>
<p>不会跟大家啰嗦太多每一个函数的详细参数，只列出那些参数中的必要设定，总体以简单实用为原则。如若需要详细了解每一个函数的内部参数，还是需要自己查阅官方文档。</p>
<p>数据长宽转换是很常用的需求，特别是当是从Excel中导入的汇总表时，常常需要转换成一维表（长数据）才能提供给图表函数或者模型使用。</p>
<h3 id="R语言数据塑型："><a href="#R语言数据塑型：" class="headerlink" title="R语言数据塑型："></a>R语言数据塑型：</h3><p>在R语言中，提供数据长宽转换的包主要有两个：</p>
<ul>
<li>reshape2::melt/dcast</li>
<li>tidyr::gather/spread</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"tidyr"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(</div><div class="line">       Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),</div><div class="line">       Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),</div><div class="line">       Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),</div><div class="line">       Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">       Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">       Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>)</div><div class="line">       )</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image1.jpg" alt=""></p>
<h4 id="数据重塑（宽转长）："><a href="#数据重塑（宽转长）：" class="headerlink" title="数据重塑（宽转长）："></a>数据重塑（宽转长）：</h4><p>melt函数是reshape2包中的数据宽转长的函数<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-melt(</div><div class="line">       mydata,                                      <span class="comment">#待转换的数据集名称</span></div><div class="line">       id.vars=c(<span class="string">"Conpany"</span>,<span class="string">"Name"</span>),  <span class="comment">#要保留的主字段</span></div><div class="line">       variable.name=<span class="string">"Year"</span>,               <span class="comment">#转换后的分类字段名称（维度）</span></div><div class="line">       value.name=<span class="string">"Sale"</span>                    <span class="comment">#转换后的度量值名称</span></div><div class="line">       )</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image2.jpg" alt=""></p>
<p>转换之后，长数据结构保留了原始宽数据中的Name、Conpany字段，同时将剩余的年度指标进行堆栈，转换为一个代表年度的类别维度和对应年度的指标。（即转换后，所有年度字段被降维化了）。</p>
<p>在tidyr包中的gather也可以非常快捷的完成宽转长的任务：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data1&lt;-gather(</div><div class="line">      data=mydata,             <span class="comment">#待转换的数据集名称</span></div><div class="line">      key=<span class="string">"Year"</span>,                <span class="comment">#转换后的分类字段名称（维度）</span></div><div class="line">      value=<span class="string">"Sale"</span> ,             <span class="comment">#转换后的度量值名称</span></div><div class="line">      Sale2013:Sale2016    <span class="comment">#选择将要被拉长的字段组合</span></div><div class="line">      )                                  <span class="comment">#（可以使用x:y的格式选择连续列，也可以以-z的格式排除主字段）</span></div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image3.jpg" alt=""></p>
<p>而相对于数据宽转长而言，数据长转宽就显得不是很常用，因为长转宽是数据透视，这种透视过程可以通过汇总函数或者类数据透视表函数来完成。</p>
<p>但是既然数据长宽转换是成对的需求，自然有对应的长转宽函数。</p>
<h4 id="数据塑型（长转宽）："><a href="#数据塑型（长转宽）：" class="headerlink" title="数据塑型（长转宽）："></a>数据塑型（长转宽）：</h4><p>reshape2中的dcast函数可以完成数据长转宽的需求：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dcast(</div><div class="line">     data=data1,         <span class="comment">#数据集名称</span></div><div class="line">     Name+Conpany~Year   <span class="comment">#x1+x2+……~class </span></div><div class="line">    <span class="comment">#这一项是一个转换表达式，表达式左侧列       </span></div><div class="line">    <span class="comment">#出要保留的主字段（即不会被扩宽的字段，右侧则是要分割的分类变量，扩展之后的       </span></div><div class="line">    <span class="comment">#宽数据会增加若干列度量值，列数等于表达式右侧分类变量的类别个数</span></div><div class="line">  ）</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image4.jpg" alt=""></p>
<p>除此之外，tidyr包中的spread函数在解决数据长转宽方面也是很好的一个选择。</p>
<p><strong>spread：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">spread(</div><div class="line">   data=data1,   <span class="comment">#带转换长数据框名称</span></div><div class="line">   key=Year,     <span class="comment">#带扩宽的类别变量（编程新增列名称）  </span></div><div class="line">   value=Sale)   <span class="comment">#带扩宽的度量值 （编程新增列度量值）</span></div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image5.jpg" alt=""></p>
<p>从以上代码的复杂度来看，reshape2内的两个函数melt\dcast和tidyr内的两个函数gather\spread相比，gather\spread这一对函数完胜，不愧是哈神的最新力作，tidyr内的两个函数所需参数少，逻辑上更好理解，自始至终都围绕着data，key、value三个参数来进行设定，而相对老旧的包reshape2内的melt\dcast函数在参数配置上就显得不是很友好，他是围绕着一直不变的主字段来进行设定的，tidyr包则围绕着转换过程中会变形的维度和度量来设定的。</p>
<p>接下来是Python中的数据塑性与长宽转换。</p>
<h3 id="Python数据长宽转换："><a href="#Python数据长宽转换：" class="headerlink" title="Python数据长宽转换："></a>Python数据长宽转换：</h3><p>Python中我只讲两个函数：</p>
<ul>
<li>melt  #数据宽转长</li>
<li>pivot_table  #数据长转宽</li>
</ul>
<p>Python中的Pandas包提供了与R语言中reshape2包内几乎同名的melt函数来对数据进行塑型（宽转长）操作，甚至连内部参数都保持了一致的风格。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">mydata=pd.DataFrame(&#123;</div><div class="line"><span class="string">"Name"</span>:[<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>],</div><div class="line"><span class="string">"Conpany"</span>:[<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>],</div><div class="line"><span class="string">"Sale2013"</span>:[<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>],</div><div class="line"><span class="string">"Sale2014"</span>:[<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>],</div><div class="line"><span class="string">"Sale2015"</span>:[<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>],</div><div class="line"><span class="string">"Sale2016"</span>:[<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>]</div><div class="line">       &#125;)</div></pre></td></tr></table></figure></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata1=mydata.melt(</div><div class="line">id_vars=[<span class="string">"Name"</span>,<span class="string">"Conpany"</span>],   <span class="comment">#要保留的主字段</span></div><div class="line">var_name=<span class="string">"Year"</span>,              <span class="comment">#拉长的分类变量</span></div><div class="line">value_name=<span class="string">"Sale"</span>             <span class="comment">#拉长的度量值名称</span></div><div class="line">        )</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image6.jpg" alt=""></p>
<p>除此之外，我了解到还可以通过stack、wide_to_long函数来进行宽转长，但是个人觉得melt函数比较直观一些，也与R语言中的数据宽转长用法一致，推荐使用。</p>
<p>奇怪的是我好像没有在pandas中找到对应melt的数据长转宽函数（R语言中都是成对出现的）。还在Python中提供了非常便捷的数据透视表操作函数，刚开始就已经说过是，长数据转宽数据就是数据透视的过程（自然宽转长就可以被称为逆透视咯，PowerBI也是这么称呼的）。</p>
<p>pandas中的数据透视表函数提供如同Excel原生透视表一样的使用体验，即行标签、列标签、度量值等操作，根据使用规则，行列主要操作维度指标，值主要操作度量指标。</p>
<p>那么以上长数据mydata1就可以通过这种方式实现透视。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata1.pivot_table(</div><div class="line">index=[<span class="string">"Name"</span>,<span class="string">"Conpany"</span>], <span class="comment">#行索引（可以使多个类别变量）</span></div><div class="line">columns=[<span class="string">"Year"</span>],         <span class="comment">#列索引（可以使多个类别变量）</span></div><div class="line">values=[<span class="string">"Sale"</span>]           <span class="comment">#值（一般是度量指标）</span></div><div class="line">     )</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/cleaning/image7.jpg" alt=""></p>
<p>通常这种操作也可以借助堆栈函数来达到同样的目的。(但是使用stack\unstack需要额外设置多索引，灰常麻烦，所以不是很推荐，有兴趣可以查看pandas中的stack/unstack方法，这里不再赘述)。</p>
<p>综上所述，本文主要提供了R语言与Python中用于处理数据重塑（长宽转换的常用解决方案）。</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>宽转长</th>
<th>长转宽</th>
</tr>
</thead>
<tbody>
<tr>
<td>R语言</td>
<td>reshape2::melt<br>tidyr::gather</td>
<td>reshape2::dcast<br>tidyr::spread</td>
</tr>
<tr>
<td>Python</td>
<td>pandas-melt</td>
<td>pandas-pivot_table<br>备选方案——stack/unstack、wide_to_long</td>
</tr>
</tbody>
</table>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orn9f9laz.bkt.clouddn.com/cleaning/title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天这篇是R语言 with Python系列的第三篇，主要跟大家分享数据处理过程中的数据塑型与长宽转换。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
      <category term="数据长宽转换" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E9%95%BF%E5%AE%BD%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>一篇全是代码的数据可视化案例</title>
    <link href="http://www.raindu.com/2017/06/30/%E4%B8%80%E7%AF%87%E5%85%A8%E6%98%AF%E4%BB%A3%E7%A0%81%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%A1%88%E4%BE%8B/"/>
    <id>http://www.raindu.com/2017/06/30/一篇全是代码的数据可视化案例/</id>
    <published>2017-06-30T09:38:13.000Z</published>
    <updated>2017-07-03T13:58:45.994Z</updated>
    
    <content type="html"><![CDATA[<p>实在没时间写文字步骤了，算了，就甩一篇代码给大家吧，这篇代码包含五张图，分别可以呈现放射状线路图、迁徙路径图、闭环路径图、菱形气泡图、方形气泡图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggmap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maps"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"REmap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="keyword">library</span>(showtext)</div></pre></td></tr></table></figure>
<h3 id="中国地图"><a href="#中国地图" class="headerlink" title="中国地图"></a>中国地图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">x1 &lt;- china_map@data          </div><div class="line">xs1 &lt;- data.frame(x1,id=seq(<span class="number">0</span>:<span class="number">924</span>)-<span class="number">1</span>)  </div><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1, xs1, type = <span class="string">"full"</span>) </div><div class="line">mydata1 &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata1, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">city_list&lt;-c(<span class="string">"西安"</span>,<span class="string">"西宁"</span>,<span class="string">"郑州"</span>,<span class="string">"重庆"</span>,<span class="string">"成都"</span>,<span class="string">"石家庄"</span>,<span class="string">"兰州"</span>,<span class="string">"济南"</span>,<span class="string">"大同"</span>,<span class="string">"咸阳"</span>,<span class="string">"包头"</span>)</div><div class="line"><span class="comment">#address&lt;-get_geo_position(city_list)</span></div><div class="line">address&lt;-getCoordinate(city_list, formatted = <span class="literal">T</span>)</div><div class="line">address&lt;-data.frame(address,city=row.names(address),stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">del&lt;-getCoordinate(<span class="string">"长沙"</span>, formatted = <span class="literal">T</span>)</div><div class="line">del&lt;-as.character(del)</div><div class="line">lonx&lt;-as.numeric(rep(del[<span class="number">1</span>],<span class="number">11</span>))</div><div class="line">laty&lt;-as.numeric(rep(del[<span class="number">2</span>],<span class="number">11</span>))</div><div class="line"></div><div class="line">address&lt;-data.frame(address,lonx,laty)</div><div class="line">address$lonx&lt;-as.numeric(address$lonx)</div><div class="line">address$laty&lt;-as.numeric(address$laty)</div><div class="line"></div><div class="line">names(address)[<span class="number">1</span>:<span class="number">2</span>]&lt;-c(<span class="string">"lon"</span>,<span class="string">"lat"</span>)</div><div class="line">address$Num&lt;-round(runif(<span class="number">11</span>,<span class="number">50</span>,<span class="number">100</span>),<span class="number">2</span>)</div></pre></td></tr></table></figure>
<h3 id="放射路径气泡图："><a href="#放射路径气泡图：" class="headerlink" title="放射路径气泡图："></a>放射路径气泡图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyhl.ttc"</span>)</div><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/航线图1.png"</span>,width=<span class="number">1000</span>,height=<span class="number">670</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,size=<span class="number">0.2</span>,colour=<span class="string">"#D9D9D9"</span>)+</div><div class="line">geom_segment(data=address,aes(x=lon,y=lat,xend=lonx,yend=laty),size=<span class="number">0.3</span>,colour=<span class="string">"#FF6833"</span>)+</div><div class="line">geom_point(data=address,aes(x=lon,y=lat,size=Num),shape=<span class="number">21</span>,fill=<span class="string">"#ED7D31"</span>,col=<span class="string">"#E02939"</span>,alpha=<span class="number">.6</span>)+</div><div class="line">geom_point(data=<span class="literal">NULL</span>,aes(x=<span class="number">112.97935</span>,y=<span class="number">28.21347</span>),shape=<span class="number">21</span>,size=<span class="number">8</span>,fill=<span class="literal">NA</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">8</span>)+ </div><div class="line">     theme(</div><div class="line">          plot.background=element_rect(fill=<span class="string">"#D0DEDE"</span>, color=<span class="literal">NA</span>),</div><div class="line">          panel.spacing = unit(<span class="number">0</span>,<span class="string">"lines"</span>), </div><div class="line">          plot.margin=unit(rep(<span class="number">0.2</span>,<span class="number">4</span>),<span class="string">"cm"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          <span class="comment">#legend.position=c(0.8,0.3),</span></div><div class="line">          legend.position=<span class="string">"none"</span></div><div class="line">          )</div><div class="line">showtext.end()  </div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/airportline/image1.png" alt=""></p>
<h3 id="迁徙路径气泡图"><a href="#迁徙路径气泡图" class="headerlink" title="迁徙路径气泡图"></a>迁徙路径气泡图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">city_list&lt;-c(<span class="string">"海口"</span>,<span class="string">"广州"</span>,<span class="string">"长沙"</span>,<span class="string">"武汉"</span>,<span class="string">"郑州"</span>,<span class="string">"石家庄"</span>,<span class="string">"北京"</span>,<span class="string">"沈阳"</span>,<span class="string">"长春"</span>,<span class="string">"哈尔滨"</span>)</div><div class="line">addA&lt;-getCoordinate(city_list, formatted = <span class="literal">T</span>)</div><div class="line">addA&lt;-data.frame(addA,city=row.names(addA),stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data1&lt;-addA[-<span class="number">1</span>,]</div><div class="line">names(data1)[<span class="number">1</span>:<span class="number">2</span>]&lt;-c(<span class="string">"lonx"</span>,<span class="string">"latx"</span>)</div><div class="line">data2&lt;-addA[-length(row.names(addA)),]</div><div class="line">names(data2)[<span class="number">1</span>:<span class="number">2</span>]&lt;-c(<span class="string">"lony"</span>,<span class="string">"laty"</span>)</div><div class="line">addB&lt;-cbind(data2,data1)[,-<span class="number">3</span>]</div><div class="line">addA$Num&lt;-round(runif(<span class="number">10</span>,<span class="number">50</span>,<span class="number">100</span>),<span class="number">2</span>)</div><div class="line">names(addA)[<span class="number">1</span>:<span class="number">2</span>]&lt;-c(<span class="string">"lon"</span>,<span class="string">"lat"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyhl.ttc"</span>)</div><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/航线图2.png"</span>,width=<span class="number">1000</span>,height=<span class="number">670</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,size=<span class="number">0.2</span>,colour=<span class="string">"#D9D9D9"</span>)+</div><div class="line">geom_segment(data=addB,aes(x=lonx,y=latx,xend=lony,yend=laty),size=<span class="number">0.3</span>,colour=<span class="string">"#FF6833"</span>)+</div><div class="line">geom_point(data=addA,aes(x=lon,y=lat,size=Num),shape=<span class="number">21</span>,fill=<span class="string">"#ED7D31"</span>,col=<span class="string">"#E02939"</span>,alpha=<span class="number">.6</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">8</span>)+ </div><div class="line">     theme(</div><div class="line">          plot.background=element_rect(fill=<span class="string">"#D0DEDE"</span>, color=<span class="literal">NA</span>),</div><div class="line">          panel.spacing = unit(<span class="number">0</span>,<span class="string">"lines"</span>), </div><div class="line">          plot.margin=unit(rep(<span class="number">0.2</span>,<span class="number">4</span>),<span class="string">"cm"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          <span class="comment">#legend.position=c(0.8,0.3),</span></div><div class="line">          legend.position=<span class="string">"none"</span></div><div class="line">          )</div><div class="line">showtext.end()  </div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/airportline/image2.png" alt=""></p>
<h3 id="闭环路径气泡图"><a href="#闭环路径气泡图" class="headerlink" title="闭环路径气泡图"></a>闭环路径气泡图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">city_list3&lt;-c(<span class="string">"兰州"</span>,<span class="string">"成都"</span>,<span class="string">"重庆"</span>,<span class="string">"贵阳"</span>,<span class="string">"昆明"</span>,<span class="string">"南宁"</span>,<span class="string">"海口"</span>,<span class="string">"广州"</span>,<span class="string">"福州"</span>,<span class="string">"上海"</span>,<span class="string">"青岛"</span>,<span class="string">"石家庄"</span>,<span class="string">"呼和浩特"</span>,<span class="string">"银川"</span>)</div><div class="line">addC&lt;-getCoordinate(city_list3, formatted = <span class="literal">T</span>)</div><div class="line">addC&lt;-data.frame(addC,city=row.names(addC),stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">names(addC)[<span class="number">1</span>:<span class="number">2</span>]&lt;-c(<span class="string">"lon"</span>,<span class="string">"lat"</span>)</div><div class="line">datac1&lt;-addC[<span class="number">2</span>:<span class="number">14</span>,]</div><div class="line">datac2&lt;-addC[<span class="number">1</span>,]</div><div class="line">addCC&lt;-rbind(datac1,datac2)</div><div class="line">adddata&lt;-cbind(addC,addCC)</div><div class="line">names(adddata)&lt;-c(<span class="string">"lonx"</span>,<span class="string">"latx"</span>,<span class="string">"city"</span>,<span class="string">"lony"</span>,<span class="string">"laty"</span>,<span class="string">"city"</span>)</div><div class="line">adddata&lt;-adddata[,-<span class="number">3</span>]</div><div class="line">addC$Num&lt;-round(runif(<span class="number">14</span>,<span class="number">50</span>,<span class="number">100</span>),<span class="number">2</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/航线图3.png"</span>,width=<span class="number">1000</span>,height=<span class="number">670</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,size=<span class="number">0.2</span>,colour=<span class="string">"#D9D9D9"</span>)+</div><div class="line">geom_segment(data=adddata,aes(x=lonx,y=latx,xend=lony,yend=laty),size=<span class="number">0.3</span>,colour=<span class="string">"#FF6833"</span>)+</div><div class="line">geom_point(data=addC,aes(x=lon,y=lat,size=Num),shape=<span class="number">21</span>,fill=<span class="string">"#ED7D31"</span>,col=<span class="string">"#E02939"</span>,alpha=<span class="number">.6</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">8</span>)+ </div><div class="line">     theme(</div><div class="line">          plot.background=element_rect(fill=<span class="string">"#D0DEDE"</span>, color=<span class="literal">NA</span>),</div><div class="line">          panel.spacing = unit(<span class="number">0</span>,<span class="string">"lines"</span>), </div><div class="line">          plot.margin=unit(rep(<span class="number">0.2</span>,<span class="number">4</span>),<span class="string">"cm"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          <span class="comment">#legend.position=c(0.8,0.3),</span></div><div class="line">          legend.position=<span class="string">"none"</span></div><div class="line">          )</div><div class="line">showtext.end()  </div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/airportline/image3.png" alt=""></p>
<h3 id="方形气泡图"><a href="#方形气泡图" class="headerlink" title="方形气泡图"></a>方形气泡图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/航线图4.png"</span>,width=<span class="number">1000</span>,height=<span class="number">670</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,size=<span class="number">0.2</span>,colour=<span class="string">"#D9D9D9"</span>)+</div><div class="line">geom_point(data=address,aes(x=lon,y=lat,size=Num,fill=Num),shape=<span class="number">22</span>,col=<span class="string">"#E02939"</span>,alpha=<span class="number">.6</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">scale_fill_gradient2(low=<span class="string">"#8E0F2E"</span>, mid=<span class="string">"#BFBEBE"</span>, high=<span class="string">"#0E4E75"</span>, midpoint=median(na.omit(address$Num)))+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">8</span>)+ </div><div class="line">     theme(</div><div class="line">          plot.background=element_rect(fill=<span class="string">"#D0DEDE"</span>, color=<span class="literal">NA</span>),</div><div class="line">          panel.spacing = unit(<span class="number">0</span>,<span class="string">"lines"</span>), </div><div class="line">          plot.margin=unit(rep(<span class="number">0.2</span>,<span class="number">4</span>),<span class="string">"cm"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          <span class="comment">#legend.position=c(0.8,0.3),</span></div><div class="line">          legend.position=<span class="string">"none"</span></div><div class="line">          )</div><div class="line">showtext.end()  </div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/airportline/image4.png" alt=""></p>
<h3 id="菱形气泡图"><a href="#菱形气泡图" class="headerlink" title="菱形气泡图"></a>菱形气泡图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"C:/Users/Administrator/Desktop/航线图5.png"</span>,width=<span class="number">1000</span>,height=<span class="number">670</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,size=<span class="number">0.2</span>,colour=<span class="string">"#D9D9D9"</span>)+</div><div class="line">geom_point(data=address,aes(x=lon,y=lat,size=Num,fill=Num),shape=<span class="number">23</span>,col=<span class="string">"#E02939"</span>,alpha=<span class="number">.6</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">scale_fill_gradient2(low=<span class="string">"#8E0F2E"</span>, mid=<span class="string">"#BFBEBE"</span>, high=<span class="string">"#0E4E75"</span>, midpoint=median(na.omit(address$Num)))+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">8</span>)+ </div><div class="line">     theme(</div><div class="line">          plot.background=element_rect(fill=<span class="string">"#D0DEDE"</span>, color=<span class="literal">NA</span>),</div><div class="line">          panel.spacing = unit(<span class="number">0</span>,<span class="string">"lines"</span>), </div><div class="line">          plot.margin=unit(rep(<span class="number">0.2</span>,<span class="number">4</span>),<span class="string">"cm"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          <span class="comment">#legend.position=c(0.8,0.3),</span></div><div class="line">          legend.position=<span class="string">"none"</span></div><div class="line">          )</div><div class="line">showtext.end()  </div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/airportline/image5.png" alt=""></p>
<p>以上所有图表的指标数据均为随机数虚构，图表的图形代码使用showtext和Cario进行高清渲染并自动输出，除了需加载的地图素材之外，其他代码均可一次性放在控制台流畅运行。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实在没时间写文字步骤了，算了，就甩一篇代码给大家吧，这篇代码包含五张图，分别可以呈现放射状线路图、迁徙路径图、闭环路径图、菱形气泡图、方形气泡图。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>重要的是图表思维，而不是工具</title>
    <link href="http://www.raindu.com/2017/06/29/%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E5%9B%BE%E8%A1%A8%E6%80%9D%E7%BB%B4%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.raindu.com/2017/06/29/重要的是图表思维，而不是工具/</id>
    <published>2017-06-29T03:49:43.000Z</published>
    <updated>2017-07-03T13:58:46.490Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/%E5%B0%81%E9%9D%A2%E5%9B%BE.png" alt=""></p>
<p>很久没有作图了，主要是一时找不到应该练手的案例。</p>
<p>然后昨天逛网易数独栏目的数据新闻，看到一幅还不错的案例，对于我来说值得一试，然后就手痒给照葫芦画瓢弄出来了。（主要是其中涉及到的细节处理很麻烦）</p>
<a id="more"></a>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image1.png" alt=""></p>
<p>当然过程是花了些时间的，主要是需要慢慢打磨其中的细节，需要利用很多技术来处理图形版面的交接位置。</p>
<p>令我感触最深的是，想要用ggplot2随心所欲的画图，ggplot2掌握的再熟练，也只是勉强过的了技术关，而图表背后的思维和结构更考验人，更具有挑战性。</p>
<p>好在我学习R语言之前，就已经利用Excel临摹了大量的高难度信息图，这一点可视化素养的积累，再结合对ggplot2勤加练习获得的图感，分分钟做出一副自己喜欢的作品，已经不在话下了。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>以下是该案例涉及到的扩展包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"tidyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"sca"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">font.add(<span class="string">"myfzhzh"</span>,<span class="string">"方正正粗黑简体.TTF"</span>)</div></pre></td></tr></table></figure></p>
<p>我把该案例切割成了两部分来做：</p>
<p>（实际上如果放在一个图里做也是可以实现的，无非是多写一些代码罢了，但是涉及到颜色标度重复的问题，一时半会儿找不到解决方案，为了更加逼真的还原案例效果，我决定分开来做）。</p>
<ul>
<li>原图中的下半部分（条形图）（以下简称模块1）</li>
<li>上半部分（堆积柱形图+连接带）（以下简称模块2）</li>
</ul>
<h3 id="导入数据源："><a href="#导入数据源：" class="headerlink" title="导入数据源："></a>导入数据源：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tea_data&lt;-read.csv(<span class="string">"D:/R/File/tea_data.csv"</span>,stringsAsFactors=<span class="literal">FALSE</span>,check.names=<span class="literal">FALSE</span>)</div><div class="line">tea_data$State[<span class="number">12</span>]&lt;-<span class="string">"印度尼\n西亚"</span></div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image2.jpg" alt=""></p>
<p>tea_bump是上半部分（模块2）中堆积柱形图的数据源，我没有使用传统的堆积柱形图去做，而是使用了矩形几何对象，所以数据源中需要指定X轴起始点，Y轴起始点。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">tea_bump&lt;-na.omit(tea_data[,c(<span class="string">"State"</span>,<span class="string">"Yield"</span>,<span class="string">"Ratio"</span>)])</div><div class="line">tea_bump&lt;-arrange(tea_bump,-Yield)</div><div class="line">other_Ratio&lt;-<span class="number">1</span>-sum(tea_bump$Ratio)</div><div class="line">other_Yield&lt;-sum(tea_bump$Yield)/sum(tea_bump$Ratio)-sum(tea_bump$Yield)</div><div class="line">data1&lt;-data.frame(State=<span class="string">"其他"</span>,Yield=other_Yield,Ratio=other_Ratio)</div><div class="line">tea_bump&lt;-rbind(tea_bump,data1)</div><div class="line">tea_bump$end&lt;-cumsum(tea_bump$Yield)</div><div class="line">tea_bump$start&lt;-c(<span class="number">0</span>,tea_bump$end[<span class="number">1</span>:nrow(tea_bump)-<span class="number">1</span>])</div><div class="line">tea_bump$id&lt;-<span class="number">1</span>:nrow(tea_bump)</div><div class="line">tea_bump&lt;-merge(tea_bump,tea_data[,c(<span class="string">"State"</span>,<span class="string">"Consum"</span>)],by=<span class="string">"State"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">tea_bump&lt;-arrange(tea_bump,-Yield)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image3.jpg" alt=""></p>
<p>以下是下半部分柱形图的数据源，同样我也没有使用普通的柱形图几何对象去做，而是使用了范围线图（geom_linerange），这样可以节省调整步骤，但须额外设置线的起始点。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tea_bar&lt;-tea_data[,c(<span class="string">"State"</span>,<span class="string">"Consum"</span>)]</div><div class="line">tea_bar$id&lt;-<span class="number">1</span>:nrow(tea_bar)</div><div class="line">colorpal&lt;-ifelse(tea_data$State %<span class="keyword">in</span>% tea_bump$State,<span class="string">"#B4BFB4"</span>,<span class="string">"#E5E5E5"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div></pre></td></tr></table></figure></p>
<h3 id="底部柱形图对象："><a href="#底部柱形图对象：" class="headerlink" title="底部柱形图对象："></a>底部柱形图对象：</h3><p>（因为需要拼图，所以图形对象要临时存储）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_hline(aes(yintercept=<span class="number">1</span>:<span class="number">7</span>*<span class="number">400</span>),colour=<span class="string">"grey"</span>,linetype=<span class="number">2</span>)+</div><div class="line">geom_linerange(data=tea_bar,aes(x=id,ymin=max(tea_bar$Consum)-Consum,ymax=max(tea_bar$Consum),colour=Consum),size=<span class="number">24</span>)+</div><div class="line">geom_point(data=tea_bar,aes(x=id,y=max(tea_bar$Consum)+<span class="number">165</span>,fill=colorpal),shape=<span class="number">22</span>,colour=<span class="string">"white"</span>,size=<span class="number">37.5</span>)+</div><div class="line">geom_text(data=tea_bar,aes(x=id,y=max(tea_bar$Consum)+<span class="number">165</span>,label=State),size=<span class="number">6</span>,family=<span class="string">"myfont"</span>,vjust=<span class="number">.5</span>)+</div><div class="line">geom_text(data=tea_bar,aes(x=id,y=max(tea_bar$Consum)-Consum+<span class="number">80</span>,label=Consum),size=<span class="number">6</span>,family=<span class="string">"myfont"</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>)+</div><div class="line">annotate(<span class="string">"text"</span>,x =<span class="number">5</span>,y=<span class="number">80</span>,label=<span class="string">"各国每年人均茶叶消费量（克）"</span>,family=<span class="string">"myfzhzh"</span>,size=<span class="number">11</span>,colour=<span class="string">"#515551"</span>)+</div><div class="line">ylim(<span class="number">0</span>,<span class="number">4800</span>)+</div><div class="line">geom_linerange()+</div><div class="line">guides(fill=<span class="literal">FALSE</span>,colour=<span class="literal">FALSE</span>)+</div><div class="line">scale_colour_gradient(low=<span class="string">"#A1C997"</span>,high=<span class="string">"#47734A"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#B4BFB4"</span>,<span class="string">"#E5E5E5"</span>))+</div><div class="line">theme_map(base_family=<span class="string">"myfont"</span>) %+replace% </div><div class="line">theme(</div><div class="line">      plot.margin=unit(c(<span class="number">0</span>,<span class="number">1.5</span>,<span class="number">0</span>,<span class="number">1.5</span>), <span class="string">"cm"</span>),</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image4.png" alt=""></p>
<p><strong>以下数据是构造模块2辅助数据：</strong></p>
<p>（上半部分堆积柱形图的下侧连接带数据）的辅助数据，我打算使用多边形几何对象了来模拟那些参差交错的连接带。这就意味着我要找到每一条带子，即四边形的四个拐点坐标，并按顺序排列。）</p>
<p>如果你看的不是很懂，实属正常，这种笨拙的想法，我也不知道是从哪里学来的。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tea_chord&lt;-data.frame(State=tea_data$State)</div><div class="line">tea_chord$id&lt;-<span class="number">1</span>:nrow(tea_chord)</div><div class="line">tea_chord$mean&lt;-sum(tea_bump$Yield)/nrow(tea_chord)</div><div class="line">tea_chord$xend&lt;-cumsum(tea_chord$mean)</div><div class="line">tea_chord$xstart&lt;-c(<span class="number">0</span>,tea_chord$xend[<span class="number">1</span>:nrow(tea_chord)-<span class="number">1</span>])</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image5.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tea_chord_data&lt;-tea_chord[tea_chord$State %<span class="keyword">in</span>% tea_bump$State,c(<span class="string">"State"</span>,<span class="string">"xstart"</span>,<span class="string">"xend"</span>)]</div><div class="line">tea_chord_data&lt;-merge(tea_chord_data,tea_bump[tea_bump$State!=<span class="string">"其他"</span>,c(<span class="string">"State"</span>,<span class="string">"start"</span>,<span class="string">"end"</span>)],by=<span class="string">"State"</span>)</div><div class="line">tea_chord_data&lt;-tea_chord_data[,c(<span class="string">"State"</span>,<span class="string">"start"</span>,<span class="string">"end"</span>,<span class="string">"xend"</span>,<span class="string">"xstart"</span>)]</div><div class="line">tea_chord_newdata&lt;-data.frame(t(tea_chord_data),stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">names(tea_chord_newdata)&lt;-tea_chord_data$State;tea_chord_newdata&lt;-tea_chord_newdata[-<span class="number">1</span>,]</div><div class="line">rownames(tea_chord_newdata)&lt;-<span class="literal">NULL</span></div><div class="line">tea_chord_newdata$order&lt;-<span class="number">1</span>:nrow(tea_chord_newdata)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image6.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tea_chord_newdata_final&lt;-gather(tea_chord_newdata,State,long,-order)</div><div class="line">tea_chord_newdata_final$lat&lt;-<span class="number">5</span></div><div class="line">tea_chord_newdata_final$lat[tea_chord_newdata_final$order==<span class="number">3</span>|tea_chord_newdata_final$order==<span class="number">4</span>]&lt;--<span class="number">5</span></div><div class="line">tea_chord_newdata_final$long&lt;-as.numeric(tea_chord_newdata_final$long)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image7.jpg" alt=""></p>
<p>所以说上半部分的堆积柱形图（附加连接带）其实是用了两份不同的数据源模拟出来的。</p>
<h3 id="模块2的可视化代码："><a href="#模块2的可视化代码：" class="headerlink" title="模块2的可视化代码："></a>模块2的可视化代码：</h3><p>（也需临时存储）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot()+</div><div class="line">geom_rect(data=tea_bump,aes(xmin=start,xmax=end,ymin=<span class="number">5</span>,ymax=<span class="number">15</span>,fill=Consum),colour=<span class="string">"white"</span>)+</div><div class="line">geom_polygon(data=tea_chord_newdata_final,aes(x=long,y=lat,group=State),fill=<span class="string">"#B1C6B0"</span>,colour=<span class="literal">NA</span>,size=<span class="number">.25</span>,alpha=<span class="number">.8</span>)+</div><div class="line">labs(title=<span class="string">"全国茶叶年产量406.7（万吨）"</span>)+</div><div class="line">geom_text(data=tea_bump[tea_bump$State!=<span class="string">"其他"</span>,],aes(x=start+<span class="number">5.5</span>,y=<span class="number">13</span>,label=round(Yield,<span class="number">1</span>)),size=<span class="number">5.5</span>,family=<span class="string">"myfont"</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>)+</div><div class="line">geom_text(data=tea_bump[tea_bump$State!=<span class="string">"其他"</span>,],aes(x=start+<span class="number">6</span>,y=<span class="number">7</span>,label=percent(Ratio,d=<span class="number">1</span>,sep=<span class="string">""</span>)),size=<span class="number">5.5</span>,family=<span class="string">"myfont"</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>)+</div><div class="line">scale_fill_gradient(low=<span class="string">"#A1C997"</span>,high=<span class="string">"#47734A"</span>,na.value=<span class="string">"#E5E5E5"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">theme_map() %+replace% </div><div class="line">theme(</div><div class="line">      plot.title=element_text(size=<span class="number">35</span>,family=<span class="string">"myfzhzh"</span>,hjust=<span class="number">.5</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image8.jpg" alt=""></p>
<h3 id="图形合并最终效果："><a href="#图形合并最终效果：" class="headerlink" title="图形合并最终效果："></a>图形合并最终效果：</h3><p>有了上下两部分的对象，剩下的就好办了，无非就是拼接起来嘛，但是拼接的过程相当考验人的耐性和毅力，不适合浮躁型的人来做。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"E:/bump_bar.png"</span>,width=<span class="number">1550</span>,height=<span class="number">1200</span>)</div><div class="line">showtext.begin()</div><div class="line">vie&lt;-viewport(width=<span class="number">1</span>,height=<span class="number">0.215</span>,x=<span class="number">0.5</span>,y=<span class="number">0.8</span>)</div><div class="line">p1;print(p2,vp=vie)</div><div class="line">grid.text(label=<span class="string">"全球茶叶消费排行榜\n喝茶最多的不是中国人"</span>,x=<span class="number">.80</span>,y=<span class="number">.20</span>,gp=gpar(col=<span class="string">"black"</span>,fontsize=<span class="number">45</span>,fontfamily=<span class="string">"myfzhzh"</span>,draw=<span class="literal">TRUE</span>,just=<span class="string">"right"</span>))</div><div class="line">grid.text(label=<span class="string">"数据来源：Euromonitor、国际茶叶委员会（ITC）"</span>,x=<span class="number">.80</span>,y=<span class="number">.13</span>,gp=gpar(col=<span class="string">"black"</span>,fontsize=<span class="number">20</span>,fontfamily=<span class="string">"myfzhzh"</span>,draw=<span class="literal">TRUE</span>,just=<span class="string">"right"</span>))</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image9.png" alt=""></p>
<p>为了与原图对比，我使用PS修饰了一些细节：<br><img src="http://ory93arir.bkt.clouddn.com/tea_bump/image10.png" alt=""></p>
<p>做完回头想想，做这个图我也是真够无聊的，大概要耗费半天的时间去调试，不过调试的过程能学到的东西倒是很有趣，最近看了不起的匠人，感觉多少有些被感染到了，这算不算是强迫症~_~</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ory93arir.bkt.clouddn.com/tea_bump/%E5%B0%81%E9%9D%A2%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;很久没有作图了，主要是一时找不到应该练手的案例。&lt;/p&gt;
&lt;p&gt;然后昨天逛网易数独栏目的数据新闻，看到一幅还不错的案例，对于我来说值得一试，然后就手痒给照葫芦画瓢弄出来了。（主要是其中涉及到的细节处理很麻烦）&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="信息图" scheme="http://www.raindu.com/tags/%E4%BF%A1%E6%81%AF%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言数据处理——数据合并与追加</title>
    <link href="http://www.raindu.com/2017/06/28/R%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    <id>http://www.raindu.com/2017/06/28/R语言数据处理——数据合并与追加/</id>
    <published>2017-06-28T02:47:39.000Z</published>
    <updated>2017-07-03T13:58:45.910Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg" alt=""></p>
<p>数据结构的塑造是数据可视化前重要的一环，虽说本公众号重心在于数据可视化，可是涉及到一些至关重要的数据整合技巧，还是有必要跟大家分享一下的。</p>
<a id="more"></a>
<p>在可视化前的数据处理技巧中，导入导出、长宽转换已经跟大家详细的介绍过了。</p>
<p>今天跟大大家分享数据集的合并与追加，并且这里根据所依赖函数的处理效率，给出诺干套解决方案。</p>
<h3 id="本文主要内容："><a href="#本文主要内容：" class="headerlink" title="本文主要内容："></a>本文主要内容：</h3><p><strong>数据合并操作涉及以下几个问题：</strong></p>
<ul>
<li><p>横向合并；</p>
<ul>
<li><p>是否需要匹配字段</p>
<ul>
<li><p>匹配字段合并  </p>
<ul>
<li><p>主字段同名</p>
</li>
<li><p>主字段不同名</p>
</li>
</ul>
</li>
<li><p>无需匹配字段合并</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>纵向合并：（情况比较简单，列字段数量相同，名称相同）</p>
</li>
</ul>
<p>因为纵向合并情况比较简单，所以本篇讲解也着重以横向合并为主，按照以上几个问题，需要用到的函数列举如下：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cbind rbind merge plyr::join tidyr:: inner_join/full_join/left_join/right_join</div></pre></td></tr></table></figure>
<h3 id="首先介绍base内置的两三个函数："><a href="#首先介绍base内置的两三个函数：" class="headerlink" title="首先介绍base内置的两三个函数："></a>首先介绍base内置的两三个函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cbind rbind merge</div></pre></td></tr></table></figure>
<h4 id="横向追加（无需匹配字段）"><a href="#横向追加（无需匹配字段）" class="headerlink" title="横向追加（无需匹配字段）"></a>横向追加（无需匹配字段）</h4><p>数据集构造如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ID&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">Name&lt;-c(<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>)</div><div class="line">Score&lt;-c(<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>)</div><div class="line">Sex&lt;-c(<span class="string">"M"</span>,<span class="string">"F"</span>,<span class="string">"M"</span>,<span class="string">"M"</span>)</div><div class="line">One&lt;-data.frame(ID,Name)</div><div class="line">Two&lt;-data.frame(Score,Sex)</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image1.png" alt=""></p>
<p>合并:<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Total&lt;-cbind(One,Two)</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image2.png" alt=""></p>
<p>可以看到cbind函数横向合并无需匹配主字段，仅仅是将两个数据集横向拼接在一起。</p>
<h4 id="纵向合并"><a href="#纵向合并" class="headerlink" title="纵向合并:"></a>纵向合并:</h4><p>构造数据集：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ID&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">Name&lt;-c(<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>)</div><div class="line">Student1&lt;-data.frame(ID,Name)</div><div class="line">ID&lt;-c(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>)</div><div class="line">Name&lt;-c(<span class="string">"E"</span>,<span class="string">"F"</span>,<span class="string">"G"</span>,<span class="string">"H"</span>)</div><div class="line">Student2&lt;-data.frame(ID,Name)</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image3.png" alt=""></p>
<p>合并：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Total_student3&lt;-rbind(Student1,Student2)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image4.png" alt=""></p>
<p>以上通过rbind函数对Student1,Student2两个数据集进行纵向合并（也称追加）。</p>
<h3 id="merge函数："><a href="#merge函数：" class="headerlink" title="merge函数："></a>merge函数：</h3><p>merge函数主要针对横向（列字段）合并，而且可以针对主字段（主键）进行匹配，如果主字段名称不同，还可以指定前后相匹配的主字段。</p>
<p>基本语法如下：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">merge(x, y, by = , by.x = , by.y = , all = , all.x = , all.y = , sort = , suffixes = , incomparables = , <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<p>具体参数解释如下：</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image5.png" alt=""></p>
<p>接下来按照名相同与不同分两种情况介绍；</p>
<p>列名相同：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ID&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">name&lt;-c(<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>)</div><div class="line">score&lt;-c(<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>)</div><div class="line">student1&lt;-data.frame(ID,name)</div><div class="line">student2&lt;-data.frame(ID,score)</div><div class="line">total_student1&lt;-merge(student1,student2,by=<span class="string">"ID"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image6.png" alt=""></p>
<p>以上两个数据集有相同的列名（ID）时，by参数可以省略（by=”ID”）</p>
<p>以上两个数据集中，authors和books中有相同属性的主字段（surname&amp;name）但是主字段名称不同，这里需要给merge函数指定匹配的主字段。</p>
<p><strong>横向合并的四种类型：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#inner（内部链接）只合并交集</span></div><div class="line">m1 &lt;- merge(authors, books, by.x = <span class="string">"surname"</span>, by.y = <span class="string">"name"</span>)</div><div class="line"><span class="comment">#left join（左连接）</span></div><div class="line">m2 &lt;- merge(authors, books, by.x = <span class="string">"surname"</span>, by.y = <span class="string">"name"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line"><span class="comment">#right join（右连接）</span></div><div class="line">m3 &lt;- merge(authors, books, by.x = <span class="string">"surname"</span>, by.y = <span class="string">"name"</span>,all.y=<span class="literal">TRUE</span>)</div><div class="line"><span class="comment">#all_join（外连接）</span></div><div class="line">m4 &lt;- merge(authors, books, by.x = <span class="string">"surname"</span>, by.y = <span class="string">"name"</span>,all=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image7.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image8.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image9.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image10.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image11.png" alt=""></p>
<h3 id="plyr-join函数"><a href="#plyr-join函数" class="headerlink" title="plyr::join函数"></a>plyr::join函数</h3><p>join函数源于plyr包（该包作者就是大名鼎鼎的Hadley Wickham，就是ggplot2的开发者，当然它开发的包还有很多），使用前需要加载：</p>
<p>以下是该函数语法：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">join(x, y, by = <span class="literal">NULL</span>, type = <span class="string">"left"</span>, match = <span class="string">"all"</span>)</div></pre></td></tr></table></figure></p>
<p>当两个数据集主字段有相同名称时，by参数可以省略（by=”name”）,当名称不同时，需指定左右两个数据集匹配的主字段名称。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">join(x,y,by=intersect(<span class="string">"Name"</span>,<span class="string">"name"</span>),type = <span class="string">"left"</span>)</div></pre></td></tr></table></figure></p>
<p>以下我只演示相同主字段名称下的四种类型合并语句：</p>
<p>构造待合并数据集:<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x&lt;-data.frame(name=c(<span class="string">"John"</span>,<span class="string">"Paul"</span>,<span class="string">"George"</span>,<span class="string">"Ringo"</span>,<span class="string">"Stuart"</span>,<span class="string">"Pete"</span>),instrument=c(<span class="string">"guitar"</span>,<span class="string">"bass"</span>,<span class="string">"guitar"</span>,<span class="string">"drums"</span>,<span class="string">"bass"</span>,<span class="string">"drums"</span>))</div><div class="line">y&lt;-data.frame(name=c(<span class="string">"John"</span>,<span class="string">"Paul"</span>,<span class="string">"George"</span>,<span class="string">"Ringo"</span>,<span class="string">"Brian"</span>),band=c(<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"FALSE"</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image12.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#left_join</span></div><div class="line">data1&lt;-join(x,y,by=<span class="string">"name"</span>,type = <span class="string">"left"</span>)</div><div class="line"><span class="comment">#right_join</span></div><div class="line">data2&lt;-join(x,y,by=<span class="string">"name"</span>,type = <span class="string">"right"</span>)</div><div class="line"><span class="comment">#inner_join</span></div><div class="line">data3&lt;-join(x,y,by=<span class="string">"name"</span>,type = <span class="string">"inner"</span>)</div><div class="line"><span class="comment">#full_join</span></div><div class="line">data4&lt;-join(x,y,by=<span class="string">"name"</span>,type = <span class="string">"full"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image13.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image14.png" alt=""></p>
<p>合并函数与merge函数基本相同。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dplyr::inner_join/full_join/left_join/right_join</div></pre></td></tr></table></figure>
<p>（告诉你一个不幸的消息，该包作者还是Hadley Wickham，没办法，一个赢者通吃的时代，谁让人家有才任性呢哈哈~_~）</p>
<p>dplyr的数据合并语句要比plyr还要精练：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x&lt;-data.frame(Name=c(<span class="string">"John"</span>,<span class="string">"Paul"</span>,<span class="string">"George"</span>,<span class="string">"Ringo"</span>,<span class="string">"Stuart"</span>,<span class="string">"Pete"</span>),instrument=c(<span class="string">"guitar"</span>,<span class="string">"bass"</span>,<span class="string">"guitar"</span>,<span class="string">"drums"</span>,<span class="string">"bass"</span>,<span class="string">"drums"</span>))</div><div class="line">y&lt;-data.frame(name=c(<span class="string">"John"</span>,<span class="string">"Paul"</span>,<span class="string">"George"</span>,<span class="string">"Ringo"</span>,<span class="string">"Brian"</span>),band=c(<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"TRUE"</span>,<span class="string">"FALSE"</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image15.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#(1)inner_join(x, y) ：只包含同时出现在x,y表中的行</span></div><div class="line">data1&lt;-inner_join(x,y,by=c(<span class="string">"Name"</span>=<span class="string">"name"</span>))</div><div class="line"><span class="comment">#(2)left_join(x, y) ：包含所有x中以及y中匹配的行</span></div><div class="line">data2&lt;-left_join(x,y,by=c(<span class="string">"Name"</span>=<span class="string">"name"</span>))</div><div class="line"><span class="comment">#(3)right_join(x, y,by=c("Name"="name")) ：包含所有y中以及x中匹配的行</span></div><div class="line">data3&lt;-right_join(x,y,by=c(<span class="string">"Name"</span>=<span class="string">"name"</span>))</div><div class="line"><span class="comment">#(4)full_join(x,y,by=c("Name"="name")) ：包含所以x、y中的行</span></div><div class="line">data4&lt;-full_join(x,y,by=c(<span class="string">"Name"</span>=<span class="string">"name"</span>))</div><div class="line"><span class="comment">#(5)semi_join(x, y) ：包含x中，在y中有匹配的行，结果为x的子集</span></div><div class="line">data5&lt;-semi_join(x,y,by=c(<span class="string">"Name"</span>=<span class="string">"name"</span>))</div><div class="line"><span class="comment">#(6)anti_join(x, y) ：包含x中，不匹配y的行，结果为x的子集，与semi_join相反</span></div><div class="line">data6&lt;-anti_join(x,y)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image16.png" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image17.png" alt=""></p>
<p>以上连接类型中，前四个（内连接、外连接、左连接、右连接）最为常用，大家可以将dplyr和plyr以及merge函数三种连接方式进行对比记忆。</p>
<p>下面聊一列为啥要专门讲一节数据连接方式：</p>
<p>因为……</p>
<p>在excel中……</p>
<p>这种数据连接真的……真的……真的……太费劲了</p>
<p>我所知道的连接方式——</p>
<ul>
<li>第一：手动复制黏贴；（大家不要随便作死）</li>
<li>第二：最古老的Microsoft Query（藏在excel数据导入菜单的最底层，据说微软也不更新了，如果的excel是精简版的，可能都没法调用，菜单特丑）</li>
<li>第三：数据透视表；Alt+D+P（为啥微软要把调用数据透视表多表合并的菜单隐藏起来只能用快捷键，太烦人了）</li>
<li>第四：微软的最新商务智能应用——PowerBI(其中的PowerQuery、PowerPivot)</li>
<li>第五：第三方的效率插件（很多VBA大神写过这些办公插件，但是我就不爱用，多装一个，Excel启动拖后两秒钟，时间就是金钱啊你说是不）</li>
</ul>
<p>以上四种方式（第一种除外），虽说都可以完成数据合并操作，但是效率上不敢恭维，每次都得走一遍菜单流程。如果有点R语言基础的同学，强烈建议将这些操作放在R中操作，数据导入导出、长宽转换、横纵合并，只需修改一下代码路径、参数分分钟搞定。</p>
<p>当然对于有数据库基础的同学(相信大部分同学都有吧，应该是大学本科的必修课)来讲，写几个SQL也可以瞬间完成。</p>
<p>虽然已经N多年没有用过了，但是还是想在这里献丑一下：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">内连接 inner join</div><div class="line">语法：<span class="keyword">select</span> * <span class="keyword">from</span> x <span class="keyword">inner</span> <span class="keyword">join</span> y <span class="keyword">on</span> x.Name =y.name</div><div class="line"></div><div class="line">左连接 <span class="keyword">left</span> <span class="keyword">join</span>（左表中所有数据，右表中对应数据）</div><div class="line">语法：<span class="keyword">select</span> * <span class="keyword">from</span> x <span class="keyword">left</span> <span class="keyword">join</span> y <span class="keyword">on</span> x.Name = y.name</div><div class="line"></div><div class="line">右连接 <span class="keyword">right</span> <span class="keyword">join</span>（右表中所有数据，左表中对应数据）</div><div class="line">语法：<span class="keyword">select</span> * <span class="keyword">from</span> x <span class="keyword">right</span> <span class="keyword">join</span> y <span class="keyword">on</span> x.Name = y.name</div><div class="line"></div><div class="line">全连接 <span class="keyword">full</span> <span class="keyword">join</span></div><div class="line">语法：<span class="keyword">select</span> * <span class="keyword">from</span> x <span class="keyword">full</span> <span class="keyword">join</span> y <span class="keyword">on</span> x.Name = y.name</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/R/merge/image18.png" alt=""></p>
<p>我是一个比较懒、嫌麻烦但注重效率的人，很多关于数据处理上的需求，如果能用简单的方式解决（比如VBA、R或者效率函数）,我都不会去选择安装插件或者外部软件，一方面太浪费时间，操作麻烦；另一方面，使用插件大多需要用菜单点选，以后遇到同样的需要还得从新走一遍流程，所以我更倾向用简单的可重复利用的代码来解决。</p>
<p>简单、省事儿、快捷、可重复……</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orrrzlir6.bkt.clouddn.com/R/merge/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;数据结构的塑造是数据可视化前重要的一环，虽说本公众号重心在于数据可视化，可是涉及到一些至关重要的数据整合技巧，还是有必要跟大家分享一下的。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据清洗" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/"/>
    
      <category term="数据合并与追加" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>左手用R右手Python系列——数据合并与追加</title>
    <link href="http://www.raindu.com/2017/06/27/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    <id>http://www.raindu.com/2017/06/27/左手用R右手Python系列——数据合并与追加/</id>
    <published>2017-06-27T03:44:02.000Z</published>
    <updated>2017-07-03T13:58:46.276Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/face.jpg" alt=""></p>
<p>今天这篇跟大家介绍R语言与Python数据处理中的第二个小知识点——数据合并与追加。</p>
<a id="more"></a>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>针对数据合并与追加，R与Python中都有对应的函数可以快速完成需求，根据合并与追加的使用场景，这里我将本文内容分成三部分：</p>
<ul>
<li>数据合并（简单合并，无需匹配）</li>
<li>数据合并（匹配合并）</li>
<li>数据追加</li>
</ul>
<h3 id="数据合并（简单合并，无需匹配）"><a href="#数据合并（简单合并，无需匹配）" class="headerlink" title="数据合并（简单合并，无需匹配）"></a>数据合并（简单合并，无需匹配）</h3><p>针对简单合并而言，在R语言中主要通过以下两个函数来实现：</p>
<ul>
<li>cbind()</li>
<li>dplyr::bind_cols()<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 &lt;- data.frame(A=c(<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>),</div><div class="line">                     B= c(<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>),</div><div class="line">                     C= c(<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>),</div><div class="line">                     D=c(<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>)</div><div class="line">                    )</div><div class="line">df2 &lt;- data.frame(E=c(<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>),</div><div class="line">                    <span class="literal">F</span>= c(<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>),</div><div class="line">                    G=c(<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>),</div><div class="line">                     H= c(<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>))</div><div class="line">df3 &lt;-data.frame(I=c(<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>),</div><div class="line">                     J= c(<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>),</div><div class="line">                    K=c(<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>),</div><div class="line">                    L=c(<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>)</div><div class="line">                   )</div><div class="line">df1;df2;df3</div><div class="line">mydata1&lt;-cbind(df1,df2,df3);mydata1</div><div class="line">mydata2&lt;-dplyr::bind_cols(df1,df2,df3);mydata1</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image1.jpg" alt=""></p>
<p>在Python中，简单的合并可以通过Pandas中的concat函数来实现的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'E'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'F'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'G'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'H'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'I'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'J'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'K'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'L'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">result1 = pd.concat([df1,df2,df3],axis=<span class="number">1</span>,join_axes=[df1.index])</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image2.jpg" alt=""></p>
<h3 id="横向合并：（需匹配）"><a href="#横向合并：（需匹配）" class="headerlink" title="横向合并：（需匹配）"></a>横向合并：（需匹配）</h3><p>在R语言中，这种操作有很多可选方案，如基础函数merge、plyr包中的join函数以及dplyr包中的left/right/inter/full_join等函数。</p>
<ul>
<li>merge</li>
<li>plyr::join</li>
<li>dplyr::left/right/inter/full_join</li>
</ul>
<p>这里为了节省时间，只介绍第一种基础函数，欲了解详情，可以查看这篇历史文章：</p>
<p><a href="https://zhuanlan.zhihu.com/p/27577410" target="_blank" rel="external">R语言数据处理——数据合并与追加</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">merge(x, y,  <span class="comment">#带合并的数据集名称（左右顺序）</span></div><div class="line">  by = intersect(names(x), names(y)), <span class="comment">#合并依据字段（名称相同）</span></div><div class="line">  by.x = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  by.y = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  all = <span class="literal">FALSE</span>,<span class="comment">#合并类型，TRUE为全连接 （full），FALSE为内连接 （inter）</span></div><div class="line">  all.x = all,<span class="comment">#左连接</span></div><div class="line">  all.y = all,<span class="comment">#右连接</span></div><div class="line">  )</div><div class="line">``` </div><div class="line"></div><div class="line">```r </div><div class="line">df3&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>),</div><div class="line">gender=c(<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>),</div><div class="line">pay=c(<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>),</div><div class="line">m_point=c(<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>))</div><div class="line">df4&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>),</div><div class="line">city=c(<span class="string">'Beijing '</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>, <span class="string">'Shenzhen'</span>, <span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>),</div><div class="line">age=c(<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>),</div><div class="line">category=c(<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>),</div><div class="line">price=c(<span class="number">1200</span>,<span class="number">2900</span>,<span class="number">2133</span>,<span class="number">5433</span>,<span class="number">1346</span>,<span class="number">4432</span>))</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">FALSE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.x=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.y=<span class="literal">TRUE</span>);print(mydata3)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image4.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image5.jpg" alt=""></p>
<p>在Python中，这一操作也可以通过函数Pandas库中的cancat函数或者merge函数来完成。</p>
<p><strong>Pandas-merge</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">df3=pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>],</div><div class="line"><span class="string">"gender"</span>:[<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,</div><div class="line"><span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>],</div><div class="line"><span class="string">"pay"</span>:[<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>],</div><div class="line"><span class="string">"m-point"</span>:[<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>]&#125;)</div><div class="line">df4= pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>],</div><div class="line"><span class="string">"date"</span>:pd.date_range(<span class="string">'20130102'</span>,periods=<span class="number">6</span>),</div><div class="line"><span class="string">"city"</span>:[<span class="string">'Beijing'</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>,<span class="string">'Shenzhen'</span>,<span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>],</div><div class="line"><span class="string">"age"</span>:[<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>],</div><div class="line"><span class="string">"category"</span>:[<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>],</div><div class="line"><span class="string">"price"</span>:[<span class="number">1200</span>,np.nan,<span class="number">2133</span>,<span class="number">5433</span>,np.nan,<span class="number">4432</span>]&#125;,</div><div class="line">columns =[<span class="string">'id'</span>,<span class="string">'date'</span>,<span class="string">'city'</span>,<span class="string">'category'</span>,<span class="string">'age'</span>,<span class="string">'price'</span>])</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image6.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df_inner=pd.merge(df3,df4,how=<span class="string">'inner'</span>);print(df_inner) <span class="comment">#数据表合并（内连接：inter join）</span></div><div class="line">df_left=pd.merge(df3,df4, how=<span class="string">'left'</span>) ;print(df_left)  <span class="comment">#数据表合并（左连接：left join）</span></div><div class="line">df_right=pd.merge(df3,df4,how=<span class="string">'right'</span>);print(df_right) <span class="comment">#数据表合并（右连接:right join）</span></div><div class="line">df_outer=pd.merge(df3,df4,how=<span class="string">'outer'</span>);print(df_outer) <span class="comment">#数据表合并（全连接:full join）</span></div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image7.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image8.jpg" alt=""></p>
<h3 id="数据追加："><a href="#数据追加：" class="headerlink" title="数据追加："></a>数据追加：</h3><p>数据追加通常只需保证数据及的宽度一致且列字段名称一致，相对来说比较简单。在R语言和Python中，也很好实现。</p>
<p>在R语言中，可视化朱数据追加的函数有：</p>
<ul>
<li>rbind()</li>
<li>dplyr::bind_rows()</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-rbind(df1,df2,df3);mydata3</div><div class="line">mydata4&lt;-dplyr::bind_rows(df1,df2,df3);mydata4</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image11.jpg" alt=""></p>
<p>python中则可以很容易的通过数据框本身的append函数来实现简单的数据追加：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'B'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'D'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">8</span>, <span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</div><div class="line">result = df1.append(df2);print(result)</div><div class="line">result = result.append(df3);print(result)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image9.jpg" alt=""></p>
<p>如果是使用canat函数也可以非常轻松的完成数据追加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = pd.concat([df1, df2, df3]);print(result)</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image10.jpg" alt=""></p>
<p>本文汇总：</p>
<table>
<thead>
<tr>
<th>工具</th>
<th>数据合并<br>（简单合并）</th>
<th>数据合并<br>（匹配和并）</th>
<th>数据追加：</th>
</tr>
</thead>
<tbody>
<tr>
<td>R：</td>
<td>cbind<br>dplyr::bind_cols</td>
<td>merge<br>plyr::join<br>dplyr::left/right/inter/full_join</td>
<td>rbindd<br>plyr::bind_rows</td>
</tr>
<tr>
<td>Python:</td>
<td>Pandas-cancat</td>
<td>merge<br>cancat</td>
<td>append<br>cancat</td>
</tr>
</tbody>
</table>
<p>以上仅是个人常用的几种，方法肯定不至于此，欢迎大家补充！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orp205tiu.bkt.clouddn.com/R_Python/merge/face.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天这篇跟大家介绍R语言与Python数据处理中的第二个小知识点——数据合并与追加。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据合并与追加" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>用R语言复盘美国总统大选结果~</title>
    <link href="http://www.raindu.com/2017/06/25/%E7%94%A8R%E8%AF%AD%E8%A8%80%E5%A4%8D%E7%9B%98%E7%BE%8E%E5%9B%BD%E6%80%BB%E7%BB%9F%E5%A4%A7%E9%80%89%E7%BB%93%E6%9E%9C/"/>
    <id>http://www.raindu.com/2017/06/25/用R语言复盘美国总统大选结果/</id>
    <published>2017-06-25T01:13:19.000Z</published>
    <updated>2017-07-03T13:58:46.369Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/President/President17.jpg" alt=""></p>
<p>这两天各种社交媒体都被美国大选的消息刷屏，各种段子满天飞，把平时不怎么关注政治的小编都吸引了。</p>
<a id="more"></a>
<p>美国大选的投票数据，给小编的写作提供了非常宝贵的案例数据，毕竟四年才一次哦，这次一定不能放过。</p>
<p>接下来我们用R语言来复盘一下，昨日投票结果吧。</p>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>本文将从以下几个方面全方位展示大选的形势：</p>
<ul>
<li>克林顿与希拉里的选举人票结果及其占比；</li>
<li>二者的获胜州分布情况、各自在各州的支持率；</li>
<li>不同群体及阶层的支持率。</li>
</ul>
<p>以上可视化图形均为R语言制作，在讲解过程中会共享代码;</p>
<h3 id="加载扩展包："><a href="#加载扩展包：" class="headerlink" title="加载扩展包："></a>加载扩展包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"RColorBrewer"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maps"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"mapdata"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div></pre></td></tr></table></figure>
<h3 id="克林顿与希拉里的选举人票"><a href="#克林顿与希拉里的选举人票" class="headerlink" title="克林顿与希拉里的选举人票:"></a>克林顿与希拉里的选举人票:</h3><p><strong>二者的选举人票结果</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">290</span>,<span class="number">232</span>))</div><div class="line">ggplot(data,aes(x,y,fill=x))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">      geom_text(aes(label=y,vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>))+</div><div class="line">      ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President1.png" alt=""></p>
<p><strong>两者普选支持人数对比*</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">59698506</span>,<span class="number">59926386</span>))</div><div class="line">p %+% data1 <span class="comment">#给上图代码赋值为p,使用通道函数%+%简化代码</span></div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President2.png" alt=""></p>
<p><strong>两者选举人票得票比例</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">data3&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">43</span>,<span class="number">54</span>))</div><div class="line">mydata &lt;- transform(data3, mid_y = ave(data3$y,data3$x, FUN = <span class="keyword">function</span>(val) cumsum(val) - (<span class="number">0.5</span> * val)))</div><div class="line">ggplot(mydata,aes(x=<span class="number">1</span>,y=y,fill=x))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,col=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta=<span class="string">"y"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) +</div><div class="line">geom_text(aes(label=paste(y,<span class="string">"%"</span>,sep=<span class="string">""</span>)),vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>,size=<span class="number">10</span>,color=<span class="string">"white"</span>)+</div><div class="line">ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President3.png" alt=""></p>
<h3 id="二者的获胜州分布情况、各州的支持率；"><a href="#二者的获胜州分布情况、各州的支持率；" class="headerlink" title="二者的获胜州分布情况、各州的支持率；"></a>二者的获胜州分布情况、各州的支持率；</h3><p><strong>数据准备：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">AD1 &lt;- American_map@data</div><div class="line">AD2 &lt;- data.frame(id=rownames(AD1),AD1)</div><div class="line">American_map1 &lt;- fortify(American_map)</div><div class="line">American_map_data &lt;- join(American_map1,AD2, type = <span class="string">"full"</span>)</div><div class="line">American_map_data&lt;-American_map_data[,<span class="number">1</span>:<span class="number">12</span>]</div></pre></td></tr></table></figure></p>
<p><strong>提取各州数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(STATE_NAME=unique(American_map_data$STATE_NAME),STATE_ABBR=unique(American_map_data$STATE_ABBR))</div><div class="line">write.table (mydata, file =<span class="string">"D:\\R\\File\\President.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div><div class="line">newdata&lt;-read.csv(<span class="string">"D:\\R\\File\\President.csv"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>分离大陆与夏威夷、阿拉斯加：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data1&lt;-subset(American_map_data,STATE_NAME!=<span class="string">'Alaska'</span>&amp; STATE_NAME!=<span class="string">'Hawaii'</span>)    </div><div class="line">data2&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Hawaii"</span>)    </div><div class="line">data3&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Alaska"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>更改阿拉斯加与夏威夷坐标并合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data2$long&lt;-data2$long+<span class="number">65</span></div><div class="line">data3$long&lt;-data3$long+<span class="number">40</span></div><div class="line">data3$lat&lt;-data3$lat-<span class="number">42</span></div><div class="line">data4&lt;-rbind(data1,data2,data3)</div></pre></td></tr></table></figure></p>
<p><strong>合并地理信息数据与选举数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">American_data &lt;- join(data4, newdata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>提取各州中心经纬度指标：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(AD1)&#123;mean(range(AD1,na.rm=<span class="literal">TRUE</span>))&#125; </div><div class="line">centres &lt;- ddply(American_data,.(STATE_ABBR),colwise(midpos,.(long,lat)))</div><div class="line">mynewdata&lt;-join(centres,newdata,type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<h4 id="美国总统大选的各州选举人票数分布："><a href="#美国总统大选的各州选举人票数分布：" class="headerlink" title="美国总统大选的各州选举人票数分布："></a>美国总统大选的各州选举人票数分布：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">      geom_polygon(data=American_data,aes(x=long,y=lat,group=group),colour=<span class="string">"grey"</span>,fill=<span class="string">"white"</span>)+</div><div class="line">      geom_point(data=mynewdata,aes(x=long,y=lat,size=Count,fill=Count),shape=<span class="number">21</span>,colour=<span class="string">"black"</span>)+</div><div class="line">      scale_size_area(max_size=<span class="number">10</span>)+ </div><div class="line">      scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"#D73434"</span>)+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"none"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President4.png" alt=""></p>
<h4 id="美国总统大选投票结果双方获胜州分布情况："><a href="#美国总统大选投票结果双方获胜州分布情况：" class="headerlink" title="美国总统大选投票结果双方获胜州分布情况："></a>美国总统大选投票结果双方获胜州分布情况：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(American_data,aes(x=long,y=lat,group=group,fill=Results))+</div><div class="line">      geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#19609F"</span>,<span class="string">"#CB1C2A"</span>),labels=c(<span class="string">"Hillary"</span>, <span class="string">"Trump"</span>))+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+ </div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"top"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President5.png" alt=""></p>
<h4 id="希拉里各州选票支持率统计；"><a href="#希拉里各州选票支持率统计；" class="headerlink" title="希拉里各州选票支持率统计；"></a>希拉里各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(na.omit(American_data$Clinton), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Clinton_q&lt;-cut(American_data$Clinton,qa,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Clinton_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President6.png" alt=""></p>
<h4 id="川普各州选票支持率统计；"><a href="#川普各州选票支持率统计；" class="headerlink" title="川普各州选票支持率统计；"></a>川普各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qb &lt;- quantile(na.omit(American_data$Trump), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Trump_q&lt;-cut(American_data$Trump,qb,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Trump_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Reds"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President7.png" alt=""></p>
<h3 id="多维度统计二者支持率"><a href="#多维度统计二者支持率" class="headerlink" title="多维度统计二者支持率;"></a>多维度统计二者支持率;</h3><h4 id="性别分布"><a href="#性别分布" class="headerlink" title="性别分布"></a>性别分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gender&lt;-data.frame(gender=c(<span class="string">"male"</span>,<span class="string">"female"</span>),clinton=c(<span class="number">41</span>,<span class="number">54</span>),trump=c(<span class="number">53</span>,<span class="number">42</span>))</div><div class="line">genderA&lt;-melt(gender,id.vars=<span class="string">"gender"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(genderA,aes(gender,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President8.png" alt=""></p>
<p>从性别上来看，男性支持川普的多一点，女性支持希拉里的多一点，这应该算是性别效应吧~</p>
<h4 id="年龄分布统计；"><a href="#年龄分布统计；" class="headerlink" title="年龄分布统计；"></a>年龄分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">age&lt;-data.frame(age=c(<span class="string">"18~29"</span>,<span class="string">"30~44"</span>,<span class="string">"45~64"</span>,<span class="string">"64~"</span>),clinton=c(<span class="number">55</span>,<span class="number">50</span>,<span class="number">44</span>,<span class="number">45</span>),trump=c(<span class="number">37</span>,<span class="number">42</span>,<span class="number">53</span>,<span class="number">53</span>))</div><div class="line">ageA&lt;-melt(age,id.vars=<span class="string">"age"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(ageA,aes(age,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President10.png" alt=""></p>
<p>这个年龄段分布的也是相当有规律啊，川普大叔很得中老年选民的亲来，而希拉里阿姨则俘获了青少年的心。</p>
<h4 id="种族分布统计；"><a href="#种族分布统计；" class="headerlink" title="种族分布统计；"></a>种族分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">race&lt;-data.frame(race=c(<span class="string">"white"</span>,<span class="string">"black"</span>,<span class="string">"latino"</span>,<span class="string">"asian"</span>,<span class="string">"other"</span>),clinton=c(<span class="number">37</span>,<span class="number">88</span>,<span class="number">65</span>,<span class="number">65</span>,<span class="number">56</span>),trump=c(<span class="number">58</span>,<span class="number">8</span>,<span class="number">29</span>,<span class="number">29</span>,<span class="number">37</span>))</div><div class="line">raceA&lt;-melt(race,id.vars=<span class="string">"race"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(raceA,aes(race,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President11.png" alt=""></p>
<p>从种族上来看，希拉里在black、latino、asian以及其他种族中占据绝对优势，川普则把控着white的选票。</p>
<h4 id="选民受教育水平分布统计；"><a href="#选民受教育水平分布统计；" class="headerlink" title="选民受教育水平分布统计；"></a>选民受教育水平分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">educ&lt;-data.frame(educ=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>),clinton=c(<span class="number">45</span>,<span class="number">43</span>,<span class="number">49</span>,<span class="number">58</span>),trump=c(<span class="number">51</span>,<span class="number">52</span>,<span class="number">45</span>,<span class="number">37</span>))</div><div class="line">educA&lt;-melt(educ,id.vars=<span class="string">"educ"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(educA,aes(educ,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President112.png" alt=""></p>
<p>从受教育水平看，希拉里阿姨的选民受教育水平相对较高（单也非绝对，因为这里是CNN做的抽样调查，样本只有24537个，范围较小，并不代表实际情况）。</p>
<h4 id="选民收入分布统计；"><a href="#选民收入分布统计；" class="headerlink" title="选民收入分布统计；"></a>选民收入分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Inco&lt;-data.frame(inco=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>),clinton=c(<span class="number">49</span>,<span class="number">47</span>),trump=c(<span class="number">45</span>,<span class="number">48</span>))</div><div class="line">IncoA&lt;-melt(Inco,id.vars=<span class="string">"inco"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(inco,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+    geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President13.png" alt=""></p>
<h4 id="选民政治倾向分布；"><a href="#选民政治倾向分布；" class="headerlink" title="选民政治倾向分布；"></a>选民政治倾向分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Ideo&lt;-data.frame(ideo=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>),clinton=c(<span class="number">84</span>,<span class="number">52</span>,<span class="number">15</span>),trump=c(<span class="number">10</span>,<span class="number">41</span>,<span class="number">81</span>))</div><div class="line">IncoA&lt;-melt(Ideo,id.vars=<span class="string">"ideo"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(ideo,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">            scale_x_discrete(limits=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President14.png" alt=""></p>
<p>上图还是比较能反映两党的政治主张的。</p>
<h4 id="选民的婚姻状况统计分布；"><a href="#选民的婚姻状况统计分布；" class="headerlink" title="选民的婚姻状况统计分布；"></a>选民的婚姻状况统计分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Marl&lt;-data.frame(marry=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>),clinton=c(<span class="number">37</span>,<span class="number">49</span>,<span class="number">46</span>,<span class="number">62</span>),trump=c(<span class="number">58</span>,<span class="number">47</span>,<span class="number">45</span>,<span class="number">33</span>))</div><div class="line">MarlA&lt;-melt(Marl,id.vars=<span class="string">"marry"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(MarlA,aes(marry,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President15.png" alt=""></p>
<p>川普在已婚男性选民群体中的支持率有明显优势，而希拉里在未婚女性选民群体中优势明显。</p>
<h4 id="宗教信仰分布统计；"><a href="#宗教信仰分布统计；" class="headerlink" title="宗教信仰分布统计；"></a>宗教信仰分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Rellglon&lt;-data.frame(rell=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>),clinton=c(<span class="number">37</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">43</span>,<span class="number">71</span>,<span class="number">58</span>,<span class="number">68</span>),trump=c(<span class="number">60</span>,<span class="number">52</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">24</span>,<span class="number">33</span>,<span class="number">26</span>))</div><div class="line">RellglonA&lt;-melt(Rellglon,id.vars=<span class="string">"rell"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(RellglonA,aes(rell,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>))+</div><div class="line">      ylim(-<span class="number">20</span>,<span class="number">100</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+     </div><div class="line">      coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) + </div><div class="line">      facet_grid(.~Name)+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President16.png" alt=""></p>
<p>本文数据来源于<a href="http://edition.cnn.com/election/results" target="_blank" rel="external">CNN官网：</a></p>
<p>因为数据多源于小范围问卷调查（选票数据除外），限于样本范围和地域局限性，结果可能有偏颇。</p>
<p>文中所需的地图数据及代码文本分享在魔方 学院QQ群中：</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orp205tiu.bkt.clouddn.com/President/President17.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这两天各种社交媒体都被美国大选的消息刷屏，各种段子满天飞，把平时不怎么关注政治的小编都吸引了。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——用ggplot构造期待已久的雷达图</title>
    <link href="http://www.raindu.com/2017/06/24/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8ggplot%E6%9E%84%E9%80%A0%E6%9C%9F%E5%BE%85%E5%B7%B2%E4%B9%85%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/24/R语言可视化——用ggplot构造期待已久的雷达图/</id>
    <published>2017-06-24T14:03:16.000Z</published>
    <updated>2017-07-03T13:58:45.858Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar9.jpg" alt=""></p>
<p>之前一直苦恼于ggplot函数无法制作雷达图，心想着既然饼图可以通过柱形图+极坐标模拟出来，为啥雷达图不行。</p>
<a id="more"></a>
<h3 id="制作雷达图的传统思路："><a href="#制作雷达图的传统思路：" class="headerlink" title="制作雷达图的传统思路："></a>制作雷达图的传统思路：</h3><p>我尝试着用折线图+极坐标来模拟雷达图（之前在制作饼图和圆环图以及玫瑰图的时候就是这样做的）。</p>
<p>结果就粗线了以下不伦不类的图形：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Company = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">4000</span>,<span class="number">3200</span>,<span class="number">2800</span>,<span class="number">3700</span>),Sale2016 = c(<span class="number">6000</span>,<span class="number">4800</span>,<span class="number">4500</span>,<span class="number">3500</span>,<span class="number">4300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Company"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,group=Year,color=Year))+geom_line()+coord_polar(theta = <span class="string">"x"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar1.png" alt=""></p>
<p>虽说效果已经很接近了，但是整体上还是无法达到雷达图的要求，首尾线条没有相连，点之间是通过弧线链接而非直线。</p>
<p>后来又是在浏览r语言论坛时，无意间看到一个围绕ggplot2包开发的插件——ggradar，果不其然，是专门用于辅助ggplot2制作雷达图而生的。</p>
<p>接下来我跟大家分享该插件的使用方法：</p>
<h3 id="数据构造"><a href="#数据构造" class="headerlink" title="数据构造:"></a>数据构造:</h3><p>因为是开发版的，托管在github网站上，所以不能通过普通途径下载，需要使用devtools工具：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install_github(<span class="string">"ricardo-bion/ggradar"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggradar"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>下面开始构造数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-matrix(runif(<span class="number">40</span>,<span class="number">0</span>,<span class="number">1</span>),<span class="number">5</span>,<span class="number">8</span>) <span class="comment">#以上构造了一个值区间为0~1,个数为40的5行8列随机数矩阵。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rownames(mydata) &lt;- LETTERS[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment">#以上使用前五个大写字母为矩阵行命名；</span></div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">colnames(mydata) &lt;- c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>,<span class="string">"Alibaba"</span>,<span class="string">"Baidu"</span>,<span class="string">"Twitter"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用以上文本向量为矩阵列命名；</span></div><div class="line">mynewdata&lt;-data.frame(mydata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar5.png" alt=""></p>
<p>将矩阵数据表格转化为数据框格式作图数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#为数据框增加一列文本字段：</span></div><div class="line">Name&lt;-c(<span class="string">"USA"</span>,<span class="string">"CHN"</span>,<span class="string">"UK"</span>,<span class="string">"RUS"</span>,<span class="string">"JP"</span>)</div><div class="line">mynewdata&lt;-data.frame(Name,mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar6.png" alt=""></p>
<h3 id="ggradar包："><a href="#ggradar包：" class="headerlink" title="ggradar包："></a>ggradar包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata[<span class="number">1</span>,])</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar8.png" alt=""></p>
<p>以上的图表是默认样式，ggradar函数对数据格式以及变量值范围高度敏感，而却不过多的依赖函数内的参数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar7.png" alt=""></p>
<p>可以看出，ggradar函数支持多序列雷达图，只是对它规定的数据结构很不能理解，为啥不是列代表分类，行代表轴变量呢，跟ggplot的语法还是有一些偏离，不过只要数据构造好之后，作图函数的语法是相当简练的。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之前一直苦恼于ggplot函数无法制作雷达图，心想着既然饼图可以通过柱形图+极坐标模拟出来，为啥雷达图不行。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="ggradar" scheme="http://www.raindu.com/tags/ggradar/"/>
    
  </entry>
  
  <entry>
    <title>左手用R右手Python系列——字符串格式化输出</title>
    <link href="http://www.raindu.com/2017/06/24/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/"/>
    <id>http://www.raindu.com/2017/06/24/左手用R右手Python系列——字符串格式化输出/</id>
    <published>2017-06-24T01:45:40.000Z</published>
    <updated>2017-07-03T13:58:46.264Z</updated>
    
    <content type="html"><![CDATA[<p>学习Python不到一个月，虽然学的很渣，但是还是想通过这种途径分享自己的学习心得，毕竟当初学习R语言也是这么走过来的。</p>
<p>今天是R语言与Python综合系列的第一篇，就聊一聊两者在常用字符串输出上的差异。</p>
<a id="more"></a>
<h3 id="R语言中的字符串格式化函数："><a href="#R语言中的字符串格式化函数：" class="headerlink" title="R语言中的字符串格式化函数："></a>R语言中的字符串格式化函数：</h3><p>为了方便统一案例图片的风格，今天统一在jupyter编辑器中编辑（R和Python）。</p>
<p>通常在R语言中我们使用最多的关于字符串输出函数是paste和paste0。</p>
<p>这两着之间的差别非常微小，如同其字面意思一样，前者可以自定义字符串间隔符号，后者则默认没有间隔符号。</p>
<p>paste和paste0都可以完成单个向量字符串的连接以及两个向量间的匹配。</p>
<p>生成10个随机大写字母作为案例：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myword&lt;-sample(LETTERS,<span class="number">10</span>,replace=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>我们可以打印出两个函数的详细参数表：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">paste</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, sep = <span class="string">" "</span>, collapse = <span class="literal">NULL</span>) <span class="comment">#sep参数默认间隔为空格</span></div><div class="line">.Internal(paste(list(<span class="keyword">...</span>), sep, collapse))</div><div class="line">paste0</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, collapse = <span class="literal">NULL</span>)           <span class="comment">#sep没有间隔参数（无间隔）</span></div><div class="line">.Internal(paste0(list(<span class="keyword">...</span>), collapse))</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>单个向量的连接成字符串：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p>在拼接单个向量之时，通过设置collapse参数来控制字符之间的间隔符，最终输出一个单值字符串。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste0(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>我们可以看到，在拼接单个向量为字符串的过程中，paste和paste0两个函数并无太大区别，因为不涉及匹配参数sep。</p>
<p>通常情况下，我们使用paste和paste0做向量间的匹配情况比较多，这种情况多见于遍历网页，遍历日期等。</p>
<p>比如假如我们们要遍历一个网页的网址如下：</p>
<p>随机打开了网易云课堂的一个课程栏目，看到一共有22页课程，此时最简单的遍历网页方法就是通过paste或者paste0。</p>
<p><a href="http://study.163.com/category/400000000146050#/" target="_blank" rel="external">网易云课堂</a></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div><div class="line">num&lt;-<span class="number">1</span>:<span class="number">22</span></div><div class="line">myurl&lt;-paste(url,num,sep=<span class="string">""</span>);myurl</div><div class="line">myurl&lt;-paste0(url,num);myurl</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image4.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>对比两个函数的用法，大家应该能领会其中的差别了吧，paste0把paste的sep参数简化了，直接强制设定为无间隔，此时做向量间匹配的话，paste0函数就可以不用设置sep参数，而paste则需设置，当然虽然在遍历网页时确实节省代码，但也不是任何场合都是如此。</p>
<p>比如我要拼接时间与日期，而且要求以“-”间隔，此时你还是需要使用传统的paste函数来完成这个任务，因为paste0已经不存在sep参数了。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydate&lt;-paste(<span class="number">2001</span>:<span class="number">2005</span>,<span class="string">"06"</span>,sep=<span class="string">"-"</span>);mydate</div></pre></td></tr></table></figure>
<p>还有一个stringr包中字符串拼接函数str_sub()也可以高效的完成上述工作，但是因为需要额外加载包，所以平时我用的频率不高。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">str_c(myword,collapse =<span class="string">""</span>)</div><div class="line">str_c(url,num,sep = <span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>在R语言中，字符串格式化输出除了以上常见操作之外，还有一些非常重要的需求，比如格式化输出百分比，格式化输出日期时间等。</p>
<p>以百分比为例：</p>
<p>我们可以通过一些扩展包内提供的百分比构造函数来高效的完成百分比构造过程。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(sca)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">percent(seq(<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0.01</span>),d=<span class="number">2</span>,sep=<span class="string">""</span>) <span class="comment">#其中的参数控制百分比输出的小数点后位数。</span></div><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">percent(runif(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))         <span class="comment">#percent函数说明了目前没法看到如何控制小数点显式位数。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>接下来跟大家介绍一个重量级的函数——sprintf。此函数据说来头不小。（据说继承自C/C++）,该函数的使用可以大大简化字符串格式化输出的操作流程。</p>
<ul>
<li>%d 整数    %02d   d代表整数；2代表长度；0代表不足长度用0补齐</li>
<li>%f 浮点数  %4.2f  第一个数字代表总位数；第二个数字代表小数点位数 </li>
<li>%s 字符串 </li>
<li>%% 百分比</li>
</ul>
<p>该函数的参数远不止这三个，太多我也记不住，而且平时使用频率最高的也就这三个，所以秉着投入回报率最高的原则，建议大家用什么记什么。</p>
<p>所以以上百分比过程便只剩下这么几个代码：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sprintf(<span class="string">"%d%%"</span>,<span class="number">1</span>:<span class="number">10</span>) <span class="comment">#遍历百分比</span></div><div class="line">sprintf(<span class="string">"%d-%d-%02d"</span>,<span class="number">2001</span>,<span class="number">12</span>,<span class="number">1</span>:<span class="number">30</span>) <span class="comment">#遍历日期：</span></div><div class="line">sprintf(<span class="string">"有%.1f%%的人评价变形金刚5较差"</span>,<span class="number">30.7</span>)</div><div class="line"><span class="string">'有30.7%的人评价变形金刚5较差'</span>   </div><div class="line">sprintf(<span class="string">"%s是阿里巴巴的%s"</span>,<span class="string">"马云"</span>,<span class="string">"老板"</span>)</div><div class="line"><span class="string">'马云是阿里巴巴的老板'</span></div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image8.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>当然，以上过程完全可以通过paste和str_c函数完成，只是sprintf函数来写这些东西看起来更优化，更有逼格。</p>
<p>好了重于轮到Python了，对于一个小菜鸟来说，第一次写Pyhon的教程心情很忐忑，注意了下面要换编辑器了（虽然仍然使用的jupter里）。</p>
<h3 id="Pyhton字符串格式化输出函数"><a href="#Pyhton字符串格式化输出函数" class="headerlink" title="Pyhton字符串格式化输出函数:"></a>Pyhton字符串格式化输出函数:</h3><p>Pyhton中的字符串格式化输出大概有两套比较完善的系统（我所知的）。</p>
<ul>
<li>格式化符号：%s/d/f……</li>
<li>.format模式</li>
</ul>
<p>其实第一套系统应该也是源于C/C++(感觉跟R里面的格式化符号规则是一致的)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %s. I'm %d year old"</span> % (<span class="string">'raindu'</span>,<span class="number">26</span>))</div></pre></td></tr></table></figure>
<p>以上使用print函数输出了宝宝的大名和芳龄~_~,python中的字符串格式符规则是，在要输出的主句中对应位置插入格式符，在句尾之后使用 % 连接一个元组，元组内提供主句所有的待格式化的字符串，有几个需要格式化的字符串就需要在元组中提供几个字符串对象，而且顺序一定要与待格式化的字符串在主句的位置一一对应。</p>
<p>另一种方式可以使用字典进行字符传递。 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %(name)s. I'm %(age)d year old"</span> % &#123;<span class="string">'age'</span>:<span class="number">26</span>,<span class="string">'name'</span>:<span class="string">'raindu'</span>&#125;)</div></pre></td></tr></table></figure>
<p>这种方式最大的好处就是，以命名参数的形式传入，这样可以不用考虑字典内的键值对顺序。（因为有名字可以索引）</p>
<p>Python中的字符串格式化符号相对于R规定的更加严格、细致，上述所述R中的字符串：%s、数值%d、浮点型%f是通用的。</p>
<p>除此之外，格式化符号内部还可以提供更为详尽的格式控制。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">%[(name)][flags][width].[precision]typecode</div><div class="line">(name)为名称</div><div class="line">flags可以有+,-,<span class="string">' '</span>或<span class="number">0</span>。+表示右对齐。-表示左对齐。<span class="string">' '</span>为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。<span class="number">0</span>表示使用<span class="number">0</span>填充。</div><div class="line">width表示显示宽度</div><div class="line">precision表示小数点后精度</div></pre></td></tr></table></figure>
<p>但是发现网上关于Python教程中，使用最多的还是.format这种字符串输出形式。</p>
<p><strong>format 函数：</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;2&#125;,&#123;1&#125;,&#123;0&#125;'</span>.format(<span class="string">"小伟"</span>,<span class="string">"大伟"</span>,<span class="string">"小三"</span>)</div><div class="line"></div><div class="line"><span class="string">'小三,大伟,小伟'</span></div><div class="line"></div><div class="line"><span class="string">'&#123;1&#125;和&#123;0&#125;是一对&#123;2&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div><div class="line"></div><div class="line"><span class="string">'小伟和大伟是一对基友'</span></div></pre></td></tr></table></figure>
<p>这种传参的方式可以看做是位置参数（顺序），即在要输出的主句中插入末尾提供的对应字符串位置，即可完成格式化过程。</p>
<p>如果你不想在主句对应的花括号内写位置参数，你必须保证末尾提供的字符串顺序与主句对应要插入的位置保持一致。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;&#125;和&#123;&#125;是一对好&#123;&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div></pre></td></tr></table></figure>
<p>当然，你也可以在format括号内内对字符串进行命名，然后将对应名字传入主句对应花括号内部。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"I'm &#123;name&#125;. I'm &#123;age&#125; year old"</span>.format(age=<span class="number">26</span>,name=<span class="string">'raindu'</span>)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>这种情况下你也不必考虑format括号内的字符串对应顺序，因为所有的字符串都有名称，只传入名称，函数即可自动完成索引配对。</p>
<p>使用以上两种方式都可以方便的遍历网页：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url=<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'%d'</span> % i</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image12.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'&#123;&#125;'</span>.format(i)</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image13.jpg" alt=""></p>
<p>好了今天就这样了，要同时贯穿两门语言真的不是一件容易的事情，长路漫漫以后日子要苦逼了。</p>
<h3 id="本章汇总："><a href="#本章汇总：" class="headerlink" title="本章汇总："></a>本章汇总：</h3><p><strong>R语言字符串格式化输出：</strong></p>
<ul>
<li>paste/paste0</li>
<li>stringr::str_c</li>
<li>sca::percent</li>
<li>scales::percent</li>
<li>sprintf</li>
</ul>
<p><strong>Python字符串格式化输出：</strong></p>
<ul>
<li>格式化符号：%d/%s/%f等（规则与R中的sprintf大体一致）</li>
<li>.format格式化输出：</li>
</ul>
<p><strong>关于传参的规则：</strong></p>
<ul>
<li>使用格式化符号可以通过位置参数【比较好用】、命名参数来实现字符串格式化输出【使用字典反而繁琐了】。</li>
<li>使用.format格式化输出可以通过顺序参数（编号顺序）、位置参数（前后位置顺序需一致）、名称参数（比较自由不用考虑顺序）</li>
</ul>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Python不到一个月，虽然学的很渣，但是还是想通过这种途径分享自己的学习心得，毕竟当初学习R语言也是这么走过来的。&lt;/p&gt;
&lt;p&gt;今天是R语言与Python综合系列的第一篇，就聊一聊两者在常用字符串输出上的差异。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
      <category term="字符串" scheme="http://www.raindu.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>用优雅的配色来缔造图表专业主义~</title>
    <link href="http://www.raindu.com/2017/06/23/%E7%94%A8%E4%BC%98%E9%9B%85%E7%9A%84%E9%85%8D%E8%89%B2%E6%9D%A5%E7%BC%94%E9%80%A0%E5%9B%BE%E8%A1%A8%E4%B8%93%E4%B8%9A%E4%B8%BB%E4%B9%89/"/>
    <id>http://www.raindu.com/2017/06/23/用优雅的配色来缔造图表专业主义/</id>
    <published>2017-06-23T01:10:23.000Z</published>
    <updated>2017-07-03T13:58:46.400Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orz7qelg0.bkt.clouddn.com/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg" alt=""></p>
<p>总觉得以前自己写的东西太过琐碎，纠结于步骤和技巧，而没有任何体系上和理念上的输出；</p>
<a id="more"></a>
<p>而再加上自己文风粗陋（毕竟每一篇的错别字用十个手指头都数不完呀）、排版拙劣，还有那么多小伙伴儿不离不弃，肯于点赞，实在是感到惭愧（我一般都很少看自己写的东西的不忍直视哈哈）~</p>
<p>可能之前限于能力和实力，一直在跟着别人的步调走，始终在模仿；再加上自己过于追求数量，在质量上用心不多。</p>
<p>不过现在自我感觉好一些了，开始慢慢的思考一些深度的技巧运用，偶尔也会有一些纯理念的总结。</p>
<p>以后的更新频率打算保持在一周2~3篇左右，但是每一篇的内容会向着综合性、应用性方向转变。当然，关于内容排版和文章封面图都会多花一些心思，尽可能的提升一下阅读体验。</p>
<p><strong>下面是今天的干货~</strong></p>
<p>今天要跟大家分享的是如何在实际图表场景中运用ggtech包的配色及主题，案例是关于全球互联网公司市值比较（数据皆为真实数据，来源于搜狐网）。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>因为基础的ggplot2语法已经介绍过了，这里我就不介绍具体步骤了，直接使用最终调试好的代码。</p>
<p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggtech"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>数据导入：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div><div class="line">newdata&lt;-mydata[<span class="number">1</span>:<span class="number">5</span>,]</div></pre></td></tr></table></figure>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例演示："><a href="#案例演示：" class="headerlink" title="案例演示："></a>案例演示：</h3><h4 id="柱形图（全球市值top5互联网公司-）"><a href="#柱形图（全球市值top5互联网公司-）" class="headerlink" title="柱形图（全球市值top5互联网公司 ）"></a>柱形图（全球市值top5互联网公司 ）</h4><blockquote>
<p>数据截止2015年，单位：十亿美元</p>
</blockquote>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image6.png" alt=""></p>
<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><p>以下用饼图来呈现前五大互联网公司的相对市值大小：</p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image8.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image11.png" alt=""></p>
<h4 id="粗边面积图"><a href="#粗边面积图" class="headerlink" title="粗边面积图"></a>粗边面积图</h4><p>接下来用国内BAT三巨头的连续7年市值数据制作堆积的粗边面积图：</p>
<p>数据来源于<a href="http://www.14du.com/" target="_blank" rel="external">www.14du.com</a>  截止2015年，单位：亿美元</p>
<p><strong>导入数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mynewdata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div></pre></td></tr></table></figure></p>
<p>使用reshape2包进行转置塑性：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line">newmydata &lt;- melt(mynewdata, id.vars = c(<span class="string">"Year"</span>),variable.name = <span class="string">"Name"</span>, value.name = <span class="string">"Value"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image14.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image15.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image16.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image17.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"orange"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image18.png" alt=""></p>
<p>真是不好意思，没有刹住车，糊里糊涂的就写了这么多，也忘记对代码做变量中转了，其实核心代码我就写了三个，其他都是Ctrl+V、Ctrl+V不停地狂点鼠标。</p>
<p>这个ggtech包前天刚分享过的，配色上很惊艳，很有科技范，非常适合用在商业数据分析中，说不定还能给你的领导带来惊喜呢，还等什么呢，赶快来试一试吧！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orz7qelg0.bkt.clouddn.com/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;总觉得以前自己写的东西太过琐碎，纠结于步骤和技巧，而没有任何体系上和理念上的输出；&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="图表美化" scheme="http://www.raindu.com/tags/%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
  </entry>
  
  <entry>
    <title>不经意间又发现了一个有趣又炫酷的包</title>
    <link href="http://www.raindu.com/2017/06/23/%E4%B8%8D%E7%BB%8F%E6%84%8F%E9%97%B4%E5%8F%88%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E5%8F%88%E7%82%AB%E9%85%B7%E7%9A%84%E5%8C%85/"/>
    <id>http://www.raindu.com/2017/06/23/不经意间又发现了一个有趣又炫酷的包/</id>
    <published>2017-06-23T00:52:32.000Z</published>
    <updated>2017-07-03T13:58:46.006Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orz60j4aw.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>关于R语言可视化的内容，之前写有个系列，最近零零散散的又发现了一些好玩的包，刚学会就赶紧来跟大家分享~</p>
<a id="more"></a>
<p>这一篇分享一个围绕ggplot开发的主题包——ggtech。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>不过这个包依赖的ggplot2版本需要很高才能搭配使用（仔细了解了下，貌似要开发版的ggplot2）</p>
<p>所以在开始本篇分享之前，你需要保证自己已经下载了开发版的ggplot2包</p>
<ul>
<li>devtools</li>
<li>curl</li>
</ul>
<p>以上两个是下载开发版ggplot2的必备包</p>
<p><strong>然后运行以下代码：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">'hadley/ggplot2'</span>)</div></pre></td></tr></table></figure></p>
<p>也许会报错，你可能需要更新你的Rtools至最新版。</p>
<p>如果实在没法下载成功开发版的ggplot2的话，也不要着急，据说ggplot2最新版本马上就要提供更新了，再稍微耐心等待几天，就会有更新提醒的。</p>
<hr>
<p>之所以跟大家分享ggtech包是因为，该将几个全球著名的互联网公司官方用色做成了图表主题和配色模板，使用ggtech可以很容易的套用这些主题和配色模板。</p>
<p>还以diamonds数据集为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggtech)</div></pre></td></tr></table></figure></p>
<h3 id="主题套用："><a href="#主题套用：" class="headerlink" title="主题套用："></a>主题套用：</h3><p><strong>套用Airbnb主题</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-diamonds[diamonds$color %<span class="keyword">in</span>%LETTERS[<span class="number">4</span>:<span class="number">7</span>], ]</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_airbnb_fancy() + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>)  + </div><div class="line">      labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div><div class="line">``` </div><div class="line">![](http://orz60j4aw.bkt.clouddn.com/image3.png)</div><div class="line"></div><div class="line"></div><div class="line">怎么样，配色系统还不错吧，那是自然的，这组配色是取自大名鼎鼎的Airbnb的官方用色，设计感和视觉体验那都是全球顶尖水平的。</div><div class="line"></div><div class="line">而且使用以上ggtech函数之后，语法上还是与ggplot体系保持一致，只是……竟然可以设置subtitle参数了禁简直太逆天了……</div><div class="line"></div><div class="line">要知道老版本ggplot2如果想要设置一个副标题，你要么需要使用写自定义函数，要么需要使用labs并且自己指定副标题的精确位置函数。（鬼才知道呢，要一点儿一点儿写位置参数不断尝试~—~）</div><div class="line"></div><div class="line">除了Airbnb的主题之外，还有几个著名互联网公司的颜色风格主题：</div><div class="line"></div><div class="line">**etsy风格：**</div><div class="line">```r</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      labs(title=<span class="string">"Etsy theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Facebook theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image5.png" alt=""> </p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">     theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     labs(title=<span class="string">"Google theme"</span>, </div><div class="line">     subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image6.png" alt=""> </p>
<p><strong>Twitter风格：</strong></p>
<pre><code class="r">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+
      theme_tech(theme=<span class="string">"twitter"</span>) + 
      scale_fill_tech(theme=<span class="string">"twitter"</span>) + 
      labs(title=<span class="string">"Twitter theme"</span>, 
      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)
</code></pre>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image7.png" alt=""> </p>
<p>很惊艳吧有木有，想象一下你的图表如果都是这种配色，还会被领导嫌弃嘛！</p>
<p>这种国际顶尖互联网公司的配色风格，一般都是经由世界级的视觉与色彩设计师们的大手笔，无论是设计感还是艺术感上都是棒棒哒，用在自己的业务分析图表中，绝对可以给你的工作增色不少。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orz60j4aw.bkt.clouddn.com/image1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于R语言可视化的内容，之前写有个系列，最近零零散散的又发现了一些好玩的包，刚学会就赶紧来跟大家分享~&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot图表系统中的辅助线</title>
    <link href="http://www.raindu.com/2017/06/22/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%BE%85%E5%8A%A9%E7%BA%BF/"/>
    <id>http://www.raindu.com/2017/06/22/R语言可视化——ggplot图表系统中的辅助线/</id>
    <published>2017-06-22T13:07:34.000Z</published>
    <updated>2017-07-03T13:58:45.550Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的推送中，曾经有过一篇介绍excel图表辅助线的制作方法，其中用到的技巧五花八门、令人眼花缭乱。</p>
<a id="more"></a>
<p>而ggplot图表系统中的辅助线添加起来却异常简单，非常易于操作。</p>
<p>这主要得益于ggplot函数系统的图层控制理念以及该包的开发者很早就意识到图表辅助线这一层面的图表元素需求。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>接下来我以几个案例的形式对图表辅助线操作进行演示：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Conpany"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="添加辅助线："><a href="#添加辅助线：" class="headerlink" title="添加辅助线："></a>添加辅助线：</h3><p>以上柱形图中，我们如果想要了解五个公司的销售额均值以及单个公司销售额与均值的对比情况，需要在图表中添加一条平均线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上通过geom_hline图层为柱形图添加了均值辅助线，但是大家一定好奇为啥均值线那么低，低于所有公司的销售额，因为均值是季度均值，而销售额是年度累计销售额。</p>
<p>接下来我们制作一个分季度的柱形图。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/image3.png" alt=""></p>
<p>当然这种均值线在分面状态下也是可以添加的。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+facet_grid(.~Year)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image4.png" alt=""></p>
<p>辅助线在散点图中也是经常使用的一种图表元素，它可以帮助我们对分布形态进行分割和归纳，使得数据分布形态及趋势更加明显。</p>
<p>接下来使用diamond数据集来展示散点图中的辅助线。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上散点图没有很明显的分散趋势，不过为了演示散点图中的辅助线，我还是将散点像素画处理，给散点图加上均值十字线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point(shape=<span class="string">"."</span>)+geom_hline(aes(yintercept=mean(price)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+geom_vline(aes(xintercept=mean(carat)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image6.png" alt=""></p>
<p>像素化处理之后，再加上均值十字线，你可以清晰地看到，数据分布形态中，左下角最为密集。</p>
<p><strong>辅助线的另外一种常见的用途就是在时间序列数据中。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image7.png" alt=""></p>
<p>这里可以使用辅助线来标注我们最感兴趣的时间点数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()+geom_vline(aes(xintercept=as.numeric(start)),data=presidential)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; head(presidential)</div><div class="line">        name      start        end      party</div><div class="line"><span class="number">1</span> Eisenhower <span class="number">1953</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">2</span>    Kennedy <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> Democratic</div><div class="line"><span class="number">3</span>    Johnson <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div><div class="line"><span class="number">4</span>      Nixon <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> Republican</div><div class="line"><span class="number">5</span>       Ford <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">6</span>     Carter <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1981</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div></pre></td></tr></table></figure>
<p>presidential数据集是一个美国历届总统的任期截止时间，通过添加总统任期时间点，我们甚至可以从经济波动数据中观察到经济指标变波动与政治周期的关系。</p>
<p>start是一个代表日期的字段，也就是说我们可以赋值给geom_vline函数一个字段，从而在折线图中绘制出多个时间点的辅助线。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）</p>
<p>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前的推送中，曾经有过一篇介绍excel图表辅助线的制作方法，其中用到的技巧五花八门、令人眼花缭乱。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
</feed>

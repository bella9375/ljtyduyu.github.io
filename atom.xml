<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>raindu&#39;s home</title>
  <subtitle>A lifelong learner!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.raindu.com/"/>
  <updated>2017-06-27T04:11:34.808Z</updated>
  <id>http://www.raindu.com/</id>
  
  <author>
    <name>RainDu</name>
    <email>578708965@.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>左手用R右手Python系列——数据合并与追加</title>
    <link href="http://www.raindu.com/2017/06/27/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    <id>http://www.raindu.com/2017/06/27/左手用R右手Python系列——数据合并与追加/</id>
    <published>2017-06-27T03:44:02.000Z</published>
    <updated>2017-06-27T04:11:34.808Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/face.jpg" alt=""></p>
<p>今天这篇跟大家介绍R语言与Python数据处理中的第二个小知识点——数据合并与追加。</p>
<a id="more"></a>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>针对数据合并与追加，R与Python中都有对应的函数可以快速完成需求，根据合并与追加的使用场景，这里我将本文内容分成三部分：</p>
<ul>
<li>数据合并（简单合并，无需匹配）</li>
<li>数据合并（匹配合并）</li>
<li>数据追加</li>
</ul>
<h3 id="数据合并（简单合并，无需匹配）"><a href="#数据合并（简单合并，无需匹配）" class="headerlink" title="数据合并（简单合并，无需匹配）"></a>数据合并（简单合并，无需匹配）</h3><p>针对简单合并而言，在R语言中主要通过以下两个函数来实现：</p>
<ul>
<li>cbind()</li>
<li>dplyr::bind_cols()<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 &lt;- data.frame(A=c(<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>),</div><div class="line">                     B= c(<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>),</div><div class="line">                     C= c(<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>),</div><div class="line">                     D=c(<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>)</div><div class="line">                    )</div><div class="line">df2 &lt;- data.frame(E=c(<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>),</div><div class="line">                    <span class="literal">F</span>= c(<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>),</div><div class="line">                    G=c(<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>),</div><div class="line">                     H= c(<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>))</div><div class="line">df3 &lt;-data.frame(I=c(<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>),</div><div class="line">                     J= c(<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>),</div><div class="line">                    K=c(<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>),</div><div class="line">                    L=c(<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>)</div><div class="line">                   )</div><div class="line">df1;df2;df3</div><div class="line">mydata1&lt;-cbind(df1,df2,df3);mydata1</div><div class="line">mydata2&lt;-dplyr::bind_cols(df1,df2,df3);mydata1</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image1.jpg" alt=""></p>
<p>在Python中，简单的合并可以通过Pandas中的concat函数来实现的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'E'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'F'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'G'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'H'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'I'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'J'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'K'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'L'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">result1 = pd.concat([df1,df2,df3],axis=<span class="number">1</span>,join_axes=[df1.index])</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image2.jpg" alt=""></p>
<h3 id="横向合并：（需匹配）"><a href="#横向合并：（需匹配）" class="headerlink" title="横向合并：（需匹配）"></a>横向合并：（需匹配）</h3><p>在R语言中，这种操作有很多可选方案，如基础函数merge、plyr包中的join函数以及dplyr包中的left/right/inter/full_join等函数。</p>
<ul>
<li>merge</li>
<li>plyr::join</li>
<li>dplyr::left/right/inter/full_join</li>
</ul>
<p>这里为了节省时间，只介绍第一种基础函数，欲了解详情，可以查看这篇历史文章：</p>
<p><a href="https://zhuanlan.zhihu.com/p/27577410" target="_blank" rel="external">R语言数据处理——数据合并与追加</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">merge(x, y,  <span class="comment">#带合并的数据集名称（左右顺序）</span></div><div class="line">  by = intersect(names(x), names(y)), <span class="comment">#合并依据字段（名称相同）</span></div><div class="line">  by.x = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  by.y = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  all = <span class="literal">FALSE</span>,<span class="comment">#合并类型，TRUE为全连接 （full），FALSE为内连接 （inter）</span></div><div class="line">  all.x = all,<span class="comment">#左连接</span></div><div class="line">  all.y = all,<span class="comment">#右连接</span></div><div class="line">  )</div><div class="line">``` </div><div class="line"></div><div class="line">```r </div><div class="line">df3&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>),</div><div class="line">gender=c(<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>),</div><div class="line">pay=c(<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>),</div><div class="line">m_point=c(<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>))</div><div class="line">df4&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>),</div><div class="line">city=c(<span class="string">'Beijing '</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>, <span class="string">'Shenzhen'</span>, <span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>),</div><div class="line">age=c(<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>),</div><div class="line">category=c(<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>),</div><div class="line">price=c(<span class="number">1200</span>,<span class="number">2900</span>,<span class="number">2133</span>,<span class="number">5433</span>,<span class="number">1346</span>,<span class="number">4432</span>))</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">FALSE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.x=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.y=<span class="literal">TRUE</span>);print(mydata3)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image4.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image5.jpg" alt=""></p>
<p>在Python中，这一操作也可以通过函数Pandas库中的cancat函数或者merge函数来完成。</p>
<p><strong>Pandas-merge</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">df3=pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>],</div><div class="line"><span class="string">"gender"</span>:[<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,</div><div class="line"><span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>],</div><div class="line"><span class="string">"pay"</span>:[<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>],</div><div class="line"><span class="string">"m-point"</span>:[<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>]&#125;)</div><div class="line">df4= pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>],</div><div class="line"><span class="string">"date"</span>:pd.date_range(<span class="string">'20130102'</span>,periods=<span class="number">6</span>),</div><div class="line"><span class="string">"city"</span>:[<span class="string">'Beijing'</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>,<span class="string">'Shenzhen'</span>,<span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>],</div><div class="line"><span class="string">"age"</span>:[<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>],</div><div class="line"><span class="string">"category"</span>:[<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>],</div><div class="line"><span class="string">"price"</span>:[<span class="number">1200</span>,np.nan,<span class="number">2133</span>,<span class="number">5433</span>,np.nan,<span class="number">4432</span>]&#125;,</div><div class="line">columns =[<span class="string">'id'</span>,<span class="string">'date'</span>,<span class="string">'city'</span>,<span class="string">'category'</span>,<span class="string">'age'</span>,<span class="string">'price'</span>])</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image6.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df_inner=pd.merge(df3,df4,how=<span class="string">'inner'</span>);print(df_inner) <span class="comment">#数据表合并（内连接：inter join）</span></div><div class="line">df_left=pd.merge(df3,df4, how=<span class="string">'left'</span>) ;print(df_left)  <span class="comment">#数据表合并（左连接：left join）</span></div><div class="line">df_right=pd.merge(df3,df4,how=<span class="string">'right'</span>);print(df_right) <span class="comment">#数据表合并（右连接:right join）</span></div><div class="line">df_outer=pd.merge(df3,df4,how=<span class="string">'outer'</span>);print(df_outer) <span class="comment">#数据表合并（全连接:full join）</span></div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image7.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image8.jpg" alt=""></p>
<h3 id="数据追加："><a href="#数据追加：" class="headerlink" title="数据追加："></a>数据追加：</h3><p>数据追加通常只需保证数据及的宽度一致且列字段名称一致，相对来说比较简单。在R语言和Python中，也很好实现。</p>
<p>在R语言中，可视化朱数据追加的函数有：</p>
<ul>
<li>rbind()</li>
<li>dplyr::bind_rows()</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-rbind(df1,df2,df3);mydata3</div><div class="line">mydata4&lt;-dplyr::bind_rows(df1,df2,df3);mydata4</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image11.jpg" alt=""></p>
<p>python中则可以很容易的通过数据框本身的append函数来实现简单的数据追加：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'B'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'D'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">8</span>, <span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</div><div class="line">result = df1.append(df2);print(result)</div><div class="line">result = result.append(df3);print(result)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image9.jpg" alt=""></p>
<p>如果是使用canat函数也可以非常轻松的完成数据追加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = pd.concat([df1, df2, df3]);print(result)</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image10.jpg" alt=""></p>
<p>本文汇总：</p>
<table>
<thead>
<tr>
<th>工具</th>
<th>数据合并（简单合并）</th>
<th>数据合并（匹配和并）</th>
<th>数据追加：</th>
</tr>
</thead>
<tbody>
<tr>
<td>R：</td>
<td>cbind<br>dplyr::bind_cols</td>
<td>merge<br>plyr::join<br>dplyr::left/right/inter/full_join</td>
<td>rbindd<br>plyr::bind_rows</td>
</tr>
<tr>
<td>Python:</td>
<td>Pandas-cancat</td>
<td>merge<br>cancat</td>
<td>append<br>cancat</td>
</tr>
</tbody>
</table>
<p>以上仅是个人常用的几种，方法肯定不至于此，欢迎大家补充！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orp205tiu.bkt.clouddn.com/R_Python/merge/face.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天这篇跟大家介绍R语言与Python数据处理中的第二个小知识点——数据合并与追加。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
      <category term="数据合并与追加" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>用R语言复盘美国总统大选结果~</title>
    <link href="http://www.raindu.com/2017/06/25/%E7%94%A8R%E8%AF%AD%E8%A8%80%E5%A4%8D%E7%9B%98%E7%BE%8E%E5%9B%BD%E6%80%BB%E7%BB%9F%E5%A4%A7%E9%80%89%E7%BB%93%E6%9E%9C/"/>
    <id>http://www.raindu.com/2017/06/25/用R语言复盘美国总统大选结果/</id>
    <published>2017-06-25T01:13:19.000Z</published>
    <updated>2017-06-25T01:44:29.239Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/President/President17.jpg" alt=""></p>
<p>这两天各种社交媒体都被美国大选的消息刷屏，各种段子满天飞，把平时不怎么关注政治的小编都吸引了。</p>
<a id="more"></a>
<p>美国大选的投票数据，给小编的写作提供了非常宝贵的案例数据，毕竟四年才一次哦，这次一定不能放过。</p>
<p>接下来我们用R语言来复盘一下，昨日投票结果吧。</p>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>本文将从以下几个方面全方位展示大选的形势：</p>
<ul>
<li>克林顿与希拉里的选举人票结果及其占比；</li>
<li>二者的获胜州分布情况、各自在各州的支持率；</li>
<li>不同群体及阶层的支持率。</li>
</ul>
<p>以上可视化图形均为R语言制作，在讲解过程中会共享代码;</p>
<h3 id="加载扩展包："><a href="#加载扩展包：" class="headerlink" title="加载扩展包："></a>加载扩展包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"RColorBrewer"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maps"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"mapdata"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div></pre></td></tr></table></figure>
<h3 id="克林顿与希拉里的选举人票"><a href="#克林顿与希拉里的选举人票" class="headerlink" title="克林顿与希拉里的选举人票:"></a>克林顿与希拉里的选举人票:</h3><p><strong>二者的选举人票结果</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">290</span>,<span class="number">232</span>))</div><div class="line">ggplot(data,aes(x,y,fill=x))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">      geom_text(aes(label=y,vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>))+</div><div class="line">      ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President1.png" alt=""></p>
<p><strong>两者普选支持人数对比*</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">59698506</span>,<span class="number">59926386</span>))</div><div class="line">p %+% data1 <span class="comment">#给上图代码赋值为p,使用通道函数%+%简化代码</span></div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President2.png" alt=""></p>
<p><strong>两者选举人票得票比例</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">data3&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">43</span>,<span class="number">54</span>))</div><div class="line">mydata &lt;- transform(data3, mid_y = ave(data3$y,data3$x, FUN = <span class="keyword">function</span>(val) cumsum(val) - (<span class="number">0.5</span> * val)))</div><div class="line">ggplot(mydata,aes(x=<span class="number">1</span>,y=y,fill=x))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,col=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta=<span class="string">"y"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) +</div><div class="line">geom_text(aes(label=paste(y,<span class="string">"%"</span>,sep=<span class="string">""</span>)),vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>,size=<span class="number">10</span>,color=<span class="string">"white"</span>)+</div><div class="line">ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President3.png" alt=""></p>
<h3 id="二者的获胜州分布情况、各州的支持率；"><a href="#二者的获胜州分布情况、各州的支持率；" class="headerlink" title="二者的获胜州分布情况、各州的支持率；"></a>二者的获胜州分布情况、各州的支持率；</h3><p><strong>数据准备：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">AD1 &lt;- American_map@data</div><div class="line">AD2 &lt;- data.frame(id=rownames(AD1),AD1)</div><div class="line">American_map1 &lt;- fortify(American_map)</div><div class="line">American_map_data &lt;- join(American_map1,AD2, type = <span class="string">"full"</span>)</div><div class="line">American_map_data&lt;-American_map_data[,<span class="number">1</span>:<span class="number">12</span>]</div></pre></td></tr></table></figure></p>
<p><strong>提取各州数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(STATE_NAME=unique(American_map_data$STATE_NAME),STATE_ABBR=unique(American_map_data$STATE_ABBR))</div><div class="line">write.table (mydata, file =<span class="string">"D:\\R\\File\\President.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div><div class="line">newdata&lt;-read.csv(<span class="string">"D:\\R\\File\\President.csv"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>分离大陆与夏威夷、阿拉斯加：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data1&lt;-subset(American_map_data,STATE_NAME!=<span class="string">'Alaska'</span>&amp; STATE_NAME!=<span class="string">'Hawaii'</span>)    </div><div class="line">data2&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Hawaii"</span>)    </div><div class="line">data3&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Alaska"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>更改阿拉斯加与夏威夷坐标并合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data2$long&lt;-data2$long+<span class="number">65</span></div><div class="line">data3$long&lt;-data3$long+<span class="number">40</span></div><div class="line">data3$lat&lt;-data3$lat-<span class="number">42</span></div><div class="line">data4&lt;-rbind(data1,data2,data3)</div></pre></td></tr></table></figure></p>
<p><strong>合并地理信息数据与选举数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">American_data &lt;- join(data4, newdata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>提取各州中心经纬度指标：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(AD1)&#123;mean(range(AD1,na.rm=<span class="literal">TRUE</span>))&#125; </div><div class="line">centres &lt;- ddply(American_data,.(STATE_ABBR),colwise(midpos,.(long,lat)))</div><div class="line">mynewdata&lt;-join(centres,newdata,type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<h4 id="美国总统大选的各州选举人票数分布："><a href="#美国总统大选的各州选举人票数分布：" class="headerlink" title="美国总统大选的各州选举人票数分布："></a>美国总统大选的各州选举人票数分布：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">      geom_polygon(data=American_data,aes(x=long,y=lat,group=group),colour=<span class="string">"grey"</span>,fill=<span class="string">"white"</span>)+</div><div class="line">      geom_point(data=mynewdata,aes(x=long,y=lat,size=Count,fill=Count),shape=<span class="number">21</span>,colour=<span class="string">"black"</span>)+</div><div class="line">      scale_size_area(max_size=<span class="number">10</span>)+ </div><div class="line">      scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"#D73434"</span>)+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"none"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President4.png" alt=""></p>
<h4 id="美国总统大选投票结果双方获胜州分布情况："><a href="#美国总统大选投票结果双方获胜州分布情况：" class="headerlink" title="美国总统大选投票结果双方获胜州分布情况："></a>美国总统大选投票结果双方获胜州分布情况：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(American_data,aes(x=long,y=lat,group=group,fill=Results))+</div><div class="line">      geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#19609F"</span>,<span class="string">"#CB1C2A"</span>),labels=c(<span class="string">"Hillary"</span>, <span class="string">"Trump"</span>))+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+ </div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"top"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President5.png" alt=""></p>
<h4 id="希拉里各州选票支持率统计；"><a href="#希拉里各州选票支持率统计；" class="headerlink" title="希拉里各州选票支持率统计；"></a>希拉里各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(na.omit(American_data$Clinton), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Clinton_q&lt;-cut(American_data$Clinton,qa,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Clinton_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President6.png" alt=""></p>
<h4 id="川普各州选票支持率统计；"><a href="#川普各州选票支持率统计；" class="headerlink" title="川普各州选票支持率统计；"></a>川普各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qb &lt;- quantile(na.omit(American_data$Trump), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Trump_q&lt;-cut(American_data$Trump,qb,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Trump_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Reds"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President7.png" alt=""></p>
<h3 id="多维度统计二者支持率"><a href="#多维度统计二者支持率" class="headerlink" title="多维度统计二者支持率;"></a>多维度统计二者支持率;</h3><h4 id="性别分布"><a href="#性别分布" class="headerlink" title="性别分布"></a>性别分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gender&lt;-data.frame(gender=c(<span class="string">"male"</span>,<span class="string">"female"</span>),clinton=c(<span class="number">41</span>,<span class="number">54</span>),trump=c(<span class="number">53</span>,<span class="number">42</span>))</div><div class="line">genderA&lt;-melt(gender,id.vars=<span class="string">"gender"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(genderA,aes(gender,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President8.png" alt=""></p>
<p>从性别上来看，男性支持川普的多一点，女性支持希拉里的多一点，这应该算是性别效应吧~</p>
<h4 id="年龄分布统计；"><a href="#年龄分布统计；" class="headerlink" title="年龄分布统计；"></a>年龄分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">age&lt;-data.frame(age=c(<span class="string">"18~29"</span>,<span class="string">"30~44"</span>,<span class="string">"45~64"</span>,<span class="string">"64~"</span>),clinton=c(<span class="number">55</span>,<span class="number">50</span>,<span class="number">44</span>,<span class="number">45</span>),trump=c(<span class="number">37</span>,<span class="number">42</span>,<span class="number">53</span>,<span class="number">53</span>))</div><div class="line">ageA&lt;-melt(age,id.vars=<span class="string">"age"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(ageA,aes(age,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President10.png" alt=""></p>
<p>这个年龄段分布的也是相当有规律啊，川普大叔很得中老年选民的亲来，而希拉里阿姨则俘获了青少年的心。</p>
<h4 id="种族分布统计；"><a href="#种族分布统计；" class="headerlink" title="种族分布统计；"></a>种族分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">race&lt;-data.frame(race=c(<span class="string">"white"</span>,<span class="string">"black"</span>,<span class="string">"latino"</span>,<span class="string">"asian"</span>,<span class="string">"other"</span>),clinton=c(<span class="number">37</span>,<span class="number">88</span>,<span class="number">65</span>,<span class="number">65</span>,<span class="number">56</span>),trump=c(<span class="number">58</span>,<span class="number">8</span>,<span class="number">29</span>,<span class="number">29</span>,<span class="number">37</span>))</div><div class="line">raceA&lt;-melt(race,id.vars=<span class="string">"race"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(raceA,aes(race,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President11.png" alt=""></p>
<p>从种族上来看，希拉里在black、latino、asian以及其他种族中占据绝对优势，川普则把控着white的选票。</p>
<h4 id="选民受教育水平分布统计；"><a href="#选民受教育水平分布统计；" class="headerlink" title="选民受教育水平分布统计；"></a>选民受教育水平分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">educ&lt;-data.frame(educ=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>),clinton=c(<span class="number">45</span>,<span class="number">43</span>,<span class="number">49</span>,<span class="number">58</span>),trump=c(<span class="number">51</span>,<span class="number">52</span>,<span class="number">45</span>,<span class="number">37</span>))</div><div class="line">educA&lt;-melt(educ,id.vars=<span class="string">"educ"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(educA,aes(educ,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President112.png" alt=""></p>
<p>从受教育水平看，希拉里阿姨的选民受教育水平相对较高（单也非绝对，因为这里是CNN做的抽样调查，样本只有24537个，范围较小，并不代表实际情况）。</p>
<h4 id="选民收入分布统计；"><a href="#选民收入分布统计；" class="headerlink" title="选民收入分布统计；"></a>选民收入分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Inco&lt;-data.frame(inco=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>),clinton=c(<span class="number">49</span>,<span class="number">47</span>),trump=c(<span class="number">45</span>,<span class="number">48</span>))</div><div class="line">IncoA&lt;-melt(Inco,id.vars=<span class="string">"inco"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(inco,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+    geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President13.png" alt=""></p>
<h4 id="选民政治倾向分布；"><a href="#选民政治倾向分布；" class="headerlink" title="选民政治倾向分布；"></a>选民政治倾向分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Ideo&lt;-data.frame(ideo=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>),clinton=c(<span class="number">84</span>,<span class="number">52</span>,<span class="number">15</span>),trump=c(<span class="number">10</span>,<span class="number">41</span>,<span class="number">81</span>))</div><div class="line">IncoA&lt;-melt(Ideo,id.vars=<span class="string">"ideo"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(ideo,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">            scale_x_discrete(limits=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President14.png" alt=""></p>
<p>上图还是比较能反映两党的政治主张的。</p>
<h4 id="选民的婚姻状况统计分布；"><a href="#选民的婚姻状况统计分布；" class="headerlink" title="选民的婚姻状况统计分布；"></a>选民的婚姻状况统计分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Marl&lt;-data.frame(marry=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>),clinton=c(<span class="number">37</span>,<span class="number">49</span>,<span class="number">46</span>,<span class="number">62</span>),trump=c(<span class="number">58</span>,<span class="number">47</span>,<span class="number">45</span>,<span class="number">33</span>))</div><div class="line">MarlA&lt;-melt(Marl,id.vars=<span class="string">"marry"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(MarlA,aes(marry,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President15.png" alt=""></p>
<p>川普在已婚男性选民群体中的支持率有明显优势，而希拉里在未婚女性选民群体中优势明显。</p>
<h4 id="宗教信仰分布统计；"><a href="#宗教信仰分布统计；" class="headerlink" title="宗教信仰分布统计；"></a>宗教信仰分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Rellglon&lt;-data.frame(rell=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>),clinton=c(<span class="number">37</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">43</span>,<span class="number">71</span>,<span class="number">58</span>,<span class="number">68</span>),trump=c(<span class="number">60</span>,<span class="number">52</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">24</span>,<span class="number">33</span>,<span class="number">26</span>))</div><div class="line">RellglonA&lt;-melt(Rellglon,id.vars=<span class="string">"rell"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(RellglonA,aes(rell,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>))+</div><div class="line">      ylim(-<span class="number">20</span>,<span class="number">100</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+     </div><div class="line">      coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) + </div><div class="line">      facet_grid(.~Name)+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President16.png" alt=""></p>
<p>本文数据来源于<a href="http://edition.cnn.com/election/results" target="_blank" rel="external">CNN官网：</a></p>
<p>因为数据多源于小范围问卷调查（选票数据除外），限于样本范围和地域局限性，结果可能有偏颇。</p>
<p>文中所需的地图数据及代码文本分享在魔方 学院QQ群中：</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orp205tiu.bkt.clouddn.com/President/President17.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这两天各种社交媒体都被美国大选的消息刷屏，各种段子满天飞，把平时不怎么关注政治的小编都吸引了。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——用ggplot构造期待已久的雷达图</title>
    <link href="http://www.raindu.com/2017/06/24/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8ggplot%E6%9E%84%E9%80%A0%E6%9C%9F%E5%BE%85%E5%B7%B2%E4%B9%85%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/24/R语言可视化——用ggplot构造期待已久的雷达图/</id>
    <published>2017-06-24T14:03:16.000Z</published>
    <updated>2017-06-24T14:25:28.040Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar9.jpg" alt=""></p>
<p>之前一直苦恼于ggplot函数无法制作雷达图，心想着既然饼图可以通过柱形图+极坐标模拟出来，为啥雷达图不行。</p>
<a id="more"></a>
<h3 id="制作雷达图的传统思路："><a href="#制作雷达图的传统思路：" class="headerlink" title="制作雷达图的传统思路："></a>制作雷达图的传统思路：</h3><p>我尝试着用折线图+极坐标来模拟雷达图（之前在制作饼图和圆环图以及玫瑰图的时候就是这样做的）。</p>
<p>结果就粗线了以下不伦不类的图形：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Company = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">4000</span>,<span class="number">3200</span>,<span class="number">2800</span>,<span class="number">3700</span>),Sale2016 = c(<span class="number">6000</span>,<span class="number">4800</span>,<span class="number">4500</span>,<span class="number">3500</span>,<span class="number">4300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Company"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,group=Year,color=Year))+geom_line()+coord_polar(theta = <span class="string">"x"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar1.png" alt=""></p>
<p>虽说效果已经很接近了，但是整体上还是无法达到雷达图的要求，首尾线条没有相连，点之间是通过弧线链接而非直线。</p>
<p>后来又是在浏览r语言论坛时，无意间看到一个围绕ggplot2包开发的插件——ggradar，果不其然，是专门用于辅助ggplot2制作雷达图而生的。</p>
<p>接下来我跟大家分享该插件的使用方法：</p>
<h3 id="数据构造"><a href="#数据构造" class="headerlink" title="数据构造:"></a>数据构造:</h3><p>因为是开发版的，托管在github网站上，所以不能通过普通途径下载，需要使用devtools工具：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install_github(<span class="string">"ricardo-bion/ggradar"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggradar"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>下面开始构造数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-matrix(runif(<span class="number">40</span>,<span class="number">0</span>,<span class="number">1</span>),<span class="number">5</span>,<span class="number">8</span>) <span class="comment">#以上构造了一个值区间为0~1,个数为40的5行8列随机数矩阵。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rownames(mydata) &lt;- LETTERS[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment">#以上使用前五个大写字母为矩阵行命名；</span></div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">colnames(mydata) &lt;- c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>,<span class="string">"Alibaba"</span>,<span class="string">"Baidu"</span>,<span class="string">"Twitter"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用以上文本向量为矩阵列命名；</span></div><div class="line">mynewdata&lt;-data.frame(mydata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar5.png" alt=""></p>
<p>将矩阵数据表格转化为数据框格式作图数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#为数据框增加一列文本字段：</span></div><div class="line">Name&lt;-c(<span class="string">"USA"</span>,<span class="string">"CHN"</span>,<span class="string">"UK"</span>,<span class="string">"RUS"</span>,<span class="string">"JP"</span>)</div><div class="line">mynewdata&lt;-data.frame(Name,mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar6.png" alt=""></p>
<h3 id="ggradar包："><a href="#ggradar包：" class="headerlink" title="ggradar包："></a>ggradar包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata[<span class="number">1</span>,])</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar8.png" alt=""></p>
<p>以上的图表是默认样式，ggradar函数对数据格式以及变量值范围高度敏感，而却不过多的依赖函数内的参数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar7.png" alt=""></p>
<p>可以看出，ggradar函数支持多序列雷达图，只是对它规定的数据结构很不能理解，为啥不是列代表分类，行代表轴变量呢，跟ggplot的语法还是有一些偏离，不过只要数据构造好之后，作图函数的语法是相当简练的。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之前一直苦恼于ggplot函数无法制作雷达图，心想着既然饼图可以通过柱形图+极坐标模拟出来，为啥雷达图不行。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="ggradar" scheme="http://www.raindu.com/tags/ggradar/"/>
    
  </entry>
  
  <entry>
    <title>左手用R右手Python系列——字符串格式化输出</title>
    <link href="http://www.raindu.com/2017/06/24/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/"/>
    <id>http://www.raindu.com/2017/06/24/左手用R右手Python系列——字符串格式化输出/</id>
    <published>2017-06-24T01:45:40.000Z</published>
    <updated>2017-06-24T02:09:46.074Z</updated>
    
    <content type="html"><![CDATA[<p>学习Python不到一个月，虽然学的很渣，但是还是想通过这种途径分享自己的学习心得，毕竟当初学习R语言也是这么走过来的。</p>
<p>今天是R语言与Python综合系列的第一篇，就聊一聊两者在常用字符串输出上的差异。</p>
<a id="more"></a>
<h3 id="R语言中的字符串格式化函数："><a href="#R语言中的字符串格式化函数：" class="headerlink" title="R语言中的字符串格式化函数："></a>R语言中的字符串格式化函数：</h3><p>为了方便统一案例图片的风格，今天统一在jupyter编辑器中编辑（R和Python）。</p>
<p>通常在R语言中我们使用最多的关于字符串输出函数是paste和paste0。</p>
<p>这两着之间的差别非常微小，如同其字面意思一样，前者可以自定义字符串间隔符号，后者则默认没有间隔符号。</p>
<p>paste和paste0都可以完成单个向量字符串的连接以及两个向量间的匹配。</p>
<p>生成10个随机大写字母作为案例：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myword&lt;-sample(LETTERS,<span class="number">10</span>,replace=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>我们可以打印出两个函数的详细参数表：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">paste</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, sep = <span class="string">" "</span>, collapse = <span class="literal">NULL</span>) <span class="comment">#sep参数默认间隔为空格</span></div><div class="line">.Internal(paste(list(<span class="keyword">...</span>), sep, collapse))</div><div class="line">paste0</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, collapse = <span class="literal">NULL</span>)           <span class="comment">#sep没有间隔参数（无间隔）</span></div><div class="line">.Internal(paste0(list(<span class="keyword">...</span>), collapse))</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>单个向量的连接成字符串：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p>在拼接单个向量之时，通过设置collapse参数来控制字符之间的间隔符，最终输出一个单值字符串。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste0(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>我们可以看到，在拼接单个向量为字符串的过程中，paste和paste0两个函数并无太大区别，因为不涉及匹配参数sep。</p>
<p>通常情况下，我们使用paste和paste0做向量间的匹配情况比较多，这种情况多见于遍历网页，遍历日期等。</p>
<p>比如假如我们们要遍历一个网页的网址如下：</p>
<p>随机打开了网易云课堂的一个课程栏目，看到一共有22页课程，此时最简单的遍历网页方法就是通过paste或者paste0。</p>
<p><a href="http://study.163.com/category/400000000146050#/" target="_blank" rel="external">网易云课堂</a></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div><div class="line">num&lt;-<span class="number">1</span>:<span class="number">22</span></div><div class="line">myurl&lt;-paste(url,num,sep=<span class="string">""</span>);myurl</div><div class="line">myurl&lt;-paste0(url,num);myurl</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image4.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>对比两个函数的用法，大家应该能领会其中的差别了吧，paste0把paste的sep参数简化了，直接强制设定为无间隔，此时做向量间匹配的话，paste0函数就可以不用设置sep参数，而paste则需设置，当然虽然在遍历网页时确实节省代码，但也不是任何场合都是如此。</p>
<p>比如我要拼接时间与日期，而且要求以“-”间隔，此时你还是需要使用传统的paste函数来完成这个任务，因为paste0已经不存在sep参数了。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydate&lt;-paste(<span class="number">2001</span>:<span class="number">2005</span>,<span class="string">"06"</span>,sep=<span class="string">"-"</span>);mydate</div></pre></td></tr></table></figure>
<p>还有一个stringr包中字符串拼接函数str_sub()也可以高效的完成上述工作，但是因为需要额外加载包，所以平时我用的频率不高。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">str_c(myword,collapse =<span class="string">""</span>)</div><div class="line">str_c(url,num,sep = <span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>在R语言中，字符串格式化输出除了以上常见操作之外，还有一些非常重要的需求，比如格式化输出百分比，格式化输出日期时间等。</p>
<p>以百分比为例：</p>
<p>我们可以通过一些扩展包内提供的百分比构造函数来高效的完成百分比构造过程。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(sca)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">percent(seq(<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0.01</span>),d=<span class="number">2</span>,sep=<span class="string">""</span>) <span class="comment">#其中的参数控制百分比输出的小数点后位数。</span></div><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">percent(runif(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))         <span class="comment">#percent函数说明了目前没法看到如何控制小数点显式位数。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>接下来跟大家介绍一个重量级的函数——sprintf。此函数据说来头不小。（据说继承自C/C++）,该函数的使用可以大大简化字符串格式化输出的操作流程。</p>
<ul>
<li>%d 整数    %02d   d代表整数；2代表长度；0代表不足长度用0补齐</li>
<li>%f 浮点数  %4.2f  第一个数字代表总位数；第二个数字代表小数点位数 </li>
<li>%s 字符串 </li>
<li>%% 百分比</li>
</ul>
<p>该函数的参数远不止这三个，太多我也记不住，而且平时使用频率最高的也就这三个，所以秉着投入回报率最高的原则，建议大家用什么记什么。</p>
<p>所以以上百分比过程便只剩下这么几个代码：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sprintf(<span class="string">"%d%%"</span>,<span class="number">1</span>:<span class="number">10</span>) <span class="comment">#遍历百分比</span></div><div class="line">sprintf(<span class="string">"%d-%d-%02d"</span>,<span class="number">2001</span>,<span class="number">12</span>,<span class="number">1</span>:<span class="number">30</span>) <span class="comment">#遍历日期：</span></div><div class="line">sprintf(<span class="string">"有%.1f%%的人评价变形金刚5较差"</span>,<span class="number">30.7</span>)</div><div class="line"><span class="string">'有30.7%的人评价变形金刚5较差'</span>   </div><div class="line">sprintf(<span class="string">"%s是阿里巴巴的%s"</span>,<span class="string">"马云"</span>,<span class="string">"老板"</span>)</div><div class="line"><span class="string">'马云是阿里巴巴的老板'</span></div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image8.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>当然，以上过程完全可以通过paste和str_c函数完成，只是sprintf函数来写这些东西看起来更优化，更有逼格。</p>
<p>好了重于轮到Python了，对于一个小菜鸟来说，第一次写Pyhon的教程心情很忐忑，注意了下面要换编辑器了（虽然仍然使用的jupter里）。</p>
<h3 id="Pyhton字符串格式化输出函数"><a href="#Pyhton字符串格式化输出函数" class="headerlink" title="Pyhton字符串格式化输出函数:"></a>Pyhton字符串格式化输出函数:</h3><p>Pyhton中的字符串格式化输出大概有两套比较完善的系统（我所知的）。</p>
<ul>
<li>格式化符号：%s/d/f……</li>
<li>.format模式</li>
</ul>
<p>其实第一套系统应该也是源于C/C++(感觉跟R里面的格式化符号规则是一致的)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %s. I'm %d year old"</span> % (<span class="string">'raindu'</span>,<span class="number">26</span>))</div></pre></td></tr></table></figure>
<p>以上使用print函数输出了宝宝的大名和芳龄~_~,python中的字符串格式符规则是，在要输出的主句中对应位置插入格式符，在句尾之后使用 % 连接一个元组，元组内提供主句所有的待格式化的字符串，有几个需要格式化的字符串就需要在元组中提供几个字符串对象，而且顺序一定要与待格式化的字符串在主句的位置一一对应。</p>
<p>另一种方式可以使用字典进行字符传递。 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %(name)s. I'm %(age)d year old"</span> % &#123;<span class="string">'age'</span>:<span class="number">26</span>,<span class="string">'name'</span>:<span class="string">'raindu'</span>&#125;)</div></pre></td></tr></table></figure>
<p>这种方式最大的好处就是，以命名参数的形式传入，这样可以不用考虑字典内的键值对顺序。（因为有名字可以索引）</p>
<p>Python中的字符串格式化符号相对于R规定的更加严格、细致，上述所述R中的字符串：%s、数值%d、浮点型%f是通用的。</p>
<p>除此之外，格式化符号内部还可以提供更为详尽的格式控制。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">%[(name)][flags][width].[precision]typecode</div><div class="line">(name)为名称</div><div class="line">flags可以有+,-,<span class="string">' '</span>或<span class="number">0</span>。+表示右对齐。-表示左对齐。<span class="string">' '</span>为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。<span class="number">0</span>表示使用<span class="number">0</span>填充。</div><div class="line">width表示显示宽度</div><div class="line">precision表示小数点后精度</div></pre></td></tr></table></figure>
<p>但是发现网上关于Python教程中，使用最多的还是.format这种字符串输出形式。</p>
<p><strong>format 函数：</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;2&#125;,&#123;1&#125;,&#123;0&#125;'</span>.format(<span class="string">"小伟"</span>,<span class="string">"大伟"</span>,<span class="string">"小三"</span>)</div><div class="line"></div><div class="line"><span class="string">'小三,大伟,小伟'</span></div><div class="line"></div><div class="line"><span class="string">'&#123;1&#125;和&#123;0&#125;是一对&#123;2&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div><div class="line"></div><div class="line"><span class="string">'小伟和大伟是一对基友'</span></div></pre></td></tr></table></figure>
<p>这种传参的方式可以看做是位置参数（顺序），即在要输出的主句中插入末尾提供的对应字符串位置，即可完成格式化过程。</p>
<p>如果你不想在主句对应的花括号内写位置参数，你必须保证末尾提供的字符串顺序与主句对应要插入的位置保持一致。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;&#125;和&#123;&#125;是一对好&#123;&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div></pre></td></tr></table></figure>
<p>当然，你也可以在format括号内内对字符串进行命名，然后将对应名字传入主句对应花括号内部。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"I'm &#123;name&#125;. I'm &#123;age&#125; year old"</span>.format(age=<span class="number">26</span>,name=<span class="string">'raindu'</span>)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>这种情况下你也不必考虑format括号内的字符串对应顺序，因为所有的字符串都有名称，只传入名称，函数即可自动完成索引配对。</p>
<p>使用以上两种方式都可以方便的遍历网页：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url=<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'%d'</span> % i</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image12.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'&#123;&#125;'</span>.format(i)</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image13.jpg" alt=""></p>
<p>好了今天就这样了，要同时贯穿两门语言真的不是一件容易的事情，长路漫漫以后日子要苦逼了。</p>
<h3 id="本章汇总："><a href="#本章汇总：" class="headerlink" title="本章汇总："></a>本章汇总：</h3><p><strong>R语言字符串格式化输出：</strong></p>
<ul>
<li>paste/paste0</li>
<li>stringr::str_c</li>
<li>sca::percent</li>
<li>scales::percent</li>
<li>sprintf</li>
</ul>
<p><strong>Python字符串格式化输出：</strong></p>
<ul>
<li>格式化符号：%d/%s/%f等（规则与R中的sprintf大体一致）</li>
<li>.format格式化输出：</li>
</ul>
<p><strong>关于传参的规则：</strong></p>
<ul>
<li>使用格式化符号可以通过位置参数【比较好用】、命名参数来实现字符串格式化输出【使用字典反而繁琐了】。</li>
<li>使用.format格式化输出可以通过顺序参数（编号顺序）、位置参数（前后位置顺序需一致）、名称参数（比较自由不用考虑顺序）</li>
</ul>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Python不到一个月，虽然学的很渣，但是还是想通过这种途径分享自己的学习心得，毕竟当初学习R语言也是这么走过来的。&lt;/p&gt;
&lt;p&gt;今天是R语言与Python综合系列的第一篇，就聊一聊两者在常用字符串输出上的差异。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.raindu.com/categories/Python/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
      <category term="Python" scheme="http://www.raindu.com/tags/Python/"/>
    
      <category term="字符串" scheme="http://www.raindu.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>用优雅的配色来缔造图表专业主义~</title>
    <link href="http://www.raindu.com/2017/06/23/%E7%94%A8%E4%BC%98%E9%9B%85%E7%9A%84%E9%85%8D%E8%89%B2%E6%9D%A5%E7%BC%94%E9%80%A0%E5%9B%BE%E8%A1%A8%E4%B8%93%E4%B8%9A%E4%B8%BB%E4%B9%89/"/>
    <id>http://www.raindu.com/2017/06/23/用优雅的配色来缔造图表专业主义/</id>
    <published>2017-06-23T01:10:23.000Z</published>
    <updated>2017-06-23T01:33:06.481Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orz7qelg0.bkt.clouddn.com/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg" alt=""></p>
<p>总觉得以前自己写的东西太过琐碎，纠结于步骤和技巧，而没有任何体系上和理念上的输出；</p>
<a id="more"></a>
<p>而再加上自己文风粗陋（毕竟每一篇的错别字用十个手指头都数不完呀）、排版拙劣，还有那么多小伙伴儿不离不弃，肯于点赞，实在是感到惭愧（我一般都很少看自己写的东西的不忍直视哈哈）~</p>
<p>可能之前限于能力和实力，一直在跟着别人的步调走，始终在模仿；再加上自己过于追求数量，在质量上用心不多。</p>
<p>不过现在自我感觉好一些了，开始慢慢的思考一些深度的技巧运用，偶尔也会有一些纯理念的总结。</p>
<p>以后的更新频率打算保持在一周2~3篇左右，但是每一篇的内容会向着综合性、应用性方向转变。当然，关于内容排版和文章封面图都会多花一些心思，尽可能的提升一下阅读体验。</p>
<p><strong>下面是今天的干货~</strong></p>
<p>今天要跟大家分享的是如何在实际图表场景中运用ggtech包的配色及主题，案例是关于全球互联网公司市值比较（数据皆为真实数据，来源于搜狐网）。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>因为基础的ggplot2语法已经介绍过了，这里我就不介绍具体步骤了，直接使用最终调试好的代码。</p>
<p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggtech"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>数据导入：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div><div class="line">newdata&lt;-mydata[<span class="number">1</span>:<span class="number">5</span>,]</div></pre></td></tr></table></figure>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例演示："><a href="#案例演示：" class="headerlink" title="案例演示："></a>案例演示：</h3><h4 id="柱形图（全球市值top5互联网公司-）"><a href="#柱形图（全球市值top5互联网公司-）" class="headerlink" title="柱形图（全球市值top5互联网公司 ）"></a>柱形图（全球市值top5互联网公司 ）</h4><blockquote>
<p>数据截止2015年，单位：十亿美元</p>
</blockquote>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image6.png" alt=""></p>
<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><p>以下用饼图来呈现前五大互联网公司的相对市值大小：</p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image8.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image11.png" alt=""></p>
<h4 id="粗边面积图"><a href="#粗边面积图" class="headerlink" title="粗边面积图"></a>粗边面积图</h4><p>接下来用国内BAT三巨头的连续7年市值数据制作堆积的粗边面积图：</p>
<p>数据来源于<a href="http://www.14du.com/" target="_blank" rel="external">www.14du.com</a>  截止2015年，单位：亿美元</p>
<p><strong>导入数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mynewdata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div></pre></td></tr></table></figure></p>
<p>使用reshape2包进行转置塑性：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line">newmydata &lt;- melt(mynewdata, id.vars = c(<span class="string">"Year"</span>),variable.name = <span class="string">"Name"</span>, value.name = <span class="string">"Value"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image14.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image15.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image16.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image17.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"orange"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image18.png" alt=""></p>
<p>真是不好意思，没有刹住车，糊里糊涂的就写了这么多，也忘记对代码做变量中转了，其实核心代码我就写了三个，其他都是Ctrl+V、Ctrl+V不停地狂点鼠标。</p>
<p>这个ggtech包前天刚分享过的，配色上很惊艳，很有科技范，非常适合用在商业数据分析中，说不定还能给你的领导带来惊喜呢，还等什么呢，赶快来试一试吧！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orz7qelg0.bkt.clouddn.com/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;总觉得以前自己写的东西太过琐碎，纠结于步骤和技巧，而没有任何体系上和理念上的输出；&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="图表美化" scheme="http://www.raindu.com/tags/%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
  </entry>
  
  <entry>
    <title>不经意间又发现了一个有趣又炫酷的包</title>
    <link href="http://www.raindu.com/2017/06/23/%E4%B8%8D%E7%BB%8F%E6%84%8F%E9%97%B4%E5%8F%88%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E5%8F%88%E7%82%AB%E9%85%B7%E7%9A%84%E5%8C%85/"/>
    <id>http://www.raindu.com/2017/06/23/不经意间又发现了一个有趣又炫酷的包/</id>
    <published>2017-06-23T00:52:32.000Z</published>
    <updated>2017-06-23T01:07:27.441Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orz60j4aw.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>关于R语言可视化的内容，之前写有个系列，最近零零散散的又发现了一些好玩的包，刚学会就赶紧来跟大家分享~</p>
<a id="more"></a>
<p>这一篇分享一个围绕ggplot开发的主题包——ggtech。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>不过这个包依赖的ggplot2版本需要很高才能搭配使用（仔细了解了下，貌似要开发版的ggplot2）</p>
<p>所以在开始本篇分享之前，你需要保证自己已经下载了开发版的ggplot2包</p>
<ul>
<li>devtools</li>
<li>curl</li>
</ul>
<p>以上两个是下载开发版ggplot2的必备包</p>
<p><strong>然后运行以下代码：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">'hadley/ggplot2'</span>)</div></pre></td></tr></table></figure></p>
<p>也许会报错，你可能需要更新你的Rtools至最新版。</p>
<p>如果实在没法下载成功开发版的ggplot2的话，也不要着急，据说ggplot2最新版本马上就要提供更新了，再稍微耐心等待几天，就会有更新提醒的。</p>
<hr>
<p>之所以跟大家分享ggtech包是因为，该将几个全球著名的互联网公司官方用色做成了图表主题和配色模板，使用ggtech可以很容易的套用这些主题和配色模板。</p>
<p>还以diamonds数据集为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggtech)</div></pre></td></tr></table></figure></p>
<h3 id="主题套用："><a href="#主题套用：" class="headerlink" title="主题套用："></a>主题套用：</h3><p><strong>套用Airbnb主题</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-diamonds[diamonds$color %<span class="keyword">in</span>%LETTERS[<span class="number">4</span>:<span class="number">7</span>], ]</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_airbnb_fancy() + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>)  + </div><div class="line">      labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div><div class="line">``` </div><div class="line">![](http://orz60j4aw.bkt.clouddn.com/image3.png)</div><div class="line"></div><div class="line"></div><div class="line">怎么样，配色系统还不错吧，那是自然的，这组配色是取自大名鼎鼎的Airbnb的官方用色，设计感和视觉体验那都是全球顶尖水平的。</div><div class="line"></div><div class="line">而且使用以上ggtech函数之后，语法上还是与ggplot体系保持一致，只是……竟然可以设置subtitle参数了禁简直太逆天了……</div><div class="line"></div><div class="line">要知道老版本ggplot2如果想要设置一个副标题，你要么需要使用写自定义函数，要么需要使用labs并且自己指定副标题的精确位置函数。（鬼才知道呢，要一点儿一点儿写位置参数不断尝试~—~）</div><div class="line"></div><div class="line">除了Airbnb的主题之外，还有几个著名互联网公司的颜色风格主题：</div><div class="line"></div><div class="line">**etsy风格：**</div><div class="line">```r</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      labs(title=<span class="string">"Etsy theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Facebook theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image5.png" alt=""> </p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">     theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     labs(title=<span class="string">"Google theme"</span>, </div><div class="line">     subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image6.png" alt=""> </p>
<p><strong>Twitter风格：</strong></p>
<pre><code class="r">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+
      theme_tech(theme=<span class="string">"twitter"</span>) + 
      scale_fill_tech(theme=<span class="string">"twitter"</span>) + 
      labs(title=<span class="string">"Twitter theme"</span>, 
      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)
</code></pre>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image7.png" alt=""> </p>
<p>很惊艳吧有木有，想象一下你的图表如果都是这种配色，还会被领导嫌弃嘛！</p>
<p>这种国际顶尖互联网公司的配色风格，一般都是经由世界级的视觉与色彩设计师们的大手笔，无论是设计感还是艺术感上都是棒棒哒，用在自己的业务分析图表中，绝对可以给你的工作增色不少。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orz60j4aw.bkt.clouddn.com/image1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于R语言可视化的内容，之前写有个系列，最近零零散散的又发现了一些好玩的包，刚学会就赶紧来跟大家分享~&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="ggtech" scheme="http://www.raindu.com/tags/ggtech/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot图表系统中的辅助线</title>
    <link href="http://www.raindu.com/2017/06/22/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%BE%85%E5%8A%A9%E7%BA%BF/"/>
    <id>http://www.raindu.com/2017/06/22/R语言可视化——ggplot图表系统中的辅助线/</id>
    <published>2017-06-22T13:07:34.000Z</published>
    <updated>2017-06-22T13:18:44.018Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的推送中，曾经有过一篇介绍excel图表辅助线的制作方法，其中用到的技巧五花八门、令人眼花缭乱。</p>
<a id="more"></a>
<p>而ggplot图表系统中的辅助线添加起来却异常简单，非常易于操作。</p>
<p>这主要得益于ggplot函数系统的图层控制理念以及该包的开发者很早就意识到图表辅助线这一层面的图表元素需求。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>接下来我以几个案例的形式对图表辅助线操作进行演示：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Conpany"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="添加辅助线："><a href="#添加辅助线：" class="headerlink" title="添加辅助线："></a>添加辅助线：</h3><p>以上柱形图中，我们如果想要了解五个公司的销售额均值以及单个公司销售额与均值的对比情况，需要在图表中添加一条平均线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上通过geom_hline图层为柱形图添加了均值辅助线，但是大家一定好奇为啥均值线那么低，低于所有公司的销售额，因为均值是季度均值，而销售额是年度累计销售额。</p>
<p>接下来我们制作一个分季度的柱形图。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/image3.png" alt=""></p>
<p>当然这种均值线在分面状态下也是可以添加的。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+facet_grid(.~Year)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image4.png" alt=""></p>
<p>辅助线在散点图中也是经常使用的一种图表元素，它可以帮助我们对分布形态进行分割和归纳，使得数据分布形态及趋势更加明显。</p>
<p>接下来使用diamond数据集来展示散点图中的辅助线。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上散点图没有很明显的分散趋势，不过为了演示散点图中的辅助线，我还是将散点像素画处理，给散点图加上均值十字线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point(shape=<span class="string">"."</span>)+geom_hline(aes(yintercept=mean(price)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+geom_vline(aes(xintercept=mean(carat)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image6.png" alt=""></p>
<p>像素化处理之后，再加上均值十字线，你可以清晰地看到，数据分布形态中，左下角最为密集。</p>
<p><strong>辅助线的另外一种常见的用途就是在时间序列数据中。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image7.png" alt=""></p>
<p>这里可以使用辅助线来标注我们最感兴趣的时间点数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()+geom_vline(aes(xintercept=as.numeric(start)),data=presidential)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; head(presidential)</div><div class="line">        name      start        end      party</div><div class="line"><span class="number">1</span> Eisenhower <span class="number">1953</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">2</span>    Kennedy <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> Democratic</div><div class="line"><span class="number">3</span>    Johnson <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div><div class="line"><span class="number">4</span>      Nixon <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> Republican</div><div class="line"><span class="number">5</span>       Ford <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">6</span>     Carter <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1981</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div></pre></td></tr></table></figure>
<p>presidential数据集是一个美国历届总统的任期截止时间，通过添加总统任期时间点，我们甚至可以从经济波动数据中观察到经济指标变波动与政治周期的关系。</p>
<p>start是一个代表日期的字段，也就是说我们可以赋值给geom_vline函数一个字段，从而在折线图中绘制出多个时间点的辅助线。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前的推送中，曾经有过一篇介绍excel图表辅助线的制作方法，其中用到的技巧五花八门、令人眼花缭乱。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>竟然是一个升级版的数据透视表,Tableau真的没有那么神秘~</title>
    <link href="http://www.raindu.com/2017/06/22/%E7%AB%9F%E7%84%B6%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8D%87%E7%BA%A7%E7%89%88%E7%9A%84%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8-Tableau%E7%9C%9F%E7%9A%84%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%A5%9E%E7%A7%98/"/>
    <id>http://www.raindu.com/2017/06/22/竟然是一个升级版的数据透视表-Tableau真的没有那么神秘/</id>
    <published>2017-06-22T00:14:18.000Z</published>
    <updated>2017-06-22T01:24:11.671Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://orxaqmu8d.bkt.clouddn.com/2017-06-22_072855.jpg" alt=""></p>
<p>前一篇跟大家详述了关于Excel在作图理念上的诸多细节，今天让我们把交点聚焦于多分类维度的数据呈现问题。</p>
<a id="more"></a>
<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>当然今天这篇我会把视角从Excel切换到Tableau，没错就是Tableau。可能很多小伙伴儿已经了解过这款商务智能工具，这是一款目前市面上最成熟、最人性化的桌面端可视化工具（没有之一，至于PowerBI，我之后会写专门的实用贴来解释）。</p>
<p>相信很多小伙伴儿（特别是已经在职场已经混迹很多年的）对Excel中的数据透视表非常熟悉，没错Tableau就是一款升级版的数据透视表。</p>
<p>它不仅仅可以将原始的一维表数据透视为二维表格，它甚至强大到可以将原始数据直接透视成多维图表，所有的流程跟Excel的数据透视表几无二致。</p>
<p><strong>特色对比</strong></p>
<p>好吧，我要为我说过的话负责，接下来我们界面菜单布局和使用体验两个角度，以案例的形式来解释以上原因：</p>
<p>在正式介绍之前，我们应该明确的是，数据可视化其实就是在呈现一组由不同维度和度量组成的字段（变量），无论是一维、二维、三维甚至更高维的情况，所以所有的可视化形式都是建立在维度与度量等指标之上的，在导入数据源之后，你就应该有意识的熟悉数据结构，认识到所有的指标的属性（是维度还是度量）以及度量之间的关系（粒度的粗细，层级的高低）。</p>
<p>想强调的第二点是，数据可视化是一种数据变量间的关系探索。因而不要带着长久以来微软的Excel强加给你的关于可视化图表类型的限制，可视化形式应该服务于业务分析与关系挖据的需求，应该说我们是按照自己的目的去定制可视化的呈现形式的，至于单个的图表类型，那只是诸多可视化形式中使用频率比较高的几种而已，事实上的可以呈现数据的图形可视化形式远不止于此。</p>
<h3 id="关于Tableau与Excel数据透视表的界面高度一致："><a href="#关于Tableau与Excel数据透视表的界面高度一致：" class="headerlink" title="关于Tableau与Excel数据透视表的界面高度一致："></a>关于Tableau与Excel数据透视表的界面高度一致：</h3><p>Excel的数据透视表和Tableau的工作表都同时提供菜单式操作和页面式操作，而且操作体验和风格大致相当。</p>
<p>页面式操作——Excel：</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>页面式操作——Tableau:（Tableau界面只有一处筛选器，放在了菜单里）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image4.jpg" alt=""></p>
<p>菜单式操作——Excel：<br><img src="http://orxaqmu8d.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>菜单式操作——Tableau:（Tableau界面只有一处筛选器，放在了菜单里）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image3.jpg" alt=""></p>
<p><strong>我们把Excel和Tableau的页面式操作和菜单式操作窗口进行对比展示：</strong></p>
<p>页面式（Excel VS Tableau）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image15.png" alt=""></p>
<p>菜单式（Excel VS Tableau）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image16.png" alt=""></p>
<p>表面上看，Tableau就是另一个翻版的Excel数据透视表，这在两者的界面设计理念以及菜单设计上就已经一清二楚。</p>
<p>行、列、值、筛选四大模块应有尽有。唯一的不同就在于，Tableau有了一个标识模块，而Excel是没有的。</p>
<p>接下来解释原因，看过我之前文章的小伙伴儿大概都已经有所熟知我所说的可视化视觉信号，视角信号可以是物理元素（点线面）也可以是色彩元素（透明度、色调等），当然更多的时候是点线面和颜色元素的组合。</p>
<p>当然文本也可以被称为一种视觉元素，毕竟文本是可以被我们的肉眼识别的视觉信息。</p>
<p>我们常说的字不如表、表不如图，其实严格来说三者表达的信息都是一致的，但是从视觉呈现上来说，我们人类都是视觉动物，大脑主观上更能接受由这些物理元素与颜色属性等视觉信号组成的混合图形（即图表）。</p>
<p>所以说Excel所完成的就是视觉呈现中的字和表，表示纯数字的，无需对其进行各种形状、颜色的修饰，所以Excel的透视表界面中除了行、列、筛选等三个常用维度容器之外，只有一个值容器（用于盛放度量指标）。</p>
<p>而Tableau中除了行、列、筛选等三个常用维度容器之外，更多的是通过标识来进行度量的视觉信号转化过程。（当然里面也是包含文本的，文本标识就完全可以胜任Excel数据透视表中的值呈现了）。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image17.png" alt=""></p>
<p>我们从上图中可以看到，Tableau的标识模块中，不但提供了文本呈现方式（效果就是数据投透视表啦），还有各种颜色、大小、线条、形状、详细信息（图表标签）、工具提示（图表弹窗）等。可以说你能想象到的可视化元素，机会都有了。</p>
<p>这才是一款成熟的可视化软件应该具备的样子。</p>
<h3 id="多维度数据呈现案例展示："><a href="#多维度数据呈现案例展示：" class="headerlink" title="多维度数据呈现案例展示："></a>多维度数据呈现案例展示：</h3><p>说了这么久，干巴巴的总要来几个案例练习一下，同样的数据，同样的菜单，同样的字段布局，这个解释可不可以给个满分。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>也会针对Excel而言，这已经是极限了，因为Excel数据透视表透视的仅仅是表而言，没法再多给出除了数字之外的信息，这时候就是Tableau大展身手的时候啦。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>我可以将单个指标大小映射给单元格背景颜色，这时候就可以做出类似Excel色阶功能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>同样也可以将单个指标映射给单元格的字体颜色，此时指标的大小可以通过字体颜色深浅来表达。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>我同样可以将指标映射给形状、大小等，同一个图表对象上，我们可以通过将同一个指标连续添加不同的映射属性上来扩展该图表信息呈现丰富度，也可以将指标添加到文本、详细信息、工具提示等选项上来丰富图表单个指标的信息解释功能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/imaeg9.jpg" alt=""><br><img src="http://orxaqmu8d.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>而tableau最最高明之处（我觉得）就是，利用维度透析的理念来按需完成可视化探索过程，而不会受制软件工具的技术限制，因为所有的规则都是透明的，方法和Excel的透视表示类似的、逻辑与使用者对数据结构的理解和业务逻辑的识别能力有关。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orxaqmu8d.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>维度呈现自如灵活，如行云流水，随心所欲，无所不能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image13.jpg" alt=""></p>
<p>辅助右上角的筛选器和图例菜单，动态效果立马显现，自助式BI的精髓表达的淋漓尽致。</p>
<p><strong>Tableau也支持很流行的地图数据可视化探索功能。</strong></p>
<p>通常需要在地图上呈现的数据形式无非两种：填充地区颜色以及添加基于坐标的气泡图（也可填色）。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/imaeg14.jpg" alt=""></p>
<p>这些形式都可以用Tableau模块中的对应可视化形式来完成，而如果能够精心设计配色和版式，合理选择可视化形式，Tableau完全可随意出版物级别的数据可视化仪表盘。</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjg0MDU3OTE1Mg==" frameborder="0" 'allowfullscreen'=""></iframe>

<p>更多关于Tableau的干活，请持续关注本公众号后续更新。</p>
<p>当然我所说的以上规则只适用于建立在笛卡尔坐标系下的普通图表，基于极坐标系、空间投影坐标以及想树状图、气泡云图等没有明显轴维度的图表类型并不适用，但是关于维度与度量的呈现规则是适用的，因为无论什么样的图表呈现的无外乎都是一组维度与度量的指标。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://orxaqmu8d.bkt.clouddn.com/2017-06-22_072855.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;前一篇跟大家详述了关于Excel在作图理念上的诸多细节，今天让我们把交点聚焦于多分类维度的数据呈现问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Tableau" scheme="http://www.raindu.com/categories/Tableau/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="Tableau" scheme="http://www.raindu.com/tags/Tableau/"/>
    
      <category term="商务智能" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——多图层叠加（离散颜色填充与气泡图综合运用）</title>
    <link href="http://www.raindu.com/2017/06/21/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%A4%9A%E5%9B%BE%E5%B1%82%E5%8F%A0%E5%8A%A0%EF%BC%88%E7%A6%BB%E6%95%A3%E9%A2%9C%E8%89%B2%E5%A1%AB%E5%85%85%E4%B8%8E%E6%B0%94%E6%B3%A1%E5%9B%BE%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%EF%BC%89/"/>
    <id>http://www.raindu.com/2017/06/21/R语言可视化——多图层叠加（离散颜色填充与气泡图综合运用）/</id>
    <published>2017-06-21T11:35:53.000Z</published>
    <updated>2017-06-21T11:46:52.544Z</updated>
    
    <content type="html"><![CDATA[<p>今天这一篇是昨天推送的基础上进行了进一步的深化，主要讲如何在离散颜色填充的地图上进行气泡图图层叠加。</p>
<a id="more"></a>
<p>为了使得案例前后一致，仍然使用昨天的数据集。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(sp)</div></pre></td></tr></table></figure></p>
<p><strong>导入中国省界地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">data1&lt;- china_map@data      </div><div class="line">data2&lt;- data.frame(id=row.names(data1),data1)</div></pre></td></tr></table></figure></p>
<p><strong>数据格式转化及业务数据合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1,data2, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>各省省会城市经纬度数据：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div></pre></td></tr></table></figure>
<h3 id="构造数据地图作图数据："><a href="#构造数据地图作图数据：" class="headerlink" title="构造数据地图作图数据："></a>构造数据地图作图数据：</h3><p><strong>根据自己的数据量级和具体业务需要设置分割点</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-mydata[,-c(<span class="number">5</span>,<span class="number">6</span>)]</div><div class="line">mydata$zhibiao&lt;-rnorm(<span class="number">33</span>,<span class="number">100</span>,<span class="number">50</span>)</div><div class="line">mydata$zhibiao&lt;-abs(mydata$zhibiao)</div><div class="line">mydata$zhibiao2&lt;-round(mydata$zhibiao,<span class="number">0</span>)</div><div class="line">mydata$fau &lt;- cut(mydata$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">250</span>))</div></pre></td></tr></table></figure></p>
<p><strong>将转换的分段因子变量重新命名为我们需要的分段阀值：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata$fam&lt;-factor(mydata$fau,levels=c(<span class="string">'(0,50]'</span>,<span class="string">'(50,100]'</span>,<span class="string">'(100,150]'</span>,<span class="string">'(150,200]'</span>,<span class="string">'(200,250]'</span>),labels=c(<span class="string">'0~50'</span>,<span class="string">'50~100'</span>,<span class="string">'100~150'</span>,<span class="string">'150~200'</span>,<span class="string">'200~250'</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><strong>将业务数据与地理信息数据合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>) </div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))</div></pre></td></tr></table></figure></p>
<h3 id="离散标度填充："><a href="#离散标度填充：" class="headerlink" title="离散标度填充："></a>离散标度填充：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(china_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orwbijg12.bkt.clouddn.com/image1.png" alt=""></p>
<p><strong>在离散颜色标度的基础上添加各省份散点图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>更该散点图为气泡图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">province_city$PerforamA&lt;-round(rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>),<span class="number">0</span>)</div><div class="line">province_city$Perforamb&lt;-round(rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>),<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orwbijg12.bkt.clouddn.com/image3.png" alt=""></p>
<p>本来打算再继续在气泡图的基础上进行颜色渐变填充呢，可以试了一下，这样的话前面的底图离散颜色标度填充的的时候已经使用过了一个fill属性设置选项，而要对气泡图进行颜色渐变填充就要再使用一次fill属性，可是目前为止我还不知道如何在多图层中出现多个fill属性的时候如何识别并分别进行标度设置，当我运行如下代码时，软件无法识别两个颜色标度设置分别对应的指标，因而图表无法跑出来：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA,fill=PerforamB),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+     </div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     scale_fill_gradient2(low=<span class="string">"DarkCyan"</span>, mid=<span class="string">"Azure"</span>, high=<span class="string">"Sienna"</span>, midpoint=median(province_city$PerforamB))+ </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<blockquote>
<p>Scale for ‘fill’ is already present. Adding another scale for ‘fill’, which will replace the existing scale.<br>Error: Discrete value supplied to continuous scale</p>
</blockquote>
<p>实在是太遗憾了，不知道哪位大神知道如何处理多图层相同的fill属性，可以告知在下，这里先行谢过了。</p>
<h3 id="处理标签问题："><a href="#处理标签问题：" class="headerlink" title="处理标签问题："></a>处理标签问题：</h3><p>最后来处理标签问题，为了防止页面杂乱不堪，我只用了PerforamA指标前十个标签。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">labelper&lt;-province_city[order(province_city[,<span class="number">5</span>],decreasing=<span class="literal">T</span>),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(x=jd+<span class="number">2.3</span>,y=wd,label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=labelper) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image4.png" alt=""></p>
<p>要是把所有的标签全部都添加到地图上的话，真的不太合适，本来图层就有两个，已经出现信息相互遮挡的情况了。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(x=jd+<span class="number">2.3</span>,y=wd,label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=province_city) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image5.png" alt=""></p>
<p>所以标签的话，还是尽量越少越好，最好别添加，本来省级行政单位作为地理常识，已经是大家心知肚明的东西了，信息表达到位了就OK了。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这一篇是昨天推送的基础上进行了进一步的深化，主要讲如何在离散颜色填充的地图上进行气泡图图层叠加。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——数据地图离散百分比填充（环渤海）</title>
    <link href="http://www.raindu.com/2017/06/21/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%A6%BB%E6%95%A3%E7%99%BE%E5%88%86%E6%AF%94%E5%A1%AB%E5%85%85%EF%BC%88%E7%8E%AF%E6%B8%A4%E6%B5%B7%EF%BC%89/"/>
    <id>http://www.raindu.com/2017/06/21/R语言可视化——数据地图离散百分比填充（环渤海）/</id>
    <published>2017-06-21T01:28:30.000Z</published>
    <updated>2017-06-21T01:38:11.156Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享如何以百分比形式填充离散分段数据地图。</p>
<a id="more"></a>
<p>案例用环渤海三省二市的地理数据。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(plyr)</div></pre></td></tr></table></figure></p>
<p><strong>数据导入、转换、抽取：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CHN_adm2 &lt;- readShapePoly(<span class="string">"c:/rstudy/CHN_adm/CHN_adm2.shp"</span>) </div><div class="line">CHN_adm2_1 &lt;- fortify(CHN_adm2)   </div><div class="line">data1 &lt;- CHN_adm2@data          </div><div class="line">data2 &lt;- data.frame(id=row.names(data1),data1)        </div><div class="line">china_map_data &lt;- join(CHN_adm2_1, data2, type = <span class="string">"full"</span>) </div><div class="line">huanbohai &lt;-subset(china_map_data,NAME_1==c(<span class="string">"Beijing"</span>,<span class="string">"Tianjin"</span>,<span class="string">"Nei Mongol"</span>,<span class="string">"Hebei"</span>,<span class="string">"Shandong"</span>))</div></pre></td></tr></table></figure></p>
<p><strong>建立业务数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">huanbohai_perm&lt;-data.frame(NAME_2=unique(huanbohai$NAME_2),zhibiao=rnorm(<span class="number">42</span>,<span class="number">100</span>,<span class="number">50</span>))</div><div class="line">huanbohai_perm$zhibiao&lt;-round(huanbohai_perm$zhibiao,<span class="number">0</span>)</div><div class="line">write.table (huanbohai_perm, file =<span class="string">"C:/rstudy/huanbohai.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><strong>业务数据导入及合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(<span class="string">"C:/rstudy/huanbohai.csv"</span>,header=<span class="literal">T</span>)</div><div class="line">huanbohai_map_data &lt;- join(huanbohai,mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>将转换的分段因子变量重新命名为我们需要的分段阀值：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">huanbohai_map_data$fau &lt;- cut(huanbohai_map_data$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">40</span>,<span class="number">80</span>,<span class="number">120</span>,<span class="number">160</span>,<span class="number">200</span>)) </div><div class="line">huanbohai_map_data$fam&lt;-factor(huanbohai_map_data$fau,levels=c(<span class="string">'(0,40]'</span>,<span class="string">'(40,80]'</span>,<span class="string">'(80,120]'</span>,<span class="string">'(120,160]'</span>,<span class="string">'(160,200]'</span>),labels=c(<span class="string">'0~40'</span>,<span class="string">'40~80'</span>,<span class="string">'80~120'</span>,<span class="string">'120~160'</span>,<span class="string">'160~200'</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<h3 id="离散颜色标度填充（实际值分段）"><a href="#离散颜色标度填充（实际值分段）" class="headerlink" title="离散颜色标度填充（实际值分段）:"></a>离散颜色标度填充（实际值分段）:</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot(huanbohai_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orvigieh3.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上是昨天在东三省填充地图中所使用过的方法，接下来我解释一种新的填充方案，通过将数量段转换为百分比进行离散颜色标度填充：</p>
<h3 id="离散颜色标度分割（百分比数量段）："><a href="#离散颜色标度分割（百分比数量段）：" class="headerlink" title="离散颜色标度分割（百分比数量段）："></a>离散颜色标度分割（百分比数量段）：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(na.omit(huanbohai_map_data$zhibiao), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">huanbohai_map_data$zhibiao_q&lt;-cut(huanbohai_map_data$zhibiao,qa,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">&gt; levels(huanbohai_map_data$zhibiao_q)</div><div class="line">[<span class="number">1</span>] <span class="string">"0-20%"</span>   <span class="string">"20-40%"</span>  <span class="string">"40-60%"</span>  <span class="string">"60-80%"</span>  <span class="string">"80-100%"</span></div></pre></td></tr></table></figure>
<p>通过将指标变量以分段百分比的方式进行分割，新建立一个百分比分段因子变量：</p>
<p><strong>离散渐变（百分比）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))</div><div class="line">ggplot(huanbohai_map_data,aes(long,lat))+</div><div class="line">     geom_polygon(aes(group=group,fill=zhibiao_q),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+</div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =c(<span class="number">0.2</span>,<span class="number">0.7</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>带标签</strong></p>
<h3 id="接下来处理标签问题："><a href="#接下来处理标签问题：" class="headerlink" title="接下来处理标签问题："></a>接下来处理标签问题：</h3><p>创建各城市中心地理坐标：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(data1) mean(range(data1,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(huanbohai_map_data,.(city),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure></p>
<p><strong>填充并添加标签：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(huanbohai_map_data,aes(long,lat))+</div><div class="line">     geom_polygon(aes(group=group,fill=zhibiao_q),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=centres) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          legend.text.align=<span class="number">1</span>,</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.2</span>,<span class="number">0.7</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/image3.png" alt=""></p>
<p>文件及代码分享在QQ群共享中.</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家分享如何以百分比形式填充离散分段数据地图。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——数据地图应用（东三省）</title>
    <link href="http://www.raindu.com/2017/06/20/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E5%BA%94%E7%94%A8%EF%BC%88%E4%B8%9C%E4%B8%89%E7%9C%81%EF%BC%89/"/>
    <id>http://www.raindu.com/2017/06/20/R语言可视化——数据地图应用（东三省）/</id>
    <published>2017-06-20T14:02:34.000Z</published>
    <updated>2017-06-20T14:13:40.015Z</updated>
    
    <content type="html"><![CDATA[<p>今天是一个案例应用，采用东北三省地图进行离散颜色映射，让大家感受下R语言在地理信息空间可视化方面的强大功能，同时也会对之前强调过的地图配色技巧进行应用。</p>
<a id="more"></a>
<h3 id="加载工具包："><a href="#加载工具包：" class="headerlink" title="加载工具包："></a>加载工具包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)       <span class="comment">###绘图函数</span></div><div class="line"><span class="keyword">library</span>(plyr)          <span class="comment">###数据合并工具</span></div><div class="line"><span class="keyword">library</span>(maptools)      <span class="comment">###地图素材导入</span></div><div class="line"><span class="keyword">library</span>(sp)</div><div class="line"><span class="keyword">library</span>(Cairo)         <span class="comment">#图片高清导出</span></div><div class="line"><span class="keyword">library</span>(RColorBrewer)  <span class="comment">###有一些高质量的地图配色模板可以参考</span></div></pre></td></tr></table></figure>
<h3 id="数据导入、转换、合并、提取"><a href="#数据导入、转换、合并、提取" class="headerlink" title="数据导入、转换、合并、提取"></a>数据导入、转换、合并、提取</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CHN_adm2 &lt;- readShapePoly(<span class="string">"c:/rstudy/CHN_adm/CHN_adm2.shp"</span>) <span class="comment">#中国地理信息数据 </span></div><div class="line">CHN_adm2_1 &lt;- fortify(CHN_adm2)  <span class="comment">#转化为数据框 </span></div><div class="line">data1 &lt;- CHN_adm2@data           <span class="comment">#提取行政区划信息</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data2 &lt;- data.frame(id=row.names(data1),data1)        </div><div class="line">china_map_data &lt;- join(CHN_adm2_1,data2, type = <span class="string">"full"</span>) <span class="comment">#合并地理信息数据与经纬度数据</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng &lt;-subset(china_map_data,NAME_1==c(<span class="string">"Heilongjiang"</span>,<span class="string">"Jilin"</span>,<span class="string">"Liaoning"</span>))  <span class="comment">#抽取东北三省的合并数据信息</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image3.png" alt=""></p>
<p>到这里你可以查看一下东三省的市级行政单位详细信息：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">aaa&lt;-data.frame(name=unique(dongsansheng$NAME_2))</div><div class="line">aaa</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image4.png" alt=""></p>
<p>以上已经完成了东北三省的数据提取与整理工作，但是如果要使用自己的数据对各个市级行政进行填充，我们还需要自己制作一个业务数据文件文件，以前我都是将上一步的市级行政单位信息复制黏贴到excel表格中，然后建立业务数据，但是突然发现使用write导出函数可以很容易的将行政单位导出成csv格式数据，而且还避免手动黏贴造成的格式错误：</p>
<h3 id="构造作图数据："><a href="#构造作图数据：" class="headerlink" title="构造作图数据："></a>构造作图数据：</h3><p>同上，将市级行政单位提取出来，并附带建立一个指标变量。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_perm&lt;-data.frame(NAME_2=unique(dongsansheng$NAME_2),zhibiao=rnorm(<span class="number">35</span>,<span class="number">100</span>,<span class="number">20</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image5.png" alt=""></p>
<p>将指标变量保留整数<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_perm$zhibiao&lt;-round(dongsansheng_perm$zhibiao,<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<p>使用write函数将东三省的行政单位信息导出到数据文件目录下，并取名dongsansheng<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">write.table (dongsansheng_perm, file =<span class="string">"C:/rstudy/dongsansheng.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p>如果你需要最后显示各市中文名称的话，可以自己将各市中文名称添加到行政信息文件中，然后将指标列数据更换成自己的真实业务指标。当然如果想要直接使用拼音的话就不必添加中文名。</p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用read.csv函数将刚才整理好的带有业务数据的文件再次导入：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(<span class="string">"C:/rstudy/dongsansheng.csv"</span>,header=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p><strong>将业务数据与地理信息数据再次合并</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data &lt;- join(dongsansheng,mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image7.png" alt=""></p>
<p>至此，制作地图的信息已经全部整理完毕，接下来要正式开始进行填充填充：</p>
<h3 id="地图数据可视化："><a href="#地图数据可视化：" class="headerlink" title="地图数据可视化："></a>地图数据可视化：</h3><p>对于连续渐变填充的方法，之前已经有多篇推送进行介绍，这里还是给出代码，便于大家对不同的方法做出来的效果进行比较：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill=zhibiao)) +</div><div class="line">     geom_polygon(colour=<span class="string">"grey40"</span>) +</div><div class="line">     scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"steelblue"</span>) +</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     theme(              </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank()</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image8.png" alt=""></p>
<p>不要以为到这里就完事儿啦，精彩的好戏还在后头呢！</p>
<p>虽然我们使用连续渐变映射做出来了东三省的数据地图，可以如果我问你你能明确的告诉我某一个市的数值范围具体在那个数量段，你可以立马的告诉我吗，反正我是不能。</p>
<p>连续渐变只能给读者一个大小顺序上的感官印象，我们的依靠肉眼很难辨别出某一个地区的指标所处的数量段，这是连续渐变填充情况下的最大弊端：</p>
<p>经过一段时间的摸索，我终于找到了好的解决办法：下面就是通过数值分割的离散填充技巧具体步骤：</p>
<p><strong>首先要了解自己的业务指标具体分布情况：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">summary(dongsansheng_map_data$zhibiao)</div><div class="line"></div><div class="line">Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </div><div class="line"><span class="number">63.00</span>   <span class="number">93.00</span>   <span class="number">93.00</span>   <span class="number">98.73</span>  <span class="number">100.00</span>  <span class="number">161.00</span></div></pre></td></tr></table></figure></p>
<p><strong>计划将该指标在0~200之间均分为5份：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data$fau &lt;- cut(dongsansheng_map_data$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">40</span>,<span class="number">80</span>,<span class="number">120</span>,<span class="number">160</span>,<span class="number">200</span>))</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">levels(dongsansheng_map_data$fau)</div><div class="line">[<span class="number">1</span>] <span class="string">"(0,40]"</span>    <span class="string">"(40,80]"</span>   <span class="string">"(80,120]"</span>  <span class="string">"(120,160]"</span> <span class="string">"(160,200]"</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image9.png" alt=""></p>
<p>以上通过查看因子水平，我们得到了分割后的因子变量情况，但是直接将该因子变量作为离散颜色边度填充依据的话，那么图例中的因子变成就会默认使用（0，40]……很不美观，所以我们需要对各段因子变量进行重新命名：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data$fam&lt;-factor(dongsansheng_map_data$fau,levels=c(<span class="string">'(0,40]'</span>,<span class="string">'(40,80]'</span>,<span class="string">'(80,120]'</span>,<span class="string">'(120,160]'</span>,<span class="string">'(160,200]'</span>),labels=c(<span class="string">'0~40'</span>,<span class="string">'40~80'</span>,<span class="string">'80~120'</span>,<span class="string">'120~160'</span>,<span class="string">'160~200'</span>),order=<span class="literal">TRUE</span>)</div><div class="line"></div><div class="line">levels(dongsansheng_map_data$fam)</div><div class="line">[<span class="number">1</span>] <span class="string">"0~40"</span>    <span class="string">"40~80"</span>   <span class="string">"80~120"</span>  <span class="string">"120~160"</span> <span class="string">"160~200"</span></div></pre></td></tr></table></figure>
<p>这样的分段更加符合我们的认知，看起来也更加的协调。</p>
<p><strong>接下来就是离散颜色标度的填充：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))  <span class="comment">#首先定义字体，如果你特别追求字体细节的话</span></div></pre></td></tr></table></figure></p>
<p>填充函数：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image10.png" alt=""></p>
<p>这里因为指标全部是正值，且分割后的因子变量是有序因子变量，我用了RColorBrewer包中的单色调离散颜色方案。</p>
<p>其中Blues也是一个很好的选择：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image11.png" alt=""></p>
<p>这个包的配色方案中还有很多非常漂亮的颜色，大家可以依次尝试。</p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image12.png" alt=""></p>
<p><strong>接下来我们来处理各省份的标签问题：</strong></p>
<p>这里有一个很棘手的问题，因为要想给各个城市设置标签，我们必须知道各个城市详细的经纬度数据，而我们的数据集中有的经纬度数据是各城市的轮廓线数据，并没有各城市（城市中心）精确的经纬度数据，所以这里只能勉为其难的取各个城市区域的中心位置作为添加标签的依据（哪位小伙伴儿如果能够获取详细的城市中心经纬度数据，可以共享一下，虽然也可以一个一个的通过百度地图查找当时毕竟效率低）。</p>
<p>获取各个城市区域中心经纬度坐标：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(data1) mean(range(data1,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(dongsansheng_map_data,.(city),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image13.png" alt=""></p>
<p>接下来就添加标签：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data,aes(long,lat)) +               </div><div class="line">     geom_polygon(aes(group=group,fill=fam),colour=<span class="string">"white"</span>) +</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     geom_text(aes(label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=centres) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+    </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+  </div><div class="line">     theme(  </div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),             </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image14.png" alt=""></p>
<p>到此，整个数据地图填充完毕，今天这篇主要针对离散标度颜色填充进行，还有一类离散颜色标度填充方式是将具体的数值转化成百分比数量段进行填充，作为该篇的续集下次再讲，代码文件和数据将会分享在魔方学院QQ群里供群友下载。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是一个案例应用，采用东北三省地图进行离散颜色映射，让大家感受下R语言在地理信息空间可视化方面的强大功能，同时也会对之前强调过的地图配色技巧进行应用。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>那些培训师都不曾告诉你的关于Excel图表的秘密~</title>
    <link href="http://www.raindu.com/2017/06/20/%E9%82%A3%E4%BA%9B%E5%9F%B9%E8%AE%AD%E5%B8%88%E9%83%BD%E4%B8%8D%E6%9B%BE%E5%91%8A%E8%AF%89%E4%BD%A0%E7%9A%84%E5%85%B3%E4%BA%8EExcel%E5%9B%BE%E8%A1%A8%E7%9A%84%E7%A7%98%E5%AF%86/"/>
    <id>http://www.raindu.com/2017/06/20/那些培训师都不曾告诉你的关于Excel图表的秘密/</id>
    <published>2017-06-20T03:48:08.000Z</published>
    <updated>2017-06-20T04:10:21.359Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇关于Excel数据可视化的心得汇总！</p>
<a id="more"></a>
<p>Excel对宽数据和长数据的适用范围：</p>
<h3 id="Excel的图表模块更适合宽数据"><a href="#Excel的图表模块更适合宽数据" class="headerlink" title="Excel的图表模块更适合宽数据"></a>Excel的图表模块更适合宽数据</h3><p>（即汇总过的二维表）；</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image1.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>在长表中，我将选中得三列全部作为簇状柱形图的数据源，默认的柱形图如下所示，虽然在横轴上也出现了两个维度信息（公司维度、日期维度），但是两个维度布局的很不友好。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image3.jpg" alt=""></p>
<h3 id="Excel图表数据源行列限制规则："><a href="#Excel图表数据源行列限制规则：" class="headerlink" title="Excel图表数据源行列限制规则："></a>Excel图表数据源行列限制规则：</h3><p>针对宽数据而言，Excel并不严格限定行列（允许行列自由转置），过渡的自由有时候会造成制图效率的低下，所以如果等领会我接下来交给你的心得，那么你的制图效率将会提高很多。</p>
<p>在详细解释以上内容之前，你需要对数据结构中的基本概念有所了解，即什么叫维度、什么叫度量。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image4.jpg" alt=""></p>
<p>如果不那么严格的进行定义，你可以粗略的将数值型指标当做度量（并不绝对，要视实际意义而定），类别型指标视作度量。（这其实对应于统计学中的变量类别划分标准：定类变量/定序变量——维度，定距变量/定比变量——度量）</p>
<p>了解变量类型之后，我们可以知道，我们的源数据包含两个维度（公司、日期），一个度量（对应日期某公司的指标）。</p>
<p>源数据的维度之间可以自由的转职（与线性代数中的转至概念没什么差别，就是行列位置的对应调整，并不改变具体度量值，改变的只是呈现数据的方式）。</p>
<p>转至在Excel中有两种方式可以完成，一种是复制数据源，选择性黏贴——行列转换。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>另一种则是在已经完成的默认图表选择菜单中点击行列数据变换。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>我使用同一数据源的原始维度和转之后的维度分别插入了默认的簇状柱形图。结果如下。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>仔细分析以上数据源与默认图表的行列对应关系你会发现，三个字段的位置在原始表格与图形化后的图表上分布及其有规律。</p>
<p>列标题总是对应图表中的横轴，行标题总是对应图表中的图例。而度量总是呈现在图表的纵轴（数量轴）上。</p>
<p>这个规律是Excel图表的默认规则，当然你不必要严格执行此规则，那么不执行的后果就是，如果维度呈现的顺序不符合你的意图，你要么需要在源数据中进行数据转至，要么需要在图表的选择菜单里进行行列变化，进而转换成你中意的图表呈现形式。</p>
<p>所以结论就是，你的数据源组织，需符合以下要求：</p>
<p>1、想要对比的维度按列分布；（最终将会呈现在X轴上）<br>2、需要分类的维度按行分布：（最终通过图例中的颜色分类进行区分）。<br>3、行列虽然可以自由变换（通过数据源选择性黏贴转至或者在图表的选择菜单中进行行列变换），但一定要想清楚你的图表侧重对比那个维度，按照那个维度分类。</p>
<h3 id="Excel与数据聚合功能："><a href="#Excel与数据聚合功能：" class="headerlink" title="Excel与数据聚合功能："></a>Excel与数据聚合功能：</h3><p>Excel的图表模块并没有数据聚合功能。（原因大概是这个模块并不能识别因子变量）。</p>
<p>我所说的聚合是指，通过将一组分类指标（一个维度与一个度量）按照类别分开并计算各类的均值、众数、中位数、方差、标准差、求和计算等。</p>
<p>所以，无论你的维度理念包含多少类别，Excel图表都只会把单个观测值视作单独的指标，这是它与主流可视化工具以及编程类工具在可视化功能上的最大差别和缺憾，也是验证上述观点中：Excel图表模块专为二维表（宽数据）所设计的证据之一。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>以上图示中，列是一个呈现公司维度的指标，这种维度在数据库中非常常见，可能是日期的细分维度、也可鞥是地区的细分维度。</p>
<p>但是Excel的默认图表将维度的单个观测全部视作唯一值，而不会对齐进行任何分类聚合操作。</p>
<p>所以我们要想直接呈现汇总后的图表，需动用数据透析表进行维度透析，或者，将其整理成二维表制作多分类的可视化图表。</p>
<p>（以上操作同样适合条形图，只是条形图实质上相当于将柱形图向右旋转了90，所以条形图的行列概念与柱形图刚好颠倒过来）</p>
<h3 id="Excel维度指标的识别："><a href="#Excel维度指标的识别：" class="headerlink" title="Excel维度指标的识别："></a>Excel维度指标的识别：</h3><p>这里先放四张图供大家思考：</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image8.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image9.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image10.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image11.jpg" alt=""></p>
<p>我想大家一定看出了些猫腻，但是好像还不说不出其中的端倪。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>我是这么理解的，Excel的图表模块是通过行列标题来自动探测并识别维度指标的。以上四幅图最符合我们需求的的应该是第一张图，该图完整的呈现了两个维度和度量的信息。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>图二中，我们在首行首列的位置放入了一个YEAR的名称，我们理所当然的以为这个只是首列的标题而已，可是Excel并没有这么智能，它将其视作与后几列同样性质的公司维度中的一个名称。因为首列也成了一个特殊的公司（日期则成了该特殊公司的另一个维度不同水平的指标）。</p>
<p>所以整个图表的行维度（公司数）变成了6个，而因为没有定义列维度（原始数据中失去了行标题，其实是有的，但是因为添加了一个首行首列交叉位置的YEAR标签，结果Excel将首行作为列的一个维度，因而也就不存在名义上的日期维度分类）。</p>
<p>尽管Excel不知道丢失的维度的具体水平及名称，可是改变不了原始数据是一个二维表这样一个事实，因而还是给丢失的维度信息在图表中补全了，但是是通过默认的系列1、系列2、系列3……等方式来弥补的。</p>
<p><strong>接下来看图示3：</strong></p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>该图的原始数据仍然是一个二维表，但是只有明确的行列维度信息（你以为你写了一组2012、2013^2016这么一组有规律的数据，Excel就能明白这是一个日期维度呀，那你真的是想多了，它跟其他的数值型指标没有任何的区别），与图2的过程类似，维度信息的丢失改变不了原始数据是二维表这样一个事实。因而Excel仍然会帮其补全行列维度（图表横轴补全了原始表列维度信息【即我们想当然以为当做行维度信息的日期和后5列指标】，图表纵轴补原始表中行维度信息，此时行为度信息已经不是我们想当然以为的那个日期指标，而是一组未知度量）。</p>
<p><strong>图示4：</strong></p>
<p>图示4中只明确了表格中列维度信息，而没有声明行维度信息，因为不存在错误识别，该状况下，Excel可以很完美的识别列维度（呈现在图表的横轴上）。而丢失的行维度信息则自动补全（呈现在图例的分类颜色指标上）。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image11.jpg" alt=""></p>
<p>综上所示，Excel识别维度信息是通过原始二维表表结构中的首行首列标签来识别的(切记不要在首行首列中写入任何信息，一定要留白、一定要留白、一定要留白)。</p>
<p>倘若不慎将首行首列（即行列维度标签的交叉单元格）标签交叉位置写入任何内容，那么结果是致命性的，你的列为度（也就是图表的横轴上）会被加入一个虚假的维度类别指标。</p>
<h3 id="关于作图效率："><a href="#关于作图效率：" class="headerlink" title="关于作图效率："></a>关于作图效率：</h3><p>以下是分别在Excel中制作多分类序列图表和其他软件工具（包含桌面端可视化工具以及编程工具等）所分别适用的数据源。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image13.png" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image14.png" alt=""></p>
<p>从效率上来说，自然是其他 工具能更高一些，Excel将每一个分类都视作一个列字段（典型二维表风格），其他的工具是通过将分类序列进行堆栈操作，聚合成一个包含类别变量（因子变量）和一个度量（数值型变量）从而大大简化了数据源，这在分类特别特别多的时候具有很大的优势。（想象一下如果有一千个分类，你难倒要在Excel里面列出1001个列字段吗，使用二维表仍然是三个字段，公司名称、日期，指标）。</p>
<p>当然 也不能说Excel这种二维表作图一无是处，二维表直观易懂，其本事就兼具图形化的信息呈现功能，否则为什么很多专业的报告中除了图表之外，包含很多表格呢，而一维表这种篇原始（但是易于存储）结构的数据应该不会常用于报告中。</p>
<p>所以说对于小数据或者二维表而言，Excel的图表工具还是非常适于此种可视化场景，而要是将二维表用于其他攻击高来进行可视化（可视化桌面端工具或者编程工具），则你需要额外进行数据的长宽转换。<br>（关于数据长宽转换以及多维数据集在不同可视化工具中的最有可视化解决方案，我会专门列一篇进行分析讲解）</p>
<p>以上关于行列维度的分析并不适用于呈现连续性数据的图表类型（如直方图、散点图、气泡图等），原因很简单，如果图表的二维坐标系中都呈现连续性指标，那么也就无所谓维度了，维度是针对分类资料所定义的一种特殊指标，连续性指标也就只剩下度量指标啦。</p>
<p>事实上Excel出了为二维表作图而生之外，还是转门为分类数据可视化而生的（可能我说的比较绝对了，大家不要喷我），为什么的，原因有两个：</p>
<ol>
<li><p>Excel的现存图表库中绝大多数图表是适应分类数据作图，（只要一个轴支持分类数据即可算作离散数据可视化类型，而真正用于连续性数据可视化呈现的图表类型及其少，比如散点图【你会发现Excel的散点图也是支持类别变量的】、气泡图、直方图【直方图以往都是在数据分析库模块中，需要单独调用才能使用，近期才加入普通图表的菜单入口】）。</p>
</li>
<li><p>普通的业务分析场景下，更多的是不同维度间的交叉对比和汇总分析，而连续数据的可视化多用于预测与建模，这在学术研究中（时间序列数据的建模）以及企业的战略数据挖掘部门（市场拓展与销售预测等）使用场景比较多，而且数据量一般都大。（这也决定了Excel使用的局限性，即更适合客观呈现、适合分类资料的汇总可视化，不适合用于大数据量的挖掘呈现）。</p>
</li>
<li><p>当然我还有一个证据在证明我以上的看法，那就是最近两年微软公司尽心尽力培育的PowerBI商务智能系统，在数据源上完美支持主流数据库，可视化形式上使用一维表进行操作，在数据量上也大大突破了Excel所能承受的量级。这或许就是当前大数据如火如荼的形势下，微软的office系统显然已经无法支撑大数据下的分析与可视化需求，必须布局其自己的大数据分析与可视化系统。</p>
</li>
</ol>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇关于Excel数据可视化的心得汇总！&lt;/p&gt;
    
    </summary>
    
      <category term="Excel" scheme="http://www.raindu.com/categories/Excel/"/>
    
    
      <category term="Excel" scheme="http://www.raindu.com/tags/Excel/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot图表中的线条</title>
    <link href="http://www.raindu.com/2017/06/19/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E7%BA%BF%E6%9D%A1/"/>
    <id>http://www.raindu.com/2017/06/19/R语言可视化——ggplot图表中的线条/</id>
    <published>2017-06-19T14:08:27.000Z</published>
    <updated>2017-06-19T14:22:58.141Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享的是<code>ggplot</code>图表中的一类重要元素——线条。</p>
<p>不要觉得专门为线条写一章推送有点小题大做，其实线条对于图表而言，功不可没，即便是不起眼的网格、轴线、或者线条的粗线、线型、磅数等都将决定着你的图表品质。</p>
<p>R语言中ggplot函数系统中涉及到线条的地方有很多，最常见的场景就是我们做<code>geom_line()</code>（折线图）、<code>geom_path（）</code>(路径图),以及图表的绘图区（<code>panel</code>）、图表区、网格系统（<code>grid</code>）中所涉及到的线条。</p>
<a id="more"></a>
<p>今天以一个折线图为例，简要说明ggplot函数中关于线条的主要参数及其效果。</p>
<h3 id="数据构造过程："><a href="#数据构造过程：" class="headerlink" title="数据构造过程："></a>数据构造过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Company = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">4000</span>,<span class="number">3200</span>,<span class="number">2800</span>,<span class="number">3700</span>),Sale2016 = c(<span class="number">6000</span>,<span class="number">4800</span>,<span class="number">4500</span>,<span class="number">3500</span>,<span class="number">4300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Company"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<h3 id="案例引入："><a href="#案例引入：" class="headerlink" title="案例引入："></a>案例引入：</h3><p>我先用一个简单的折线图代码跑出来一个折线图：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,fill=Year))+geom_line()</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orssvamao.bkt.clouddn.com/image2.png" alt=""></p>
<blockquote>
<p>geom_path: Each group consists of only one observation. Do you need to adjust the group aesthetic?</p>
</blockquote>
<p>当我用以上代码运行的时候，软件报错，提示如上：</p>
<p>图表展示区给出了一个只有坐标系的空白图表；</p>
<p>相信根据英文意思也可以明白怎么回事，因为我们给折线图的X轴映射是一个离散的因子变量，而默认状态下软件会将单条记录都会视作一个分类，这样肯定是无法出来图表的，而如果是一个连续变量，则会只会当做一个类别进行映射。</p>
<p>我们使用过ggplot内内置数据集验证我们的猜想。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">head(LakeHuron)</div><div class="line">LakeHuron$data&lt;-seq(<span class="number">1875</span>,<span class="number">1972</span>,<span class="number">1</span>)</div><div class="line">ggplot(LakeHuron,aes(data,LakeHuron))+geom_line()</div></pre></td></tr></table></figure></p>
<h3 id="参数解释说明："><a href="#参数解释说明：" class="headerlink" title="参数解释说明："></a>参数解释说明：</h3><p>以上使用了一个时间序列数据，很顺利的完成了折线图的制作。</p>
<p>那么针对离散变量的折线图到底如何来做呢，我们可以通过group指定分组的形式来达到目的。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,group=Year,fill=Year))+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image3.png" alt=""></p>
<p>通过指定group即告知软件将变量按照年份变量分组，否则单个不重复记录都会被当做一个单独分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year))+geom_line()+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point()  <span class="comment">#按照年份分组的同时按照年份进行线条的颜色映射</span></div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image5.png" alt=""></p>
<h3 id="参数变化的对比效果："><a href="#参数变化的对比效果：" class="headerlink" title="参数变化的对比效果："></a>参数变化的对比效果：</h3><p>接下来通过对线条内部参数的修改，我们可以体会到ggplot对于线条细节的把控是多么的专注：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image6.png" alt=""></p>
<p>线条的参数主要有<code>size</code>、<code>colour</code>、<code>linetype</code>.</p>
<p>其中线条的类型主要有<code>0=blank</code>,<code>1=solid</code>,<code>2=dashed</code>,<code>3=dotted</code>,<code>4=dotdash</code>,<code>5=longdash</code>,<code>6=twodash</code></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>每一个类型示例如下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point() </div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">1</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">2</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">3</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">4</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">5</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">6</span>,size=<span class="number">1.5</span>)+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>下面是关于线条粗度的不同感知：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">1</span>,linetype=<span class="number">1</span>)+geom_point() </div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">3</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">4</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">5</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">6</span>,linetype=<span class="number">1</span>)+geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image8.png" alt=""></p>
<p>以上依次使用的线条粗度值为1,2,3,4,5,6，大家可以通过图表感受到ggplot图表中线条的粗度变化规律。</p>
<p>除了折线图（以及路径图，等图层中的线条之外），在theme系统中存在大量的关于线条的属性设置(网格系统、图表边框、轴线、图例系统)，均可以参照以上参数进行设置。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家分享的是&lt;code&gt;ggplot&lt;/code&gt;图表中的一类重要元素——线条。&lt;/p&gt;
&lt;p&gt;不要觉得专门为线条写一章推送有点小题大做，其实线条对于图表而言，功不可没，即便是不起眼的网格、轴线、或者线条的粗线、线型、磅数等都将决定着你的图表品质。&lt;/p&gt;
&lt;p&gt;R语言中ggplot函数系统中涉及到线条的地方有很多，最常见的场景就是我们做&lt;code&gt;geom_line()&lt;/code&gt;（折线图）、&lt;code&gt;geom_path（）&lt;/code&gt;(路径图),以及图表的绘图区（&lt;code&gt;panel&lt;/code&gt;）、图表区、网格系统（&lt;code&gt;grid&lt;/code&gt;）中所涉及到的线条。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="图表美化" scheme="http://www.raindu.com/tags/%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96/"/>
    
      <category term="theme" scheme="http://www.raindu.com/tags/theme/"/>
    
      <category term="视觉信号" scheme="http://www.raindu.com/tags/%E8%A7%86%E8%A7%89%E4%BF%A1%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>Word天呀，气泡图居然还有这种操作~</title>
    <link href="http://www.raindu.com/2017/06/19/Word%E5%A4%A9%E5%91%80%EF%BC%8C%E6%B0%94%E6%B3%A1%E5%9B%BE%E5%B1%85%E7%84%B6%E8%BF%98%E6%9C%89%E8%BF%99%E7%A7%8D%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.raindu.com/2017/06/19/Word天呀，气泡图居然还有这种操作/</id>
    <published>2017-06-19T00:49:56.000Z</published>
    <updated>2017-06-19T01:02:30.539Z</updated>
    
    <content type="html"><![CDATA[<p>在之前写实习僧爬虫可视化案例之时，曾经用过一个很类似气泡图的图表——气泡云图（superbubble）。</p>
<p>它的图表信息呈现与文字云非常相似，都是在控制一组元素的大小，文字云的大小是文字，气泡云图的大小是形状（气泡）。</p>
<a id="more"></a>
<h3 id="关于可视思维的一些感想："><a href="#关于可视思维的一些感想：" class="headerlink" title="关于可视思维的一些感想："></a>关于可视思维的一些感想：</h3><p>虽然看起来，它与普通气泡图比起来非常相似，但是实质上数据信息含量已经大相径庭，气泡图实际上使用了三个指标变量，而气泡云图仅适用了两个（而且仅有大小变量是数值型的）。</p>
<p>实际上以上对比是为了启发大家一种认识图表的思路：</p>
<p>通常情况下，我们被各种课程或者书籍指导着，认识到的可视化无一例外的是从数据如何转换为图表，坦白的说，这中思路问题不大，至少没有方向性的失误。</p>
<p>但是可视化是一套理念，而非流程或者过程，从数据到图表仅仅解决的是数据（变量）通过视觉信号映射到图表的过程，更为完善的可视化视角应该是：</p>
<p>你既要知道视觉元素是是如何通过数据映射到图表上的，更要知道一张已经被映射完成的图表，其视觉信号如何还原为原始的数据结构，毕竟很多职场人士是先看到自己觉得满意的图表之后，再回过头来思考自己的数据怎么做成那种理想的图表。</p>
<p>即可视化是一套从数据信息到视觉信息，再由视觉信息还原数据信息的过程。（个人愚见）</p>
<p>今天要讲的气泡云图，你可以这么理解，我们有一组指标（离散），并且想要呈现（从宏观上）该组指标的客观大小。以上属于正向的从数据到图表的可视化思维。</p>
<p>更加常见的情况是，我看到了一张非常漂亮的气泡云图，我想要将其用在我的项目或者业务报告之中，那么你一定要搞明白，你是否有这么一组指标（数据），仅需从宏观上呈现其大小。（因为这种需求有很多图表类型可以运用，而且达到的目的大同小异）。</p>
<p>这里仍然以之前那个实习僧职位需求top100企业为例：</p>
<p>我会分别使用PowerBI、Tableau、R语言来制作这一案例。</p>
<h3 id="PowerBI："><a href="#PowerBI：" class="headerlink" title="PowerBI："></a>PowerBI：</h3><p>我完成后的整个软件界面是这样的，大家可以看到，我只使用了两个字段：分别是一个文本标签和一组对应频率。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>在superbubble的菜单中，刚好对应category选项和Role_DisplayName_Values字段。</p>
<p>就这样，完成了PowerBI中的气泡云图的制作。（该图表对象并非PowerBI内置图表对象，需要在其官方的在线社区中下载对应插件并加载之后才可用）。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image2.jpg" alt=""></p>
<h3 id="Tableau"><a href="#Tableau" class="headerlink" title="Tableau:"></a>Tableau:</h3><p>在Tableau操作界面中，仍然是使用两个字段，我将文本字段作为标签，freq作为大小映射给了该图表对象，同时因为Tableau系统中的图形对于颜色设置了非常严格的使用标准，所以默认是单色的，为了不过于单调，我将freq又映射给了一个颜色标度。（由此可见Tableau在数据可视化领域的专业性和权威性，PowerBI一直是在替用户选择，Tbaleau是用户掌握选择权）。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image3.jpg" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/image4.jpg" alt=""></p>
<h3 id="R语言："><a href="#R语言：" class="headerlink" title="R语言："></a>R语言：</h3><p>R语言的官方社区中没有气泡云图（superbubble），但是在HTMLwidgets的开发者社区里，有一个制作该图表的扩展包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">"jcheng5/bubbles"</span>)</div><div class="line"><span class="keyword">library</span>(bubbles)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div></pre></td></tr></table></figure></p>
<p><strong>example：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bubbles(value = runif(<span class="number">26</span>),label=LETTERS,color=rainbow(<span class="number">26</span>, alpha=<span class="literal">NULL</span>)[sample(<span class="number">26</span>)])</div></pre></td></tr></table></figure></p>
<p><strong>以下接前面案例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(&quot;D:R/File/shixiseng_job.csv&quot;,stringsAsFactors=FALSE,check.names=FALSE)</div><div class="line">color1&lt;-brewer.pal(9,&quot;YlOrRd&quot;)</div><div class="line">color2&lt;-brewer.pal(9,&quot;Greens&quot;)</div><div class="line">color&lt;-c(color1,color2)</div><div class="line">colorpan&lt;-sample(color,100,replace = TRUE)</div><div class="line">bubbles(value =mydata$Freq,label=mydata$Var1,color=colorpan)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>简单几行代码，一幅还算看的过眼的superbubble图表就完美出炉了，关键是，它的信息呈现角度与众不同，给人的视觉感受比较震撼，令人耳目一新，心领神会。</p>
<h3 id="本文总结："><a href="#本文总结：" class="headerlink" title="本文总结："></a>本文总结：</h3><p><strong>总结一下今天的分享概要：</strong></p>
<p>1 可视化的两个环节：</p>
<ul>
<li>从数据到图表——数据元素到视觉信号的映射过程</li>
<li>从图表到数据——视觉信号还原为数据结构的过程<br>2 图表的数据信息含量一致，与所使用的软件无关：</li>
</ul>
<p>因而所有的可视化工具在设计底层理念的时候，都是有规律的，不要害怕软件操作难，我们掌握心法就好。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前写实习僧爬虫可视化案例之时，曾经用过一个很类似气泡图的图表——气泡云图（superbubble）。&lt;/p&gt;
&lt;p&gt;它的图表信息呈现与文字云非常相似，都是在控制一组元素的大小，文字云的大小是文字，气泡云图的大小是形状（气泡）。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="气泡云图.superbubble" scheme="http://www.raindu.com/tags/%E6%B0%94%E6%B3%A1%E4%BA%91%E5%9B%BE-superbubble/"/>
    
      <category term="PowerBI" scheme="http://www.raindu.com/tags/PowerBI/"/>
    
      <category term="Tableau" scheme="http://www.raindu.com/tags/Tableau/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot图表配色技巧</title>
    <link href="http://www.raindu.com/2017/06/18/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E9%85%8D%E8%89%B2%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.raindu.com/2017/06/18/R语言可视化——ggplot图表配色技巧/</id>
    <published>2017-06-18T14:03:45.000Z</published>
    <updated>2017-06-18T14:22:15.782Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享ggplot图表的配色原理与基本技巧。</p>
<p>图表配色是一个很深奥的话题，多亏了R语言平台的众多开发者贡献的配色包，让图表的配色不再深不可测。</p>
<a id="more"></a>
<h3 id="图表配色常用类型："><a href="#图表配色常用类型：" class="headerlink" title="图表配色常用类型："></a>图表配色常用类型：</h3><p><strong>这里我暂且将所有的配色场景划分为两类：</strong></p>
<blockquote>
<p>离散变量配色与连续变量配色</p>
</blockquote>
<p><code>ggplot</code>函数的配色机制相对来说比较智能，当你给<code>colour</code>或者<code>fill</code>属性指定给变量映射的时候，该函数就会自动的区分变量属性（是离散变量或者是连续变量），进而给出适用于两种情况的配色风格。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orqx7zr30.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image3.png" alt=""></p>
<p>大家可以对比以上两句代码：我并没有指定任何实际的颜色，只是将<code>colour</code>颜色属性指定给离散变量cut或者连续变量<code>depth</code>,而输出的图表已经完成了默认的离散颜色映射和连续颜色渐变映射。</p>
<p>对于以上两种类型颜色使用场景，如果是要自行修改，则需要自行定义颜色标度：</p>
<h3 id="常用配色方案简介："><a href="#常用配色方案简介：" class="headerlink" title="常用配色方案简介："></a>常用配色方案简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_colour_XXX:</div></pre></td></tr></table></figure>
<p>这里最经常适用的三种情况</p>
<p>第一种情况，使用<code>ggthemes</code>包中的颜色主题，其中有些非常流行的颜色主题，如经济学人的主题<code>scale_colour_economist()</code>、<code>scale_colour_wsj()</code>,还有<code>excel</code>的主题、<code>tableau</code>主题以及<code>stata</code>主题。</p>
<p>第二种情况，可以使用<code>RColorBrewer</code>包中的配色卡，以下是该包<code>scale_colour_brewer()</code>函数所允许使用的所有离散颜色色卡。</p>
<p>该配色系统方案给予我们三种关于分类变量的配色场景：</p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image4.png" alt=""></p>
<ul>
<li><p>同色系方案，即在同一个色系中均匀取出若干个色段，用于分类变量填充，最终呈现的效果，看起来非常清爽，图中最上面的一排颜色均为此类。（适用于表达有序因子分类变量，比如GDP的分段呈现等）</p>
</li>
<li><p>二分色系方案，即两个色系方向平滑过渡，均匀取值，中间色一般为白色或者淡色。（适用于表达含有正负值的分类数量段，譬如增长率指标、利润率等）</p>
</li>
<li><p>多分类不同色系方案，取不同色系相对协调的一组颜色，这种情况比较适合用于表达仅作分类，分类项之间没有顺序和大小的普通情况。</p>
</li>
</ul>
<p>以上色卡以及配色包是由一个著名的专做地图可视化配色方案的团队所开发的，网址如下，提供在线配色并免费下载服务。（网站可能被屏蔽，如无法打开需要使用VPN）</p>
<p><a href="http://colorbrewer2.org/#" target="_blank" rel="external">RColorBrewer</a></p>
<p>当然第三种就是自己DIY了，R支持直接调用可识别的颜色名称以及颜色代码（16进制代码）。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_fill_manual(values=c(<span class="string">"#FB882C"</span>,<span class="string">"#5B88A0"</span>))</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_fill_manual(values=c(&quot;Linen&quot;,&quot;Peru&quot;,&quot;PeachPuff&quot;,&quot;SandyBrown&quot;,&quot;Chocolate&quot;))</div></pre></td></tr></table></figure></p>
<p>连续型配色方案：</p>
<p>而针对连续型变量颜色修改的情况，可探讨的余地不多：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">scale_fill_gradient（）</div><div class="line">scale_fill_gradient2（）</div><div class="line">scale_fill_gradient（） <span class="comment">#允许分配一组双色连续渐变，low="white",high="red"</span></div><div class="line">scale_fill_gradient2（）<span class="comment">#允许分配一组三色连续渐变，low="blue",mid="white",high="red"</span></div></pre></td></tr></table></figure>
<h3 id="配色方案案例演示："><a href="#配色方案案例演示：" class="headerlink" title="配色方案案例演示："></a>配色方案案例演示：</h3><p>接下来针对以上几种情况，我分别演示一个案例：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"RColorBrewer"</span>)</div></pre></td></tr></table></figure>
<p><strong>离散型配色方案：</strong></p>
<p>使用ggthemes包中的颜色主题（华尔街日报的主题色模板）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_wsj()</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image5.png" alt=""></p>
<p>使用RColorBrewer包中的配色卡</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_brewer(palette=<span class="string">"Greens"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用DIY方式自己制作配色卡</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_manual(values=c(<span class="string">"#84CEFC"</span>,<span class="string">"#ACDAE4"</span>,<span class="string">"#5C9EA4"</span>,<span class="string">"#04FEFC"</span>,<span class="string">"#4CD2CC"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>连续型：</strong></p>
<p>双色渐变：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()+scale_colour_gradient(low=<span class="string">"white"</span>,high=<span class="string">"Blue"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image8.png" alt=""></p>
<p>三色渐变：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()+scale_colour_gradient2(low=<span class="string">"#8E0F2E"</span>, mid=<span class="string">"#BFBEBE"</span>, high=<span class="string">"#0E4E75"</span>,midpoint=median(na.omit(diamonds$depth)))</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image9.png" alt=""></p>
<p>以上就是R中最常用到的配色技巧，可以满足我们大部分使用场景的需求。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家分享ggplot图表的配色原理与基本技巧。&lt;/p&gt;
&lt;p&gt;图表配色是一个很深奥的话题，多亏了R语言平台的众多开发者贡献的配色包，让图表的配色不再深不可测。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="图表美化" scheme="http://www.raindu.com/tags/%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96/"/>
    
      <category term="配色技巧" scheme="http://www.raindu.com/tags/%E9%85%8D%E8%89%B2%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>关于数据地图的几个遗留问题解决方案</title>
    <link href="http://www.raindu.com/2017/06/18/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%9A%84%E5%87%A0%E4%B8%AA%E9%81%97%E7%95%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.raindu.com/2017/06/18/关于数据地图的几个遗留问题解决方案/</id>
    <published>2017-06-18T01:44:43.000Z</published>
    <updated>2017-06-19T00:55:50.483Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享三个数据地图的遗留问题，包括以前因为技术手段限制无法解决的问题，以及读者吐槽最多的问题。</p>
<a id="more"></a>
<ul>
<li>如何在一个版面上呈现不同行政级别的地理信息；</li>
<li>如何给版面添加mini导航定位窗口；</li>
<li>关于九段线问题。</li>
</ul>
<h3 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h3><p>关于第一个问题的解决方案，其实很简单，就是通过两个不同行政级别的图层进行叠加来达到目的。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maps)  </div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggimage"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">world_map&lt;-map_data(<span class="string">"world"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"D:/R/mapdata/Word_State.csv"</span>,stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)  </div><div class="line">data1&lt;-filter(data,region==<span class="string">"Russia"</span> | Address==<span class="string">"Asia"</span>)</div><div class="line">mymapdata&lt;-merge(world_map[,<span class="number">1</span>:<span class="number">5</span>],data1,type=<span class="string">"right"</span>)%&gt;%filter(long&gt;=<span class="number">30</span> &amp; lat&gt;=<span class="number">10</span>)%&gt;%arrange(group,order)</div></pre></td></tr></table></figure>
<p><strong>底层的区域地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot(mymapdata)+</div><div class="line">geom_polygon(aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image1.jpg" alt=""></p>
<p><strong>表层的中国省级行政区划地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">china_map &lt;- readShapePoly(<span class="string">"D:/R/rstudy/CHN_adm/bou2_4p.shp"</span>)      </div><div class="line">china_map1 &lt;- fortify(china_map)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot(china_map1)+</div><div class="line">geom_polygon(aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image2.jpg" alt=""></p>
<p><strong>将两个图层对象放在同一个图形对象中</strong>（注意先后顺序）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=mymapdata,aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image3.jpg" alt=""></p>
<h3 id="minimini导航窗口"><a href="#minimini导航窗口" class="headerlink" title="minimini导航窗口"></a>minimini导航窗口</h3><p>第二个问题，关于minimini导航窗口。</p>
<p>其实这个问题多少跟第一个问题有些关联，也是旨在给我们要呈现的中心地图一个区域定位的作用。解决方案依然是拼图，不过这次是拼的图表（整个图表对象），而非图表中的图层。</p>
<p><strong>位于中间的中国行政区划地图：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map();p1</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot()+</div><div class="line">geom_polygon(data=world_map,aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">annotate(geom=<span class="string">"rect"</span>,xmin =<span class="number">30</span>, xmax =<span class="number">155</span>,ymin =<span class="number">10L</span>, ymax = <span class="number">55</span>,colour=<span class="string">"grey"</span>,fill=<span class="string">"orange"</span>,alpha=<span class="number">.3</span>)+</div><div class="line">theme_map() %+replace% theme(plot.background=element_rect(colour=<span class="string">"black"</span>));p2</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image4.jpg" alt=""></p>
<p><strong>拼贴合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vie&lt;-viewport(width=<span class="number">0.30</span>,height=<span class="number">0.25</span>,x=<span class="number">0.25</span>,y=<span class="number">0.25</span>)</div><div class="line">p1;print(p2,vp=vie)</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>第三个问题；也是被吐槽最多的九段线问题，这个问题，其实严格来说，我也没有办法搞定。</p>
<h3 id="关于九段线问题："><a href="#关于九段线问题：" class="headerlink" title="关于九段线问题："></a>关于九段线问题：</h3><p>一般的九段线标识方法有两种，一种是在实际位置框定九段线范围，另一种则是将九段线的实际范围单独移至版面的边缘位置。第一种方法需要精确的九段线经纬点数据，获取不易，第二种则九段线位置过于灵活，然后不好掌握数据。</p>
<p>如果你能获取带有九段线数据的地图素材，那么这是最佳的解决方案，倘若不行，我们就要对图表后期进行处理（大部分人想到的方法是使用PS等软件，当然 这也是一种解决方案，至少清晰度上可以保证）。</p>
<p>但是既然是在R里面写代码，突然跑去玩PS总感觉怪怪的，能用代码解决的问题就不算问题，没错拼图嘛，R依然搞的定。</p>
<p><strong>首先你要有个九段线素材图片。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jiuduanxian&lt;-<span class="string">"E:/数据可视化/R/R语言学习笔记/可视化/timg.jpg"</span></div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">geom_image(aes(image=jiuduanxian,x=<span class="number">130</span>,y=<span class="number">20</span>),size=<span class="number">.2</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>我找的这个九段线素材可能跟中国地图风格搭配的不是很好，当然各位使用的时候可以自己去找相对准确、美观的素材使用。</p>
<p>最后提醒大家，关于九段线问题，一定要在报告或者文章末尾进行免责声明，涉及到领土争端问题，不仅仅要意识到，而且要尽可能的做好应对措施，避免不必要的麻烦。</p>
<hr>
<p><strong><em>关于数据源问题的说明：</em></strong></p>
<p>点击博客左下侧的GitHub链接：</p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>进入本人GitHub主页之后，打开名为datawarehouse的数据仓库；</p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image9.jpg" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家分享三个数据地图的遗留问题，包括以前因为技术手段限制无法解决的问题，以及读者吐槽最多的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="九段线" scheme="http://www.raindu.com/tags/%E4%B9%9D%E6%AE%B5%E7%BA%BF/"/>
    
      <category term="mini导航窗口" scheme="http://www.raindu.com/tags/mini%E5%AF%BC%E8%88%AA%E7%AA%97%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot的theme订制</title>
    <link href="http://www.raindu.com/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E7%9A%84theme%E8%AE%A2%E5%88%B6/"/>
    <id>http://www.raindu.com/2017/06/17/R语言可视化——ggplot的theme订制/</id>
    <published>2017-06-17T13:41:13.000Z</published>
    <updated>2017-06-17T13:54:25.140Z</updated>
    
    <content type="html"><![CDATA[<p>ggplot作图系统在R预言诸多可视化包中之所以如此的风靡，除了它拥有自己的图层理念之外，我觉得还要归功于它对于图表细节元素的灵活调整。</p>
<p>对于ggplot的初学者而言，可能没有太多的在意图表的主题是否优雅，配色是否美观，仅求能够准确无误的出图就OK了。</p>
<p>但是如果仅限于此，那么使用ggplot作图真的就是杀鸡用了宰牛刀了。</p>
<a id="more"></a>
<p>就拿默认的图表来说，虽然你只靠两句代码就可以跑出来一幅还算及格的图表，可是ggplot语法博大精深，背后给你的代码默认匹配的参数不计其数。</p>
<p>其中有一组特别庞大的参数组就是<code>theme（）</code>参数：</p>
<p>默认的图表再不添加任何自定义主题和配色的情况下，软件会给出默认的主题和配色：</p>
<p>默认主题是<code>theme_gray</code>,中一共给出了两套主题，分别是<code>theme_gray</code>、<code>theme_bw</code></p>
<p>接下来我们来一步步验证：</p>
<h3 id="首先加载包："><a href="#首先加载包：" class="headerlink" title="首先加载包："></a>首先加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>（ggplot2）</div><div class="line"><span class="keyword">library</span>（reshape2）</div><div class="line"><span class="keyword">library</span>(ggtheme)</div></pre></td></tr></table></figure>
<h3 id="构造作图数据："><a href="#构造作图数据：" class="headerlink" title="构造作图数据："></a>构造作图数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Conpany"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<h3 id="初始化绘图："><a href="#初始化绘图：" class="headerlink" title="初始化绘图："></a>初始化绘图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上代码（已经简化的不能再简化了，不夸张的说，再少一个标点符号，就要报错了）跑出来的默认堆积条形图。</p>
<h3 id="添加主题："><a href="#添加主题：" class="headerlink" title="添加主题："></a>添加主题：</h3><p>可是在R预言可视化这个领域内，以上图表绝对是一个烂大街的货色，怎么说呢，因为你不修改主题，它搭配的主题永远都是<code>theme_gray</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_gray()</div><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上两个图表分别套用了默认主题<code>theme_gray()</code>和备用主题<code>theme_bw()</code>，所以看去来前者与第一幅图无异，后者则差别很大。</p>
<p>虽然看起来修改主题好像很简单的样纸，殊不知，在主题内部，该函数是设定了不计其数、让人眼花缭乱的参数。</p>
<h3 id="主题函数结构："><a href="#主题函数结构：" class="headerlink" title="主题函数结构："></a>主题函数结构：</h3><p>你可以通过<code>theme_gray</code> 查看主题函数内的参数配置：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme_gray</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme_bw</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image5.png" alt=""></p>
<p>哈哈看傻眼了吧，其实仔细捋一捋，主题函数内的参数虽然繁杂，但是绝对算不上晦涩。</p>
<p><strong>以下是自己整理的主题参数列表：</strong></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/image6.png" alt=""></p>
<p>通过设定主题参数，你也可以制作专属的图表主题模板。</p>
<p>接下来我将设定一个简单的主题模板用于修改以上的图表主题；</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">theme_xmf &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, bg=<span class="string">'white'</span>)&#123;</div><div class="line">    <span class="keyword">require</span>(grid)</div><div class="line">    theme_classic(<span class="keyword">...</span>) +</div><div class="line">        theme(rect=element_rect(fill=bg),</div><div class="line">              plot.margin=unit(rep(<span class="number">0.5</span>,<span class="number">4</span>), <span class="string">'lines'</span>),</div><div class="line">              panel.background=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>),</div><div class="line">              panel.border=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>),</div><div class="line">              panel.grid=element_blank(),</div><div class="line">              axis.title = element_text(color=<span class="string">'black'</span>, vjust=<span class="number">0.1</span>),</div><div class="line">              axis.ticks.length = unit(-<span class="number">0.3</span>,<span class="string">"lines"</span>),</div><div class="line">              axis.ticks = element_line(colour = <span class="string">"grey20"</span>),             </div><div class="line">              legend.title=element_blank(),</div><div class="line">              legend.key=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="套用自己的自定义主题："><a href="#套用自己的自定义主题：" class="headerlink" title="套用自己的自定义主题："></a>套用自己的自定义主题：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image7.png" alt=""></p>
<p>这里要强调一点，主题中是不包含颜色模板设定的，因为颜色的使用场景及类别比较复杂，会有专门的颜色标度进行设定，其实就是<code>scale_colour_xxx()/scale_fill_xxx()</code>进行设定（分别为点、线色以及区域色）</p>
<p>这里暂且使用一个<code>RColorbrewer</code>色板中的渐变色装饰一下，不做过多解释，下一节，专门讨论颜色。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()+scale_fill_brewer(palette=<span class="string">"Blues"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image8.png" alt=""></p>
<p>至于图表中的颜色填充顺序和图例相反，这个问题只需追加一句代码即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()+scale_fill_brewer(palette=<span class="string">"Blues"</span>)+guides(fill = guide_legend(reverse = <span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image9.png" alt=""></p>
<p>其他的细节设定，下次讲。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ggplot作图系统在R预言诸多可视化包中之所以如此的风靡，除了它拥有自己的图层理念之外，我觉得还要归功于它对于图表细节元素的灵活调整。&lt;/p&gt;
&lt;p&gt;对于ggplot的初学者而言，可能没有太多的在意图表的主题是否优雅，配色是否美观，仅求能够准确无误的出图就OK了。&lt;/p&gt;
&lt;p&gt;但是如果仅限于此，那么使用ggplot作图真的就是杀鸡用了宰牛刀了。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="图表美化" scheme="http://www.raindu.com/tags/%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96/"/>
    
      <category term="主题定制" scheme="http://www.raindu.com/tags/%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>leaflet的小搭档leaflet.minicharts来了，从此动态地图又多了一些乐趣~~~</title>
    <link href="http://www.raindu.com/2017/06/17/leaflet%E7%9A%84%E5%B0%8F%E6%90%AD%E6%A1%A3leaflet-minicharts%E6%9D%A5%E4%BA%86%EF%BC%8C%E4%BB%8E%E6%AD%A4%E5%8A%A8%E6%80%81%E5%9C%B0%E5%9B%BE%E5%8F%88%E5%A4%9A%E4%BA%86%E4%B8%80%E4%BA%9B%E4%B9%90%E8%B6%A3/"/>
    <id>http://www.raindu.com/2017/06/17/leaflet的小搭档leaflet-minicharts来了，从此动态地图又多了一些乐趣/</id>
    <published>2017-06-17T01:32:31.000Z</published>
    <updated>2017-06-17T03:16:25.237Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容取材自leaflet.minicharts包官方主页的案例介绍，本篇案例虽然是关于leaflet在线地图的辅助包，但是该包的出现对于leaflet生态系统来说，确是有着划时代的意义。</p>
<p>该包大大扩充了leaflet包所能呈现的图表形式，打破了散点图、路径图、热力图三类图表对于传统地图数据呈现形式的垄断地位。</p>
<p>该包为此提供了气泡饼图、玫瑰图、mini柱形图以及时间维度控制器等多种数据可视化元素。</p>
<a id="more"></a>
<p>以下便是作者对该包的简要介绍及案例演示：</p>
<h3 id="leaflet-minicharts包简介："><a href="#leaflet-minicharts包简介：" class="headerlink" title="leaflet.minicharts包简介："></a>leaflet.minicharts包简介：</h3><p>一直以来，借助于Rstudio团队开发的交互式地图工具包——leaflet，在R语言中创建交互式地图已非难事。但是该包仅仅提供了很少的集中图表呈现类型，因而在一张单独的地图上呈现的数据信息量被大大限制了。</p>
<p>倘若你要在地图上呈现一些点数据，你只能需要使用两个变量定位出这些点在地图上的位置，然后更改点的半径和点的填充颜色来呈现数据。<br>然后leaflet.minicharts包的出现大大改变了这一格局。你可以在利用其提供的两个附加函数，在leaflet包的交互地图上增加更多的mini图表。</p>
<p>这些mini图表可以呈现比之前多得多的变量数据（理论上不受变量数量的限制），目前为止，仅支持三种图表类型：</p>
<p>barcharts (the default), pie charts and polar area charts.</p>
<h3 id="数据预览："><a href="#数据预览：" class="headerlink" title="数据预览："></a>数据预览：</h3><p>该包内提供了一个法国自2010~2017年包含电力产品、电力消费及结构变动趋势的数据集。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"leaflet.minicharts"</span>)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line">data(<span class="string">"eco2mix"</span>)</div><div class="line">head(eco2mix)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image1.jpg" alt=""></p>
<h3 id="地图数据及作图数据整理："><a href="#地图数据及作图数据整理：" class="headerlink" title="地图数据及作图数据整理："></a>地图数据及作图数据整理：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">geojson &lt;-readOGR(<span class="string">"D:/R/mapdata/State/France.json"</span>,<span class="string">"OGRGeoJSON"</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">prod2016 &lt;- eco2mix %&gt;%</div><div class="line">  mutate(</div><div class="line">    renewable = bioenergy + solar + wind + hydraulic,</div><div class="line">    non_renewable = total - bioenergy - solar - wind - hydraulic</div><div class="line">  ) %&gt;%</div><div class="line">  filter(grepl(<span class="string">"2016"</span>,month) &amp; area!= <span class="string">"France"</span>) %&gt;%</div><div class="line">  select(-month) %&gt;%</div><div class="line">  group_by(area,lat,lng) %&gt;%</div><div class="line">  summarise_all(sum) %&gt;%</div><div class="line">  ungroup()</div><div class="line">``` </div><div class="line"></div><div class="line">  </div><div class="line">### 制作背景地图：</div><div class="line"></div><div class="line">抽取了法国2016年的能源消费结构数据信息：</div><div class="line"></div><div class="line">```r</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(leafletCN)</div><div class="line">basemap &lt;- leaflet(geojson,width =<span class="string">"100%"</span>,height=<span class="string">"400px"</span>) %&gt;% amap() %&gt;%</div><div class="line">addPolygons(weight=<span class="number">1</span>,color=<span class="string">"#444444"</span>,opacity=<span class="number">1</span>,fillColor =<span class="string">"white"</span>,fillOpacity =<span class="number">0.7</span>,smoothFactor=<span class="number">0.5</span>)</div></pre></td></tr></table></figure>
<h4 id="默认图表（柱形图）"><a href="#默认图表（柱形图）" class="headerlink" title="默认图表（柱形图）"></a>默认图表（柱形图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">renewable2016 &lt;- prod2016 %&gt;% select(hydraulic,solar,wind)</div><div class="line">colors &lt;- c(<span class="string">"#3093e5"</span>,<span class="string">"#fcba50"</span>,<span class="string">"#a0d9e8"</span>)</div><div class="line">basemap %&gt;%</div><div class="line">  addMinicharts(</div><div class="line">    prod2016$lng, prod2016$lat,</div><div class="line">    chartdata = renewable2016,</div><div class="line">    colorPalette = colors,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image3.jpg" alt=""></p>
<h4 id="气泡饼图"><a href="#气泡饼图" class="headerlink" title="气泡饼图"></a>气泡饼图</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">colors &lt;- c(<span class="string">"#4fc13c"</span>, <span class="string">"#cccccc"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prod2016$lng, prod2016$lat,</div><div class="line">    type = <span class="string">"pie"</span>,</div><div class="line">    chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)], </div><div class="line">    colorPalette = colors, </div><div class="line">    width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image2.jpg" alt=""></p>
<h4 id="玫瑰图1："><a href="#玫瑰图1：" class="headerlink" title="玫瑰图1："></a>玫瑰图1：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">basemap %&gt;%</div><div class="line">addMinicharts(</div><div class="line">prod2016$lng, prod2016$lat,</div><div class="line">type = <span class="string">"polar-radius"</span>,</div><div class="line">chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)],</div><div class="line">colorPalette = colors,</div><div class="line">width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image5.jpg" alt=""></p>
<h4 id="玫瑰图2："><a href="#玫瑰图2：" class="headerlink" title="玫瑰图2："></a>玫瑰图2：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">basemap %&gt;%</div><div class="line">addMinicharts(</div><div class="line">prod2016$lng, prod2016$lat,</div><div class="line">type = <span class="string">"polar-area"</span>,</div><div class="line">chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)],</div><div class="line">colorPalette = colors,</div><div class="line">width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<h3 id="添加时间趋势："><a href="#添加时间趋势：" class="headerlink" title="添加时间趋势："></a>添加时间趋势：</h3><h4 id="柱形图（带时间趋势）"><a href="#柱形图（带时间趋势）" class="headerlink" title="柱形图（带时间趋势）"></a>柱形图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image4.jpg" alt=""></p>
<h4 id="饼图（带时间趋势）"><a href="#饼图（带时间趋势）" class="headerlink" title="饼图（带时间趋势）"></a>饼图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    type=<span class="string">"pie"</span>,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image6.jpg" alt=""></p>
<h4 id="玫瑰图（带时间趋势）"><a href="#玫瑰图（带时间趋势）" class="headerlink" title="玫瑰图（带时间趋势）"></a>玫瑰图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    type=<span class="string">"pie"</span>,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image7.jpg" alt="">  </p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容取材自leaflet.minicharts包官方主页的案例介绍，本篇案例虽然是关于leaflet在线地图的辅助包，但是该包的出现对于leaflet生态系统来说，确是有着划时代的意义。&lt;/p&gt;
&lt;p&gt;该包大大扩充了leaflet包所能呈现的图表形式，打破了散点图、路径图、热力图三类图表对于传统地图数据呈现形式的垄断地位。&lt;/p&gt;
&lt;p&gt;该包为此提供了气泡饼图、玫瑰图、mini柱形图以及时间维度控制器等多种数据可视化元素。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="minicharts" scheme="http://www.raindu.com/tags/minicharts/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——图表排版之一页多图</title>
    <link href="http://www.raindu.com/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E6%8E%92%E7%89%88%E4%B9%8B%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/17/R语言可视化——图表排版之一页多图/</id>
    <published>2017-06-17T01:13:47.000Z</published>
    <updated>2017-06-17T01:30:13.380Z</updated>
    
    <content type="html"><![CDATA[<p>昨天跟大家分享了关于图表嵌套的函数用法，今天跟大家分享在多图情况下如何正确的进行图表的版面布局。</p>
<p>这里要分享的图表版面设计其实就是指，在做了很多图的情况下，如何将诸多图表合理的布局在一张大的版面上，而不是一幅一幅的导出最后在其他软件中手动拼凑。</p>
<a id="more"></a>
<p>这个技能在制作多图仪表盘场景下，将会特别有用：</p>
<p>还需要强调下这里所指的一页多图与我们之前介绍过的分面可是大有不同，分面其实是一幅图表中，将分类变量所构成的分类图表分图呈现，但是本质上所有分面内的单个图表共享标题、图例、坐标轴刻度（虽然可以手动定义）。</p>
<p>也就是说分面的图表类型与诸多元素都是一样的，但是分面解决不了不同图表的排版布局问题：比如单独绘制而成的一幅散点图、柱形图和一幅饼图，分面将无能为力。</p>
<p>R语言中可以实现多图同页布局的函数有很多（我所知道的旧有大概四五种），但是有些参数略微复杂不便记忆，这里只跟大家介绍两种：</p>
<p><strong>关于多图排版的函数简介：</strong></p>
<p>一种是grid.layout函数（就是我们昨天所讲到的图表嵌套所用到的是同一个包），另一个是rmisc包中的multiplot函数：</p>
<h3 id="grid-layout函数："><a href="#grid-layout函数：" class="headerlink" title="grid.layout函数："></a>grid.layout函数：</h3><ul>
<li>require(ggplot2)</li>
<li>require(grid)</li>
</ul>
<p>绘制备用图表（这里必须给图表命名，因为最后制作汇总图的时候需要引用图表名称）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chart1 &lt;- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) + geom_point()</div><div class="line">chart2 &lt;- ggplot(diamonds, aes(carat, depth, colour = color)) + geom_point()</div><div class="line">chart3&lt;- ggplot(diamonds, aes(carat, depth, colour = color)) + geom_point() + facet_grid(.~color)</div></pre></td></tr></table></figure>
<p>以上三个函数定义了三个图表对象，如果想要查看图表则只需给出图表名称然后回车即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.newpage()  <span class="comment">###新建图表版面</span></div><div class="line">pushViewport(viewport(layout = grid.layout(<span class="number">2</span>,<span class="number">2</span>))) <span class="comment">####将版面分成2*2矩阵</span></div><div class="line">vplayout &lt;- <span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row = x, layout.pos.col = y)&#125;</div></pre></td></tr></table></figure>
<h3 id="定义图表的布局规则"><a href="#定义图表的布局规则" class="headerlink" title="定义图表的布局规则"></a>定义图表的布局规则</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">print(chart3, vp = vplayout(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>))   <span class="comment">###将（1,1)和(1,2)的位置画图chart3</span></div><div class="line">print(chart2, vp = vplayout(<span class="number">2</span>,<span class="number">1</span>))     <span class="comment">###将(2,1)的位置画图chart2          </span></div><div class="line">print(chart1 , vp = vplayout(<span class="number">2</span>,<span class="number">2</span>))    <span class="comment">###将（2,2)的位置画图chart1</span></div></pre></td></tr></table></figure>
<p><img src="http://oro3igf2g.bkt.clouddn.com/image1.png" alt=""><br><img src="http://oro3igf2g.bkt.clouddn.com/image2.png" alt=""><br><img src="http://oro3igf2g.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上函数将逐步按照之前的位置规则按照对应顺序绘制三幅图表，每打印一次你都可以看到画布上增加一个图表。</p>
<p>以上是该方法制作一页多图的全部过程，其实因为里面有自定义函数，看起来稍微有点儿麻烦，不过不影响理解。</p>
<h3 id="multiplot函数："><a href="#multiplot函数：" class="headerlink" title="multiplot函数："></a>multiplot函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lattice"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div></pre></td></tr></table></figure>
<p>使用multiplot函数制作一页多图的语法非常简单，过程同样也是先制作出单个图表并命名，然后一句函数就搞定：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">multiplot(chart1,chart2,chart3, cols=<span class="number">2</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro3igf2g.bkt.clouddn.com/image4.png" alt=""></p>
<p>虽然使用multiplot函数非常方便高效，但是默认情况下，它不会对单个的图表长宽比例做最优布局，我们的案例中，chart3是一个水平分面图，属于矮款型的，但是multiplot函数将它压缩成长宽近似的矩形，放在四象限的第二个位置。</p>
<p>整体看上去，第一种方法虽然过程复杂些，但是局部灵活些，可以调整单个图表所占的空间，第二种方式更加高效、快捷，但是布局上欠缺优化（也许是我还没有接触到内部的局部调整参数，有懂的小伙伴儿麻烦指导一下，不胜感激）！</p>
<p>对了，做完图之后记得使用<br>dev.off() #<br>函数关闭活动版面，否则会影响之后的其他不相关图表！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天跟大家分享了关于图表嵌套的函数用法，今天跟大家分享在多图情况下如何正确的进行图表的版面布局。&lt;/p&gt;
&lt;p&gt;这里要分享的图表版面设计其实就是指，在做了很多图的情况下，如何将诸多图表合理的布局在一张大的版面上，而不是一幅一幅的导出最后在其他软件中手动拼凑。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="版面控制" scheme="http://www.raindu.com/tags/%E7%89%88%E9%9D%A2%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot携手plotly，让你的图表灵动起来！</title>
    <link href="http://www.raindu.com/2017/06/16/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E6%90%BA%E6%89%8Bplotly%EF%BC%8C%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%9B%BE%E8%A1%A8%E7%81%B5%E5%8A%A8%E8%B5%B7%E6%9D%A5%EF%BC%81/"/>
    <id>http://www.raindu.com/2017/06/16/R语言可视化——ggplot携手plotly，让你的图表灵动起来！/</id>
    <published>2017-06-16T14:11:17.000Z</published>
    <updated>2017-06-16T14:37:37.267Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间一直在研究ggplot2这个神奇的可视化利器，可是ggplot2纵然所向披靡，唯独无法呈现动态效果！</p>
<p>最近发现R语言的官方CRAN中有一款名叫plotly的包，详细了解了下，这个plotly是基于js脚本语言开发的专用于动态交互可视化的利器，开发有在线版和桌面本，而且效果相当不错！</p>
<a id="more"></a>
<p>而这里提到的plotly包就是该机构专门针对R语言环境发布的可视化包（具有不仅R语言，给MATLAB和Python都留有接口），不但可以协助ggplot2包将静态图表动态化，而且拥有自己独特的作图函数语法（语法非常精炼，据说是参考ggplot的语法写的，基本上一看就懂）。</p>
<p>今天只涉及ggplot结合plotly而动态化图表的功能，暂不涉及plotly的独有作图函数。（主要是自己也正摸索中，找个合适的时间再跟大家分享）。</p>
<p>这个包因为是辅助ggplot2开发的，所以需要ggplot2包同时加载协同工作。</p>
<h3 id="包下载及加载："><a href="#包下载及加载：" class="headerlink" title="包下载及加载："></a>包下载及加载：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">"ropensci/plotly"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plotly"</span>)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<h3 id="数据集预览："><a href="#数据集预览：" class="headerlink" title="数据集预览："></a>数据集预览：</h3><p>这里我将使用ggplot2的内置数据集diamonds先做出图表，然后使用plotly函数进行动态化。</p>
<p>为了更加明显的看出最终的动效，这里使用随机取样，只抽取500个记录。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">2333</span>)</div><div class="line">mydata &lt;- mydata[sample(nrow(mydata), <span class="number">500</span>), ]</div><div class="line">head(mydata)</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orn9f9laz.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="plotly动态图表演示："><a href="#plotly动态图表演示：" class="headerlink" title="plotly动态图表演示："></a>plotly动态图表演示：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(carat,price,colour=color))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image3.png" alt=""></p>
<p>接下来是我们要重点关注的地方，以上使用ggplot函数制作的默认的散点图，是一张静态的不带任何交互效果的图表。</p>
<p>尽管ggplot的作者在图表背后针对默认的图表主题及背景做了深度美化，但是没有动态效果这一点儿着实让人感觉有点儿美中不足：</p>
<p>我所说的动态效果是指：当鼠标悬浮到任何一个数据点，立马会有弹出文本框显示该数据点的具体指标信息，当鼠标点击图例中的分类标识时，显示对应分类项下的数据点，而其他未被选中的数据点均会自动隐藏或者淡化（变成浅灰色）。这是我所理解的动态图表的最基础属性。</p>
<p>但是有了plotly包的辅助，ggplot所做出来的图表立马可是实现以上所述的功能：</p>
<p>而所需要的函数却极其简单：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplotly()</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image4.png" alt=""></p>
<p>运行完以上代码，再次zoom你的图表，仔细观察你会发现，图表右上角多出了一行菜单，而且当你将鼠标悬浮在任意一个数据点上时，立马回弹出对应的文本信息对对应数据点进行详细注释。</p>
<p>更加不可思议的是，当你用鼠标单击右侧图例对应分类项，则图表中会对应只显示选中的分类项目数据点；</p>
<p>右上角的菜单中你可以自由选择将图表聚焦呈现、放大缩小、保存为图片等多种功能。</p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image5.png" alt=""></p>
<p>下面是我录制的一个动态小视频，可以感受下plotly带给ggplot的动态交互体验：<br><img src="http://orn9f9laz.bkt.clouddn.com/image6.png" alt=""></p>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=t13096cfgh5&tiny=0&auto=0" allowfullscreen></iframe>

<p>而且这种动态效果机会不受ggplot图表类型及版面的限制，在分面情况下，动态效果依然如故：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(carat,price,colour=color))+geom_point()+theme_economist()+scale_colour_economist()+facet_wrap(~cut)</div><div class="line">ggplotly()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上图表中加入了经济学人的主题及配色模板，动态效果依然还在，有了这种动态效果，展示呈现多维数据方面，省去了不少麻烦，特别是分类较多时，一时半会很难弄清楚某种分类的整体分布情况，而通过动态选择，可以很容易的过滤掉暂时无关的分类项对信息获取的障碍。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段时间一直在研究ggplot2这个神奇的可视化利器，可是ggplot2纵然所向披靡，唯独无法呈现动态效果！&lt;/p&gt;
&lt;p&gt;最近发现R语言的官方CRAN中有一款名叫plotly的包，详细了解了下，这个plotly是基于js脚本语言开发的专用于动态交互可视化的利器，开发有在线版和桌面本，而且效果相当不错！&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="动态图表" scheme="http://www.raindu.com/tags/%E5%8A%A8%E6%80%81%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="版面控制" scheme="http://www.raindu.com/tags/%E7%89%88%E9%9D%A2%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
</feed>

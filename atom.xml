<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>raindu&#39;s home</title>
  <subtitle>A lifelong learner!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.raindu.com/"/>
  <updated>2017-06-16T01:45:54.815Z</updated>
  <id>http://www.raindu.com/</id>
  
  <author>
    <name>RainDu</name>
    <email>578708965@.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Excel依然是一款强大的数据可视化利器~</title>
    <link href="http://www.raindu.com/2017/06/16/Excel%E4%BE%9D%E7%84%B6%E6%98%AF%E4%B8%80%E6%AC%BE%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%A9%E5%99%A8/"/>
    <id>http://www.raindu.com/2017/06/16/Excel依然是一款强大的数据可视化利器/</id>
    <published>2017-06-16T01:32:50.000Z</published>
    <updated>2017-06-16T01:45:54.815Z</updated>
    
    <content type="html"><![CDATA[<p>早期的数据小魔方用户大概都知道，我最初也是从学习Excel起步的，只是学习的深入了之后，才开开慢慢的迁移到R语言。</p>
<p>我往R语言转型并不代表自己开始放弃Excel或者觉得Excel不适合做可视化，只是想体验一下Excel外围的可视化世界是什么样子的，毕竟在这个大行业内，还活跃着太多可视化领域的佼佼者，譬如 PowerBI、Tableau等。</p>
<a id="more"></a>
<h3 id="对图表的粗浅认识："><a href="#对图表的粗浅认识：" class="headerlink" title="对图表的粗浅认识："></a>对图表的粗浅认识：</h3><p>当然，这些软件各有特点，但是在要划分一个类别的话，我觉得可以划分为三类：</p>
<ul>
<li>Excel（以及寄生于Excel平台的各种辅助软件dashboard、Think-cell-chart）</li>
<li>桌面端可视化工具（以Tableau、PowerBI等）</li>
<li>编程工具。（以R语言、Python以及各种js开源可视化库）</li>
</ul>
<p>但若要继续对其进行简化分类的话，我觉得其实可以分为两类：</p>
<ul>
<li>Excel家族；</li>
<li>非Excel家族。</li>
</ul>
<p>也许这里的分类大家会觉得摸不着头脑，我的理由是，数据可视化很重要的一步即是对原始业务数据结构的理解，而在Excel的图表库中，微软所设计的图形库是基于二维表的。（因为Excel自由灵活的表结构不限制变量类型，不识别因子变量（即用于构造模型或者用于图形映射））。</p>
<p>也许以上解释并不能令你满意，这里我只强调一点，同样制作一个多分类的柱形图（或者条形图），假若你获取的原始数据是三个字段，一个门店名称，一个季度标签，一个销售额，那么这种数据结构你是无法对其进行图表化呈现的，你需要借助Excel的数据透视功能，对其进行维度交叉透析，进而使用汇总表（二维表）进行多分类图表构建。</p>
<p>以上就是Excel中图表构建原理的大致过程，而除Excel之外的数据可视化产品，基本上都是使用一维表结构（长数据）来构建可视化图形的。其中因子变量（即通常意义上的分类变量）充当着至关重要的作用。</p>
<p>这也是用惯了Excel的小伙伴儿，如果想要迁移到其他可视化工具上，迈出的第一步往往无比艰难（也不能一概而论，假如你经常使用Excel的数据透视表功能，并且对数据库有所了解，对于数据的长宽转换应该早就烂熟于心了，这道坎不会困扰你太久）。</p>
<p>二维表有二维表的好处，即所见即所得，因为二表已经具备一定的图形化特征，而不单单是表了，但是二维表作图在效率上有着天然的劣势，即你会淡化对数据数据结构的理解，会被Excel的这种作图理念所吞噬，进而被绑架。（纯属个人愚见）</p>
<p>又扯远了，今天的主角仍然是Excel，我使用自己学习以来的案例来说明，Excel仍然是一款不折不扣的优秀可视化工具。</p>
<p>###案例模仿：</p>
<p>学习的第一步当然是模仿，所以才有了这些积淀很久的案例：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image13.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image14.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image15.jpg" alt=""></p>
<h3 id="调整高难度案例："><a href="#调整高难度案例：" class="headerlink" title="调整高难度案例："></a>调整高难度案例：</h3><p>模仿可以快速提升你的“图感”，然后你会更大胆的去挑战高难度动作：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image17.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image2.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image3.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image4.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image5.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image6.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image7.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image8.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image1.jpg" alt=""></p>
<h3 id="尝试着自己找案例练习："><a href="#尝试着自己找案例练习：" class="headerlink" title="尝试着自己找案例练习："></a>尝试着自己找案例练习：</h3><p>等有了足够的经验和技巧积累，尝试着自己找案例去做：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image16.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image19.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image20.jpg" alt=""></p>
<h3 id="实习中接触项目锻炼："><a href="#实习中接触项目锻炼：" class="headerlink" title="实习中接触项目锻炼："></a>实习中接触项目锻炼：</h3><p>实习是很好的锻炼机会，可能你不需要做高难度高复杂度的工作，但是你能学到如何平衡技能与实际业务数据，融合并凝练细节。</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image9.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image10.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>Excel的强大远不止于此，如果你能习得名称管理器、开发工具与高级查询函数，那么制作动态仪表盘是分分钟的事儿，再将平时里积淀的优秀版式、配色方案等融入其中，那么你的工作价值一定会呈指数级增长。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;早期的数据小魔方用户大概都知道，我最初也是从学习Excel起步的，只是学习的深入了之后，才开开慢慢的迁移到R语言。&lt;/p&gt;
&lt;p&gt;我往R语言转型并不代表自己开始放弃Excel或者觉得Excel不适合做可视化，只是想体验一下Excel外围的可视化世界是什么样子的，毕竟在这个大行业内，还活跃着太多可视化领域的佼佼者，譬如 PowerBI、Tableau等。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化案例呈现" scheme="http://www.raindu.com/categories/%E5%8F%AF%E8%A7%86%E5%8C%96%E6%A1%88%E4%BE%8B%E5%91%88%E7%8E%B0/"/>
    
    
      <category term="Excel" scheme="http://www.raindu.com/tags/Excel/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>学习R语言我都做了那些有趣的事情！！！</title>
    <link href="http://www.raindu.com/2017/06/16/%E5%AD%A6%E4%B9%A0R%E8%AF%AD%E8%A8%80%E6%88%91%E9%83%BD%E5%81%9A%E4%BA%86%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    <id>http://www.raindu.com/2017/06/16/学习R语言我都做了那些有趣的事情！！！/</id>
    <published>2017-06-16T01:01:29.000Z</published>
    <updated>2017-06-16T01:22:03.571Z</updated>
    
    <content type="html"><![CDATA[<p>学习R语言已经整整一年光景了， 是时候整理一下自己学习以来的收获和成就。</p>
<p>虽然一直学的很专注（一直埋头在可视化的小圈子了，总感觉这样是停留在舒适区，也许外面的风景会更好），但是专注有专注的好处，就是每一个细节都有机会做的更好！</p>
<p>以下是我学习以来自己练习过程中的一些案例，包括给别人定做的报告、高仿的商务图表、以及我尝试着创新出的一些好玩的创意图表，集中分享给大家。</p>
<a id="more"></a>
<p><strong>以下案例按照时间顺序排列：</strong></p>
<h3 id="刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表"><a href="#刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表" class="headerlink" title="刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表"></a>刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image7.jpg" alt=""></p>
<h3 id="也热衷于制作各种炫酷的信息图："><a href="#也热衷于制作各种炫酷的信息图：" class="headerlink" title="也热衷于制作各种炫酷的信息图："></a>也热衷于制作各种炫酷的信息图：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image8.jpg" alt=""></p>
<h3 id="练习了大量的数据地图"><a href="#练习了大量的数据地图" class="headerlink" title="练习了大量的数据地图"></a>练习了大量的数据地图</h3><p>（所以才有资格跟大家输出地理信息可视化案例呀！）</p>
<p><img src="http://orm8l6eph.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image2.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="给别人定做过一些有报酬的小作品："><a href="#给别人定做过一些有报酬的小作品：" class="headerlink" title="给别人定做过一些有报酬的小作品："></a>给别人定做过一些有报酬的小作品：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image4.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image5.jpg" alt=""></p>
<h3 id="尝试着爬取数据，做一些地理信息可视化作品："><a href="#尝试着爬取数据，做一些地理信息可视化作品：" class="headerlink" title="尝试着爬取数据，做一些地理信息可视化作品："></a>尝试着爬取数据，做一些地理信息可视化作品：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image6.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image16.jpg" alt=""></p>
<h3 id="一些零零散散的小创意也会令自己成就感爆满："><a href="#一些零零散散的小创意也会令自己成就感爆满：" class="headerlink" title="一些零零散散的小创意也会令自己成就感爆满："></a>一些零零散散的小创意也会令自己成就感爆满：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image9.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image10.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image12.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image13.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image14.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image15.png" alt=""></p>
<p>以上所有图表（不含文字云）都是基于R语言ggplot2包绘制；</p>
<p>回首学习的过程，虽然很痛苦但也都挺过来了，没有专门学习R语言的相关课程（几乎也不存在这种可能，因为我在案例中融入的元素并不是来自于R语言本身，而是以前积淀的可视化基础），也几乎没有正儿八经的看完一本R语言可视化的参考书。</p>
<p>当然这些并不是全部，还有很多案例来不及给大家分享，那些学完爬虫之后，自己能够遍历网页，获取实用数据的时刻，确实非常令人振奋。</p>
<p>也许学习技能的最好方式，就是立马用起来，做一些有趣的事情，时刻保持着热情，那么总能有所收获！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习R语言已经整整一年光景了， 是时候整理一下自己学习以来的收获和成就。&lt;/p&gt;
&lt;p&gt;虽然一直学的很专注（一直埋头在可视化的小圈子了，总感觉这样是停留在舒适区，也许外面的风景会更好），但是专注有专注的好处，就是每一个细节都有机会做的更好！&lt;/p&gt;
&lt;p&gt;以下是我学习以来自己练习过程中的一些案例，包括给别人定做的报告、高仿的商务图表、以及我尝试着创新出的一些好玩的创意图表，集中分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化案例呈现" scheme="http://www.raindu.com/categories/%E5%8F%AF%E8%A7%86%E5%8C%96%E6%A1%88%E4%BE%8B%E5%91%88%E7%8E%B0/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="商务图表" scheme="http://www.raindu.com/tags/%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——图表嵌套（母子图）</title>
    <link href="http://www.raindu.com/2017/06/15/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E5%B5%8C%E5%A5%97%EF%BC%88%E6%AF%8D%E5%AD%90%E5%9B%BE%EF%BC%89/"/>
    <id>http://www.raindu.com/2017/06/15/R语言可视化——图表嵌套（母子图）/</id>
    <published>2017-06-15T00:48:04.000Z</published>
    <updated>2017-06-15T00:57:17.155Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学习ggplot的时候，一直存在着一个困惑。</p>
<p>就是这个函数是否允许两个做出来的两个相关图表重叠嵌套（也就是在一个大图（主图）的边缘位置，放置另一个缩小版的小图）。</p>
<p>这个想法很奇葩，本来想着没啥希望，鉴于该包的开发者那犀利的审美观，估计也不能允许这种情况的发生。</p>
<p>不过最近浏览一位大神的博客，真的有这种情况的解决措施，喜出望外，赶紧在这里分享给大家。</p>
<a id="more"></a>
<p>不过他的处理方式不是通过ggplot的内置函数，而是通过grid包中的viewport函数来实现的：</p>
<p><strong>以下是具体的实现步骤：</strong></p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)  <span class="comment">#用于画图，主图和附图都使用ggplot的内置数据集</span></div><div class="line"><span class="keyword">library</span>(grid)     <span class="comment">#用于设定附图的长宽及叠放在主图的精确位置</span></div></pre></td></tr></table></figure>
<h3 id="加载并预览数据集："><a href="#加载并预览数据集：" class="headerlink" title="加载并预览数据集："></a>加载并预览数据集：</h3><p>这里我们还是使用关于钻石的那个数据集（之前的图表案例很多都是使用该数据集）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data(diamonds)</div><div class="line">head(diamonds)</div></pre></td></tr></table></figure></p>
<p><img src="http://orkcefhda.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="制作复合图的主图："><a href="#制作复合图的主图：" class="headerlink" title="制作复合图的主图："></a>制作复合图的主图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上函数可以制作出以carat和price为主要对应关系的散点图，同时分类变量cut通过颜色映射进行区分。最后调整了图例位置和图表背景。</p>
<p><strong>设定附图长宽及分布精确位置：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div></pre></td></tr></table></figure>
<h3 id="制作附图"><a href="#制作附图" class="headerlink" title="制作附图:"></a>制作附图:</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=cut,alpha=<span class="number">.2</span>))+geom_density()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line"></div><div class="line">chart2  <span class="comment">#预览附图</span></div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image5.png" alt=""></p>
<p>因为附图要放置在主图边缘并且缩放很大比例，为了防止其背景和网格线系统遮挡主图的重要信息，对其主题元素进行了大量的简化。</p>
<h3 id="将主图与附图合成一并显示："><a href="#将主图与附图合成一并显示：" class="headerlink" title="将主图与附图合成一并显示："></a>将主图与附图合成一并显示：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="将以上代码打包组合："><a href="#将以上代码打包组合：" class="headerlink" title="将以上代码打包组合："></a>将以上代码打包组合：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div><div class="line">chart1</div><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=cut,alpha=<span class="number">.2</span>))+geom_density()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image3.png" alt=""></p>
<p>其实仔细看这种做法，里面也不外乎图层叠加，先做出主图，然后通过viewport函数将附图缩小并叠加到主图上，不过这种方式用来展示一些需要多角度透视的数据分布问题还是很合适的，而且因为是依赖于不同的包，所有主图与附图之间没有严格的类型限制，你所需要做的只是调整好两个图表的位置与大小，别让彼此相互遮挡掩盖重要信息就OK了。</p>
<p><strong>下面我将附图的类型更换为堆积直方图大家看下效果：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div><div class="line">chart1</div><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=color))+geom_histogram()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure></p>
<p><img src="http://orkcefhda.bkt.clouddn.com/image4.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在学习ggplot的时候，一直存在着一个困惑。&lt;/p&gt;
&lt;p&gt;就是这个函数是否允许两个做出来的两个相关图表重叠嵌套（也就是在一个大图（主图）的边缘位置，放置另一个缩小版的小图）。&lt;/p&gt;
&lt;p&gt;这个想法很奇葩，本来想着没啥希望，鉴于该包的开发者那犀利的审美观，估计也不能允许这种情况的发生。&lt;/p&gt;
&lt;p&gt;不过最近浏览一位大神的博客，真的有这种情况的解决措施，喜出望外，赶紧在这里分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="版式设计" scheme="http://www.raindu.com/tags/%E7%89%88%E5%BC%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="grid" scheme="http://www.raindu.com/tags/grid/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——地图与气泡图结合应用</title>
    <link href="http://www.raindu.com/2017/06/14/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8E%E6%B0%94%E6%B3%A1%E5%9B%BE%E7%BB%93%E5%90%88%E5%BA%94%E7%94%A8/"/>
    <id>http://www.raindu.com/2017/06/14/R语言可视化——地图与气泡图结合应用/</id>
    <published>2017-06-14T00:50:58.000Z</published>
    <updated>2017-06-14T10:20:23.718Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享如何在地图上进行散点图、气泡图绘制。</p>
<p>昨天跟大家介绍了<code>ggplot</code>函数进行地图绘制的原理，通过轮廓点和分组来定义每一个地区（国家边界），通过多边形填充来完成区域填色。</p>
<p><code>ggplot</code>的图层叠加原理允许许我们在坐标系统的叠加多个图层；</p>
<a id="more"></a>
<p>所以在地图上叠加散点、甚至气泡可以很容易的实现：</p>
<h3 id="包的导入："><a href="#包的导入：" class="headerlink" title="包的导入："></a>包的导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div></pre></td></tr></table></figure>
<h3 id="导入地理信息数据："><a href="#导入地理信息数据：" class="headerlink" title="导入地理信息数据："></a>导入地理信息数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">china_map &lt;- readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)            <span class="comment"># 读取地图信息数据</span></div><div class="line">china_map1 &lt;- fortify(china_map)                               <span class="comment">#转化为数据框</span></div></pre></td></tr></table></figure>
<h3 id="业务数据导入及作图数据合并："><a href="#业务数据导入及作图数据合并：" class="headerlink" title="业务数据导入及作图数据合并："></a>业务数据导入及作图数据合并：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)             <span class="comment">#读取业务数据</span></div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)   <span class="comment">#读取省会城市坐标</span></div><div class="line">china_data &lt;- join(province_city, mydata, type=<span class="string">"full"</span>)         <span class="comment">#合并两个数据框</span></div></pre></td></tr></table></figure>
<p><img src="http://orii3gxl2.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="地图语法："><a href="#地图语法：" class="headerlink" title="地图语法："></a>地图语法：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">     geom_polygon(data=china_map1, aes(x=long, y=lat, group=group), fill=<span class="string">"grey95"</span>, colour=<span class="string">"grey60"</span>)+ </div><div class="line">     geom_point(data=china_data, aes(x = jd,y = wd, size=zhibiao, fill=zhibiao2, alpha=<span class="number">0.3</span>), shape=<span class="number">21</span>, colour=<span class="string">"black"</span>)+ </div><div class="line">     scale_size_area(max_size=<span class="number">8</span>)+         </div><div class="line">scale_fill_gradient2(low=<span class="string">"DarkCyan"</span>, mid=<span class="string">"Azure"</span>, high=<span class="string">"Sienna"</span>, midpoint=median(na.omit</div><div class="line">(china_data$zhibiao2)))+         </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +ggtitle(<span class="string">"Heat&amp;Bubble plot"</span>)+</div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = <span class="string">"none"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orii3gxl2.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上语法中，使用了<code>geom_polygon()</code>多边形函数来定义并填充地图背景 （注意里面的<code>fill</code>参数（指定地图区域颜色），<code>colour</code>参数指定多边形（也就是地区轮廓线）边框颜色），然后通过<code>geom_point()</code>函数添加散点图图层。</p>
<p>图层中指定数据源为合并后的业务数据，散点面积（大小）用<code>zhibiao1</code>来映射，气泡图颜色用<code>zhibiao2</code>来映射（本来散点是只有点颜色（使用<code>colour</code>控制，没有填充色的，可是当给散点指定其形状后，散点就有了面积属性可以使用<code>fill</code>进行颜色填充），气泡的轮廓线用<code>colour</code>来指定）。</p>
<p>之后的<code>scale_size_area（）</code>和<code>scale_fill_gradient2（）</code>是对前面<code>geom_point</code>内的<code>fill</code>与<code>size</code>两个标度进行的深度调整，<code>scale_size_area（）</code>告诉软件散点大小与面积要严格的与指标1具体数值大小成比例，并规定面积最大为25。</p>
<p><code>scale_fill_gradient2（）</code>定义了一个三色渐变，<code>low</code>、<code>mid</code>、<code>high</code>分别由一个颜色代码控制，同时均值颜色要映射给指标2的平均数。</p>
<p>最后的<code>ggtitle</code>定义主题，<code>theme</code>内的参数清除掉所有图层上的无关元素（背景、网格系统、横纵轴标签、刻度线、轴标题、图例）</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家分享如何在地图上进行散点图、气泡图绘制。&lt;/p&gt;
&lt;p&gt;昨天跟大家介绍了&lt;code&gt;ggplot&lt;/code&gt;函数进行地图绘制的原理，通过轮廓点和分组来定义每一个地区（国家边界），通过多边形填充来完成区域填色。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggplot&lt;/code&gt;的图层叠加原理允许许我们在坐标系统的叠加多个图层；&lt;/p&gt;
    
    </summary>
    
      <category term="ggplot2" scheme="http://www.raindu.com/categories/ggplot2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="数据地图" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>用R语言抓取网页图片——从此高效存图告别手工时代</title>
    <link href="http://www.raindu.com/2017/06/13/%E7%94%A8R%E8%AF%AD%E8%A8%80%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87%E2%80%94%E2%80%94%E4%BB%8E%E6%AD%A4%E9%AB%98%E6%95%88%E5%AD%98%E5%9B%BE%E5%91%8A%E5%88%AB%E6%89%8B%E5%B7%A5%E6%97%B6%E4%BB%A3/"/>
    <id>http://www.raindu.com/2017/06/13/用R语言抓取网页图片——从此高效存图告别手工时代/</id>
    <published>2017-06-13T07:19:50.000Z</published>
    <updated>2017-06-13T09:00:25.164Z</updated>
    
    <content type="html"><![CDATA[<p>今天这个标题实在是有点言过其实了，对于R的爬虫知识，我只是领会了一点儿皮毛。</p>
<p>主要看不懂正则表达式，特别是那种一个括号里要匹配多种类型文本的语句，特像火星文，估计短期很难搞懂了。</p>
<p>再加上对于HTML结构没啥感觉，在目标定位上很苦恼。</p>
<p>但是相对于文本信息而言，图片在html中的地址比较好获取，这里仅以图片抓取为例，会Python爬虫的大神还求轻喷~</p>
<a id="more"></a>
<p>今天要爬取的是一个多图的知乎网页，是一个外拍的帖子，里面介绍了巨多各种外拍技巧，很实用的干货。</p>
<h3 id="网页分析："><a href="#网页分析：" class="headerlink" title="网页分析："></a>网页分析：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(downloader)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div></pre></td></tr></table></figure>
<p><a href="https://www.zhihu.com/question/19647535" target="_blank" rel="external">知乎某外拍帖子</a></p>
<p>打开网页之后，在帖子内容里随便定位一张图片，然后单击右键——检查元素（Ctrl+Shift+I），页面右侧弹出的网页结构会自动定位到该图片的地址，你会看到该图片在html结构中的名称标签：——（img）;地址标签——（src）。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orh5ym86b.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>我们想要获取的就是该图片的地址信息，你可以尝试着使用downlond函数下载单张图片。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"https://pic4.zhimg.com/2db250e935ca4f1b8b2b546c60104067_b.jpg"</span></div><div class="line">download(url,<span class="string">"D:/R/Image/picturebbb.jpg"</span>, mode = <span class="string">"wb"</span>)</div></pre></td></tr></table></figure>
<p>这样就完成了自动下载过程，但是图片地址仍然是肉眼观察获取的，显然不够智能，我们想要的效果是通过一个函数自动的批量获取图片地址并下载图片。</p>
<p>那么下一步的目标就很明确了，如何通过函数批评获取图片地址，然后将包含图片地址的字符串向量传递给下载函数。</p>
<p>以上就需要我们大致了解html的构建了，知道所有的图片存放在html构建的那一部分里面，通过网址定位到图片存放区间，通过获取图片存放的区间，批量获取图片地址，然后传递给下载函数执行。</p>
<p>太深入的我也不太了解，但是html的常用结构无非是head/body/,head中存放网页标题和导航栏的信息（我是小白，不要吐槽以上每一句话的准确性哈~），而我们要抓取的目标图片肯定是存放在body中啦。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image2.png" alt=""></p>
<p>继续打开body部分，你会被一大摞的<div> </div>结构晃瞎眼，不要担心，我已经瞎了好几回了~—~</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image3.png" alt=""></p>
<p>div是html里面的分区结构，每一个分区都是以<div>开头,以</div>结尾。（html中几乎所有结构都是这种方式，仔细观察一下其他形式的结构就会发现）。</p>
<p>当然div分区有N多个，而且div结构本身可以层层嵌套。对于太复杂的网页，在你发现图片存放的div分区之前估计会先被div语句晃瞎眼。</p>
<p>那怎么办呢，还记得在本文开始部分，说的那个手动定位吗，依靠浏览器的审查元素功能，我们可以先定位要下载的第一张图片，右键——检查，找到该图片的div分支结构。</p>
<p>我们需要获取的信息是该图片的div分区名称信息（就是div结构中的class属性或者ID属性）</p>
<p>class和ID获取其中一个就行，如果是class属性，则地址书写规则是：div.class，如果是ID则规则是div#ID。</p>
<p>如果class和ID中字符较长，且单词间存在空格，空格以英文.号替换。</p>
<p>以上图片的div分支结构定位信息就可以写作div.zm-editable-content.clearfix</p>
<p>其实这里有一个简便方法，如果你不确定自己定位的区间是否正确的话，可以查看右下角的html路径（可以自动根据你的鼠标所在的html位置定位父级路径）。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image4.png" alt=""></p>
<h3 id="简单爬取测试："><a href="#简单爬取测试：" class="headerlink" title="简单爬取测试："></a>简单爬取测试：</h3><p>接下来使用read_html函数获取网页并一步一步的定位图片地址。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url &lt;- <span class="string">'https://www.zhihu.com/question/19647535'</span></div><div class="line">link&lt;- read_html(url)%&gt;% html_nodes(<span class="string">"div.zm-editable-content.clearfix"</span>)%&gt;%html_nodes(<span class="string">"img"</span>)%&gt;%html_attr(<span class="string">"src"</span>)</div></pre></td></tr></table></figure>
<p>我们需要获取的是图片所在div分支结构中的img标签下的src内容（也就是图片地址），那么如果不想抓取一大堆不相干的图片的话，就必须明确目标图片的存放位置，以上代码过程从url(该知乎帖子页面网址)定位到目标图片所在的div分支结构，然后定位到分支结构中的img(图片标签)中的src信息（也就是目标图片网址）。</p>
<p>运行以上两句代码并以head函数预览link向量的前几行，查看获取的图片地址是否正确。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image5.png" alt=""></p>
<p>很遗憾，我们获取的存放图片地址信息的字符串向量中，每隔一行都有一个无效网址，如果不清除掉这些无效网址或者筛选出那些完整的网址的时候，download函数执行到无效网址会终端，下载过程就会失败。</p>
<p>这里需要使用stringr包来进行条件筛选。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pat = <span class="string">"https"</span></div><div class="line">link&lt;-grep(pat, link,value=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image6.png" alt=""></p>
<p>匹配之后，只保留了完整的图片网址，这就是我们最终要的结果。现在可以使用一个for循环来自动执行图片批量下载任务。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dir.create(<span class="string">"D:R/Case/"</span>) <span class="comment">#新建文件夹</span></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:length(link)) </div><div class="line">&#123;</div><div class="line"> download(link[i],paste(<span class="string">"D:/R/Case/picture"</span>,i,<span class="string">".jpg"</span>,sep = <span class="string">""</span>), mode = <span class="string">"wb"</span>)</div><div class="line">&#125;  <span class="comment">#一个循环批处理所有下载任务</span></div></pre></td></tr></table></figure>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image7.png" alt=""></p>
<p>至此，爬虫的代码部分完成，剩余的时间……嘿嘿，泡一杯咖啡，看会儿美剧，静静地等待软件完成自动下载过程吧（速度视图片原始大小和宽带速度而定）。</p>
<p>结束之后，到D盘的Case文件夹下浏览下刚才下载的成果：</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image8.png" alt=""></p>
<p>394张图片全部顺序标号，乖乖的躺在文件夹里了（当然里面还包含各种表情包图片，这个，我真的不太会分辨，暂时木办法）。</p>
<h3 id="内容总结："><a href="#内容总结：" class="headerlink" title="内容总结："></a>内容总结：</h3><p>下面就今天分享内容总结以下几点：</p>
<p>用R抓取图片的核心要点是获取html结构中存放图片的div分区中的img标签内的src内容（也就是图片地址，有时候可能需要使用read_src内的地址）。<br>图片的目标div分区结构的选取至关重要（如果你不指定div分区地址、只使用img标签下的src定位的话，很有可能抓取了全网页的图片网址，各种特殊符号和表情包、菜单栏和logo图表都会被抓取）<br>如果不太确定自己定位的div结构是否正确，可以借助鼠标选取+html路径信息来定位；<br>有时候有些网页的图片不是集中存放在单个div分区结构中，而是每张图片都是单独的div结构，这时候如果还是定位的最底层div分区位置的话，那么你可能只能获取单张图片地址。这时候适当的定位父级div分支结构名称（酌情观察，看那个父级结构范围可以涵盖所有目标图片的子div分支结构）<br>还有一种情况，就是有些公开的图片网站图片存储结构非常规则，分页存储，单页中单个div结构下的一组图片名称是按照数字顺序编号的：</p>
<p>比如：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http：//<span class="comment">################.1.jpg</span></div><div class="line"> http：//<span class="comment">################.2.jpg</span></div><div class="line"> http：//<span class="comment">################.3.jpg</span></div><div class="line"> http：//<span class="comment">################.4.jpg</span></div><div class="line"> ………………………………………</div><div class="line"> http：//<span class="comment">################.n.jpg</span></div></pre></td></tr></table></figure>
<p>如果你碰到这种存储方式的图片网页，那你真的太幸运了，不用再傻乎乎的去从网页地址的html结构中一步一步的去定位图片地址了，直接使用for循环遍历完所有的图片网址，然后直接传递给download函数批量下载就OK了。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(n <span class="keyword">in</span> <span class="number">1</span>:<span class="number">50</span>)</div><div class="line">  <span class="comment">#自己定位到网页最后一个子页面，查看下最大的图片编号是多少。</span></div><div class="line">    &#123;   </div><div class="line">  </div><div class="line">     link&lt;- c(paste(<span class="string">"http：//################/"</span>,n,<span class="string">".jpg"</span>,sep=<span class="string">""</span>),link)</div><div class="line">     &#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:length(link))</div><div class="line">&#123;</div><div class="line"> download(link[i],paste(<span class="string">"D:/R/Case/picture"</span>,i,<span class="string">".jpg"</span>,sep = <span class="string">""</span>), mode = <span class="string">"wb"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样完全避免了从网址中曾曾定位获取图片地址的麻烦，直接就可以获取全网页所有目标图片的地址，效率就更高了。</p>
<p>以上是小魔方最近学习过程中的一丁点儿心得，会爬虫的大神别喷我，我真的是个小白~</p>
<p>声明：</p>
<p>以上图片爬虫代码仅作个人练习R语言爬虫使用，各位小伙伴儿练习完毕之后，请尊重知乎原答主的版权，勿将所抓取图片商用，或者直接删除。<br>学好技术也要遵守底线，做一个规矩的技术达人。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这个标题实在是有点言过其实了，对于R的爬虫知识，我只是领会了一点儿皮毛。&lt;/p&gt;
&lt;p&gt;主要看不懂正则表达式，特别是那种一个括号里要匹配多种类型文本的语句，特像火星文，估计短期很难搞懂了。&lt;/p&gt;
&lt;p&gt;再加上对于HTML结构没啥感觉，在目标定位上很苦恼。&lt;/p&gt;
&lt;p&gt;但是相对于文本信息而言，图片在html中的地址比较好获取，这里仅以图片抓取为例，会Python爬虫的大神还求轻喷~&lt;/p&gt;
    
    </summary>
    
      <category term="网络爬虫" scheme="http://www.raindu.com/categories/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="爬虫" scheme="http://www.raindu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="revst" scheme="http://www.raindu.com/tags/revst/"/>
    
      <category term="网络抓取" scheme="http://www.raindu.com/tags/%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>当PowerBI遇到R语言</title>
    <link href="http://www.raindu.com/2017/06/13/%E5%BD%93PowerBI%E9%81%87%E5%88%B0R%E8%AF%AD%E8%A8%80/"/>
    <id>http://www.raindu.com/2017/06/13/当PowerBI遇到R语言/</id>
    <published>2017-06-13T00:31:12.000Z</published>
    <updated>2017-06-13T00:47:02.243Z</updated>
    
    <content type="html"><![CDATA[<p>PowerBI作为微软系最新的商务智能办公系统，自去年发布以来，一直都备受瞩目。</p>
<p>他的更新频次相当之高，功能更新迭代非常迅速。</p>
<p>大概对可视化领域稍有涉猎的朋友们，都明白其中缘由，大数据与云计算的趋势席卷全球，海量数据处理成为了限制各行业发展的掣肘。而受制于编程工具的门槛，大部分数据处理业务人员，可能要严重依赖Excel以及其他无需编程的可视化自助操作软件。</p>
<a id="more"></a>
<p>以上需求也称为自助式BI工具，也就是无需IT人员主导的、业务人员可自行操作的商务智能工具。</p>
<p>而目前这个领域，<code>Tableau</code>的成功商业化使其已经赢得先机，广大的用户基础以及多次功能迭代，无论是在可视化呈现形式还是报表的质量上都可圈可点。</p>
<p>微软帝国必须亮出必杀技了（为什么没有盖茨的软件在什么事情上都落后一拍，移动操作系统、搜索、智能终端），前期在<code>office2013</code>版就已推出<code>PowerQuery</code>、<code>PowerPivot</code>、<code>PowerView</code>、<code>PowerMap</code>等四款高质量插件。</p>
<p>在最新的Excel2016版中更是将其封装成内置程序（这样就不用自己配置各种环境啦）,同时将四件套整合，建立了<code>PowerBI</code>的在线平台和桌面端工具<code>PowerBI Desktop</code>。</p>
<p>虽然<code>PowerBI</code>的可视化图表类型和质量（受制于开发周期和市场经验）还不够完善，但是免费呀（<code>Tableau</code>据说几千刀呢）……这一条就够啦……</p>
<p>当然PowerBI自出生始就含着金汤勺，地图库是对接的BingMap,依靠PowerQuery的支持具备强大的数据源获取能力、依靠PowerPivot的支持又增添了功能强大的数据建模处理能力，PowerView与PowerMap结合基本上可以解决大部分的可视化形式。</p>
<p>除此之外，PowerBI的在线社区允许广大开发者贡献高质量的、令人眼花缭乱的新型可视化对象。（你以为PowerBI只有内置的那几款图表对象吗，去他的社区看一看吧，里面能淘到很多好东西）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image1.png" alt=""></p>
<p><a href="https://app.powerbi.com/visuals/" target="_blank" rel="external">第三方可视化库网址：</a></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image2.png" alt=""></p>
<p>这些可视化视觉对象在社区中被划分为两类：</p>
<ul>
<li>Custom visuals</li>
<li>R-powered visuals</li>
</ul>
<p>今天要跟大家分享的内容仅包含内置视觉对象中的R脚本和在线社区的R风格视觉对象。</p>
<p>下面是干货~</p>
<h3 id="使用体验："><a href="#使用体验：" class="headerlink" title="使用体验："></a>使用体验：</h3><p>最近试用了PowerBI的R语言脚本对象功能，虽然用着很蹩脚，但是作为微软商务智能系统开始尝试对接主流统计学编程语言的开始，这一步还是很有意义的。</p>
<p>接下来就针对我所经历的使用体验跟大家分享一下（其实还是吐槽居多）：</p>
<p>PowerBI中支持的R相关的图表有两类：</p>
<ul>
<li>一类是需要在R中自建脚本代码执行，插入R图形对象来显示输出结果的形式。</li>
<li>另一类是PowerBI线上社区以及官方平台引用并借鉴优秀的R语言可视化包所封装的PowerBI视觉对象。</li>
</ul>
<p>第一种需要大家有R基础，会书写图形代码。导入数据集后，输入并运行R代码即可在PowerBI页面生成R语言风格的可视化图表。（当然既然是运行的R代码，前提你PC上肯定得事先安装好R的Gui程序，如果有Rstudio的话,PowerBI也是支持调用的。）</p>
<p>这种方式基本相当于把PowerBI作为R的第三方IDE了，不过现在称它为R的第三方IDE确实为时过早，因为……</p>
<p>它的代码运行效率和操作体验简直不能再烂，别说RStudio,就连R的官方Gui界面都要比它好用好几倍……</p>
<ul>
<li>代码时效速度超级慢；</li>
<li>需要事先导入数据集；</li>
<li>只能在数据对象中显示图形对象而无法显示文本信息；</li>
</ul>
<h3 id="第一类R语言视觉对象案例演示："><a href="#第一类R语言视觉对象案例演示：" class="headerlink" title="第一类R语言视觉对象案例演示："></a>第一类R语言视觉对象案例演示：</h3><p>接下来我运行几段程序作为案例演示：</p>
<p>自建R脚本需要在开始——获取数据——插入RScript对象：</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image5.png" alt=""></p>
<p>在弹出的执行R脚本输入框中以R代码的形式获取数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data(mtcars)</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image6.png" alt=""></p>
<p>待连接成功后，导入数据集：</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image7.png" alt=""></p>
<p>数据模型加载完成后，在PowerBI右侧的字段列表中会列出数据集的所有可用字段，在左侧左上角表格栏目可以展示并预览整个数据观测值。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image9.png" alt=""><br><img src="http://orgmkkktc.bkt.clouddn.com/image8.png" alt=""></p>
<p>数据集导入之后，在可视化图表对象中选择R脚本，并插入，同时将右侧字段列表中需要用到的字段拖入值区域。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image4.png" alt=""></p>
<p>你发会发现，插入R脚本对象后，执行的所有鼠标操作在R脚本编辑器中都被记录为R代码（很类似Excel中的录制宏啊有木有~）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image10.png" alt=""></p>
<p>现在你可以在R脚本编辑器中自由的编写并执行代码了。（代码与R中的一样，写完一句代码，选中点击编辑器的运营按钮）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">ggplot(mtcars,aes(qsec,disp,colour=factor(cyl)))+geom_point()+theme_economist()+scale_colour_economist()+guides(colour=guide_legend(title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image11.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mtcars,aes(qsec,disp,size=mpg,colour=factor(cyl)))+geom_point()+scale_size_area()+theme_economist()+scale_colour_economist()+guides(colour=guide_legend(title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image12.png" alt=""></p>
<p>接下来我使用diamonds数据集（来自ggplot2包）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">ggplot(diamonds,aes(depth,fill=color))+geom_histogram()+theme_economist()+scale_fill_economist()+guides(fill=guide_legend(title=<span class="literal">NULL</span>))+scale_x_discrete(limits=c(<span class="number">50</span>,<span class="number">70</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image13.png" alt=""></p>
<p>虽然以上图表都很完美的输出了结果，但是过程还是很艰辛的，PowerBI无法像在R里面调用数据集那么方便，每次想换一个数据，都要重新建立一个RScript对象。</p>
<h3 id="第二类R语言视觉对象案例演示："><a href="#第二类R语言视觉对象案例演示：" class="headerlink" title="第二类R语言视觉对象案例演示："></a>第二类R语言视觉对象案例演示：</h3><p>下面跟大家介绍关于PowerBI的的第二类R视觉对象，也是个人比较推荐的一类。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image3.png" alt=""></p>
<p>因为这些视觉对象是经过开发者努力改造过了，基本上不需要你写代码就可以输出的精美图表（因为是后台调用的R程序，所以依然需要你事前安装R软件）。</p>
<p>这一类图表对象你可以在PowerBI的线上开发者社区下载到图表插件和案例demo。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image18.png" alt=""></p>
<p>每一个R图表对象都提供插件下载和Sample独享可供参考。</p>
<p>下载完事儿之后，在可视化菜单中导入视觉对象。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image15.png" alt=""></p>
<p>插入刚才导入的相关性可视化图表对象，并将要呈现的相关性的字段拖入Values字段框中。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image16.png" alt=""></p>
<p>之后你会发现图表对象会自动相关热力矩阵图。（颜色深浅代表相关性大小，正为蓝，负为红）</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image17.png" alt=""></p>
<p>该图表对象调用的是R中的corrplot函数。我们在RStudio中使用该函数生成相似的案例图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(corrplot)</div><div class="line">data(mtcars)</div><div class="line">corr &lt;- cor(mtcars[,c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)])</div><div class="line">corrplot(corr)</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image18.png" alt=""></p>
<p>看吧是不是很像呢~</p>
<p>和相关性矩阵图一样的R图表视觉对象在社区中一共有6个（包含Correlation plot）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image19.png" alt=""></p>
<p>以上六个图形视觉对象都是包含着统计算法和统计模型的视觉可视化对象，经过设计师的精心设计，复杂的统计算法模型呈现出精美的视觉图表图表对象，决策者可以在不用深入了解模型和算法原理的基础上，很直观的领会模型所表达的决策信息。这就是数据可视化的魅力所在。（当然如果能具备这些模型的理论基础的话，用起来就更加的得心应手啦）</p>
<p>小魔方已经将微软第三方应用平台的所有视觉对象插件打包整理（包含R对象的几款插件），共享在魔方学院的QQ群文件里啦，想要体验的小伙伴儿赶快去下载吧~</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image20.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PowerBI作为微软系最新的商务智能办公系统，自去年发布以来，一直都备受瞩目。&lt;/p&gt;
&lt;p&gt;他的更新频次相当之高，功能更新迭代非常迅速。&lt;/p&gt;
&lt;p&gt;大概对可视化领域稍有涉猎的朋友们，都明白其中缘由，大数据与云计算的趋势席卷全球，海量数据处理成为了限制各行业发展的掣肘。而受制于编程工具的门槛，大部分数据处理业务人员，可能要严重依赖Excel以及其他无需编程的可视化自助操作软件。&lt;/p&gt;
    
    </summary>
    
      <category term="PowerBI" scheme="http://www.raindu.com/categories/PowerBI/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="PowerBI" scheme="http://www.raindu.com/tags/PowerBI/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——多边形与数据地图填充</title>
    <link href="http://www.raindu.com/2017/06/12/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%A4%9A%E8%BE%B9%E5%BD%A2%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E5%A1%AB%E5%85%85/"/>
    <id>http://www.raindu.com/2017/06/12/R语言可视化——多边形与数据地图填充/</id>
    <published>2017-06-12T01:11:36.000Z</published>
    <updated>2017-06-12T01:22:55.418Z</updated>
    
    <content type="html"><![CDATA[<p>ggplot函数中有一类特殊的图表类型叫做多边形，很难用传统的视角来定义它属于哪一类图表，因为它能够呈现信息多种多样。</p>
<p>特别是在做某些比较高阶的图表——地图时，这种多边形函数便能够大显神通。</p>
<a id="more"></a>
<p>之前本公众号所推送的所有涉及地图图表绘制所使用的技巧，几乎全部都依赖多边形函数的支持。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div></pre></td></tr></table></figure></p>
<p>这里以之前推送过的全球地图为例：</p>
<h3 id="传统做法（shp形状）"><a href="#传统做法（shp形状）" class="headerlink" title="传统做法（shp形状）"></a>传统做法（shp形状）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">world_map &lt;-readShapePoly(<span class="string">"c:/rstudy/wold_map/World_region.shp"</span>)</div></pre></td></tr></table></figure>
<p>使用路径图进行区域轮廓描边：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +</div><div class="line">geom_path()</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image1.png" alt=""></p>
<p>更改路径线为白色，清除掉背景和网格线以及坐标轴：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +</div><div class="line">geom_path(colour=<span class="string">"steelblue"</span>)+ theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image2.png" alt=""></p>
<p>使用多边形进行描边并填充：（在多边形中是可以进行线条与形状分别填色的）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"grey"</span>) + theme( panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image3.png" alt=""></p>
<p>这就是我们之前所制作的填色地图的主体代码语句，数据集是从shp文件导入，可以看出，其实只需要三列字段信息，就可以画出一幅地图来：经纬度（二维坐标信息，也可以看作是一组代表X、Y轴的散点），另外的一列变量group其实是一个分类变量，将同一个单位区域轮廓（一个国家或者地区、岛屿等）用一组相同的编号表示。</p>
<p>如果再加上一列连续数值变量，可以将其指定为fill渐变填充的参考指标，那么最终完成的图表就是一幅按照不同地区指标大小对应渐变填色地图。</p>
<h3 id="内置地图素材包："><a href="#内置地图素材包：" class="headerlink" title="内置地图素材包："></a>内置地图素材包：</h3><p>其实这种不带任何实质数据信息的地图，很多R包中都有提供：（这里以maps包为例）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maps)</div><div class="line">states&lt;-map_data(<span class="string">"state"</span>)</div><div class="line">ggplot(states,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image4.png" alt=""></p>
<p>map包是一个专门用来做地图的加载包，里面存有几个可以用的地图数据包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">states&lt;-map_data(<span class="string">"world"</span>) <span class="comment">#全球地图</span></div><div class="line">ggplot(world,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">france&lt;-map_data(<span class="string">"france"</span>) <span class="comment">#法国地图</span></div><div class="line">ggplot(france,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">county&lt;-map_data(<span class="string">"county"</span>) <span class="comment">#美国郡级</span></div><div class="line">ggplot(county,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image7.png" alt=""></p>
<h3 id="添加地图投影："><a href="#添加地图投影：" class="headerlink" title="添加地图投影："></a>添加地图投影：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">france&lt;-map_data(<span class="string">"france"</span>) <span class="comment">#法国地图</span></div><div class="line">ggplot(france,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+coord_map(<span class="string">"polyconic"</span>)+theme(</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">county&lt;-map_data(<span class="string">"county"</span>) <span class="comment">#美国郡级</span></div><div class="line">ggplot(county,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+coord_map(<span class="string">"polyconic"</span>)+theme(</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image9.png" alt=""></p>
<p>地图图表作为ggplot函数中一大类比较高阶的图表，可以做出很多让人眼花缭乱、令人尖叫的作品来，感兴趣的小伙伴儿赶快学起来。</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ggplot函数中有一类特殊的图表类型叫做多边形，很难用传统的视角来定义它属于哪一类图表，因为它能够呈现信息多种多样。&lt;/p&gt;
&lt;p&gt;特别是在做某些比较高阶的图表——地图时，这种多边形函数便能够大显神通。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="多边形填充" scheme="http://www.raindu.com/tags/%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%A1%AB%E5%85%85/"/>
    
  </entry>
  
  <entry>
    <title>R语言颜色综合运用与色彩方案共享</title>
    <link href="http://www.raindu.com/2017/06/11/R%E8%AF%AD%E8%A8%80%E9%A2%9C%E8%89%B2%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%E4%B8%8E%E8%89%B2%E5%BD%A9%E6%96%B9%E6%A1%88%E5%85%B1%E4%BA%AB/"/>
    <id>http://www.raindu.com/2017/06/11/R语言颜色综合运用与色彩方案共享/</id>
    <published>2017-06-11T13:26:08.000Z</published>
    <updated>2017-06-11T13:48:20.902Z</updated>
    
    <content type="html"><![CDATA[<p>今天这篇主要讲解R语言颜色综合运用，主要跟大家介绍如何提取那些专业色彩包中的颜色搭配用于在基础绘图系统和高级绘图系统中共享。</p>
<a id="more"></a>
<p>其实无论是R语言的预设配色系统、自定义颜色表还是哪些专属配色包，我们所使用（或者R语言识别的）的仅仅就是一组字符向量所代表的色值而已，并不神秘。</p>
<p>通过scales中的色彩获取函数，我们可以将专属配色主题（RColorBrewer、ggthemes）中的配色主题提取出来，以函数的形式传递给基础绘图系统（plot）以及ggplot绘图系统。</p>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><ul>
<li>RColorBrewer部分：</li>
<li>ggthemes部分：</li>
<li>scales：（brewer.pal运用：）</li>
</ul>
<h3 id="RColorBrewer部分"><a href="#RColorBrewer部分" class="headerlink" title="RColorBrewer部分"></a>RColorBrewer部分</h3><p>关于RColorBrewer包之前在写ggplot函数系统的时候已经有所涉猎，其中专门讲解过它的官方配色网站：<a href="http://colorbrewer2.org/#" target="_blank" rel="external">colorbrewer</a></p>
<p>这是一个非常神奇的网站，RColorBrewer包中的配色方案全部来源于此，而且网站上允许自定义色彩序列和类型，衍生出来的颜色要比该包中的配色资源多出很多倍。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line">display.brewer.pal(n, name)</div><div class="line">display.brewer.all(type=<span class="string">"all"</span>)</div></pre></td></tr></table></figure>
<p>ColorBrewer设计团队将配色方案分为三种：</p>
<ul>
<li>seq:连续渐变色</li>
<li>div:双向渐变色</li>
<li>qual:分类色</li>
</ul>
<p>通过display函数可以查看不同类型的色板：</p>
<p>颜色查看：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">display.brewer.all(type = <span class="string">"all"</span>)  <span class="comment">#查看所有色板</span></div><div class="line">display.brewer.all(type = <span class="string">"seq"</span>)  <span class="comment">#查看单色渐变色板</span></div><div class="line">display.brewer.all(type = <span class="string">"div"</span>)  <span class="comment">#查看双色渐变色板</span></div><div class="line">display.brewer.all(type = <span class="string">"qual"</span>) <span class="comment">#查看离散（分类）色板</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image4.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image5.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image6.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上通过display四个函数成功显示了全部色板、单色渐变色板、双色渐变色板、离散（分类）色板</p>
<p>当然你也可以通过display.brewer.pal(n, name)函数显示指定名称的颜色主题：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">display.brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">5</span>),mar=c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of BuGn "</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"OrRd"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of OrRd"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"YlGn"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of YlGn"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"Oranges"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of Oranges"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"Blues"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of Blues"</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image9.png" alt=""></p>
<p>大家已经看到了，通过brewer.pal(n, “name”)函数，可以很轻松的提取出你想要的配色主题。</p>
<p>如果你想要某个配色主题的其中几个色值，可使用如下方式提取：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">display.brewer.pal(<span class="number">6</span>, <span class="string">"BuGn"</span>)<span class="comment">#按顺序提取前六个</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image1.png" alt=""></p>
<p>如果想要提取某一组色彩主题不连续的颜色，可以使用文本函数：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">a&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div><div class="line">show_col(a[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],labels=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image10.png" alt=""></p>
<p>通过向量合并，你还可以自己从色彩包中自定义色彩方案。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">b1&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>);b2&lt;-brewer.pal(<span class="number">9</span>,<span class="string">"Blues"</span>)</div><div class="line">c&lt;-c(b1[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],b2[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>)])</div><div class="line">show_col(c,labels=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image11.png" alt=""></p>
<p>其实都是些很简单的文本函数组合，毕竟色彩方案在软件中也就是一组字符向量而已。</p>
<p>以上这些色彩方案可以很容易的应用到基础绘图系统和ggplot绘图系统中。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">c&lt;-c(<span class="number">50</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">40</span>)</div><div class="line">names(c)&lt;-LETTERS[<span class="number">1</span>:<span class="number">6</span>]</div><div class="line">mycolor&lt;-brewer.pal(<span class="number">9</span>,<span class="string">"Greens"</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(c),col=mycolor[c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>)],clockwise=<span class="literal">T</span>,radius=<span class="number">1</span>,border=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image12.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line">mydata&lt;-data.frame(c)</div><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,labels=c(<span class="string">"E"</span>, <span class="string">"D"</span>, <span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"F"</span>,<span class="string">"B"</span>))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image13.png" alt=""></p>
<h3 id="ggthemes部分："><a href="#ggthemes部分：" class="headerlink" title="ggthemes部分："></a>ggthemes部分：</h3><p>接下来讲解ggthemes部分，其实ggthemes包原本是转为ggplot2包开发的辅助包（前面加的前缀——gg就可以看出来，这种包还有很多），里面提供了大量高质量的主题、颜色方案。其中就有我们所熟知的economist主题方案以及wsj方案，还有诸如stata、excel、tableau、solarized、tufte等主题方案。</p>
<p>ggthemes包中的色彩方案都是打包好，命名过的，所以我们引用的时候，只需赋值即可。</p>
<p>这里以economist和WSJ为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">m1&lt;-economist_pal()(<span class="number">6</span>)</div><div class="line">show_col(m1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image14.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mycolor&lt;-m1&lt;-economist_pal()(<span class="number">5</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(<span class="number">6</span>),col=mycolor,border=<span class="literal">F</span>,clockwise=<span class="literal">T</span>,init.angle=<span class="number">90</span>,radius=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image15.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_economist(labels=c(<span class="string">"E"</span>, <span class="string">"D"</span>, <span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"F"</span>,<span class="string">"B"</span>))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image16.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m2&lt;-wsj_pal()(<span class="number">6</span>)</div><div class="line">show_col(m2)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image17.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mycolor&lt;-m1&lt;-wsj_pal()(<span class="number">6</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(c),col=mycolor,border=<span class="literal">F</span>,clockwise=<span class="literal">T</span>,init.angle=<span class="number">90</span>,radius=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image18.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_wsj(labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image19.png" alt=""></p>
<p>其实关于economist和wsj的配色主题远不止这些元素，里面规定了详细的序列用色标准、线条用色标准、形状标准和背景色参考方案，这些信息，你可以通过使用ggthemes_data函数进行查看：</p>
<p><strong>WSJ背景色</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$wsj$bg         </div><div class="line">     gray     green      blue     brown </div><div class="line"><span class="string">"#efefef"</span> <span class="string">"#e9f3ea"</span> <span class="string">"#d4dee7"</span> <span class="string">"#f8f2e4"</span></div></pre></td></tr></table></figure></p>
<p><strong>WSJ主题色</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$wsj$palettes   <span class="comment">#主题色</span></div><div class="line">$rgby</div><div class="line">   yellow       red      blue     green </div><div class="line"><span class="string">"#d3ba68"</span> <span class="string">"#d5695d"</span> <span class="string">"#5d8ca8"</span> <span class="string">"#65a479"</span> </div><div class="line"></div><div class="line">$red_green</div><div class="line">    green       red </div><div class="line"><span class="string">"#088158"</span> <span class="string">"#ba2f2a"</span> </div><div class="line"></div><div class="line">$black_green</div><div class="line">    black      gray   ltgreen     green </div><div class="line">  <span class="string">"#000000"</span> <span class="string">"#595959"</span> <span class="string">"#59a77f"</span> <span class="string">"#008856"</span> </div><div class="line"></div><div class="line">$dem_rep</div><div class="line">     blue       red      gray </div><div class="line">   <span class="string">"#006a8e"</span> <span class="string">"#b1283a"</span> <span class="string">"#a8a6a7"</span> </div><div class="line"></div><div class="line">$colors6</div><div class="line">      red      blue      gold     green    orange     black </div><div class="line">   <span class="string">"#c72e29"</span> <span class="string">"#016392"</span> <span class="string">"#be9c2e"</span> <span class="string">"#098154"</span> <span class="string">"#fb832d"</span> <span class="string">"#000000"</span></div></pre></td></tr></table></figure></p>
<p><strong>economist背景色：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$economist$bg</div></pre></td></tr></table></figure></p>
<p><strong>economist主题色：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$economist$fg</div></pre></td></tr></table></figure></p>
<p>也可以使用scales包中的show_col函数进行颜色的图形化输出：<br>显示主题颜色：</p>
<p><strong>《华尔街日报》</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">show_col(ggthemes_data$wsj$bg)                      <span class="comment">#背景色</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$rgby)           <span class="comment">#rgby</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$red_green)      <span class="comment">#red_green</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$black_green)    <span class="comment">#black_green</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$dem_rep)        <span class="comment">#dem_rep</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$colors6)        <span class="comment">#colors6</span></div></pre></td></tr></table></figure></p>
<p><strong>《经济学人》</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">show_col(ggthemes_data$economist$bg)                <span class="comment">#背景色</span></div><div class="line">show_col(ggthemes_data$economist$fg)                <span class="comment">#主题色</span></div><div class="line">show_col(ggthemes_data$economist$stata)             <span class="comment">#基于stata的配色方案</span></div></pre></td></tr></table></figure></p>
<p>以上ggthemes包中的所有颜色，你都可以通过names_pal()(n)的格式进行提取，然后使用文本函数进行抽取、转化、合并，自由搭配出属于自己的专属配色方案</p>
<h3 id="scales包的brewer-pal函数："><a href="#scales包的brewer-pal函数：" class="headerlink" title="scales包的brewer_pal函数："></a>scales包的brewer_pal函数：</h3><p>接下来的时间我会将全部精力放在brewer_pal函数上，告诉你为什么，因为这个函数是scales专门为图形标度所设置的颜色设置函数，而以上我们所述的RColorBrewer里面的brewer.pal以及ggthemes包中的names_pal函数，是用于提取自己的配色方案，适用范围较小。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"scales"</span>)</div><div class="line">brewer_pal(type = <span class="string">"seq"</span>, palette = <span class="number">1</span>, direction = <span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p>该函数直接对接RColorBrewer包中的配色主题，但是增加了一些输出参数，可以对输出的主题进行更加灵活的自定义操作。</p>
<p>type设置颜色种类，palette设置色板（可以是字符名称，也可以是编号），direction设置颜色输出顺序（默认为原始顺序，-1代表倒序，对于连续渐变类型的色板比较重要）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">show_col(brewer_pal()(<span class="number">10</span>))</div><div class="line">show_col(brewer_pal(<span class="string">"div"</span>)(<span class="number">5</span>))</div><div class="line">show_col(brewer_pal(palette = <span class="string">"Greens"</span>)(<span class="number">5</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image20.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image21.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image22.png" alt=""></p>
<p>可以看出来，brewer_pal()函数允许通过色板类型、色彩数据、主题类型进行筛选输出。</p>
<p>我们可以通过brewer_pal函数将色彩信息传递给指定向量，或者直接将brewer_pal指定给col或者fill等图表中的标度参数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">2</span>),mar=c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">pie(rep(<span class="number">1</span>,times=<span class="number">6</span>),labels=<span class="string">""</span>,col=brewer_pal(palette=<span class="string">"Greens"</span>)(<span class="number">6</span>),border=<span class="literal">F</span>,radius=<span class="number">1</span>,clockwise=<span class="literal">T</span>)</div><div class="line">pie(rep(<span class="number">1</span>,times=<span class="number">6</span>),labels=<span class="string">""</span>,col=brewer_pal(palette=<span class="string">"Greens"</span>,direction =-<span class="number">1</span>)(<span class="number">6</span>),border=<span class="literal">F</span>,radius=<span class="number">1</span>,clockwise=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image3.png" alt=""></p>
<p>因为ggplot中有专用于RColorBrewer的色彩主题函数scale_fill(colour)_brewer(），用于对接RColorBrewer中的色彩库，所以我们想要在ggplot图表系统中使用RColorBrewer中的配色主题，不必使用brewer_pal进行提取。</p>
<p>并且，brewer_pal函数内的参数，在scale_fill(colour)_brewer(）函数内也可以使用，对色彩方案进行筛选、抽取。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(Rmisc)</div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">p1&lt;- ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank(),</div><div class="line">    legend.position=<span class="string">"top"</span>)+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div><div class="line">p2&lt;- ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank(),</div><div class="line">    legend.position=<span class="string">"top"</span>)+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,direction =-<span class="number">1</span>,labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div><div class="line">multiplot(p1,p2,cols=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image25.png" alt=""></p>
<p>除此之外，还有一个叫ggtech的包，专门为ggplot2包提供科技公司风格配色方案。仔细看了包，没有取色函数，但是提供了全部的色值信息。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggtech)</div><div class="line">tech_key = list(airbnb = c(<span class="string">"#FF5A5F"</span>,<span class="string">"#FFB400"</span>, <span class="string">"#007A87"</span>, <span class="string">"#FFAA91"</span>, <span class="string">"#7B0051"</span>), </div><div class="line">facebook = c(<span class="string">"#3b5998"</span>,<span class="string">"#6d84b4"</span>, <span class="string">"#afbdd4"</span>, <span class="string">"#d8dfea"</span>), </div><div class="line">google = c(<span class="string">"#5380E4"</span>, <span class="string">"#E12A3C"</span>, <span class="string">"#FFBF03"</span>,<span class="string">"#00B723"</span>), </div><div class="line">etsy = c(<span class="string">"#F14000"</span>, <span class="string">"#67B6C3"</span>, <span class="string">"#F0DA47"</span>, <span class="string">"#EBEBE6"</span>, <span class="string">"#D0D0CB"</span>),</div><div class="line">twitter = c(<span class="string">"#55ACEE"</span>, <span class="string">"#292f33"</span>, <span class="string">"#8899a6"</span>, <span class="string">"#e1e8ed"</span>))</div><div class="line">show_col(tech_key$airbnb)</div><div class="line">show_col(tech_key$facebook)</div><div class="line">show_col(tech_key$google)</div><div class="line">show_col(tech_key$etsy)</div><div class="line">show_col(tech_key$twitter)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image26.png" alt=""></p>
<p>以上是今天所要讲的主要内容，因为关于这块儿的内容，非常丰富，我也只能涉略一点儿，想要了解更多的R语言配色知识，可以参考详细的官方文档。</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这篇主要讲解R语言颜色综合运用，主要跟大家介绍如何提取那些专业色彩包中的颜色搭配用于在基础绘图系统和高级绘图系统中共享。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>R预设配色系统及自定义色板</title>
    <link href="http://www.raindu.com/2017/06/11/R%E9%A2%84%E8%AE%BE%E9%85%8D%E8%89%B2%E7%B3%BB%E7%BB%9F%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%89%B2%E6%9D%BF/"/>
    <id>http://www.raindu.com/2017/06/11/R预设配色系统及自定义色板/</id>
    <published>2017-06-11T13:11:15.000Z</published>
    <updated>2017-06-11T13:23:41.600Z</updated>
    
    <content type="html"><![CDATA[<p>关于配色的话题，已经聊过很多次了，但是就像是之前说过的，对于图形可视化而言，配色决定着作品的“颜值”,谈再多次都不嫌多。</p>
<p>今天是R语言配色系统综合篇的上篇（当然是有下篇啦，下篇将会教你如何优雅的提取各种高大上配色主题，作为己用。经过几天的研究，小魔方已经发现了如果将各种高质量配色包中的主题色板通过函数的形式在高级绘图系统和低级绘图系统之间相互共享）。</p>
<a id="more"></a>
<p>今天的内容主要包含两部分：</p>
<ul>
<li>R预置色彩系统的色板</li>
<li>R语言自定义颜色调用</li>
</ul>
<p>其实在R语言的色彩系统中，有两大类颜色系统，一类是预设的调色盘，通过调色盘，你可以获取任意数量的色彩组合。</p>
<h3 id="R预置色彩系统的色板"><a href="#R预置色彩系统的色板" class="headerlink" title="R预置色彩系统的色板"></a>R预置色彩系统的色板</h3><p>R语言的预设调色板一共有五个：</p>
<ul>
<li>rainbow</li>
<li>heat.colors</li>
<li>terrain.colors</li>
<li>topo.colors</li>
<li>cm.colors</li>
</ul>
<p>这五个调色板就像是一个大染缸一样，排列着无数的色彩组合。取色也很简单，就是使用预设色盘名称+色彩数据即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rainbow(<span class="number">10</span>)</div><div class="line"></div><div class="line"> [<span class="number">1</span>] <span class="string">"#FF0000FF"</span> <span class="string">"#FF9900FF"</span> <span class="string">"#CCFF00FF"</span> <span class="string">"#33FF00FF"</span> <span class="string">"#00FF66FF"</span> <span class="string">"#00FFFFFF"</span></div><div class="line"> [<span class="number">7</span>] <span class="string">"#0066FFFF"</span> <span class="string">"#3300FFFF"</span> <span class="string">"#CC00FFFF"</span> <span class="string">"#FF0099FF"</span></div></pre></td></tr></table></figure>
<p>以上既是通过名称+数量的方式获取的一组10个颜色，同样我们可以通过scales包中show_col函数查看具体的颜色效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">show_col(rainbow(<span class="number">10</span>),labels=<span class="literal">T</span>)<span class="comment">#labels控制是否显示HEX格式的色值信息.</span></div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image1.png" alt=""></p>
<p>接下来我用一个版面矩阵将五个色盘颜色全部显示出来：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">5</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</div><div class="line">n&lt;-<span class="number">1000</span></div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=rainbow(n),border=rainbow(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Rainbow Color"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=heat.colors(n),border=heat.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Heat.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=terrain.colors(n),border=terrain.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Terrain.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=topo.colors(n),border=topo.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Topo.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=cm.colors(n),border=cm.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Cm.Colors"</span>)</div><div class="line">dev.off()<span class="comment">#关闭上次的绘图面板</span></div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image2.png" alt=""></p>
<p>运行以上代码之后，你会看到绘图面板上出现的五个色板色彩过渡效果，第一个rainbow是运用最为频繁的的色板，也是我们所熟知的彩虹七色，其余四个是截取rainbow色斑的某一段暖色系、冷色系或者单色做的渐变过渡。</p>
<p>五种颜色调用方法非常简单，名称+数量就可以。而且你也可以通过文本函数将不同色盘中截取的颜色相互混合使用。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">1</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</div><div class="line">a&lt;-heat.colors(<span class="number">10</span>)</div><div class="line">b&lt;-topo.colors(<span class="number">10</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=b,border=b,main=<span class="string">"Topo.Colors10"</span>,axes=<span class="literal">F</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=a,border=a,main=<span class="string">"Heat.Colors10"</span>,axes=<span class="literal">F</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">c&lt;-c(a[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],b[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>)])</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=c,border=c,axes=<span class="literal">F</span>,main=<span class="string">"topo&amp;heat 10"</span>);box()</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image4.png" alt=""></p>
<p>以上通过将两个色板提取出来的颜色进行组合，创造出了新的色彩组合。</p>
<h3 id="R语言自定义颜色调用"><a href="#R语言自定义颜色调用" class="headerlink" title="R语言自定义颜色调用"></a>R语言自定义颜色调用</h3><p>接下来介绍R语言的第二大色彩系统，自定义颜色。</p>
<p>R语言系统中内置了657中带有自定义名称的颜色（就是我们平时所熟知的blue、red、grey等）。</p>
<p>通过colors()函数可以查看这657种颜色的色值及名称类别信息：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">head(colors(),<span class="number">10</span>)</div><div class="line"> [<span class="number">1</span>] <span class="string">"white"</span>         <span class="string">"aliceblue"</span>     <span class="string">"antiquewhite"</span>  <span class="string">"antiquewhite1"</span></div><div class="line"> [<span class="number">5</span>] <span class="string">"antiquewhite2"</span> <span class="string">"antiquewhite3"</span> <span class="string">"antiquewhite4"</span> <span class="string">"aquamarine"</span>   </div><div class="line"> [<span class="number">9</span>] <span class="string">"aquamarine1"</span>   <span class="string">"aquamarine2"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line">count(cl)</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image5.png" alt=""></p>
<p>count函数列出了所有657中颜色名称。</p>
<p>使用show_col函数可以查看所有657中颜色的图形显示效果</p>
<p>show_col(cl,labels=F)#因为颜色数量太多，使用labels=F参数略去颜色色值信息。<br><img src="http://ordw0vyu9.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用colorRampPalette函数可以自由调用任何一种自定义颜色。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">colorRamp(colors, bias = <span class="number">1</span>, space = c(<span class="string">"rgb"</span>, <span class="string">"Lab"</span>), interpolate = c(<span class="string">"linear"</span>, <span class="string">"spline"</span>))</div><div class="line">colorRampPalette(colors, <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<p>color函数的介绍如上，具体的参数解释可以通过？colorRampPalette查看他的官方文档，这里我们直接取色。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">4</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">n &lt;- <span class="number">1000</span></div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"red"</span>, <span class="string">"green"</span>))(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"blue"</span>, <span class="string">"yellow"</span>, <span class="string">"orange"</span>))(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c( <span class="string">"white"</span>, <span class="string">"gold"</span>, <span class="string">"yellow"</span>, <span class="string">"brown"</span>), bias=<span class="number">1.2</span>)(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"red"</span>,<span class="string">"gold"</span>, <span class="string">"yellow"</span>, <span class="string">"grey"</span>,<span class="string">"orange"</span>), bias=<span class="number">1.2</span>)(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image7.png" alt=""></p>
<p>除了这两大色彩系统系统之外，R语言也支持直接以色值（HEX）形式输入的颜色，只需使用c()函数生成色值组成的字符向量，R语言就可自动识别。</p>
<p>还有一些特殊用途的grey函数，hsv函数等等可以通过设定灰度或者色调、饱和度、亮度等等方式获取颜色使用，这些由于过于繁琐，这里就略去了，甘感兴趣的小盆友可以自己探索。</p>
<p>当然，这里还没有讲解到那些已经做得很成熟的主题配色包，比如ggthemes（专为ggplot2开发的主题包）、RColorbrewer（里面存放着大量高质量的配色方案）、以及ggtech（是一个科技主题的配色包，主要供ggplot函数调用）。</p>
<p>通过scales包中的brewer.col，我们可以提取出以上各包的配色主题，来用于我们的可视化图表中，不光是ggplot绘图系统，即便是在基础绘图系统（base::plot）中也是可以调用这些色彩方案的，好了这里先放个彩蛋，下期再见！</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于配色的话题，已经聊过很多次了，但是就像是之前说过的，对于图形可视化而言，配色决定着作品的“颜值”,谈再多次都不嫌多。&lt;/p&gt;
&lt;p&gt;今天是R语言配色系统综合篇的上篇（当然是有下篇啦，下篇将会教你如何优雅的提取各种高大上配色主题，作为己用。经过几天的研究，小魔方已经发现了如果将各种高质量配色包中的主题色板通过函数的形式在高级绘图系统和低级绘图系统之间相互共享）。&lt;/p&gt;
    
    </summary>
    
      <category term="图表配色" scheme="http://www.raindu.com/categories/%E5%9B%BE%E8%A1%A8%E9%85%8D%E8%89%B2/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="配色" scheme="http://www.raindu.com/tags/%E9%85%8D%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——极坐标变换与衍生图表类型</title>
    <link href="http://www.raindu.com/2017/06/11/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%9E%81%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2%E4%B8%8E%E8%A1%8D%E7%94%9F%E5%9B%BE%E8%A1%A8%E7%B1%BB%E5%9E%8B/"/>
    <id>http://www.raindu.com/2017/06/11/R语言可视化——极坐标变换与衍生图表类型/</id>
    <published>2017-06-11T01:20:45.000Z</published>
    <updated>2017-06-11T01:35:54.937Z</updated>
    
    <content type="html"><![CDATA[<p>今天这篇内容会比较杂乱一点，因为会讲到ggplot函数中的一大类通过极坐标支持才能呈现出来的图表效果。</p>
<p>ggplot作图背后的图表哲学，没有给予饼图（以及衍生出的圆环图、玫瑰图等放射状图表类型）存在的空间（主要是该包的开发者个人的审美观，比较反感次坐标轴以及功能类型雷同的重复性图层函数，所以它宁可开发出分面图层原理也不愿意增加次坐标轴，不愿意为原本柱形图可以表达的图表形式再单独开发一种功能雷同的饼图函数）。</p>
<p>但是巧的是，在常见的三种坐标形式中，极坐标转换可以非常轻松的将常见的柱形图（条形图）、堆积柱形图通过只一句极坐标函数就神奇的转化为饼图、玫瑰图、圆环图等（不知道是有意为之还是偶然的巧合）。</p>
<a id="more"></a>
<h3 id="饼图的实现原理："><a href="#饼图的实现原理：" class="headerlink" title="饼图的实现原理："></a>饼图的实现原理：</h3><p>饼图需要借助柱形图结合极坐标进行转化：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image1.png" alt=""></p>
<p>当使用一个因子变量作为横轴，使用分类变量进行填充时，该柱形图变成了单条堆积柱形图。</p>
<p>接下来我们通过以上函数添加极坐标（注意极坐标的设定是如何影响最终的图表形式的）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image4.png" alt=""></p>
<p>从做出的图表以及极坐标函数内的参数我们可以看出来，当参数指定为x时，最终柱形图的x轴会被指定为极坐标的x轴（圆周），而柱形图的y轴则会成为极坐标的y轴（半径）。当指定为y轴时，柱形图的y轴为成为极坐标的x轴（圆周），柱形图的x轴会成为极坐标的y轴（半径）。</p>
<p>同时极坐标状态下，饼图的半径是由柱形图（条形图）宽度决定的，以上图表中圆心有个空白，如果我们将柱形图柱形图宽度定义为1,则会成为正圆。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image5.png" alt=""></p>
<h3 id="极坐标系下图表元素控制："><a href="#极坐标系下图表元素控制：" class="headerlink" title="极坐标系下图表元素控制："></a>极坐标系下图表元素控制：</h3><p>图中其他的元素控制方式与往常的柱形图做法一样：</p>
<p>去掉极坐标轴的轴刻度标签，去掉两个轴标题、更换配色：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text = element_blank(),</div><div class="line">	axis.ticks = element_blank(),</div><div class="line">	axis.title = element_blank()</div><div class="line">	)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image6.png" alt=""></p>
<p>当有多个序列时：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image7.png" alt=""></p>
<p>通过极坐标转换可以实现圆环图、圆条图效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>,fill=<span class="string">"steelblue"</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.x = element_blank(),</div><div class="line">	axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image8.png" alt=""></p>
<p>改变极坐标轴参数设置，可以模拟南丁格尔玫瑰图效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,fill=<span class="string">"#3182BD"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.y = element_blank(),</div><div class="line">	axis.ticks= element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">ylim(c(-<span class="number">3000</span>,<span class="number">22500</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image9.png" alt=""></p>
<h3 id="极坐标系下多序列图表："><a href="#极坐标系下多序列图表：" class="headerlink" title="极坐标系下多序列图表："></a>极坐标系下多序列图表：</h3><p>当然如果你使用的原始柱形图数据中添加了分类序列（也就是堆积柱形图），按照上面的方式可以制作更加复杂的圆环图、堆叠玫瑰图</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.x = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image10.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    axis.text.y = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">ylim(c(-<span class="number">2000</span>,<span class="number">12000</span>))+</div><div class="line">theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image11.png" alt=""></p>
<p>尝试着用分面来解决多序列问题：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    axis.text.y = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">ylim(c(-<span class="number">2000</span>,<span class="number">6000</span>))+</div><div class="line">theme_bw()+</div><div class="line">facet_grid(.~cut)</div></pre></td></tr></table></figure></p>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image12.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这篇内容会比较杂乱一点，因为会讲到ggplot函数中的一大类通过极坐标支持才能呈现出来的图表效果。&lt;/p&gt;
&lt;p&gt;ggplot作图背后的图表哲学，没有给予饼图（以及衍生出的圆环图、玫瑰图等放射状图表类型）存在的空间（主要是该包的开发者个人的审美观，比较反感次坐标轴以及功能类型雷同的重复性图层函数，所以它宁可开发出分面图层原理也不愿意增加次坐标轴，不愿意为原本柱形图可以表达的图表形式再单独开发一种功能雷同的饼图函数）。&lt;/p&gt;
&lt;p&gt;但是巧的是，在常见的三种坐标形式中，极坐标转换可以非常轻松的将常见的柱形图（条形图）、堆积柱形图通过只一句极坐标函数就神奇的转化为饼图、玫瑰图、圆环图等（不知道是有意为之还是偶然的巧合）。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="极坐标" scheme="http://www.raindu.com/tags/%E6%9E%81%E5%9D%90%E6%A0%87/"/>
    
      <category term="饼图" scheme="http://www.raindu.com/tags/%E9%A5%BC%E5%9B%BE/"/>
    
      <category term="圆环图" scheme="http://www.raindu.com/tags/%E5%9C%86%E7%8E%AF%E5%9B%BE/"/>
    
      <category term="玫瑰图" scheme="http://www.raindu.com/tags/%E7%8E%AB%E7%91%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表</title>
    <link href="http://www.raindu.com/2017/06/10/R%E8%AF%AD%E8%A8%80%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96%E2%80%94%E2%80%94%E5%B7%A7%E7%94%A8%E5%88%86%E9%9D%A2%E8%A1%A8%E8%BE%BE%E4%BC%98%E5%8C%96%E5%9B%BE%E8%A1%A8%E5%B8%83%E5%B1%80%EF%BC%8C%E5%81%9A%E5%87%BA%E5%A0%AA%E6%AF%94%E6%9D%82%E5%BF%97%E7%BA%A7%E8%A7%86%E8%A7%89%E4%BD%93%E9%AA%8C%E7%9A%84%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    <id>http://www.raindu.com/2017/06/10/R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表/</id>
    <published>2017-06-10T01:15:55.000Z</published>
    <updated>2017-06-10T01:54:32.725Z</updated>
    
    <content type="html"><![CDATA[<p>图表的优化布局在Excel中一直都是个大难题，难在Excel软件固有的限制。</p>
<p>特别是在制作多序列多分类图表的时候，放在一个图中显得序列过于拥挤，影响视觉效果，做出分面表达又耗时费力，需要掌握诸多技巧，（版式设计呀、单元格锚定呀等等、照相机呀什么的）是在是有心无力。</p>
<a id="more"></a>
<p>但是像R语言这样依靠图形语法来控制的作图形式，却不存在这样的问题。</p>
<p>今天跟大家分享如何在R语言中巧用分面表达来优化多系列多分类图表的版式布局！</p>
<p>其实这一篇在不久前曾经发过的，当时还处于摸索阶段，写的很粗糙，今天重发一遍，所有的代码和图表都是优化过的，不仔细观察，还真看不出来，仔细对比一下就能发现了！</p>
<p>我是分割线~</p>
<hr>
<p>当数据序列比较多的时候，特别是超过四个以后，还用堆积柱形图（条形图）、或者簇状柱形图的话，图表必然会因为系列太多而受到挤压或者变形，整体就会不协调、不美观。</p>
<p>还有ggplot不支持次坐标轴功能，它的作图思维基本源于塔夫脱的可视化理念，而且作者个人的审美也比较抵触次坐标轴，但是他留给大家解决多序列图表的方案是——图形分面</p>
<p>以下仅以常用的柱形图、条形图为例进行讲解（所有的图形对象几乎都支持分面）</p>
<h3 id="构造作图数据集："><a href="#构造作图数据集：" class="headerlink" title="构造作图数据集："></a>构造作图数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),</div><div class="line">Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),</div><div class="line">Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),</div><div class="line">Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="数据重塑（宽转长）："><a href="#数据重塑（宽转长）：" class="headerlink" title="数据重塑（宽转长）："></a>数据重塑（宽转长）：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-melt(mydata,id.vars=<span class="string">"Conpany"</span>,variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><p><strong>默认输出图表：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image3.png" alt=""></p>
<p>默认图表的配色确实挺难看的，这里我使用华尔街日报、经济学人的主题、及配色模板进行适度美化。</p>
<p><strong>华尔街日报：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>经济学人</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上是我们使用传统的方法通过将颜色映射到不同类别的年度收入变量上，达到了区分效果，可是这样终究不是办法，五个序列实在是有点多，已经让然有点儿眼花缭乱了，如果有8个序列、10个序列呢，那又该怎么办呢~</p>
<p>下面跟大家分享其中一种比较有效的解决办法——通过分面表达解决多序列图表呈现问题</p>
<h3 id="横排分面："><a href="#横排分面：" class="headerlink" title="横排分面："></a>横排分面：</h3><p><strong>柱形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(.~Year)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">           axis.title = element_blank(),</div><div class="line">          legend.position=<span class="string">'none'</span>,</div><div class="line">          axis.text.x=element_text(size=<span class="number">7.5</span>)</div><div class="line">         )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>条形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">     axis.line.y=element_line(),</div><div class="line">     axis.line.x=element_blank(),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"solid"</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image9.png" alt=""></p>
<h3 id="竖排分面："><a href="#竖排分面：" class="headerlink" title="竖排分面："></a>竖排分面：</h3><p><strong>柱形分面（竖排）：</strong></p>
<p>左<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(Year~.)</div><div class="line">右</div><div class="line">p2&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>,face=<span class="string">"bold"</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>使用multiplot函数进行版面合并：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span>(grid)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line">multiplot(p1,p2,cols=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/21.jpg" alt=""></p>
<p><strong>条形分面（竖排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image16.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.2</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image17.png" alt=""></p>
<h3 id="关于簇状、分面图表数据标签问题："><a href="#关于簇状、分面图表数据标签问题：" class="headerlink" title="关于簇状、分面图表数据标签问题："></a>关于簇状、分面图表数据标签问题：</h3><p><strong>簇状图数据标签处理：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>横向分面柱图数据标签问题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(.~Year)+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">5</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image11.png" alt=""></p>
<p><strong>横向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">coord_flip()+facet_grid(.~Year)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.2</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image12.png" alt=""></p>
<p><strong>竖向分面柱形图数据标签问题：</strong></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image19.png" alt=""></p>
<p><strong>竖向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">facet_grid(Year~.)+coord_flip()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3.5</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.25</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image18.png" alt=""></p>
<p>以上是本人在学习ggplot函数过程中的一些练习案例，当然要是仔细琢磨，里面的瑕疵还不少，改进空间还有很多，以后有机会慢慢跟大家补充，过几天再跟大家继续分享关于ggplot更加精深的用法技巧！</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图表的优化布局在Excel中一直都是个大难题，难在Excel软件固有的限制。&lt;/p&gt;
&lt;p&gt;特别是在制作多序列多分类图表的时候，放在一个图中显得序列过于拥挤，影响视觉效果，做出分面表达又耗时费力，需要掌握诸多技巧，（版式设计呀、单元格锚定呀等等、照相机呀什么的）是在是有心无力。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>leaflet在线地图进阶宝典——高级交互特性</title>
    <link href="http://www.raindu.com/2017/06/09/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E4%BA%A4%E4%BA%92%E7%89%B9%E6%80%A7(%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C)/"/>
    <id>http://www.raindu.com/2017/06/09/leaflet在线地图进阶宝典——高级交互特性(动态显示效果)/</id>
    <published>2017-06-09T02:10:09.000Z</published>
    <updated>2017-06-10T11:12:29.642Z</updated>
    
    <content type="html"><![CDATA[<p>本文针对leaflet的高级交互特性进行展开，主要涉及到leaflet中等值线地图的鼠标悬浮效果及点击效果的动态呈现。这也是leaflet的天然HTML属性所具有的强大优势。</p>
<p>在制作高质量在线数据地图的项目中，leaflet结合扩展的HTML性能，可以呈现非常人性化的动态效果，如能结合css、shiny等装饰器和交互框架，几乎可以胜任常见的动态交互网站的制作。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"sp"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"leaflet"</span>)</div><div class="line">options(stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"><span class="comment">#锁定目录：</span></div><div class="line">setwd(<span class="string">"D:/R/mapdata/State"</span>)</div></pre></td></tr></table></figure>
<p><strong>导入美国地图素材（含数据）</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">states&lt;-geojsonio::geojson_read(<span class="string">"us-states.geojson"</span>, what = <span class="string">"sp"</span>)</div></pre></td></tr></table></figure>
<p>###案例1：<br>一个简单的开始：（引用mapbox地图）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">m &lt;- leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%  <span class="comment">#设置呈现的视觉中心</span></div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,       <span class="comment">#添加地图图层</span></div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>)))</div><div class="line">m %&gt;% addPolygons()   <span class="comment">#地图呈现</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or9afbo77.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>分箱及设置色盘：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),   <span class="comment">#显式声明颜色映射变量</span></div><div class="line">  weight = <span class="number">2</span>,                       <span class="comment">#线宽</span></div><div class="line">  opacity = <span class="number">1</span>,                     <span class="comment">#透明度</span></div><div class="line">  color = <span class="string">"white"</span>,               <span class="comment">#颜色</span></div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>)             <span class="comment">#填充透明度</span></div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(     <span class="comment">#设置高亮属性</span></div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=t051262r2bq&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="设置鼠标点击事件："><a href="#设置鼠标点击事件：" class="headerlink" title="设置鼠标点击事件："></a>设置鼠标点击事件：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">labels &lt;- sprintf(<span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,states$name,states$density) %&gt;% lapply(htmltools::HTML)  <span class="comment">#转化为HTML格式标签</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">m &lt;-m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(</div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span></div><div class="line">    ),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(    <span class="comment">#标签选项设置（参数类别HTML属性）</span></div><div class="line">    style=list(<span class="string">"font-weight"</span>=<span class="string">"normal"</span>,padding=<span class="string">"3px 8px"</span>),</div><div class="line">    textsize=<span class="string">"15px"</span>,</div><div class="line">    direction=<span class="string">"auto"</span>)</div><div class="line">  );m</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=b0512cl0epo&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="增加图例："><a href="#增加图例：" class="headerlink" title="增加图例："></a>增加图例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">  position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image3.png" alt=""></p>
<p>以下是该案例的完整代码：<br><code>From http://leafletjs.com/examples/choropleth/us-states.js</code><br>（数据源，js格式记得保存为geojson格式）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div><div class="line"></div><div class="line">labels &lt;- sprintf(</div><div class="line">  <span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,</div><div class="line">  states$name, states$density</div><div class="line">) %&gt;% lapply(htmltools::HTML)</div><div class="line"></div><div class="line">leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%</div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,</div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>))) %&gt;%</div><div class="line">  addPolygons(</div><div class="line">    fillColor = ~pal(density),</div><div class="line">    weight = <span class="number">2</span>,</div><div class="line">    opacity = <span class="number">1</span>,</div><div class="line">    color = <span class="string">"white"</span>,</div><div class="line">    dashArray = <span class="string">"3"</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    highlight = highlightOptions(</div><div class="line">      weight = <span class="number">5</span>,</div><div class="line">      color = <span class="string">"#666"</span>,</div><div class="line">      dashArray = <span class="string">""</span>,</div><div class="line">      fillOpacity = <span class="number">0.7</span>,</div><div class="line">      bringToFront = <span class="literal">TRUE</span>),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(</div><div class="line">      style = list(<span class="string">"font-weight"</span> = <span class="string">"normal"</span>, padding = <span class="string">"3px 8px"</span>),</div><div class="line">      textsize = <span class="string">"15px"</span>,</div><div class="line">      direction = <span class="string">"auto"</span>)) %&gt;%</div><div class="line">  addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">    position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文针对leaflet的高级交互特性进行展开，主要涉及到leaflet中等值线地图的鼠标悬浮效果及点击效果的动态呈现。这也是leaflet的天然HTML属性所具有的强大优势。&lt;/p&gt;
&lt;p&gt;在制作高质量在线数据地图的项目中，leaflet结合扩展的HTML性能，可以呈现非常人性化的动态效果，如能结合css、shiny等装饰器和交互框架，几乎可以胜任常见的动态交互网站的制作。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmapH(中心热度图)</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapH-%E4%B8%AD%E5%BF%83%E7%83%AD%E5%BA%A6%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——REmapH-中心热度图/</id>
    <published>2017-06-08T09:36:37.000Z</published>
    <updated>2017-06-10T11:11:59.882Z</updated>
    
    <content type="html"><![CDATA[<p>今天是REmap系列的最后一篇——REmapH函数。</p>
<p>这个函数的特色是可以做中心辐射的热力图，这种热力图在气象、人口密度、海拔测绘领域有诸多运用，当然也可以上当用在商务场合——特别是跟地理信息有关的数据呈现方面。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"REmap"</span>)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">?remapH</div><div class="line">remapH(data,</div><div class="line">      maptype = <span class="string">'china'</span>,</div><div class="line">      theme = get_theme(<span class="string">"Dark"</span>),</div><div class="line">      blurSize = <span class="number">30</span>,</div><div class="line">      color = c(<span class="string">'blue'</span>, <span class="string">'cyan'</span>, <span class="string">'lime'</span>, <span class="string">'yellow'</span>, <span class="string">'red'</span>),</div><div class="line">      minAlpha = <span class="number">0.05</span>,</div><div class="line">      opacity = <span class="number">1</span>,</div><div class="line">      <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<ul>
<li>data为要传入的数据，数据为三列，第一列为lon(经度)，第二列为lat(维度)，第三列为prob(密度/概率)；</li>
<li>maptype为要绘制的地图类型，可选有：”china”，”world”或中国各省份名字；</li>
<li>theme为绘制的地图主题类型，可由get_theme函数传入；</li>
<li>blurSize为热力效果的泛化范围，可调整热力点中心的扩散程度；</li>
<li>color为热力的渐变颜色；</li>
<li>minAlpha为热力点的展示阈值，对应data中的prob列，作图时各点密度会对比minAlpha，以凸显不同密度所展示的不同热力分布；</li>
<li>opacity为透明度，调整热力图的透明度。</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>, </div><div class="line">          lineColor = <span class="string">"Random"</span>,</div><div class="line">          backgroundColor = <span class="string">"#1b1b1b"</span>, </div><div class="line">          titleColor = <span class="string">"#fff"</span>,</div><div class="line">          borderColor = <span class="string">"rgba(100,149,237,1)"</span>, </div><div class="line">          regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">          labelShow = <span class="literal">T</span>, </div><div class="line">          pointShow = <span class="literal">F</span>, </div><div class="line">          pointColor = <span class="string">"gold"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p>theme为主题，设置该参数后无需设置get_theme里其他参数，可选有”Dark”、”Sky”、”blue”和”none”四种</p>
<ul>
<li>lineColoe为线条颜色，对应为map图里面迁徙线条的颜色</li>
<li>backgroundColor为图片的背景色，支持16进制颜色输入，也支持rgb()函数和rgba()</li>
<li>titleColor为标题的颜色，设置同上</li>
<li>borderColor为地图中各省、市边界颜色</li>
<li>regionColor为地图中各区域颜色，各省份和市</li>
<li>labelShow为是否展示各省、市名字，设置为True时展示</li>
<li>pointShow为是否展示各省会城市所在点，设置为True时展示</li>
<li>pointColor设置上述点的颜色</li>
</ul>
<p>接下来首先通过两个案例进行讲解：</p>
<h3 id="案例1："><a href="#案例1：" class="headerlink" title="案例1："></a>案例1：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">options(remap.js.web=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p>这里有一个包含经纬度信息及对应密度的数据集，通过该数据集我们可以看到看到REmapH函数制作热力图的大致效果：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data&lt;- read.csv(file=<span class="string">"D:\\R\\map\\MoveChart\\cityvaluetop10.csv"</span>,header=<span class="literal">T</span>)</div></pre></td></tr></table></figure></p>
<p>数据结构如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">head(data)</div><div class="line">       lon      lat prob</div><div class="line"><span class="number">1</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">2</span> <span class="number">115.3948</span> <span class="number">24.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">3</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">4</span> <span class="number">113.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">5</span> <span class="number">114.7307</span> <span class="number">27.69586</span> <span class="number">0.80</span></div><div class="line"><span class="number">6</span> <span class="number">110.5066</span> <span class="number">28.69586</span> <span class="number">0.80</span></div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">48</span> obs. of  <span class="number">3</span> variables:</div><div class="line"> $ lon : num  <span class="number">114</span> <span class="number">115</span> <span class="number">114</span> <span class="number">113</span> <span class="number">115</span> <span class="keyword">...</span></div><div class="line"> $ lat : num  <span class="number">23.4</span> <span class="number">24.4</span> <span class="number">23.4</span> <span class="number">23.4</span> <span class="number">27.7</span> <span class="keyword">...</span></div><div class="line"> $ prob: num  <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.75</span> <span class="number">0.75</span> <span class="keyword">...</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapH(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or82vn70x.bkt.clouddn.com/image1.png" alt=""></p>
<p>接下来制作辽宁省省域热力图数据集：</p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>首先使用mapNames函数获取辽宁省市级行政单位：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city_ln&lt;-mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure></p>
<p><strong>获取各市级行政单位经纬度信息：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">city_list&lt;-get_geo_position(city_ln)</div><div class="line"></div><div class="line">&gt; city_list</div><div class="line">        lon      lat     city</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>   大连市</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>   朝阳市</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>   丹东市</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>   铁岭市</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>   沈阳市</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>   抚顺市</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span> 葫芦岛市</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>   阜新市</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>   锦州市</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>   鞍山市</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>   本溪市</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>   营口市</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>   辽阳市</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>   盘锦市</div></pre></td></tr></table></figure></p>
<p><strong>生成一列密度数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">point&lt;-round(runif(<span class="number">14</span>,min=<span class="number">0.3</span>,max=<span class="number">0.95</span>),<span class="number">2</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">0.89</span> <span class="number">0.82</span> <span class="number">0.91</span> <span class="number">0.87</span> <span class="number">0.90</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.89</span> <span class="number">0.87</span> <span class="number">0.94</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.88</span> <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的热力图作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-data.frame(city_list[,<span class="number">1</span>:<span class="number">2</span>],point)</div><div class="line"></div><div class="line">        lon      lat point</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.89</span></div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.82</span></div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span></div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.87</span></div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.90</span></div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.90</span></div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.85</span></div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.89</span></div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.87</span></div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.94</span></div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.90</span></div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.85</span></div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.88</span></div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>作图函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapH(newdata,</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image2.png" alt=""></p>
<p>因为以上数据集中使用的各市中心城市的密度数据，所以整体密度太过分散，看不出渐变效果，当然密度图的数据记录是不受数量限制的，在有较多数据点呈现密集分布的地方，可以看到非常明显的颜色热度渐变效果。</p>
<p>这里我通过添加一列分类数据，将以上密度图数据进行改造：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">newdata$perA&lt;-rep(<span class="string">"A"</span>,<span class="number">14</span>)</div><div class="line">newdata$perB&lt;-rep(<span class="string">"B"</span>,<span class="number">14</span>)</div><div class="line">newdata$perC&lt;-rep(<span class="string">"C"</span>,<span class="number">14</span>)</div></pre></td></tr></table></figure>
<p>使用Reshape2包对数据进行一维转化：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- melt(newdata, id.vars=c(<span class="string">"lon"</span>,<span class="string">"lat"</span>,<span class="string">"point"</span>))</div><div class="line"></div><div class="line">        lon      lat point variable value</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perA     A</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perA     A</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perA     A</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perA     A</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perA     A</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perA     A</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perA     A</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perA     A</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perA     A</div><div class="line"><span class="number">15</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perB     B</div><div class="line"><span class="number">16</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perB     B</div><div class="line"><span class="number">17</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">18</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">19</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">20</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perB     B</div><div class="line"><span class="number">21</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">22</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perB     B</div><div class="line"><span class="number">23</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perB     B</div><div class="line"><span class="number">24</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perB     B</div><div class="line"><span class="number">25</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perB     B</div><div class="line"><span class="number">26</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perB     B</div><div class="line"><span class="number">27</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">28</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perB     B</div><div class="line"><span class="number">29</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perC     C</div><div class="line"><span class="number">30</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perC     C</div><div class="line"><span class="number">31</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">32</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">33</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">34</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perC     C</div><div class="line"><span class="number">35</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">36</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perC     C</div><div class="line"><span class="number">37</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perC     C</div><div class="line"><span class="number">38</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perC     C</div><div class="line"><span class="number">39</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perC     C</div><div class="line"><span class="number">40</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perC     C</div><div class="line"><span class="number">41</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">42</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perC     C</div></pre></td></tr></table></figure></p>
<p><strong>从新运行图表函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remapH(newdata[,<span class="number">1</span>:<span class="number">3</span>],</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image3.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是REmap系列的最后一篇——REmapH函数。&lt;/p&gt;
&lt;p&gt;这个函数的特色是可以做中心辐射的热力图，这种热力图在气象、人口密度、海拔测绘领域有诸多运用，当然也可以上当用在商务场合——特别是跟地理信息有关的数据呈现方面。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
      <category term="热力密度地图" scheme="http://www.raindu.com/tags/%E7%83%AD%E5%8A%9B%E5%AF%86%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmapC(填充地图)</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapC-%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——REmapC-填充地图/</id>
    <published>2017-06-08T05:03:50.000Z</published>
    <updated>2017-06-10T11:12:06.960Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家介绍REmap函数家族中的第三个函数——REmapC。</p>
<p>REmapC函数允许我们同时在一张地图上制作填充图和点图、线图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(REmap)</div><div class="line"><span class="keyword">library</span>(baidumap)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?remapC</div><div class="line">remapC(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">      markLineData = <span class="literal">NULL</span>,</div><div class="line">      markPointData = <span class="literal">NULL</span>,</div><div class="line">      color = c(<span class="string">'#1e90ff'</span>,<span class="string">'#f0ffff'</span>),</div><div class="line">      theme = get_theme(<span class="string">"Bright"</span>),</div><div class="line">      title = <span class="string">""</span>,</div><div class="line">      subtitle = <span class="string">""</span>,</div><div class="line">      markLineTheme = markLineControl(),</div><div class="line">      markPointTheme = markPointControl(),</div><div class="line">      geoData = <span class="literal">NA</span>,</div><div class="line">      mindata = <span class="literal">NA</span>,</div><div class="line">      maxdata = <span class="literal">NA</span>)</div></pre></td></tr></table></figure>
<p><strong>四个主要参数说明：</strong></p>
<ul>
<li>参数一：data为需要的原始数据框格式数据，共2列，第一列为省份或者城市名称，第二列为对应的数值，数值大小将决定地图颜色深浅。</li>
<li>参数二：maptype为地图类型设置，可选world、china或者中国省份名称</li>
<li>参数三：color为热力图渐变颜色，默认为2个颜色，第一个为终止色，第二个为初始色。如果只有一个颜色，系统会自动以白色补充为初始铯色。</li>
<li>参数四：mindata与maxdata可以设置颜色极端点对应数据的上下限（默认是使用data中的数据最大值最小值作为两端极值）。</li>
</ul>
<h3 id="一、全国热力图"><a href="#一、全国热力图" class="headerlink" title="一、全国热力图"></a>一、全国热力图</h3><p>首先利用mapnames函数提取全国各省份名称：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)           <span class="comment">#全国省份</span></div><div class="line">value &lt;- rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>)               <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)    <span class="comment">#合成数据框作图数据</span></div><div class="line">remapC(mydata,color=c(<span class="string">"yellow"</span>,<span class="string">"red"</span>),title=<span class="string">"全国分省热地图"</span>,subtitle=<span class="string">"我是副标题"</span>) <span class="comment">#制作热力图</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>默认的颜色标度是从最小值到最大值。以上函数中省略了markLineData，markPointData 两个参数，所以并未显示点线图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ad_ln &lt;- mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">value_ln&lt;-rnorm(<span class="number">14</span>,<span class="number">100</span>,<span class="number">30</span>)</div><div class="line">data_ln &lt;-data.frame(ad_ln,value_ln) </div><div class="line"></div><div class="line">      ad_ln  value_ln</div><div class="line"><span class="number">1</span>    大连市  <span class="number">79.67630</span></div><div class="line"><span class="number">2</span>    朝阳市  <span class="number">41.93198</span></div><div class="line"><span class="number">3</span>    丹东市 <span class="number">173.31586</span></div><div class="line"><span class="number">4</span>    铁岭市 <span class="number">106.01990</span></div><div class="line"><span class="number">5</span>    沈阳市 <span class="number">119.40256</span></div><div class="line"><span class="number">6</span>    抚顺市  <span class="number">79.54820</span></div><div class="line"><span class="number">7</span>  葫芦岛市 <span class="number">155.62993</span></div><div class="line"><span class="number">8</span>    阜新市 <span class="number">122.99599</span></div><div class="line"><span class="number">9</span>    锦州市  <span class="number">94.17395</span></div><div class="line"><span class="number">10</span>   鞍山市  <span class="number">82.18944</span></div><div class="line"><span class="number">11</span>   本溪市  <span class="number">98.70972</span></div><div class="line"><span class="number">12</span>   营口市 <span class="number">115.59957</span></div><div class="line"><span class="number">13</span>   辽阳市 <span class="number">104.89199</span></div><div class="line"><span class="number">14</span>   盘锦市  <span class="number">92.92975</span></div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_out &lt;- remapC(data_ln,</div><div class="line">                   maptype = <span class="string">"liaoning"</span>,</div><div class="line">                   color=c(<span class="string">"green"</span>),</div><div class="line">                   title=<span class="string">"辽宁省热力地图"</span>,</div><div class="line">                   theme = get_theme(<span class="string">"Sky"</span>),</div><div class="line">                   maxdata=<span class="number">180</span></div><div class="line">                   )                             </div><div class="line">plot(map_out)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF2.png" alt=""></p>
<h3 id="接下来做一个案例："><a href="#接下来做一个案例：" class="headerlink" title="接下来做一个案例："></a>接下来做一个案例：</h3><p>每年春运，广东省人口会大批回流原住地，形成壮观的春运人流大军，我们模拟出广东省回流各省的人口数，使用填色地图表示人流规模，使用动态流向线表示回流最大的前10个省份。</p>
<p>因为没有实际的数据，这里我用函数模拟数据（非真实数据）：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)            <span class="comment">#全国省份</span></div><div class="line">value &lt;- round(rnorm(<span class="number">34</span>,<span class="number">1000</span>,<span class="number">30</span>),<span class="number">0</span>)      <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)     <span class="comment">#合并数据</span></div><div class="line"></div><div class="line">labelper&lt;-mydata[order(mydata[,<span class="string">"value"</span>],decreasing=<span class="literal">T</span>),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">origin&lt;-rep(<span class="string">"广州"</span>,length(labelper))</div><div class="line">destination&lt;-labelper$province</div><div class="line">line_data&lt;-data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">map_out1 &lt;- remapC(mydata,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>因为假设广东是人口迁出地，给广东填色是没有任何意义的，所以mydata数据中需要忽略 广东的数据<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mydata1 &lt;- mydata[-<span class="number">12</span>,]</div><div class="line">map_out2 &lt;- remapC(mydata1,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF4.gif" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家介绍REmap函数家族中的第三个函数——REmapC。&lt;/p&gt;
&lt;p&gt;REmapC函数允许我们同时在一张地图上制作填充图和点图、线图。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
      <category term="填充地图" scheme="http://www.raindu.com/tags/%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——案例综合运用</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%A1%88%E4%BE%8B%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——案例综合运用/</id>
    <published>2017-06-08T01:36:58.000Z</published>
    <updated>2017-06-10T11:11:34.710Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家介绍一个REmap包的新函数——REmapB。</p>
<p>它是REmap包中诸多组函数中的一位，功能上要强大于之前介绍的REmap函数，不仅可以完成REmap函数的所有图表效果，而且可以做出前者没有的地图效果。</p>
<a id="more"></a>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><p><strong>以下是该函数的详细语法及参数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">?remapB</div><div class="line">remapB(center = c(<span class="number">104.114129</span>,<span class="number">37.550339</span>),</div><div class="line">       zoom = <span class="number">5</span>,</div><div class="line">       color = <span class="string">"Bright"</span>,</div><div class="line">       title = <span class="string">""</span>,</div><div class="line">       subtitle = <span class="string">""</span>,</div><div class="line">       markLineData = <span class="literal">NA</span>,</div><div class="line">       markPointData = <span class="literal">NA</span>,</div><div class="line">       markLineTheme = markLineControl(),</div><div class="line">       markPointTheme = markPointControl(),</div><div class="line">       geoData = <span class="literal">NA</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：center为地图中心，经纬度格式；</li>
<li>参数二：zoom为缩放设置，默认为5，代表全国地图，增大至10可放大至地市</li>
<li>参数三：color为地图颜色，可选有”Bright”, “Blue”, “light”, “dark”, “redalert”, “googlelite”, “grassgreen”, “midnight”, “pink”, “darkgreen”, “bluish”, “grayscale”, “hardedge”</li>
<li>参数四：title为地图主标题</li>
<li>参数五：subtitle为地图副标题</li>
<li>参数六：markLineData为绘制线条需要的数据，包括起点和终点两列</li>
<li>参数七：markPointDate为绘制点需要的数据，仅终点一列</li>
<li>参数八：markLineTheme为线条主题设置，通过markLineControl( )函数设置</li>
<li>参数九：markPointTheme为点主题设置，通过markPointControl( )函数设置</li>
<li>参数十：geoData为点、线绘制的地理位置数据存储，可以只是输入经纬度数据，也可通过get_geo_position(‘地点’)获取</li>
</ul>
<p>其中以上参数中，markLineTheme和markLineTheme内含有诸多属性设置，类似REmap中的theme设置：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">markLineTheme = markLineControl(symbol = <span class="literal">NA</span>,<span class="comment">#控制线型</span></div><div class="line">symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),    <span class="comment">#线条粗度变动范围</span></div><div class="line">smooth = <span class="literal">T</span>,             <span class="comment">#启用线条平滑度设置</span></div><div class="line">smoothness =<span class="number">0.2</span>,        <span class="comment">#线条平滑度</span></div><div class="line">effect = <span class="literal">T</span>,             <span class="comment">#线条动效</span></div><div class="line">lineWidth = <span class="number">2</span>,          <span class="comment">#线宽</span></div><div class="line">lineType = ‘dotted’,    <span class="comment">#线条类别</span></div><div class="line">color =‘Random’)        <span class="comment">#线条颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为标记样式，具体指线条两端的标记的形状，两个值分别为起点和终点，经过实际使用symbol参数不可修改</li>
<li>参数二：symbolSize为线条两端标记大小，对应symbol参数的两个值，实际上第一个值没用，因为开始标记为none</li>
<li>参数三：smooth为逻辑参数，设置线条是否平滑</li>
<li>参数四：smoothness为平滑度，smooth参数设置为T时有效，体现线条的弧度，减小到0时为直线</li>
<li>参数五：effect为逻辑参数，是否显示动态效果</li>
<li>参数六：lineWidth为线条粗细</li>
<li>参数七：lineType为线条类型，可选有solid（实线）、dotted（点线）、dashed（虚线）</li>
<li>参数八：color为线条颜色</li>
</ul>
<p>根据以上参数名称，可以大致了解每一个参数的含义：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">markPointTheme = markPointControl(symbol = <span class="string">"heart"</span>, <span class="comment">#点形状</span></div><div class="line">symbolSize = <span class="string">"Random"</span>,   <span class="comment">#点大小</span></div><div class="line">effect = <span class="literal">T</span>,              <span class="comment">#动效启用</span></div><div class="line">effectType = <span class="string">"scale"</span>,    <span class="comment">#动效类型</span></div><div class="line">color = <span class="string">"Random"</span>)        <span class="comment">#颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为点样式，可选项none、circle、rectangle、triangle、diamond、emptyCirle、emptyRectangle、emptyTriangle、emptyDiamond、heart、droplet、pin、arrow、star</li>
<li>参数二：symbolSize为点大小</li>
<li>参数三：effect为逻辑参数，是否显示动态效果</li>
<li>参数四：effectType为动态效果样式，可选scale（放大）和bounce（跳动）</li>
<li>参数五：color为点颜色</li>
</ul>
<p>解读：effect参数在点太多时，动态效果会失效，这时建议设置为FALSE。在remapB( )函数中通过另外一个参数markPointData也可以设置点颜色，优先级高于color参数。</p>
<h3 id="案例应用："><a href="#案例应用：" class="headerlink" title="案例应用："></a>案例应用：</h3><h4 id="接下来我们可以根据以上参数说明制作一个一对多的流向图："><a href="#接下来我们可以根据以上参数说明制作一个一对多的流向图：" class="headerlink" title="接下来我们可以根据以上参数说明制作一个一对多的流向图："></a>接下来我们可以根据以上参数说明制作一个一对多的流向图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>,<span class="string">"xian"</span>,<span class="string">"chengdu"</span>,<span class="string">"changchun"</span>,<span class="string">"taiyuan"</span>,<span class="string">"nanyang"</span>,<span class="string">"zhengzhou"</span>)  <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"nanyang"</span>,length(destination))  <span class="comment">#起点</span></div><div class="line">map_data&lt;- data.frame(origin,destination)  <span class="comment">#合成数据框格式的作图数据</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapB(zoom=<span class="number">5</span>, <span class="comment">#参数5绘制省级国家地图</span></div><div class="line">                   color=<span class="string">"dark"</span>,</div><div class="line">                   title=<span class="string">"我是主标题"</span>,</div><div class="line">                   subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                   markLineData=map_data,</div><div class="line">                   markPointData=destination,</div><div class="line">                   markLineTheme=markLineControl(),</div><div class="line">                   markPointTheme=markPointControl()</div><div class="line">                   )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF.gif" alt=""></p>
<p>####通过设置markLineTheme、markPointTheme两个主题内部的详细风格参数，你可以对线条以及数据点的气泡进行个性化设置。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>如果只想要绘制流向线而不需要终点的点的话，直接给markPointData赋值为NA就可以了。</p>
<h4 id="只要将我们的数据结构重新整理，就可以制作出路径地图："><a href="#只要将我们的数据结构重新整理，就可以制作出路径地图：" class="headerlink" title="只要将我们的数据结构重新整理，就可以制作出路径地图："></a>只要将我们的数据结构重新整理，就可以制作出路径地图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">newdata&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"chengdu"</span>,<span class="string">"xian"</span>,<span class="string">"taiyuan"</span>,<span class="string">"济南"</span>,<span class="string">"shanghai"</span>) </div><div class="line">origin&lt;-c(newdata[-<span class="number">7</span>])</div><div class="line">destination&lt;-c(newdata[-<span class="number">1</span>])</div><div class="line">map_data&lt;- data.frame(origin,destination)</div><div class="line"></div><div class="line">map_out2&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF2.gif" alt=""></p>
<h4 id="最后一个案例使用REmapB函数制作目标分布图："><a href="#最后一个案例使用REmapB函数制作目标分布图：" class="headerlink" title="最后一个案例使用REmapB函数制作目标分布图："></a>最后一个案例使用REmapB函数制作目标分布图：</h4><p>首先搜索大连地区的大学：</p>
<p>加载百度地图包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="comment">#查找大连的所有大学</span></div><div class="line">dl_college &lt;- getPlace(<span class="string">"大学"</span>,<span class="string">"大连"</span>)</div><div class="line">Get <span class="number">125</span> records, <span class="number">7</span> page. </div><div class="line">    Getting  <span class="number">0</span> th page </div><div class="line">    Getting  <span class="number">1</span> th page </div><div class="line">    Getting  <span class="number">2</span> th page </div><div class="line">    Getting  <span class="number">3</span> th page </div><div class="line">    Getting  <span class="number">4</span> th page </div><div class="line">    Getting  <span class="number">5</span> th page </div><div class="line">    Getting  <span class="number">6</span> th page </div><div class="line">Done!</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#预览数据：</span></div><div class="line">head(dl_college)</div><div class="line"></div><div class="line">                        name                                           address      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学                                         轻工苑<span class="number">1</span>号 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学                     辽宁省大连市甘井子区凌工路<span class="number">2</span>号 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学                             辽宁省大连市凌海路<span class="number">1</span>号 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） 沙河口区黄河路<span class="number">794</span>号交通大学小吃一条街内(近西南路) <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区)                   中国辽宁省大连市旅顺南路西段<span class="number">6</span>号 <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学                                      学府大街<span class="number">10</span>号 <span class="number">39.10660</span> <span class="number">121.8282</span></div><div class="line">       telephone</div><div class="line"><span class="number">1</span> (<span class="number">0411</span>)<span class="number">86323693</span></div><div class="line"><span class="number">2</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">3</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">4</span> (<span class="number">0411</span>)<span class="number">84106313</span></div><div class="line"><span class="number">5</span> (<span class="number">0411</span>)<span class="number">86111157</span></div><div class="line"><span class="number">6</span> (<span class="number">0411</span>)<span class="number">87402114</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">str(dl_college)</div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">125</span> obs. of  <span class="number">5</span> variables:</div><div class="line"> $ name     : chr  <span class="string">"大连工业大学"</span> <span class="string">"大连理工大学"</span> <span class="string">"大连海事大学"</span> <span class="string">"大连交通大学（沙河口校区）"</span> <span class="keyword">...</span></div><div class="line"> $ address  : chr  <span class="string">"轻工苑1号"</span> <span class="string">"辽宁省大连市甘井子区凌工路2号"</span> <span class="string">"辽宁省大连市凌海路1号"</span> <span class="string">"沙河口区黄河路794号交通大学小吃一条街内(近西南路)"</span> <span class="keyword">...</span></div><div class="line"> $ lat      : num  <span class="number">39</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.8</span> <span class="keyword">...</span></div><div class="line"> $ lon      : num  <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">121</span> <span class="keyword">...</span></div><div class="line"> $ telephone: chr  <span class="string">"(0411)86323693"</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="string">"(0411)84106313"</span> <span class="keyword">...</span></div></pre></td></tr></table></figure>
<p>一共抓取了大连地区的125个带有大学的机构经纬度地址：</p>
<p><strong>构造作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">newdata1&lt;-dl_college[,c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>)]</div><div class="line">head(newdata1)</div><div class="line">                        name      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区) <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学 <span class="number">39.10660</span> <span class="number">121.8282</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">newdata2&lt;-newdata1[,c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>)]</div><div class="line">map_out3 &lt;- remapB(center = c(<span class="number">121.62139</span>,<span class="number">38.91934</span>),  </div><div class="line">                zoom = <span class="number">14</span>,</div><div class="line">                color = <span class="string">"Blue"</span>,</div><div class="line">                title = <span class="string">"大连高校分布图"</span>,</div><div class="line">                markPointData =newdata2[<span class="number">3</span>],</div><div class="line">                markPointTheme = markPointControl(</div><div class="line">                symbol = <span class="string">"pin"</span>,</div><div class="line">                symbolSize = <span class="number">3</span>,</div><div class="line">                effect = <span class="literal">T</span>,</div><div class="line">                color = <span class="string">"yellow"</span>),</div><div class="line">                geoData =newdata2 </div><div class="line">               )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out3)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家介绍一个REmap包的新函数——REmapB。&lt;/p&gt;
&lt;p&gt;它是REmap包中诸多组函数中的一位，功能上要强大于之前介绍的REmap函数，不仅可以完成REmap函数的所有图表效果，而且可以做出前者没有的地图效果。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmap(路径图)</title>
    <link href="http://www.raindu.com/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap-%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/07/R语言可视化——REmap-路径图/</id>
    <published>2017-06-07T10:49:51.000Z</published>
    <updated>2017-06-10T11:11:43.757Z</updated>
    
    <content type="html"><![CDATA[<p>今天紧接昨天的内容，跟大家分享如何使用REmap函数制作路径图。</p>
<p>路径图所需要的数据结构非常简单，两列数据，左侧是起点，右侧是终点，并且每一行的终点是下一行的起点，这样最终才可以制作出连接在一起的路径图。</p>
<a id="more"></a>
<p><strong>首先我们来构造所需的数据：</strong></p>
<h3 id="构造数据："><a href="#构造数据：" class="headerlink" title="构造数据："></a>构造数据：</h3><p><strong>起点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"hefei"</span>,<span class="string">"nanjing"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>终点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(origin[-<span class="number">1</span>],origin[<span class="number">1</span>]) <span class="comment">#将起点数据首尾互换，并构造终点数据</span></div></pre></td></tr></table></figure></p>
<p><strong>将终点数据、起点数据合并为数据框格式的作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="绘图过程："><a href="#绘图过程：" class="headerlink" title="绘图过程："></a>绘图过程：</h3><p><strong>绘图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;- remap(mapdata=map_data,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out1)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image2.png" alt=""></p>
<p>上面的例子中，为了使得路径图首尾相连，终点数据是起点数据调换首尾行而得到的。</p>
<p><strong>那么如果不要求路径图首尾相连的话可以设置如下结构：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_data1&lt;-map_data[-<span class="number">7</span>,]</div><div class="line"></div><div class="line">map_out2&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out2)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image3.png" alt=""></p>
<p>这种路径图的形式非常适合用于表达带有很多中间节点的动态路线。</p>
<p><strong>当然如果你也可以将数据源设置成两条毫不相干的路线：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-c(<span class="string">"西安"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"beijing"</span>,<span class="string">"shenyang"</span>,<span class="string">"changhcun"</span>,<span class="string">"哈尔滨"</span>) </div><div class="line">data2&lt;-c(<span class="string">"nanyang"</span>,<span class="string">"wuhan"</span>,<span class="string">"changsha"</span>,<span class="string">"南昌"</span>,<span class="string">"guangzhou"</span>,<span class="string">"南宁"</span>,<span class="string">"贵阳"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">origin&lt;-c(data1[<span class="number">1</span>:<span class="number">6</span>],data2[<span class="number">1</span>:<span class="number">6</span>])</div><div class="line">destination&lt;-c(data1[<span class="number">2</span>:<span class="number">7</span>],data2[<span class="number">2</span>:<span class="number">7</span>])</div><div class="line">map_data1&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>随机生成的线条和气泡颜色看着挺别扭，我们可以将其修改为自定义颜色：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'none'</span>,</div><div class="line">          lineColor = <span class="string">"white"</span>,    </div><div class="line">          backgroundColor=<span class="string">"black"</span>      </div><div class="line">          )</div><div class="line">           )</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image6.png" alt=""></p>
<p>你可以用这种方法，结合自己的数据来表达多个地域之间的流动方向：比如一打一路、长征、贸易路线、铁路路线图等都非常适合这种表达。</p>
<p>gif效果：</p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image8.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天紧接昨天的内容，跟大家分享如何使用REmap函数制作路径图。&lt;/p&gt;
&lt;p&gt;路径图所需要的数据结构非常简单，两列数据，左侧是起点，右侧是终点，并且每一行的终点是下一行的起点，这样最终才可以制作出连接在一起的路径图。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
      <category term="路径图" scheme="http://www.raindu.com/tags/%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmap动态地图</title>
    <link href="http://www.raindu.com/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap%E5%8A%A8%E6%80%81%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/07/R语言可视化——REmap动态地图/</id>
    <published>2017-06-07T01:27:05.000Z</published>
    <updated>2017-06-10T11:11:51.602Z</updated>
    
    <content type="html"><![CDATA[<p>今天开始，要跟着大家学习一个新的可视化R包——REmap包。</p>
<p>说起来，这个包要归功于百度的可视化开源项目——echarts,它是国内为数不多的高水平开源可视化js库，在业界地位首屈一指。</p>
<p>经过大神的努力，我们终于可以在R语言中以简洁的REmap函数形式，来调用Echarts核心功能，而不用亲自去学js代码，就可以创建动态地图可视化作品。</p>
<a id="more"></a>
<p>如果有小伙伴儿熟悉百度的大数据可视化项目——百度迁徙地图，以及交通通勤图，以及后来的一带一路可视化路线图，肯定对那些动态地图上流动的线条和路径有很深的印象。</p>
<p>下面我们开始简单介绍REmap的主要功能：</p>
<p>REmap包中涵盖有一组函数，我所知道并用过的有REmap、REmapB、REmapC、REmapH。</p>
<p>每一个函数都对应着几种炫酷的动态效果类型：</p>
<p>今天我们先介绍REmap函数并利用该函数制作简单的流向图：</p>
<h3 id="安装及加载："><a href="#安装及加载：" class="headerlink" title="安装及加载："></a>安装及加载：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install.packages(<span class="string">"devtools"</span>)</div><div class="line">devtools::install_github(<span class="string">"lchiffon/REmap"</span>)   <span class="comment">#开发者/包名</span></div><div class="line"><span class="keyword">library</span>(REmap)    <span class="comment">#加载</span></div></pre></td></tr></table></figure>
<h3 id="语法介绍："><a href="#语法介绍：" class="headerlink" title="语法介绍："></a>语法介绍：</h3><p>REmap函数的作图理念与ggplot其实还是有雷同的，它也是将数据信息和美学信息分开表达，数据信息包含在数据表中，而美化修饰参数都包含在theme内。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">remap(mapdata, title = <span class="string">" "</span>, </div><div class="line">subtitle = <span class="string">""</span>, </div><div class="line">theme = get_theme(<span class="string">"Dark"</span>))</div></pre></td></tr></table></figure></p>
<p>这是一个典型的REmap函数的结构，mapdata是我们所要展示的数据框格式数据集，里面包含了两列数据：起点位置、终点信息。</p>
<p>title用于设置主标题、subtitle用于设置副标题。而theme用于设定整个图形的主题风格，该主题是一个封装的函数变量，里面包含诸多参数信息（各种点线面的颜色、度量等信息）。</p>
<p>下面是一个典型的REmap主题内的参数示例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>,</div><div class="line">                  lineColor = <span class="string">"Random"</span>,</div><div class="line">                  backgroundColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  titleColor = <span class="string">"fff"</span>,</div><div class="line">                  borderColor = <span class="string">"rgba(100,149,237,1)"</span>,</div><div class="line">                  regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  labelShow = <span class="literal">T</span>,</div><div class="line">                  pointShow = <span class="literal">F</span>,</div><div class="line">                  pointColor = <span class="string">"gold"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：theme为总体配色，默认选项有“Dark”、“Bright”、“Sky”、“none”</li>
<li>参数二：lineColor为线条颜色，默认是随机， 也可自行设置，如’red’</li>
<li>参数三：backgroundColor为地图外背景颜色</li>
<li>参数四：titleColor为标题颜色</li>
<li>参数五：borderColor为地图中地域边缘颜色，不同省份、城市的边缘</li>
<li>参数六：regionColor为地域颜色，即地图显示的颜色</li>
<li>参数七：labelShow为逻辑参数，是否显示地域名称，默认为T，即显示，只用于remapC函数</li>
<li>参数八：pointShow为逻辑参数，是否显示地域所在点，默认为F，不显示，只用于remapC函数</li>
<li>参数九：pointColor为pointShow中点的颜色，只用于remapC函数</li>
</ul>
<p><strong>REmap可以非常轻松的获取城市地点的经纬度数据：</strong></p>
<p>以大连为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">get_city_coord(<span class="string">"大连"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">121.62139</span>  <span class="number">38.91934</span></div></pre></td></tr></table></figure></p>
<p>如果想要获取一组城市的经纬度信息，可以直接赋值给城市向量：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">city_list &lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)</div><div class="line">get_geo_position(city_list)</div><div class="line"></div><div class="line">       lon      lat      city</div><div class="line"><span class="number">1</span> <span class="number">116.4136</span> <span class="number">39.91101</span>   beijing</div><div class="line"><span class="number">2</span> <span class="number">117.2059</span> <span class="number">39.09091</span>   tianjin</div><div class="line"><span class="number">3</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  shenyang</div><div class="line"><span class="number">4</span> <span class="number">121.6214</span> <span class="number">38.91934</span>    dalian</div><div class="line"><span class="number">5</span> <span class="number">113.6313</span> <span class="number">34.75349</span> zhengzhou</div></pre></td></tr></table></figure></p>
<p>而且据说这两个函数大部分时候对拼音与汉字，甚至拼音的大小写都不敏感，所以避免了很多麻烦。</p>
<h3 id="生成模拟数据集："><a href="#生成模拟数据集：" class="headerlink" title="生成模拟数据集："></a>生成模拟数据集：</h3><p><strong>创建起始点：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><strong>数据预览：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">head(map_data)</div><div class="line">  origin destination</div><div class="line"><span class="number">1</span> dalian     beijing</div><div class="line"><span class="number">2</span> dalian     tianjin</div><div class="line"><span class="number">3</span> dalian    shenyang</div><div class="line"><span class="number">4</span> dalian      dalian</div><div class="line"><span class="number">5</span> dalian   zhengzhou</div></pre></td></tr></table></figure></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remap(mapdata=map_data,        <span class="comment">#流向地图的数据源（依次为起点、重点两列）</span></div><div class="line">                title=<span class="string">"我是标题"</span>,       <span class="comment">#设置主标题</span></div><div class="line">                subtitle=<span class="string">"我是副标题"</span>,  <span class="comment">#设置副标题</span></div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>)) <span class="comment">#设置主题（默认主题一共有三套：“Dark”,“Bright,”Sky“）</span></div></pre></td></tr></table></figure>
<p>运行以上代码之后，动态图表已经生成名为<code>map_out</code>的对象，只需使用<code>plot</code>函数调用一下<code>map_out</code>图表对象就可以看到该动态图表效果。</p>
<blockquote>
<p>提示下，这里的<code>map_out</code>的对象是一个<code>js</code>代码生成的<code>html</code>对象，运行完<code>plot</code>之后，动态图表效果不是呈现在R的图表窗口而是调用了桌面浏览器的Web窗口。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plot(map_out)</div><div class="line">Save img as: C:\Users\ADMINI~<span class="number">1</span>\AppData\Local\Temp\RtmpAxQndv/ID_20161015191055_242761.html</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image1.png" alt=""></p>
<p>运行完成之后，浏览器窗口会自动呈现动态图表效果：</p>
<p>其实仔细看以上代码，与<code>ggplot</code>的地图代码相比，要简单很多，数据集也很简单（最重要的直接支持地点名称而不需要经纬度数据），当然这些便利性主要归功于它的底层代码是调用<code>Echarts</code>项目，地理位置信息有百度地图的强大系统支持。</p>
<h3 id="可选主题介绍："><a href="#可选主题介绍：" class="headerlink" title="可选主题介绍："></a>可选主题介绍：</h3><p><strong>Dark主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Dark"</span>))</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Sky主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Sky"</span>))</div><div class="line"></div><div class="line">map_out&lt;-remap(mapdata=map_data,        </div><div class="line">                title=<span class="string">"我是标题"</span>,        </div><div class="line">                subtitle=<span class="string">"我是副标题"</span>, </div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="关于主题自定义："><a href="#关于主题自定义：" class="headerlink" title="关于主题自定义："></a>关于主题自定义：</h3><p>以上是该函数内置的三款主题，当然如果你要想自定义主题的话，也是可以的，但是需要将<code>theme=&quot;Sky&quot;</code>设置为<code>none</code>，否则系统主题会覆盖掉你自定义的主题。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;-remap(mapdata=map_data,    <span class="comment">#设计流向地图</span></div><div class="line">title=<span class="string">"我是标题"</span>,                    <span class="comment">#设置标题</span></div><div class="line">subtitle=<span class="string">"我是副标题"</span>,               <span class="comment">#设置副标题</span></div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>,        <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"SandyBrown"</span>)            <span class="comment">#设置地区颜色</span></div><div class="line">)</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image4.png" alt=""></p>
<p>但是个人习惯，还是比较喜欢先将主题定义好并命名，然后在运行图表代码的时候直接饮用，这样比较利于后期主题的微调：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mytheme&lt;-get_theme(theme=<span class="string">"none"</span>,     <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"Bisque"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>))</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image5.png" alt=""></p>
<p>当然如果将数据框中的数据两列调换，那么地图就可以做成流入图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">destination&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination) </div><div class="line"></div><div class="line">map_out5&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out5)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image6.png" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image7.png" alt=""></p>
<p>其实以上所有图表都是带有动态交互效果的！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天开始，要跟着大家学习一个新的可视化R包——REmap包。&lt;/p&gt;
&lt;p&gt;说起来，这个包要归功于百度的可视化开源项目——echarts,它是国内为数不多的高水平开源可视化js库，在业界地位首屈一指。&lt;/p&gt;
&lt;p&gt;经过大神的努力，我们终于可以在R语言中以简洁的REmap函数形式，来调用Echarts核心功能，而不用亲自去学js代码，就可以创建动态地图可视化作品。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
  </entry>
  
  <entry>
    <title>leaflet在线地图进阶宝典之——高级辅助特性</title>
    <link href="http://www.raindu.com/2017/06/06/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E4%B9%8B%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E8%BE%85%E5%8A%A9%E7%89%B9%E6%80%A7/"/>
    <id>http://www.raindu.com/2017/06/06/leaflet在线地图进阶宝典之——高级辅助特性/</id>
    <published>2017-06-06T01:27:27.000Z</published>
    <updated>2017-06-10T11:12:22.212Z</updated>
    
    <content type="html"><![CDATA[<p>本文跟大家分享leaflet在线地图的高级附加属性，这些属性通常来讲仅仅作为我们数据额可视化项目的修饰元素，而并不会影响数据元素。</p>
<p>但是有了这些辅助修饰元素，往往可以使你的数据可视化项目变得更具人性化。</p>
<a id="more"></a>
<p>本文内容根据leaflet的官方主页（R语言接口）翻译而来：</p>
<p><strong>附加属性：</strong></p>
<ul>
<li>测度工具：Leaflet Measure  <blockquote>
<p>增加该工具可以轻而易举的让你在可视化地图中通过鼠标打点，测量两点之间的距离，如果是闭合区域，则可以直接计算闭合区域的真实面积。</p>
</blockquote>
</li>
<li>网格线：Graticule<blockquote>
<p>网格线可以提供平面坐标系下地理空间的经纬度位置参考线。</p>
</blockquote>
</li>
<li>昼夜分界线：Terminator (day/night indicator)<blockquote>
<p>昼夜分界线可以提供一天中不同地区的昼夜分界状况。</p>
</blockquote>
</li>
<li>mini小地图：Minimap<blockquote>
<p>mini窗口小地图可以提供定位窗口，让你知道主版面中位置在更大范围地理区域上的大致方位，就相当于游戏中的mini导航图。</p>
</blockquote>
</li>
<li>辅助按钮：EasyButton<blockquote>
<p>辅助按钮可以提供一键初始化比例尺，一键定位功能。</p>
</blockquote>
</li>
<li>自定义js属性：Custom JavaScript with htmlwidgets::onRender<blockquote>
<p>你可以利用leaflet与HTML的接口工具对地图版面进行更加丰富的属性设置。</p>
</blockquote>
</li>
</ul>
<h3 id="测度工具：Leaflet-Measure"><a href="#测度工具：Leaflet-Measure" class="headerlink" title="测度工具：Leaflet Measure"></a>测度工具：Leaflet Measure</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line">m&lt;-leaflet()%&gt;%addTiles()</div><div class="line">m %&gt;%fitBounds(-<span class="number">73.9</span>,<span class="number">40.75</span>,-<span class="number">73.95</span>,<span class="number">40.8</span>) %&gt;%addMeasure()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image1.png" alt=""></p>
<p>右上侧的小弹窗打开之后选择创建测距选项，就可以通过鼠标打点儿，测量两点之间的地理距离，如果是三个以上的点，则会测量出闭合多边形区域的面积。</p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1NDI4OA==" frameborder="0" 'allowfullscreen'=""></iframe>

<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">m %&gt;%</div><div class="line">  fitBounds(<span class="number">13.76134</span>, <span class="number">52.675499</span>, <span class="number">13.0884</span>, <span class="number">52.33812</span>) %&gt;%   <span class="comment">#设定版面呈现的地理区域范围</span></div><div class="line">  addMeasure(</div><div class="line">    position = <span class="string">"bottomleft"</span>,       <span class="comment">#测距菜单位置</span></div><div class="line">    primaryLengthUnit = <span class="string">"meters"</span>,  <span class="comment">#测量的点距离输出单位</span></div><div class="line">    primaryAreaUnit = <span class="string">"sqmeters"</span>,  <span class="comment">#测量的闭合多边形区域面积输出单位</span></div><div class="line">    activeColor = <span class="string">"#3D535D"</span>,       <span class="comment">#</span></div><div class="line">    completedColor = <span class="string">"#7D4479"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="网格线：Graticule"><a href="#网格线：Graticule" class="headerlink" title="网格线：Graticule"></a>网格线：Graticule</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% addGraticule()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% </div><div class="line">addGraticule(interval = <span class="number">10</span>, style = list(color = <span class="string">"#FF0000"</span>, weight = <span class="number">1</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image4.png" alt=""></p>
<p>而且网格线系统是可控元素，控制方式就是将其当成一个单独的图层，然后分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;%</div><div class="line">  addGraticule(group = <span class="string">"Graticule"</span>) %&gt;%</div><div class="line">  addLayersControl(overlayGroups = c(<span class="string">"Graticule"</span>),options=layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image5.png" alt=""><br><img src="http://or3sddq9r.bkt.clouddn.com/image6.png" alt=""></p>
<h3 id="昼夜分界线：Terminator-day-night-indicator"><a href="#昼夜分界线：Terminator-day-night-indicator" class="headerlink" title="昼夜分界线：Terminator (day/night indicator)"></a>昼夜分界线：Terminator (day/night indicator)</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% addTerminator()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>昼夜分界线支持自定义日期和分组功能：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;%</div><div class="line">  addTiles() %&gt;%</div><div class="line">  addTerminator(</div><div class="line">    resolution=<span class="number">10</span>,</div><div class="line">    time = <span class="string">"2013-06-20T21:00:00Z"</span>,</div><div class="line">    group = <span class="string">"daylight"</span>) %&gt;%</div><div class="line">  addLayersControl(</div><div class="line">    overlayGroups = <span class="string">"daylight"</span>,</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image8.png" alt=""></p>
<h3 id="mini导航地图：Minimap"><a href="#mini导航地图：Minimap" class="headerlink" title="mini导航地图：Minimap"></a>mini导航地图：Minimap</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap()</div></pre></td></tr></table></figure>
<p><strong>mini导航地图中的地图背景也是支持自定义的：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap(tiles = providers$Esri.WorldStreetMap,toggleDisplay = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image9.png" alt=""></p>
<p>视频演示：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1Nzg3Mg==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助工具菜单："><a href="#辅助工具菜单：" class="headerlink" title="辅助工具菜单："></a>辅助工具菜单：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(htmlwidgets)</div><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addEasyButton(easyButton(      <span class="comment">#添加一键恢复初始窗口比利时</span></div><div class="line">    icon=<span class="string">"fa-globe"</span>, title=<span class="string">"Zoom to Level 1"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.setZoom(1); &#125;"</span>))) %&gt;%</div><div class="line">  addEasyButton(easyButton(     <span class="comment">#添加一键定位功能（根据你的所在位置）</span></div><div class="line">    icon=<span class="string">"fa-crosshairs"</span>, title=<span class="string">"Locate Me"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.locate(&#123;setView: true&#125;); &#125;"</span>)))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI5NjIyNA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助按钮：EasyButton"><a href="#辅助按钮：EasyButton" class="headerlink" title="辅助按钮：EasyButton"></a>辅助按钮：EasyButton</h3><p>以下代码展示了如何通过调用js工具控件来通过打开菜单工具开启地图上的点聚合功能，同时关闭菜单工具按钮，关闭点聚合功能。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addMarkers(data=quakes,</div><div class="line">    clusterOptions = markerClusterOptions(),</div><div class="line">    clusterId = <span class="string">"quakesCluster"</span>) %&gt;%</div><div class="line">  addEasyButton(easyButton(</div><div class="line">    states = list(</div><div class="line">      easyButtonState(   <span class="comment">#状态1：打开菜单，开启点聚合</span></div><div class="line">        stateName=<span class="string">"unfrozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle"</span>,</div><div class="line">        title=<span class="string">"Freeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn,map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.freezeAtZoom();</div><div class="line">            btn.state('frozen-markers');</div><div class="line">          &#125;")</div><div class="line">      ),</div><div class="line">      easyButtonState( <span class="comment">#状态2：关闭菜单，结束点聚合功能</span></div><div class="line">        stateName=<span class="string">"frozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle-filled"</span>,</div><div class="line">        title=<span class="string">"UnFreeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn, map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.unfreeze();</div><div class="line">            btn.state('unfrozen-markers');</div><div class="line">          &#125;")</div><div class="line">      )</div><div class="line">    )</div><div class="line">  ))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image10.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzM0MDg4MA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender"><a href="#自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender" class="headerlink" title="自定义js属性：Custom JavaScript with htmlwidgets::onRender"></a>自定义js属性：Custom JavaScript with htmlwidgets::onRender</h3><p>基础图层会根据导航窗内的图层风格改变而随之转换：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">mymap&lt;-leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>)</div><div class="line">esri &lt;- grep(<span class="string">"^Esri"</span>, providers, value = <span class="literal">TRUE</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> (provider <span class="keyword">in</span> esri) &#123;</div><div class="line">  mymap &lt;-mymap %&gt;% addProviderTiles(provider, group = provider)</div><div class="line">&#125;</div><div class="line"></div><div class="line">mymap %&gt;%</div><div class="line">  addLayersControl(baseGroups = names(esri),</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>)) %&gt;%</div><div class="line">  addMiniMap(tiles = esri[[<span class="number">1</span>]], toggleDisplay = <span class="literal">TRUE</span>,</div><div class="line">    position = <span class="string">"bottomleft"</span>) %&gt;%</div><div class="line">  htmlwidgets::onRender(<span class="string">"</span></div><div class="line">    function(el, x) &#123;</div><div class="line">      var myMap = this;</div><div class="line">      myMap.on('baselayerchange',</div><div class="line">        function (e) &#123;</div><div class="line">          myMap.minimap.changeLayer(L.tileLayer.provider(e.name));</div><div class="line">        &#125;)</div><div class="line">    &#125;")</div></pre></td></tr></table></figure></p>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image11.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI3MDY4OA==" frameborder="0" 'allowfullscreen'=""></iframe>


<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文跟大家分享leaflet在线地图的高级附加属性，这些属性通常来讲仅仅作为我们数据额可视化项目的修饰元素，而并不会影响数据元素。&lt;/p&gt;
&lt;p&gt;但是有了这些辅助修饰元素，往往可以使你的数据可视化项目变得更具人性化。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="HTML" scheme="http://www.raindu.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Leaflet在线地图进阶宝典——json素材操纵与图层面板控制</title>
    <link href="http://www.raindu.com/2017/06/05/Leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94json%E7%B4%A0%E6%9D%90%E6%93%8D%E7%BA%B5%E4%B8%8E%E5%9B%BE%E5%B1%82%E9%9D%A2%E6%9D%BF%E6%8E%A7%E5%88%B6/"/>
    <id>http://www.raindu.com/2017/06/05/Leaflet在线地图进阶宝典——json素材操纵与图层面板控制/</id>
    <published>2017-06-05T13:52:37.000Z</published>
    <updated>2017-06-10T11:12:37.038Z</updated>
    
    <content type="html"><![CDATA[<p>这篇教程憋了很久，其实算是3个月前leaflet在线地图系列的进阶篇，但是因为当时对于leaflet地图的数据源结构理解有限，技能勉强操控shp数据源，对于json数据源所知甚少，一直拖了这么久才更新。</p>
<p>随着近期在json数据结构的理解不断加深，对于list结构和向量化运算的掌握也多有提高，这才能熟练的在leaflet系统中操控json数据。</p>
<a id="more"></a>
<p><strong>本篇主要分为两大部分：</strong></p>
<ul>
<li>如何自如的操纵json数据来打造leaflet所能识别的数据源和style属性；</li>
<li>如何操控leaflet控制台版面中的地图图层和数据图层。</li>
</ul>
<p>想要很好的理解本文，你需先对leaflet系统基础语法有所掌握（其实可视化的图层语法都大同小异，leaflet属于JavaScript语言打造的在线地图库，同D3、plotly、Rcharts以及Highcharts等接口的语法差别不大）。</p>
<p>但如果你在看本文之前已经看过我的前期四篇leaflet入门篇：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27012917" target="_blank" rel="external">动态地理信息可视化——leaflet在线地图简介</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26994131" target="_blank" rel="external">动态地理信息可视化——散点地图系列</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27005732" target="_blank" rel="external">动态地理信息可视化——leaflet构造路径图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27009715" target="_blank" rel="external">动态地理信息可视化——leaflet填充地图</a></li>
</ul>
<p>那么本文理解起来就容易多了，仅仅是温故知新罢了！</p>
<p>当然如果你学有余力的话，你也可以顺便把百度的Echarts系统地图接口也学习一下：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27019450" target="_blank" rel="external">R语言可视化——REmap动态地图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27021446" target="_blank" rel="external">R语言可视化——REmap(路径图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27032696" target="_blank" rel="external">R语言可视化——REmapC(填充地图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27041506" target="_blank" rel="external">R语言可视化——REmapH(中心热度图)</a></li>
</ul>
<p>如果你能熟练掌握以上两套在线地图语法，那么制作此类可视化项目至少在技术角度上来说已经没有任何门槛。</p>
<p><strong>以下是本文的主要内容：</strong></p>
<p>json地图数据结构和变量操控：</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line"><span class="keyword">library</span>(sf)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(htmltools)</div></pre></td></tr></table></figure>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><p><strong>这样的全局预设可以为你省却很多麻烦，强烈建议</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">options(stringsAsFactors=<span class="literal">FALSE</span>,warn=<span class="literal">FALSE</span>) </div><div class="line">setwd(<span class="string">"D:/R/mapdatanew/"</span>)</div><div class="line"></div><div class="line">url&lt;-<span class="string">"https://raw.githubusercontent.com/ljtyduyu/DataWarehouse/master/Mapdata/City/110100.json"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>最近把自己所有的关于地图可视化的数据传到了个人Github上，这样无论是大家以后调用数据还是自己平时练习都方便多了！</p>
</blockquote>
<p>以下数据导入json原生数据格式的三种方式：（2,3两种是没啥区别的，但是simplifyVector=FALSE参数设定与否则至关重要，他决定着输入的json数据是经过平整的向量化数据还是原生的list数据，这里的leaflet需要原生格式的json数据）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">geojson1&lt;-fromJSON(url)  <span class="comment">#在同一层级对象长度一致，便会被自动视作数据框。</span></div><div class="line">geojson2&lt;-fromJSON(url,simplifyVector=<span class="literal">FALSE</span>)  <span class="comment">#不强转化为数据框。</span></div><div class="line">geojson3&lt;-readLines(url,warn=<span class="literal">FALSE</span>,encoding=<span class="string">"UTF-8"</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>设置随机中非常必要，否则容易导致每次的效果都不一样：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">1234</span>)</div></pre></td></tr></table></figure></p>
<h3 id="向地图素材中添加作图数据："><a href="#向地图素材中添加作图数据：" class="headerlink" title="向地图素材中添加作图数据："></a>向地图素材中添加作图数据：</h3><p><strong>向list对象中添加数据（随机数据）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">geojson3$features&lt;-lapply(geojson3$features,<span class="keyword">function</span>(feat)&#123;</div><div class="line">feat$properties$scale&lt;-runif(<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>)</div><div class="line">feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>从list对象中读取数据(主要读取我们可做更改与扩展的行政区划列表信息)</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-ldply(geojson3$features,<span class="keyword">function</span>(feat)&#123; </div><div class="line">name&lt;-feat$properties$name</div><div class="line">id&lt;- feat$properties$id</div><div class="line">scale&lt;-as.numeric(feat$properties$scale)</div><div class="line">mydata&lt;-data.frame(name,id,scale)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>Default styles for all features </strong></p>
<blockquote>
<p>it has  higher precedence  compare with  the style in a function of GeoJSON<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">geojson3$style=list(weight=<span class="number">1</span>,color=<span class="string">"#555555"</span>,opacity=<span class="number">1</span>,fillOpacity=<span class="number">0.8</span>)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>Color by scale using quantiles</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pal&lt;-colorQuantile(<span class="string">"Greens"</span>,mydata$scale)</div></pre></td></tr></table></figure></p>
<p><strong>Add a properties$style list to each feature</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">geojson3$features &lt;- lapply(geojson3$features, <span class="keyword">function</span>(feat) &#123;</div><div class="line">  feat$properties$style&lt;-list(</div><div class="line">       fillColor=pal(feat$properties$scale)</div><div class="line">       )</div><div class="line">  feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="关于属性设置的三个优先级："><a href="#关于属性设置的三个优先级：" class="headerlink" title="关于属性设置的三个优先级："></a>关于属性设置的三个优先级：</h3><p><strong>按照由高到低的顺序排列为：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> feature-specific styles <span class="comment">#（也就是设置在 simple featrue的style）</span></div><div class="line"> the top-level style object <span class="comment">#（设置在features中的style）</span></div><div class="line">style-related arguments passed to the <span class="keyword">function</span> <span class="comment">#（设置在GeoJSON内的各种参数）</span></div></pre></td></tr></table></figure></p>
<h3 id="这是通过增加地图图层来进行图层控制的简单案例："><a href="#这是通过增加地图图层来进行图层控制的简单案例：" class="headerlink" title="这是通过增加地图图层来进行图层控制的简单案例："></a>这是通过增加地图图层来进行图层控制的简单案例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image1.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image2.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image3.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>以下这段代码是之前leaflet系列教程的线图篇里面的案例，这里刚好应用一下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.table(<span class="string">"D:/R/File/subwayline.txt"</span>,header=<span class="literal">TRUE</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data$size&lt;-runif(<span class="number">47</span>,<span class="number">10</span>,<span class="number">25</span>)</div><div class="line"></div><div class="line">data$Type&lt;-as.factor(data$Type)</div><div class="line">data1&lt;-filter(data,Type==<span class="string">"NO1"</span>)</div><div class="line">data2&lt;-filter(data,Type==<span class="string">"NO5"</span>)</div><div class="line">pal &lt;- colorFactor(topo.colors(<span class="number">2</span>),data$Type)</div><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>这是一个高度综合的案例，包含底图图层的多分类控制；数据图层的多分类控制以及点线面三种数据图层的综合运用。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"red"</span>,group=<span class="string">"line1"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"orange"</span>,group=<span class="string">"line2"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=<span class="string">"address"</span>,color = <span class="string">"#1843F9"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>,<span class="string">"line1"</span>,<span class="string">"line2"</span>,<span class="string">"address"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image6.png" alt=""></p>
<p>动态视频效果来一波！<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNjU4OTU4MA==" frameborder="0" 'allowfullscreen'=""></iframe></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇教程憋了很久，其实算是3个月前leaflet在线地图系列的进阶篇，但是因为当时对于leaflet地图的数据源结构理解有限，技能勉强操控shp数据源，对于json数据源所知甚少，一直拖了这么久才更新。&lt;/p&gt;
&lt;p&gt;随着近期在json数据结构的理解不断加深，对于list结构和向量化运算的掌握也多有提高，这才能熟练的在leaflet系统中操控json数据。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="json" scheme="http://www.raindu.com/tags/json/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
  </entry>
  
  <entry>
    <title>动态地理信息可视化——leaflet填充地图</title>
    <link href="http://www.raindu.com/2017/06/05/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/05/动态地理信息可视化——leaflet填充地图/</id>
    <published>2017-06-05T01:11:51.000Z</published>
    <updated>2017-06-10T11:10:25.742Z</updated>
    
    <content type="html"><![CDATA[<p>这一篇是leaflet动态地图的第四篇，也是最值得推荐的一篇，这一篇涉及到热力地图填充，通过该篇内容，大家可以体会大leaflet在线地图的R借口在处理热力地图上面颜色标度映射的强大优势。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maps)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(stringi)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(rgdal)</div></pre></td></tr></table></figure>
<h3 id="地图素材加载："><a href="#地图素材加载：" class="headerlink" title="地图素材加载："></a>地图素材加载：</h3><p><strong>（leaflet支持多种地图素材，比如常见的shapefile格式、json格式以及其他在线地图，但是因为json格式本来还没有很熟练，这里用shp格式地图素材为例进行加讲解）。</strong></p>
<p>肯定会有小伙伴儿会问，既然leaflet本身就是在线地图，为啥还要费事儿加载shp地图素材就进行映射，因为leaflet在线地图提供的地图底图本身具有多级缩放特性，每一缩放级别都有对应的行政区划界线，但是这些参数和行政区划是封装在底层的js语言中的，我们无法使用R语言直接进行调用，只能作为一个图层素材进行背景修饰，说白了，其实我们想要的仅仅是多级缩放的动态切换效果，这样再结合我们自定义的地图素材，可以呈现出更加完美的效果。（只有热力填充地图需要定义区域界线，而点图和线图都可以直接利用leaflet本身的地图素材，因为只需要坐标点位置即可）。</p>
<p>我们常用的地图素材资源无非以下三种，R包内置的地图数据、shapefile格式和json格式。以下是三种格式素材导入并在leaflet中制作的地图的基本代码：</p>
<p><strong>maps包:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapStates&lt;-map(<span class="string">"state"</span>,fill=<span class="literal">TRUE</span>,plot=<span class="literal">FALSE</span>)</div><div class="line">leaflet(mapStates) %&gt;% addTiles() %&gt;%addPolygons(fillColor=topo.colors(<span class="number">10</span>,alpha =<span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapWorld&lt;-map(<span class="string">"world"</span>,fill=<span class="literal">TRUE</span>,col=rainbow(<span class="number">200</span>),ylim=c(-<span class="number">60</span>,<span class="number">90</span>),mar=c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</div><div class="line">leaflet(mapWorld) %&gt;% addTiles() %&gt;%addPolygons(fillColor = topo.colors(<span class="number">10</span>, alpha = <span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>shapefile:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">American_map$STATE_NAME = iconv(American_map$STATE_NAME,<span class="string">"UTF8"</span>,<span class="string">"CP936"</span>) </div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%addPolygons(popup=~STATE_NAME,fillColor=topo.colors(<span class="number">10</span>,alpha=<span class="literal">NULL</span>),stroke=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>json文件：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line">geoData&lt;-readLines(<span class="string">"D:/R/mapdata/State/USA.json"</span>,warn=<span class="literal">FALSE</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div><div class="line">geoData$style=list(weight=<span class="number">1</span>,color=<span class="string">"red"</span>,fillColor=<span class="string">"green"</span>,opacity=<span class="number">1</span>,fill=<span class="literal">TRUE</span>,fillOpacity=<span class="number">0.6</span>)</div><div class="line">leaflet()%&gt;%setView(lng=-<span class="number">98.961387</span>,lat=<span class="number">39.708533</span>,zoom=<span class="number">3</span>)%&gt;%addTiles()%&gt;%addGeoJSON(geoData)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image4.png" alt=""></p>
<p>前两种素材作图过程大同小异，特别是一些标度的属性声明很类似ggplot中的函数过程，但是json格式的素材操作起来就不是很友好，他的标度属性是要在数据文件中新建style的list对象进行生命，而且json格式中的list非常多，结构相对复杂，至今我也没完全搞明白如果自由操作。</p>
<h3 id="几张分类颜色标度填充效果："><a href="#几张分类颜色标度填充效果：" class="headerlink" title="几张分类颜色标度填充效果："></a>几张分类颜色标度填充效果：</h3><p>下面是承接上面shapefile格式素材做展现的四中颜色标度（三种连续性标度和一种分类标度的映射过程）。</p>
<p><strong>colorQuantile（连续性数值变量的百分比颜色过度）:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorQuantile(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>以下两种同属连续性数值变量（使用颜色数量不同）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric(多色过度):</div><div class="line">pal&lt;-colorNumeric(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric（单色过度):</div><div class="line">pal&lt;-colorNumeric(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>以下两种也同属连续性数值变量的颜色标度映射</strong></p>
<blockquote>
<p>（但是可以自定义分组数量，其实实质上是对变量分割，后以分组形式填充，更准确的说，确实是应用了变量转换的方式（数值转有序因子），但是过程是自动进行的，而不是像在ggplot中一样不需手动转换）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（单色渐变分组过度):</div><div class="line">pal&lt;-colorBin(<span class="string">"Greens"</span>,American_map@data$POP1990,<span class="number">10</span>)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（多色色渐变分组过度):</div><div class="line">pal&lt;-colorBin(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990,<span class="number">8</span>)</div><div class="line">leaflet(American_map) %&gt;% addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>离散标度：</strong></p>
<blockquote>
<p>（这个例子是用在变量本身就是因子变量的情况下，算是分类变量情况下的颜色标度映射）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">mydata&lt;-read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">mydata$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">33</span>,replace=<span class="literal">TRUE</span>))</div><div class="line">shape &lt;- merge(china_map,mydata,by=<span class="string">"NAME"</span>)</div><div class="line">pal &lt;- colorFactor(c(<span class="string">"green"</span>,<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"yellow"</span>,<span class="string">"brown"</span>), domain = c(<span class="string">"A"</span>, <span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>))<span class="comment">#设置色盘：</span></div><div class="line">i_popup&lt;-paste0(<span class="string">"&lt;strong&gt;Province:&lt;/strong&gt;"</span>,shape$NAME,<span class="string">"&lt;br&gt;"</span>,</div><div class="line"><span class="string">"&lt;strong&gt;Level:&lt;/strong&gt;"</span>,shape$type)</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">设置弹出窗口</div><div class="line">leaflet(shape)%&gt;%addTiles()%&gt;%</div><div class="line"> setView(<span class="number">116.387021</span>,<span class="number">39.969369</span>,zoom=<span class="number">3</span>)%&gt;%</div><div class="line">addPolygons(fillColor=~pal(shape$type),fillOpacity=<span class="number">0.8</span>,color=<span class="string">"#000000"</span>,weight=<span class="number">1</span>,popup=i_popup)%&gt;%</div><div class="line">addLegend(pal=pal,values=shape@data$type,position=<span class="string">"bottomright"</span>,title=paste0(<span class="string">"小魔方基团2016年"</span>,<span class="string">"&lt;br&gt;"</span>,<span class="string">"营业分布等级"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image10.png" alt=""></p>
<p>以上地图效果都支持多节自动缩放和弹窗动态信息显示（需设置popup属性及少量html交互代码）</p>
<p>leaflet在线地图底层由js源码编写，天然支持html语言，如能结合html搭配使用，可以在动态地图元素中，特别是弹窗中无缝嵌入图片、超链接甚至视频等多类元素，感兴趣的小伙伴儿可以自行探索。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一篇是leaflet动态地图的第四篇，也是最值得推荐的一篇，这一篇涉及到热力地图填充，通过该篇内容，大家可以体会大leaflet在线地图的R借口在处理热力地图上面颜色标度映射的强大优势。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="填色地图" scheme="http://www.raindu.com/tags/%E5%A1%AB%E8%89%B2%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
</feed>

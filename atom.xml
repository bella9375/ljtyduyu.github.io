<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>raindu&#39;s home</title>
  <subtitle>A lifelong learner!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.raindu.com/"/>
  <updated>2017-06-10T01:54:32.725Z</updated>
  <id>http://www.raindu.com/</id>
  
  <author>
    <name>RainDu</name>
    <email>578708965@.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表</title>
    <link href="http://www.raindu.com/2017/06/10/R%E8%AF%AD%E8%A8%80%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96%E2%80%94%E2%80%94%E5%B7%A7%E7%94%A8%E5%88%86%E9%9D%A2%E8%A1%A8%E8%BE%BE%E4%BC%98%E5%8C%96%E5%9B%BE%E8%A1%A8%E5%B8%83%E5%B1%80%EF%BC%8C%E5%81%9A%E5%87%BA%E5%A0%AA%E6%AF%94%E6%9D%82%E5%BF%97%E7%BA%A7%E8%A7%86%E8%A7%89%E4%BD%93%E9%AA%8C%E7%9A%84%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/"/>
    <id>http://www.raindu.com/2017/06/10/R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表/</id>
    <published>2017-06-10T01:15:55.000Z</published>
    <updated>2017-06-10T01:54:32.725Z</updated>
    
    <content type="html"><![CDATA[<p>图表的优化布局在Excel中一直都是个大难题，难在Excel软件固有的限制。</p>
<p>特别是在制作多序列多分类图表的时候，放在一个图中显得序列过于拥挤，影响视觉效果，做出分面表达又耗时费力，需要掌握诸多技巧，（版式设计呀、单元格锚定呀等等、照相机呀什么的）是在是有心无力。</p>
<a id="more"></a>
<p>但是像R语言这样依靠图形语法来控制的作图形式，却不存在这样的问题。</p>
<p>今天跟大家分享如何在R语言中巧用分面表达来优化多系列多分类图表的版式布局！</p>
<p>其实这一篇在不久前曾经发过的，当时还处于摸索阶段，写的很粗糙，今天重发一遍，所有的代码和图表都是优化过的，不仔细观察，还真看不出来，仔细对比一下就能发现了！</p>
<p>我是分割线~</p>
<hr>
<p>当数据序列比较多的时候，特别是超过四个以后，还用堆积柱形图（条形图）、或者簇状柱形图的话，图表必然会因为系列太多而受到挤压或者变形，整体就会不协调、不美观。</p>
<p>还有ggplot不支持次坐标轴功能，它的作图思维基本源于塔夫脱的可视化理念，而且作者个人的审美也比较抵触次坐标轴，但是他留给大家解决多序列图表的方案是——图形分面</p>
<p>以下仅以常用的柱形图、条形图为例进行讲解（所有的图形对象几乎都支持分面）</p>
<h3 id="构造作图数据集："><a href="#构造作图数据集：" class="headerlink" title="构造作图数据集："></a>构造作图数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),</div><div class="line">Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),</div><div class="line">Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),</div><div class="line">Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="数据重塑（宽转长）："><a href="#数据重塑（宽转长）：" class="headerlink" title="数据重塑（宽转长）："></a>数据重塑（宽转长）：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-melt(mydata,id.vars=<span class="string">"Conpany"</span>,variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><p><strong>默认输出图表：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image3.png" alt=""></p>
<p>默认图表的配色确实挺难看的，这里我使用华尔街日报、经济学人的主题、及配色模板进行适度美化。</p>
<p><strong>华尔街日报：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>经济学人</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上是我们使用传统的方法通过将颜色映射到不同类别的年度收入变量上，达到了区分效果，可是这样终究不是办法，五个序列实在是有点多，已经让然有点儿眼花缭乱了，如果有8个序列、10个序列呢，那又该怎么办呢~</p>
<p>下面跟大家分享其中一种比较有效的解决办法——通过分面表达解决多序列图表呈现问题</p>
<h3 id="横排分面："><a href="#横排分面：" class="headerlink" title="横排分面："></a>横排分面：</h3><p><strong>柱形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(.~Year)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">           axis.title = element_blank(),</div><div class="line">          legend.position=<span class="string">'none'</span>,</div><div class="line">          axis.text.x=element_text(size=<span class="number">7.5</span>)</div><div class="line">         )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>条形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">     axis.line.y=element_line(),</div><div class="line">     axis.line.x=element_blank(),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"solid"</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image9.png" alt=""></p>
<h3 id="竖排分面："><a href="#竖排分面：" class="headerlink" title="竖排分面："></a>竖排分面：</h3><p><strong>柱形分面（竖排）：</strong></p>
<p>左<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(Year~.)</div><div class="line">右</div><div class="line">p2&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>,face=<span class="string">"bold"</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>使用multiplot函数进行版面合并：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span>(grid)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line">multiplot(p1,p2,cols=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/21.jpg" alt=""></p>
<p><strong>条形分面（竖排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image16.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.2</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image17.png" alt=""></p>
<h3 id="关于簇状、分面图表数据标签问题："><a href="#关于簇状、分面图表数据标签问题：" class="headerlink" title="关于簇状、分面图表数据标签问题："></a>关于簇状、分面图表数据标签问题：</h3><p><strong>簇状图数据标签处理：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>横向分面柱图数据标签问题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(.~Year)+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">5</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image11.png" alt=""></p>
<p><strong>横向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">coord_flip()+facet_grid(.~Year)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.2</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image12.png" alt=""></p>
<p><strong>竖向分面柱形图数据标签问题：</strong></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image19.png" alt=""></p>
<p><strong>竖向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">facet_grid(Year~.)+coord_flip()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3.5</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.25</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image18.png" alt=""></p>
<p>以上是本人在学习ggplot函数过程中的一些练习案例，当然要是仔细琢磨，里面的瑕疵还不少，改进空间还有很多，以后有机会慢慢跟大家补充，过几天再跟大家继续分享关于ggplot更加精深的用法技巧！</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图表的优化布局在Excel中一直都是个大难题，难在Excel软件固有的限制。&lt;/p&gt;
&lt;p&gt;特别是在制作多序列多分类图表的时候，放在一个图中显得序列过于拥挤，影响视觉效果，做出分面表达又耗时费力，需要掌握诸多技巧，（版式设计呀、单元格锚定呀等等、照相机呀什么的）是在是有心无力。&lt;/p&gt;
    
    </summary>
    
      <category term="R语言" scheme="http://www.raindu.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>leaflet在线地图进阶宝典——高级交互特性</title>
    <link href="http://www.raindu.com/2017/06/09/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E4%BA%A4%E4%BA%92%E7%89%B9%E6%80%A7(%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C)/"/>
    <id>http://www.raindu.com/2017/06/09/leaflet在线地图进阶宝典——高级交互特性(动态显示效果)/</id>
    <published>2017-06-09T02:10:09.000Z</published>
    <updated>2017-06-09T02:24:10.588Z</updated>
    
    <content type="html"><![CDATA[<p>本文针对leaflet的高级交互特性进行展开，主要涉及到leaflet中等值线地图的鼠标悬浮效果及点击效果的动态呈现。这也是leaflet的天然HTML属性所具有的强大优势。</p>
<p>在制作高质量在线数据地图的项目中，leaflet结合扩展的HTML性能，可以呈现非常人性化的动态效果，如能结合css、shiny等装饰器和交互框架，几乎可以胜任常见的动态交互网站的制作。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"sp"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"leaflet"</span>)</div><div class="line">options(stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"><span class="comment">#锁定目录：</span></div><div class="line">setwd(<span class="string">"D:/R/mapdata/State"</span>)</div></pre></td></tr></table></figure>
<p><strong>导入美国地图素材（含数据）</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">states&lt;-geojsonio::geojson_read(<span class="string">"us-states.geojson"</span>, what = <span class="string">"sp"</span>)</div></pre></td></tr></table></figure>
<p>###案例1：<br>一个简单的开始：（引用mapbox地图）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">m &lt;- leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%  <span class="comment">#设置呈现的视觉中心</span></div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,       <span class="comment">#添加地图图层</span></div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>)))</div><div class="line">m %&gt;% addPolygons()   <span class="comment">#地图呈现</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or9afbo77.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>分箱及设置色盘：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),   <span class="comment">#显式声明颜色映射变量</span></div><div class="line">  weight = <span class="number">2</span>,                       <span class="comment">#线宽</span></div><div class="line">  opacity = <span class="number">1</span>,                     <span class="comment">#透明度</span></div><div class="line">  color = <span class="string">"white"</span>,               <span class="comment">#颜色</span></div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>)             <span class="comment">#填充透明度</span></div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(     <span class="comment">#设置高亮属性</span></div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=t051262r2bq&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="设置鼠标点击事件："><a href="#设置鼠标点击事件：" class="headerlink" title="设置鼠标点击事件："></a>设置鼠标点击事件：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">labels &lt;- sprintf(<span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,states$name,states$density) %&gt;% lapply(htmltools::HTML)  <span class="comment">#转化为HTML格式标签</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">m &lt;-m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(</div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span></div><div class="line">    ),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(    <span class="comment">#标签选项设置（参数类别HTML属性）</span></div><div class="line">    style=list(<span class="string">"font-weight"</span>=<span class="string">"normal"</span>,padding=<span class="string">"3px 8px"</span>),</div><div class="line">    textsize=<span class="string">"15px"</span>,</div><div class="line">    direction=<span class="string">"auto"</span>)</div><div class="line">  );m</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=b0512cl0epo&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="增加图例："><a href="#增加图例：" class="headerlink" title="增加图例："></a>增加图例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">  position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image3.png" alt=""></p>
<p>以下是该案例的完整代码：<br><code>From http://leafletjs.com/examples/choropleth/us-states.js</code><br>（数据源，js格式记得保存为geojson格式）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div><div class="line"></div><div class="line">labels &lt;- sprintf(</div><div class="line">  <span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,</div><div class="line">  states$name, states$density</div><div class="line">) %&gt;% lapply(htmltools::HTML)</div><div class="line"></div><div class="line">leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%</div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,</div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>))) %&gt;%</div><div class="line">  addPolygons(</div><div class="line">    fillColor = ~pal(density),</div><div class="line">    weight = <span class="number">2</span>,</div><div class="line">    opacity = <span class="number">1</span>,</div><div class="line">    color = <span class="string">"white"</span>,</div><div class="line">    dashArray = <span class="string">"3"</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    highlight = highlightOptions(</div><div class="line">      weight = <span class="number">5</span>,</div><div class="line">      color = <span class="string">"#666"</span>,</div><div class="line">      dashArray = <span class="string">""</span>,</div><div class="line">      fillOpacity = <span class="number">0.7</span>,</div><div class="line">      bringToFront = <span class="literal">TRUE</span>),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(</div><div class="line">      style = list(<span class="string">"font-weight"</span> = <span class="string">"normal"</span>, padding = <span class="string">"3px 8px"</span>),</div><div class="line">      textsize = <span class="string">"15px"</span>,</div><div class="line">      direction = <span class="string">"auto"</span>)) %&gt;%</div><div class="line">  addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">    position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文针对leaflet的高级交互特性进行展开，主要涉及到leaflet中等值线地图的鼠标悬浮效果及点击效果的动态呈现。这也是leaflet的天然HTML属性所具有的强大优势。&lt;/p&gt;
&lt;p&gt;在制作高质量在线数据地图的项目中，leaflet结合扩展的HTML性能，可以呈现非常人性化的动态效果，如能结合css、shiny等装饰器和交互框架，几乎可以胜任常见的动态交互网站的制作。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmapH(中心热度图)</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapH-%E4%B8%AD%E5%BF%83%E7%83%AD%E5%BA%A6%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——REmapH-中心热度图/</id>
    <published>2017-06-08T09:36:37.000Z</published>
    <updated>2017-06-08T09:48:51.699Z</updated>
    
    <content type="html"><![CDATA[<p>今天是REmap系列的最后一篇——REmapH函数。</p>
<p>这个函数的特色是可以做中心辐射的热力图，这种热力图在气象、人口密度、海拔测绘领域有诸多运用，当然也可以上当用在商务场合——特别是跟地理信息有关的数据呈现方面。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"REmap"</span>)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">?remapH</div><div class="line">remapH(data,</div><div class="line">      maptype = <span class="string">'china'</span>,</div><div class="line">      theme = get_theme(<span class="string">"Dark"</span>),</div><div class="line">      blurSize = <span class="number">30</span>,</div><div class="line">      color = c(<span class="string">'blue'</span>, <span class="string">'cyan'</span>, <span class="string">'lime'</span>, <span class="string">'yellow'</span>, <span class="string">'red'</span>),</div><div class="line">      minAlpha = <span class="number">0.05</span>,</div><div class="line">      opacity = <span class="number">1</span>,</div><div class="line">      <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<ul>
<li>data为要传入的数据，数据为三列，第一列为lon(经度)，第二列为lat(维度)，第三列为prob(密度/概率)；</li>
<li>maptype为要绘制的地图类型，可选有：”china”，”world”或中国各省份名字；</li>
<li>theme为绘制的地图主题类型，可由get_theme函数传入；</li>
<li>blurSize为热力效果的泛化范围，可调整热力点中心的扩散程度；</li>
<li>color为热力的渐变颜色；</li>
<li>minAlpha为热力点的展示阈值，对应data中的prob列，作图时各点密度会对比minAlpha，以凸显不同密度所展示的不同热力分布；</li>
<li>opacity为透明度，调整热力图的透明度。</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>, </div><div class="line">          lineColor = <span class="string">"Random"</span>,</div><div class="line">          backgroundColor = <span class="string">"#1b1b1b"</span>, </div><div class="line">          titleColor = <span class="string">"#fff"</span>,</div><div class="line">          borderColor = <span class="string">"rgba(100,149,237,1)"</span>, </div><div class="line">          regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">          labelShow = <span class="literal">T</span>, </div><div class="line">          pointShow = <span class="literal">F</span>, </div><div class="line">          pointColor = <span class="string">"gold"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p>theme为主题，设置该参数后无需设置get_theme里其他参数，可选有”Dark”、”Sky”、”blue”和”none”四种</p>
<ul>
<li>lineColoe为线条颜色，对应为map图里面迁徙线条的颜色</li>
<li>backgroundColor为图片的背景色，支持16进制颜色输入，也支持rgb()函数和rgba()</li>
<li>titleColor为标题的颜色，设置同上</li>
<li>borderColor为地图中各省、市边界颜色</li>
<li>regionColor为地图中各区域颜色，各省份和市</li>
<li>labelShow为是否展示各省、市名字，设置为True时展示</li>
<li>pointShow为是否展示各省会城市所在点，设置为True时展示</li>
<li>pointColor设置上述点的颜色</li>
</ul>
<p>接下来首先通过两个案例进行讲解：</p>
<h3 id="案例1："><a href="#案例1：" class="headerlink" title="案例1："></a>案例1：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">options(remap.js.web=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p>这里有一个包含经纬度信息及对应密度的数据集，通过该数据集我们可以看到看到REmapH函数制作热力图的大致效果：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data&lt;- read.csv(file=<span class="string">"D:\\R\\map\\MoveChart\\cityvaluetop10.csv"</span>,header=<span class="literal">T</span>)</div></pre></td></tr></table></figure></p>
<p>数据结构如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">head(data)</div><div class="line">       lon      lat prob</div><div class="line"><span class="number">1</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">2</span> <span class="number">115.3948</span> <span class="number">24.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">3</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">4</span> <span class="number">113.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">5</span> <span class="number">114.7307</span> <span class="number">27.69586</span> <span class="number">0.80</span></div><div class="line"><span class="number">6</span> <span class="number">110.5066</span> <span class="number">28.69586</span> <span class="number">0.80</span></div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">48</span> obs. of  <span class="number">3</span> variables:</div><div class="line"> $ lon : num  <span class="number">114</span> <span class="number">115</span> <span class="number">114</span> <span class="number">113</span> <span class="number">115</span> <span class="keyword">...</span></div><div class="line"> $ lat : num  <span class="number">23.4</span> <span class="number">24.4</span> <span class="number">23.4</span> <span class="number">23.4</span> <span class="number">27.7</span> <span class="keyword">...</span></div><div class="line"> $ prob: num  <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.75</span> <span class="number">0.75</span> <span class="keyword">...</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapH(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or82vn70x.bkt.clouddn.com/image1.png" alt=""></p>
<p>接下来制作辽宁省省域热力图数据集：</p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>首先使用mapNames函数获取辽宁省市级行政单位：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city_ln&lt;-mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure></p>
<p><strong>获取各市级行政单位经纬度信息：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">city_list&lt;-get_geo_position(city_ln)</div><div class="line"></div><div class="line">&gt; city_list</div><div class="line">        lon      lat     city</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>   大连市</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>   朝阳市</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>   丹东市</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>   铁岭市</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>   沈阳市</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>   抚顺市</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span> 葫芦岛市</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>   阜新市</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>   锦州市</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>   鞍山市</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>   本溪市</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>   营口市</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>   辽阳市</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>   盘锦市</div></pre></td></tr></table></figure></p>
<p><strong>生成一列密度数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">point&lt;-round(runif(<span class="number">14</span>,min=<span class="number">0.3</span>,max=<span class="number">0.95</span>),<span class="number">2</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">0.89</span> <span class="number">0.82</span> <span class="number">0.91</span> <span class="number">0.87</span> <span class="number">0.90</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.89</span> <span class="number">0.87</span> <span class="number">0.94</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.88</span> <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的热力图作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-data.frame(city_list[,<span class="number">1</span>:<span class="number">2</span>],point)</div><div class="line"></div><div class="line">        lon      lat point</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.89</span></div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.82</span></div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span></div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.87</span></div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.90</span></div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.90</span></div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.85</span></div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.89</span></div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.87</span></div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.94</span></div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.90</span></div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.85</span></div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.88</span></div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>作图函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapH(newdata,</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image2.png" alt=""></p>
<p>因为以上数据集中使用的各市中心城市的密度数据，所以整体密度太过分散，看不出渐变效果，当然密度图的数据记录是不受数量限制的，在有较多数据点呈现密集分布的地方，可以看到非常明显的颜色热度渐变效果。</p>
<p>这里我通过添加一列分类数据，将以上密度图数据进行改造：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">newdata$perA&lt;-rep(<span class="string">"A"</span>,<span class="number">14</span>)</div><div class="line">newdata$perB&lt;-rep(<span class="string">"B"</span>,<span class="number">14</span>)</div><div class="line">newdata$perC&lt;-rep(<span class="string">"C"</span>,<span class="number">14</span>)</div></pre></td></tr></table></figure>
<p>使用Reshape2包对数据进行一维转化：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- melt(newdata, id.vars=c(<span class="string">"lon"</span>,<span class="string">"lat"</span>,<span class="string">"point"</span>))</div><div class="line"></div><div class="line">        lon      lat point variable value</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perA     A</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perA     A</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perA     A</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perA     A</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perA     A</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perA     A</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perA     A</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perA     A</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perA     A</div><div class="line"><span class="number">15</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perB     B</div><div class="line"><span class="number">16</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perB     B</div><div class="line"><span class="number">17</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">18</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">19</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">20</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perB     B</div><div class="line"><span class="number">21</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">22</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perB     B</div><div class="line"><span class="number">23</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perB     B</div><div class="line"><span class="number">24</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perB     B</div><div class="line"><span class="number">25</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perB     B</div><div class="line"><span class="number">26</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perB     B</div><div class="line"><span class="number">27</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">28</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perB     B</div><div class="line"><span class="number">29</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perC     C</div><div class="line"><span class="number">30</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perC     C</div><div class="line"><span class="number">31</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">32</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">33</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">34</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perC     C</div><div class="line"><span class="number">35</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">36</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perC     C</div><div class="line"><span class="number">37</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perC     C</div><div class="line"><span class="number">38</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perC     C</div><div class="line"><span class="number">39</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perC     C</div><div class="line"><span class="number">40</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perC     C</div><div class="line"><span class="number">41</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">42</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perC     C</div></pre></td></tr></table></figure></p>
<p><strong>从新运行图表函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remapH(newdata[,<span class="number">1</span>:<span class="number">3</span>],</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image3.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是REmap系列的最后一篇——REmapH函数。&lt;/p&gt;
&lt;p&gt;这个函数的特色是可以做中心辐射的热力图，这种热力图在气象、人口密度、海拔测绘领域有诸多运用，当然也可以上当用在商务场合——特别是跟地理信息有关的数据呈现方面。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="热力密度地图" scheme="http://www.raindu.com/tags/%E7%83%AD%E5%8A%9B%E5%AF%86%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmapC(填充地图)</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapC-%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——REmapC-填充地图/</id>
    <published>2017-06-08T05:03:50.000Z</published>
    <updated>2017-06-08T05:17:42.596Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家介绍REmap函数家族中的第三个函数——REmapC。</p>
<p>REmapC函数允许我们同时在一张地图上制作填充图和点图、线图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(REmap)</div><div class="line"><span class="keyword">library</span>(baidumap)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?remapC</div><div class="line">remapC(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">      markLineData = <span class="literal">NULL</span>,</div><div class="line">      markPointData = <span class="literal">NULL</span>,</div><div class="line">      color = c(<span class="string">'#1e90ff'</span>,<span class="string">'#f0ffff'</span>),</div><div class="line">      theme = get_theme(<span class="string">"Bright"</span>),</div><div class="line">      title = <span class="string">""</span>,</div><div class="line">      subtitle = <span class="string">""</span>,</div><div class="line">      markLineTheme = markLineControl(),</div><div class="line">      markPointTheme = markPointControl(),</div><div class="line">      geoData = <span class="literal">NA</span>,</div><div class="line">      mindata = <span class="literal">NA</span>,</div><div class="line">      maxdata = <span class="literal">NA</span>)</div></pre></td></tr></table></figure>
<p><strong>四个主要参数说明：</strong></p>
<ul>
<li>参数一：data为需要的原始数据框格式数据，共2列，第一列为省份或者城市名称，第二列为对应的数值，数值大小将决定地图颜色深浅。</li>
<li>参数二：maptype为地图类型设置，可选world、china或者中国省份名称</li>
<li>参数三：color为热力图渐变颜色，默认为2个颜色，第一个为终止色，第二个为初始色。如果只有一个颜色，系统会自动以白色补充为初始铯色。</li>
<li>参数四：mindata与maxdata可以设置颜色极端点对应数据的上下限（默认是使用data中的数据最大值最小值作为两端极值）。</li>
</ul>
<h3 id="一、全国热力图"><a href="#一、全国热力图" class="headerlink" title="一、全国热力图"></a>一、全国热力图</h3><p>首先利用mapnames函数提取全国各省份名称：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)           <span class="comment">#全国省份</span></div><div class="line">value &lt;- rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>)               <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)    <span class="comment">#合成数据框作图数据</span></div><div class="line">remapC(mydata,color=c(<span class="string">"yellow"</span>,<span class="string">"red"</span>),title=<span class="string">"全国分省热地图"</span>,subtitle=<span class="string">"我是副标题"</span>) <span class="comment">#制作热力图</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>默认的颜色标度是从最小值到最大值。以上函数中省略了markLineData，markPointData 两个参数，所以并未显示点线图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ad_ln &lt;- mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">value_ln&lt;-rnorm(<span class="number">14</span>,<span class="number">100</span>,<span class="number">30</span>)</div><div class="line">data_ln &lt;-data.frame(ad_ln,value_ln) </div><div class="line"></div><div class="line">      ad_ln  value_ln</div><div class="line"><span class="number">1</span>    大连市  <span class="number">79.67630</span></div><div class="line"><span class="number">2</span>    朝阳市  <span class="number">41.93198</span></div><div class="line"><span class="number">3</span>    丹东市 <span class="number">173.31586</span></div><div class="line"><span class="number">4</span>    铁岭市 <span class="number">106.01990</span></div><div class="line"><span class="number">5</span>    沈阳市 <span class="number">119.40256</span></div><div class="line"><span class="number">6</span>    抚顺市  <span class="number">79.54820</span></div><div class="line"><span class="number">7</span>  葫芦岛市 <span class="number">155.62993</span></div><div class="line"><span class="number">8</span>    阜新市 <span class="number">122.99599</span></div><div class="line"><span class="number">9</span>    锦州市  <span class="number">94.17395</span></div><div class="line"><span class="number">10</span>   鞍山市  <span class="number">82.18944</span></div><div class="line"><span class="number">11</span>   本溪市  <span class="number">98.70972</span></div><div class="line"><span class="number">12</span>   营口市 <span class="number">115.59957</span></div><div class="line"><span class="number">13</span>   辽阳市 <span class="number">104.89199</span></div><div class="line"><span class="number">14</span>   盘锦市  <span class="number">92.92975</span></div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_out &lt;- remapC(data_ln,</div><div class="line">                   maptype = <span class="string">"liaoning"</span>,</div><div class="line">                   color=c(<span class="string">"green"</span>),</div><div class="line">                   title=<span class="string">"辽宁省热力地图"</span>,</div><div class="line">                   theme = get_theme(<span class="string">"Sky"</span>),</div><div class="line">                   maxdata=<span class="number">180</span></div><div class="line">                   )                             </div><div class="line">plot(map_out)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF2.png" alt=""></p>
<h3 id="接下来做一个案例："><a href="#接下来做一个案例：" class="headerlink" title="接下来做一个案例："></a>接下来做一个案例：</h3><p>每年春运，广东省人口会大批回流原住地，形成壮观的春运人流大军，我们模拟出广东省回流各省的人口数，使用填色地图表示人流规模，使用动态流向线表示回流最大的前10个省份。</p>
<p>因为没有实际的数据，这里我用函数模拟数据（非真实数据）：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)            <span class="comment">#全国省份</span></div><div class="line">value &lt;- round(rnorm(<span class="number">34</span>,<span class="number">1000</span>,<span class="number">30</span>),<span class="number">0</span>)      <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)     <span class="comment">#合并数据</span></div><div class="line"></div><div class="line">labelper&lt;-mydata[order(mydata[,<span class="string">"value"</span>],decreasing=<span class="literal">T</span>),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">origin&lt;-rep(<span class="string">"广州"</span>,length(labelper))</div><div class="line">destination&lt;-labelper$province</div><div class="line">line_data&lt;-data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">map_out1 &lt;- remapC(mydata,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>因为假设广东是人口迁出地，给广东填色是没有任何意义的，所以mydata数据中需要忽略 广东的数据<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mydata1 &lt;- mydata[-<span class="number">12</span>,]</div><div class="line">map_out2 &lt;- remapC(mydata1,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF4.gif" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家介绍REmap函数家族中的第三个函数——REmapC。&lt;/p&gt;
&lt;p&gt;REmapC函数允许我们同时在一张地图上制作填充图和点图、线图。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
      <category term="填充地图" scheme="http://www.raindu.com/tags/%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——案例综合运用</title>
    <link href="http://www.raindu.com/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%A1%88%E4%BE%8B%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8/"/>
    <id>http://www.raindu.com/2017/06/08/R语言可视化——案例综合运用/</id>
    <published>2017-06-08T01:36:58.000Z</published>
    <updated>2017-06-08T01:49:16.145Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家介绍一个REmap包的新函数——REmapB。</p>
<p>它是REmap包中诸多组函数中的一位，功能上要强大于之前介绍的REmap函数，不仅可以完成REmap函数的所有图表效果，而且可以做出前者没有的地图效果。</p>
<a id="more"></a>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><p><strong>以下是该函数的详细语法及参数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">?remapB</div><div class="line">remapB(center = c(<span class="number">104.114129</span>,<span class="number">37.550339</span>),</div><div class="line">       zoom = <span class="number">5</span>,</div><div class="line">       color = <span class="string">"Bright"</span>,</div><div class="line">       title = <span class="string">""</span>,</div><div class="line">       subtitle = <span class="string">""</span>,</div><div class="line">       markLineData = <span class="literal">NA</span>,</div><div class="line">       markPointData = <span class="literal">NA</span>,</div><div class="line">       markLineTheme = markLineControl(),</div><div class="line">       markPointTheme = markPointControl(),</div><div class="line">       geoData = <span class="literal">NA</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：center为地图中心，经纬度格式；</li>
<li>参数二：zoom为缩放设置，默认为5，代表全国地图，增大至10可放大至地市</li>
<li>参数三：color为地图颜色，可选有”Bright”, “Blue”, “light”, “dark”, “redalert”, “googlelite”, “grassgreen”, “midnight”, “pink”, “darkgreen”, “bluish”, “grayscale”, “hardedge”</li>
<li>参数四：title为地图主标题</li>
<li>参数五：subtitle为地图副标题</li>
<li>参数六：markLineData为绘制线条需要的数据，包括起点和终点两列</li>
<li>参数七：markPointDate为绘制点需要的数据，仅终点一列</li>
<li>参数八：markLineTheme为线条主题设置，通过markLineControl( )函数设置</li>
<li>参数九：markPointTheme为点主题设置，通过markPointControl( )函数设置</li>
<li>参数十：geoData为点、线绘制的地理位置数据存储，可以只是输入经纬度数据，也可通过get_geo_position(‘地点’)获取</li>
</ul>
<p>其中以上参数中，markLineTheme和markLineTheme内含有诸多属性设置，类似REmap中的theme设置：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">markLineTheme = markLineControl(symbol = <span class="literal">NA</span>,<span class="comment">#控制线型</span></div><div class="line">symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),    <span class="comment">#线条粗度变动范围</span></div><div class="line">smooth = <span class="literal">T</span>,             <span class="comment">#启用线条平滑度设置</span></div><div class="line">smoothness =<span class="number">0.2</span>,        <span class="comment">#线条平滑度</span></div><div class="line">effect = <span class="literal">T</span>,             <span class="comment">#线条动效</span></div><div class="line">lineWidth = <span class="number">2</span>,          <span class="comment">#线宽</span></div><div class="line">lineType = ‘dotted’,    <span class="comment">#线条类别</span></div><div class="line">color =‘Random’)        <span class="comment">#线条颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为标记样式，具体指线条两端的标记的形状，两个值分别为起点和终点，经过实际使用symbol参数不可修改</li>
<li>参数二：symbolSize为线条两端标记大小，对应symbol参数的两个值，实际上第一个值没用，因为开始标记为none</li>
<li>参数三：smooth为逻辑参数，设置线条是否平滑</li>
<li>参数四：smoothness为平滑度，smooth参数设置为T时有效，体现线条的弧度，减小到0时为直线</li>
<li>参数五：effect为逻辑参数，是否显示动态效果</li>
<li>参数六：lineWidth为线条粗细</li>
<li>参数七：lineType为线条类型，可选有solid（实线）、dotted（点线）、dashed（虚线）</li>
<li>参数八：color为线条颜色</li>
</ul>
<p>根据以上参数名称，可以大致了解每一个参数的含义：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">markPointTheme = markPointControl(symbol = <span class="string">"heart"</span>, <span class="comment">#点形状</span></div><div class="line">symbolSize = <span class="string">"Random"</span>,   <span class="comment">#点大小</span></div><div class="line">effect = <span class="literal">T</span>,              <span class="comment">#动效启用</span></div><div class="line">effectType = <span class="string">"scale"</span>,    <span class="comment">#动效类型</span></div><div class="line">color = <span class="string">"Random"</span>)        <span class="comment">#颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为点样式，可选项none、circle、rectangle、triangle、diamond、emptyCirle、emptyRectangle、emptyTriangle、emptyDiamond、heart、droplet、pin、arrow、star</li>
<li>参数二：symbolSize为点大小</li>
<li>参数三：effect为逻辑参数，是否显示动态效果</li>
<li>参数四：effectType为动态效果样式，可选scale（放大）和bounce（跳动）</li>
<li>参数五：color为点颜色</li>
</ul>
<p>解读：effect参数在点太多时，动态效果会失效，这时建议设置为FALSE。在remapB( )函数中通过另外一个参数markPointData也可以设置点颜色，优先级高于color参数。</p>
<h3 id="案例应用："><a href="#案例应用：" class="headerlink" title="案例应用："></a>案例应用：</h3><h4 id="接下来我们可以根据以上参数说明制作一个一对多的流向图："><a href="#接下来我们可以根据以上参数说明制作一个一对多的流向图：" class="headerlink" title="接下来我们可以根据以上参数说明制作一个一对多的流向图："></a>接下来我们可以根据以上参数说明制作一个一对多的流向图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>,<span class="string">"xian"</span>,<span class="string">"chengdu"</span>,<span class="string">"changchun"</span>,<span class="string">"taiyuan"</span>,<span class="string">"nanyang"</span>,<span class="string">"zhengzhou"</span>)  <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"nanyang"</span>,length(destination))  <span class="comment">#起点</span></div><div class="line">map_data&lt;- data.frame(origin,destination)  <span class="comment">#合成数据框格式的作图数据</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapB(zoom=<span class="number">5</span>, <span class="comment">#参数5绘制省级国家地图</span></div><div class="line">                   color=<span class="string">"dark"</span>,</div><div class="line">                   title=<span class="string">"我是主标题"</span>,</div><div class="line">                   subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                   markLineData=map_data,</div><div class="line">                   markPointData=destination,</div><div class="line">                   markLineTheme=markLineControl(),</div><div class="line">                   markPointTheme=markPointControl()</div><div class="line">                   )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF.gif" alt=""></p>
<p>####通过设置markLineTheme、markPointTheme两个主题内部的详细风格参数，你可以对线条以及数据点的气泡进行个性化设置。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>如果只想要绘制流向线而不需要终点的点的话，直接给markPointData赋值为NA就可以了。</p>
<h4 id="只要将我们的数据结构重新整理，就可以制作出路径地图："><a href="#只要将我们的数据结构重新整理，就可以制作出路径地图：" class="headerlink" title="只要将我们的数据结构重新整理，就可以制作出路径地图："></a>只要将我们的数据结构重新整理，就可以制作出路径地图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">newdata&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"chengdu"</span>,<span class="string">"xian"</span>,<span class="string">"taiyuan"</span>,<span class="string">"济南"</span>,<span class="string">"shanghai"</span>) </div><div class="line">origin&lt;-c(newdata[-<span class="number">7</span>])</div><div class="line">destination&lt;-c(newdata[-<span class="number">1</span>])</div><div class="line">map_data&lt;- data.frame(origin,destination)</div><div class="line"></div><div class="line">map_out2&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF2.gif" alt=""></p>
<h4 id="最后一个案例使用REmapB函数制作目标分布图："><a href="#最后一个案例使用REmapB函数制作目标分布图：" class="headerlink" title="最后一个案例使用REmapB函数制作目标分布图："></a>最后一个案例使用REmapB函数制作目标分布图：</h4><p>首先搜索大连地区的大学：</p>
<p>加载百度地图包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="comment">#查找大连的所有大学</span></div><div class="line">dl_college &lt;- getPlace(<span class="string">"大学"</span>,<span class="string">"大连"</span>)</div><div class="line">Get <span class="number">125</span> records, <span class="number">7</span> page. </div><div class="line">    Getting  <span class="number">0</span> th page </div><div class="line">    Getting  <span class="number">1</span> th page </div><div class="line">    Getting  <span class="number">2</span> th page </div><div class="line">    Getting  <span class="number">3</span> th page </div><div class="line">    Getting  <span class="number">4</span> th page </div><div class="line">    Getting  <span class="number">5</span> th page </div><div class="line">    Getting  <span class="number">6</span> th page </div><div class="line">Done!</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#预览数据：</span></div><div class="line">head(dl_college)</div><div class="line"></div><div class="line">                        name                                           address      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学                                         轻工苑<span class="number">1</span>号 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学                     辽宁省大连市甘井子区凌工路<span class="number">2</span>号 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学                             辽宁省大连市凌海路<span class="number">1</span>号 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） 沙河口区黄河路<span class="number">794</span>号交通大学小吃一条街内(近西南路) <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区)                   中国辽宁省大连市旅顺南路西段<span class="number">6</span>号 <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学                                      学府大街<span class="number">10</span>号 <span class="number">39.10660</span> <span class="number">121.8282</span></div><div class="line">       telephone</div><div class="line"><span class="number">1</span> (<span class="number">0411</span>)<span class="number">86323693</span></div><div class="line"><span class="number">2</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">3</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">4</span> (<span class="number">0411</span>)<span class="number">84106313</span></div><div class="line"><span class="number">5</span> (<span class="number">0411</span>)<span class="number">86111157</span></div><div class="line"><span class="number">6</span> (<span class="number">0411</span>)<span class="number">87402114</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">str(dl_college)</div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">125</span> obs. of  <span class="number">5</span> variables:</div><div class="line"> $ name     : chr  <span class="string">"大连工业大学"</span> <span class="string">"大连理工大学"</span> <span class="string">"大连海事大学"</span> <span class="string">"大连交通大学（沙河口校区）"</span> <span class="keyword">...</span></div><div class="line"> $ address  : chr  <span class="string">"轻工苑1号"</span> <span class="string">"辽宁省大连市甘井子区凌工路2号"</span> <span class="string">"辽宁省大连市凌海路1号"</span> <span class="string">"沙河口区黄河路794号交通大学小吃一条街内(近西南路)"</span> <span class="keyword">...</span></div><div class="line"> $ lat      : num  <span class="number">39</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.8</span> <span class="keyword">...</span></div><div class="line"> $ lon      : num  <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">121</span> <span class="keyword">...</span></div><div class="line"> $ telephone: chr  <span class="string">"(0411)86323693"</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="string">"(0411)84106313"</span> <span class="keyword">...</span></div></pre></td></tr></table></figure>
<p>一共抓取了大连地区的125个带有大学的机构经纬度地址：</p>
<p><strong>构造作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">newdata1&lt;-dl_college[,c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>)]</div><div class="line">head(newdata1)</div><div class="line">                        name      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区) <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学 <span class="number">39.10660</span> <span class="number">121.8282</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">newdata2&lt;-newdata1[,c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>)]</div><div class="line">map_out3 &lt;- remapB(center = c(<span class="number">121.62139</span>,<span class="number">38.91934</span>),  </div><div class="line">                zoom = <span class="number">14</span>,</div><div class="line">                color = <span class="string">"Blue"</span>,</div><div class="line">                title = <span class="string">"大连高校分布图"</span>,</div><div class="line">                markPointData =newdata2[<span class="number">3</span>],</div><div class="line">                markPointTheme = markPointControl(</div><div class="line">                symbol = <span class="string">"pin"</span>,</div><div class="line">                symbolSize = <span class="number">3</span>,</div><div class="line">                effect = <span class="literal">T</span>,</div><div class="line">                color = <span class="string">"yellow"</span>),</div><div class="line">                geoData =newdata2 </div><div class="line">               )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out3)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天跟大家介绍一个REmap包的新函数——REmapB。&lt;/p&gt;
&lt;p&gt;它是REmap包中诸多组函数中的一位，功能上要强大于之前介绍的REmap函数，不仅可以完成REmap函数的所有图表效果，而且可以做出前者没有的地图效果。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmap(路径图)</title>
    <link href="http://www.raindu.com/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap-%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/07/R语言可视化——REmap-路径图/</id>
    <published>2017-06-07T10:49:51.000Z</published>
    <updated>2017-06-07T11:10:47.829Z</updated>
    
    <content type="html"><![CDATA[<p>今天紧接昨天的内容，跟大家分享如何使用REmap函数制作路径图。</p>
<p>路径图所需要的数据结构非常简单，两列数据，左侧是起点，右侧是终点，并且每一行的终点是下一行的起点，这样最终才可以制作出连接在一起的路径图。</p>
<a id="more"></a>
<p><strong>首先我们来构造所需的数据：</strong></p>
<h3 id="构造数据："><a href="#构造数据：" class="headerlink" title="构造数据："></a>构造数据：</h3><p><strong>起点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"hefei"</span>,<span class="string">"nanjing"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>终点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(origin[-<span class="number">1</span>],origin[<span class="number">1</span>]) <span class="comment">#将起点数据首尾互换，并构造终点数据</span></div></pre></td></tr></table></figure></p>
<p><strong>将终点数据、起点数据合并为数据框格式的作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="绘图过程："><a href="#绘图过程：" class="headerlink" title="绘图过程："></a>绘图过程：</h3><p><strong>绘图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;- remap(mapdata=map_data,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out1)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image2.png" alt=""></p>
<p>上面的例子中，为了使得路径图首尾相连，终点数据是起点数据调换首尾行而得到的。</p>
<p><strong>那么如果不要求路径图首尾相连的话可以设置如下结构：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_data1&lt;-map_data[-<span class="number">7</span>,]</div><div class="line"></div><div class="line">map_out2&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out2)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image3.png" alt=""></p>
<p>这种路径图的形式非常适合用于表达带有很多中间节点的动态路线。</p>
<p><strong>当然如果你也可以将数据源设置成两条毫不相干的路线：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-c(<span class="string">"西安"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"beijing"</span>,<span class="string">"shenyang"</span>,<span class="string">"changhcun"</span>,<span class="string">"哈尔滨"</span>) </div><div class="line">data2&lt;-c(<span class="string">"nanyang"</span>,<span class="string">"wuhan"</span>,<span class="string">"changsha"</span>,<span class="string">"南昌"</span>,<span class="string">"guangzhou"</span>,<span class="string">"南宁"</span>,<span class="string">"贵阳"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">origin&lt;-c(data1[<span class="number">1</span>:<span class="number">6</span>],data2[<span class="number">1</span>:<span class="number">6</span>])</div><div class="line">destination&lt;-c(data1[<span class="number">2</span>:<span class="number">7</span>],data2[<span class="number">2</span>:<span class="number">7</span>])</div><div class="line">map_data1&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>随机生成的线条和气泡颜色看着挺别扭，我们可以将其修改为自定义颜色：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'none'</span>,</div><div class="line">          lineColor = <span class="string">"white"</span>,    </div><div class="line">          backgroundColor=<span class="string">"black"</span>      </div><div class="line">          )</div><div class="line">           )</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image6.png" alt=""></p>
<p>你可以用这种方法，结合自己的数据来表达多个地域之间的流动方向：比如一打一路、长征、贸易路线、铁路路线图等都非常适合这种表达。</p>
<p>gif效果：</p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image8.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天紧接昨天的内容，跟大家分享如何使用REmap函数制作路径图。&lt;/p&gt;
&lt;p&gt;路径图所需要的数据结构非常简单，两列数据，左侧是起点，右侧是终点，并且每一行的终点是下一行的起点，这样最终才可以制作出连接在一起的路径图。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
      <category term="路径图" scheme="http://www.raindu.com/tags/%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——REmap动态地图</title>
    <link href="http://www.raindu.com/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap%E5%8A%A8%E6%80%81%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/07/R语言可视化——REmap动态地图/</id>
    <published>2017-06-07T01:27:05.000Z</published>
    <updated>2017-06-07T11:10:55.187Z</updated>
    
    <content type="html"><![CDATA[<p>今天开始，要跟着大家学习一个新的可视化R包——REmap包。</p>
<p>说起来，这个包要归功于百度的可视化开源项目——echarts,它是国内为数不多的高水平开源可视化js库，在业界地位首屈一指。</p>
<p>经过大神的努力，我们终于可以在R语言中以简洁的REmap函数形式，来调用Echarts核心功能，而不用亲自去学js代码，就可以创建动态地图可视化作品。</p>
<a id="more"></a>
<p>如果有小伙伴儿熟悉百度的大数据可视化项目——百度迁徙地图，以及交通通勤图，以及后来的一带一路可视化路线图，肯定对那些动态地图上流动的线条和路径有很深的印象。</p>
<p>下面我们开始简单介绍REmap的主要功能：</p>
<p>REmap包中涵盖有一组函数，我所知道并用过的有REmap、REmapB、REmapC、REmapH。</p>
<p>每一个函数都对应着几种炫酷的动态效果类型：</p>
<p>今天我们先介绍REmap函数并利用该函数制作简单的流向图：</p>
<h3 id="安装及加载："><a href="#安装及加载：" class="headerlink" title="安装及加载："></a>安装及加载：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install.packages(<span class="string">"devtools"</span>)</div><div class="line">devtools::install_github(<span class="string">"lchiffon/REmap"</span>)   <span class="comment">#开发者/包名</span></div><div class="line"><span class="keyword">library</span>(REmap)    <span class="comment">#加载</span></div></pre></td></tr></table></figure>
<h3 id="语法介绍："><a href="#语法介绍：" class="headerlink" title="语法介绍："></a>语法介绍：</h3><p>REmap函数的作图理念与ggplot其实还是有雷同的，它也是将数据信息和美学信息分开表达，数据信息包含在数据表中，而美化修饰参数都包含在theme内。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">remap(mapdata, title = <span class="string">" "</span>, </div><div class="line">subtitle = <span class="string">""</span>, </div><div class="line">theme = get_theme(<span class="string">"Dark"</span>))</div></pre></td></tr></table></figure></p>
<p>这是一个典型的REmap函数的结构，mapdata是我们所要展示的数据框格式数据集，里面包含了两列数据：起点位置、终点信息。</p>
<p>title用于设置主标题、subtitle用于设置副标题。而theme用于设定整个图形的主题风格，该主题是一个封装的函数变量，里面包含诸多参数信息（各种点线面的颜色、度量等信息）。</p>
<p>下面是一个典型的REmap主题内的参数示例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>,</div><div class="line">                  lineColor = <span class="string">"Random"</span>,</div><div class="line">                  backgroundColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  titleColor = <span class="string">"fff"</span>,</div><div class="line">                  borderColor = <span class="string">"rgba(100,149,237,1)"</span>,</div><div class="line">                  regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  labelShow = <span class="literal">T</span>,</div><div class="line">                  pointShow = <span class="literal">F</span>,</div><div class="line">                  pointColor = <span class="string">"gold"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：theme为总体配色，默认选项有“Dark”、“Bright”、“Sky”、“none”</li>
<li>参数二：lineColor为线条颜色，默认是随机， 也可自行设置，如’red’</li>
<li>参数三：backgroundColor为地图外背景颜色</li>
<li>参数四：titleColor为标题颜色</li>
<li>参数五：borderColor为地图中地域边缘颜色，不同省份、城市的边缘</li>
<li>参数六：regionColor为地域颜色，即地图显示的颜色</li>
<li>参数七：labelShow为逻辑参数，是否显示地域名称，默认为T，即显示，只用于remapC函数</li>
<li>参数八：pointShow为逻辑参数，是否显示地域所在点，默认为F，不显示，只用于remapC函数</li>
<li>参数九：pointColor为pointShow中点的颜色，只用于remapC函数</li>
</ul>
<p><strong>REmap可以非常轻松的获取城市地点的经纬度数据：</strong></p>
<p>以大连为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">get_city_coord(<span class="string">"大连"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">121.62139</span>  <span class="number">38.91934</span></div></pre></td></tr></table></figure></p>
<p>如果想要获取一组城市的经纬度信息，可以直接赋值给城市向量：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">city_list &lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)</div><div class="line">get_geo_position(city_list)</div><div class="line"></div><div class="line">       lon      lat      city</div><div class="line"><span class="number">1</span> <span class="number">116.4136</span> <span class="number">39.91101</span>   beijing</div><div class="line"><span class="number">2</span> <span class="number">117.2059</span> <span class="number">39.09091</span>   tianjin</div><div class="line"><span class="number">3</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  shenyang</div><div class="line"><span class="number">4</span> <span class="number">121.6214</span> <span class="number">38.91934</span>    dalian</div><div class="line"><span class="number">5</span> <span class="number">113.6313</span> <span class="number">34.75349</span> zhengzhou</div></pre></td></tr></table></figure></p>
<p>而且据说这两个函数大部分时候对拼音与汉字，甚至拼音的大小写都不敏感，所以避免了很多麻烦。</p>
<h3 id="生成模拟数据集："><a href="#生成模拟数据集：" class="headerlink" title="生成模拟数据集："></a>生成模拟数据集：</h3><p><strong>创建起始点：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><strong>数据预览：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">head(map_data)</div><div class="line">  origin destination</div><div class="line"><span class="number">1</span> dalian     beijing</div><div class="line"><span class="number">2</span> dalian     tianjin</div><div class="line"><span class="number">3</span> dalian    shenyang</div><div class="line"><span class="number">4</span> dalian      dalian</div><div class="line"><span class="number">5</span> dalian   zhengzhou</div></pre></td></tr></table></figure></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remap(mapdata=map_data,        <span class="comment">#流向地图的数据源（依次为起点、重点两列）</span></div><div class="line">                title=<span class="string">"我是标题"</span>,       <span class="comment">#设置主标题</span></div><div class="line">                subtitle=<span class="string">"我是副标题"</span>,  <span class="comment">#设置副标题</span></div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>)) <span class="comment">#设置主题（默认主题一共有三套：“Dark”,“Bright,”Sky“）</span></div></pre></td></tr></table></figure>
<p>运行以上代码之后，动态图表已经生成名为<code>map_out</code>的对象，只需使用<code>plot</code>函数调用一下<code>map_out</code>图表对象就可以看到该动态图表效果。</p>
<blockquote>
<p>提示下，这里的<code>map_out</code>的对象是一个<code>js</code>代码生成的<code>html</code>对象，运行完<code>plot</code>之后，动态图表效果不是呈现在R的图表窗口而是调用了桌面浏览器的Web窗口。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plot(map_out)</div><div class="line">Save img as: C:\Users\ADMINI~<span class="number">1</span>\AppData\Local\Temp\RtmpAxQndv/ID_20161015191055_242761.html</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image1.png" alt=""></p>
<p>运行完成之后，浏览器窗口会自动呈现动态图表效果：</p>
<p>其实仔细看以上代码，与<code>ggplot</code>的地图代码相比，要简单很多，数据集也很简单（最重要的直接支持地点名称而不需要经纬度数据），当然这些便利性主要归功于它的底层代码是调用<code>Echarts</code>项目，地理位置信息有百度地图的强大系统支持。</p>
<h3 id="可选主题介绍："><a href="#可选主题介绍：" class="headerlink" title="可选主题介绍："></a>可选主题介绍：</h3><p><strong>Dark主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Dark"</span>))</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Sky主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Sky"</span>))</div><div class="line"></div><div class="line">map_out&lt;-remap(mapdata=map_data,        </div><div class="line">                title=<span class="string">"我是标题"</span>,        </div><div class="line">                subtitle=<span class="string">"我是副标题"</span>, </div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="关于主题自定义："><a href="#关于主题自定义：" class="headerlink" title="关于主题自定义："></a>关于主题自定义：</h3><p>以上是该函数内置的三款主题，当然如果你要想自定义主题的话，也是可以的，但是需要将<code>theme=&quot;Sky&quot;</code>设置为<code>none</code>，否则系统主题会覆盖掉你自定义的主题。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;-remap(mapdata=map_data,    <span class="comment">#设计流向地图</span></div><div class="line">title=<span class="string">"我是标题"</span>,                    <span class="comment">#设置标题</span></div><div class="line">subtitle=<span class="string">"我是副标题"</span>,               <span class="comment">#设置副标题</span></div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>,        <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"SandyBrown"</span>)            <span class="comment">#设置地区颜色</span></div><div class="line">)</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image4.png" alt=""></p>
<p>但是个人习惯，还是比较喜欢先将主题定义好并命名，然后在运行图表代码的时候直接饮用，这样比较利于后期主题的微调：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mytheme&lt;-get_theme(theme=<span class="string">"none"</span>,     <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"Bisque"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>))</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image5.png" alt=""></p>
<p>当然如果将数据框中的数据两列调换，那么地图就可以做成流入图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">destination&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination) </div><div class="line"></div><div class="line">map_out5&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out5)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image6.png" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image7.png" alt=""></p>
<p>其实以上所有图表都是带有动态交互效果的！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天开始，要跟着大家学习一个新的可视化R包——REmap包。&lt;/p&gt;
&lt;p&gt;说起来，这个包要归功于百度的可视化开源项目——echarts,它是国内为数不多的高水平开源可视化js库，在业界地位首屈一指。&lt;/p&gt;
&lt;p&gt;经过大神的努力，我们终于可以在R语言中以简洁的REmap函数形式，来调用Echarts核心功能，而不用亲自去学js代码，就可以创建动态地图可视化作品。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="REmap" scheme="http://www.raindu.com/tags/REmap/"/>
    
  </entry>
  
  <entry>
    <title>leaflet在线地图进阶宝典之——高级辅助特性</title>
    <link href="http://www.raindu.com/2017/06/06/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E4%B9%8B%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E8%BE%85%E5%8A%A9%E7%89%B9%E6%80%A7/"/>
    <id>http://www.raindu.com/2017/06/06/leaflet在线地图进阶宝典之——高级辅助特性/</id>
    <published>2017-06-06T01:27:27.000Z</published>
    <updated>2017-06-06T02:50:34.274Z</updated>
    
    <content type="html"><![CDATA[<p>本文跟大家分享leaflet在线地图的高级附加属性，这些属性通常来讲仅仅作为我们数据额可视化项目的修饰元素，而并不会影响数据元素。</p>
<p>但是有了这些辅助修饰元素，往往可以使你的数据可视化项目变得更具人性化。</p>
<a id="more"></a>
<p>本文内容根据leaflet的官方主页（R语言接口）翻译而来：</p>
<p><strong>附加属性：</strong></p>
<ul>
<li>测度工具：Leaflet Measure  <blockquote>
<p>增加该工具可以轻而易举的让你在可视化地图中通过鼠标打点，测量两点之间的距离，如果是闭合区域，则可以直接计算闭合区域的真实面积。</p>
</blockquote>
</li>
<li>网格线：Graticule<blockquote>
<p>网格线可以提供平面坐标系下地理空间的经纬度位置参考线。</p>
</blockquote>
</li>
<li>昼夜分界线：Terminator (day/night indicator)<blockquote>
<p>昼夜分界线可以提供一天中不同地区的昼夜分界状况。</p>
</blockquote>
</li>
<li>mini小地图：Minimap<blockquote>
<p>mini窗口小地图可以提供定位窗口，让你知道主版面中位置在更大范围地理区域上的大致方位，就相当于游戏中的mini导航图。</p>
</blockquote>
</li>
<li>辅助按钮：EasyButton<blockquote>
<p>辅助按钮可以提供一键初始化比例尺，一键定位功能。</p>
</blockquote>
</li>
<li>自定义js属性：Custom JavaScript with htmlwidgets::onRender<blockquote>
<p>你可以利用leaflet与HTML的接口工具对地图版面进行更加丰富的属性设置。</p>
</blockquote>
</li>
</ul>
<h3 id="测度工具：Leaflet-Measure"><a href="#测度工具：Leaflet-Measure" class="headerlink" title="测度工具：Leaflet Measure"></a>测度工具：Leaflet Measure</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line">m&lt;-leaflet()%&gt;%addTiles()</div><div class="line">m %&gt;%fitBounds(-<span class="number">73.9</span>,<span class="number">40.75</span>,-<span class="number">73.95</span>,<span class="number">40.8</span>) %&gt;%addMeasure()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image1.png" alt=""></p>
<p>右上侧的小弹窗打开之后选择创建测距选项，就可以通过鼠标打点儿，测量两点之间的地理距离，如果是三个以上的点，则会测量出闭合多边形区域的面积。</p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1NDI4OA==" frameborder="0" 'allowfullscreen'=""></iframe>

<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">m %&gt;%</div><div class="line">  fitBounds(<span class="number">13.76134</span>, <span class="number">52.675499</span>, <span class="number">13.0884</span>, <span class="number">52.33812</span>) %&gt;%   <span class="comment">#设定版面呈现的地理区域范围</span></div><div class="line">  addMeasure(</div><div class="line">    position = <span class="string">"bottomleft"</span>,       <span class="comment">#测距菜单位置</span></div><div class="line">    primaryLengthUnit = <span class="string">"meters"</span>,  <span class="comment">#测量的点距离输出单位</span></div><div class="line">    primaryAreaUnit = <span class="string">"sqmeters"</span>,  <span class="comment">#测量的闭合多边形区域面积输出单位</span></div><div class="line">    activeColor = <span class="string">"#3D535D"</span>,       <span class="comment">#</span></div><div class="line">    completedColor = <span class="string">"#7D4479"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="网格线：Graticule"><a href="#网格线：Graticule" class="headerlink" title="网格线：Graticule"></a>网格线：Graticule</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% addGraticule()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% </div><div class="line">addGraticule(interval = <span class="number">10</span>, style = list(color = <span class="string">"#FF0000"</span>, weight = <span class="number">1</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image4.png" alt=""></p>
<p>而且网格线系统是可控元素，控制方式就是将其当成一个单独的图层，然后分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;%</div><div class="line">  addGraticule(group = <span class="string">"Graticule"</span>) %&gt;%</div><div class="line">  addLayersControl(overlayGroups = c(<span class="string">"Graticule"</span>),options=layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image5.png" alt=""><br><img src="http://or3sddq9r.bkt.clouddn.com/image6.png" alt=""></p>
<h3 id="昼夜分界线：Terminator-day-night-indicator"><a href="#昼夜分界线：Terminator-day-night-indicator" class="headerlink" title="昼夜分界线：Terminator (day/night indicator)"></a>昼夜分界线：Terminator (day/night indicator)</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% addTerminator()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>昼夜分界线支持自定义日期和分组功能：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;%</div><div class="line">  addTiles() %&gt;%</div><div class="line">  addTerminator(</div><div class="line">    resolution=<span class="number">10</span>,</div><div class="line">    time = <span class="string">"2013-06-20T21:00:00Z"</span>,</div><div class="line">    group = <span class="string">"daylight"</span>) %&gt;%</div><div class="line">  addLayersControl(</div><div class="line">    overlayGroups = <span class="string">"daylight"</span>,</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image8.png" alt=""></p>
<h3 id="mini导航地图：Minimap"><a href="#mini导航地图：Minimap" class="headerlink" title="mini导航地图：Minimap"></a>mini导航地图：Minimap</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap()</div></pre></td></tr></table></figure>
<p><strong>mini导航地图中的地图背景也是支持自定义的：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap(tiles = providers$Esri.WorldStreetMap,toggleDisplay = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image9.png" alt=""></p>
<p>视频演示：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1Nzg3Mg==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助工具菜单："><a href="#辅助工具菜单：" class="headerlink" title="辅助工具菜单："></a>辅助工具菜单：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(htmlwidgets)</div><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addEasyButton(easyButton(      <span class="comment">#添加一键恢复初始窗口比利时</span></div><div class="line">    icon=<span class="string">"fa-globe"</span>, title=<span class="string">"Zoom to Level 1"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.setZoom(1); &#125;"</span>))) %&gt;%</div><div class="line">  addEasyButton(easyButton(     <span class="comment">#添加一键定位功能（根据你的所在位置）</span></div><div class="line">    icon=<span class="string">"fa-crosshairs"</span>, title=<span class="string">"Locate Me"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.locate(&#123;setView: true&#125;); &#125;"</span>)))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI5NjIyNA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助按钮：EasyButton"><a href="#辅助按钮：EasyButton" class="headerlink" title="辅助按钮：EasyButton"></a>辅助按钮：EasyButton</h3><p>以下代码展示了如何通过调用js工具控件来通过打开菜单工具开启地图上的点聚合功能，同时关闭菜单工具按钮，关闭点聚合功能。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addMarkers(data=quakes,</div><div class="line">    clusterOptions = markerClusterOptions(),</div><div class="line">    clusterId = <span class="string">"quakesCluster"</span>) %&gt;%</div><div class="line">  addEasyButton(easyButton(</div><div class="line">    states = list(</div><div class="line">      easyButtonState(   <span class="comment">#状态1：打开菜单，开启点聚合</span></div><div class="line">        stateName=<span class="string">"unfrozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle"</span>,</div><div class="line">        title=<span class="string">"Freeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn,map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.freezeAtZoom();</div><div class="line">            btn.state('frozen-markers');</div><div class="line">          &#125;")</div><div class="line">      ),</div><div class="line">      easyButtonState( <span class="comment">#状态2：关闭菜单，结束点聚合功能</span></div><div class="line">        stateName=<span class="string">"frozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle-filled"</span>,</div><div class="line">        title=<span class="string">"UnFreeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn, map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.unfreeze();</div><div class="line">            btn.state('unfrozen-markers');</div><div class="line">          &#125;")</div><div class="line">      )</div><div class="line">    )</div><div class="line">  ))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image10.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzM0MDg4MA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender"><a href="#自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender" class="headerlink" title="自定义js属性：Custom JavaScript with htmlwidgets::onRender"></a>自定义js属性：Custom JavaScript with htmlwidgets::onRender</h3><p>基础图层会根据导航窗内的图层风格改变而随之转换：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">mymap&lt;-leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>)</div><div class="line">esri &lt;- grep(<span class="string">"^Esri"</span>, providers, value = <span class="literal">TRUE</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> (provider <span class="keyword">in</span> esri) &#123;</div><div class="line">  mymap &lt;-mymap %&gt;% addProviderTiles(provider, group = provider)</div><div class="line">&#125;</div><div class="line"></div><div class="line">mymap %&gt;%</div><div class="line">  addLayersControl(baseGroups = names(esri),</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>)) %&gt;%</div><div class="line">  addMiniMap(tiles = esri[[<span class="number">1</span>]], toggleDisplay = <span class="literal">TRUE</span>,</div><div class="line">    position = <span class="string">"bottomleft"</span>) %&gt;%</div><div class="line">  htmlwidgets::onRender(<span class="string">"</span></div><div class="line">    function(el, x) &#123;</div><div class="line">      var myMap = this;</div><div class="line">      myMap.on('baselayerchange',</div><div class="line">        function (e) &#123;</div><div class="line">          myMap.minimap.changeLayer(L.tileLayer.provider(e.name));</div><div class="line">        &#125;)</div><div class="line">    &#125;")</div></pre></td></tr></table></figure></p>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image11.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI3MDY4OA==" frameborder="0" 'allowfullscreen'=""></iframe>


<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文跟大家分享leaflet在线地图的高级附加属性，这些属性通常来讲仅仅作为我们数据额可视化项目的修饰元素，而并不会影响数据元素。&lt;/p&gt;
&lt;p&gt;但是有了这些辅助修饰元素，往往可以使你的数据可视化项目变得更具人性化。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="HTML" scheme="http://www.raindu.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Leaflet在线地图进阶宝典——json素材操纵与图层面板控制</title>
    <link href="http://www.raindu.com/2017/06/05/Leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94json%E7%B4%A0%E6%9D%90%E6%93%8D%E7%BA%B5%E4%B8%8E%E5%9B%BE%E5%B1%82%E9%9D%A2%E6%9D%BF%E6%8E%A7%E5%88%B6/"/>
    <id>http://www.raindu.com/2017/06/05/Leaflet在线地图进阶宝典——json素材操纵与图层面板控制/</id>
    <published>2017-06-05T13:52:37.000Z</published>
    <updated>2017-06-06T01:47:40.178Z</updated>
    
    <content type="html"><![CDATA[<p>这篇教程憋了很久，其实算是3个月前leaflet在线地图系列的进阶篇，但是因为当时对于leaflet地图的数据源结构理解有限，技能勉强操控shp数据源，对于json数据源所知甚少，一直拖了这么久才更新。</p>
<p>随着近期在json数据结构的理解不断加深，对于list结构和向量化运算的掌握也多有提高，这才能熟练的在leaflet系统中操控json数据。</p>
<a id="more"></a>
<p><strong>本篇主要分为两大部分：</strong></p>
<ul>
<li>如何自如的操纵json数据来打造leaflet所能识别的数据源和style属性；</li>
<li>如何操控leaflet控制台版面中的地图图层和数据图层。</li>
</ul>
<p>想要很好的理解本文，你需先对leaflet系统基础语法有所掌握（其实可视化的图层语法都大同小异，leaflet属于JavaScript语言打造的在线地图库，同D3、plotly、Rcharts以及Highcharts等接口的语法差别不大）。</p>
<p>但如果你在看本文之前已经看过我的前期四篇leaflet入门篇：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27012917" target="_blank" rel="external">动态地理信息可视化——leaflet在线地图简介</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26994131" target="_blank" rel="external">动态地理信息可视化——散点地图系列</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27005732" target="_blank" rel="external">动态地理信息可视化——leaflet构造路径图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27009715" target="_blank" rel="external">动态地理信息可视化——leaflet填充地图</a></li>
</ul>
<p>那么本文理解起来就容易多了，仅仅是温故知新罢了！</p>
<p>当然如果你学有余力的话，你也可以顺便把百度的Echarts系统地图接口也学习一下：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27019450" target="_blank" rel="external">R语言可视化——REmap动态地图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27021446" target="_blank" rel="external">R语言可视化——REmap(路径图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27032696" target="_blank" rel="external">R语言可视化——REmapC(填充地图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27041506" target="_blank" rel="external">R语言可视化——REmapH(中心热度图)</a></li>
</ul>
<p>如果你能熟练掌握以上两套在线地图语法，那么制作此类可视化项目至少在技术角度上来说已经没有任何门槛。</p>
<p><strong>以下是本文的主要内容：</strong></p>
<p>json地图数据结构和变量操控：</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line"><span class="keyword">library</span>(sf)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(htmltools)</div></pre></td></tr></table></figure>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><p><strong>这样的全局预设可以为你省却很多麻烦，强烈建议</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">options(stringsAsFactors=<span class="literal">FALSE</span>,warn=<span class="literal">FALSE</span>) </div><div class="line">setwd(<span class="string">"D:/R/mapdatanew/"</span>)</div><div class="line"></div><div class="line">url&lt;-<span class="string">"https://raw.githubusercontent.com/ljtyduyu/DataWarehouse/master/Mapdata/City/110100.json"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>最近把自己所有的关于地图可视化的数据传到了个人Github上，这样无论是大家以后调用数据还是自己平时练习都方便多了！</p>
</blockquote>
<p>以下数据导入json原生数据格式的三种方式：（2,3两种是没啥区别的，但是simplifyVector=FALSE参数设定与否则至关重要，他决定着输入的json数据是经过平整的向量化数据还是原生的list数据，这里的leaflet需要原生格式的json数据）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">geojson1&lt;-fromJSON(url)  <span class="comment">#在同一层级对象长度一致，便会被自动视作数据框。</span></div><div class="line">geojson2&lt;-fromJSON(url,simplifyVector=<span class="literal">FALSE</span>)  <span class="comment">#不强转化为数据框。</span></div><div class="line">geojson3&lt;-readLines(url,warn=<span class="literal">FALSE</span>,encoding=<span class="string">"UTF-8"</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>设置随机中非常必要，否则容易导致每次的效果都不一样：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">1234</span>)</div></pre></td></tr></table></figure></p>
<h3 id="向地图素材中添加作图数据："><a href="#向地图素材中添加作图数据：" class="headerlink" title="向地图素材中添加作图数据："></a>向地图素材中添加作图数据：</h3><p><strong>向list对象中添加数据（随机数据）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">geojson3$features&lt;-lapply(geojson3$features,<span class="keyword">function</span>(feat)&#123;</div><div class="line">feat$properties$scale&lt;-runif(<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>)</div><div class="line">feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>从list对象中读取数据(主要读取我们可做更改与扩展的行政区划列表信息)</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-ldply(geojson3$features,<span class="keyword">function</span>(feat)&#123; </div><div class="line">name&lt;-feat$properties$name</div><div class="line">id&lt;- feat$properties$id</div><div class="line">scale&lt;-as.numeric(feat$properties$scale)</div><div class="line">mydata&lt;-data.frame(name,id,scale)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>Default styles for all features </strong></p>
<blockquote>
<p>it has  higher precedence  compare with  the style in a function of GeoJSON<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">geojson3$style=list(weight=<span class="number">1</span>,color=<span class="string">"#555555"</span>,opacity=<span class="number">1</span>,fillOpacity=<span class="number">0.8</span>)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>Color by scale using quantiles</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pal&lt;-colorQuantile(<span class="string">"Greens"</span>,mydata$scale)</div></pre></td></tr></table></figure></p>
<p><strong>Add a properties$style list to each feature</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">geojson3$features &lt;- lapply(geojson3$features, <span class="keyword">function</span>(feat) &#123;</div><div class="line">  feat$properties$style&lt;-list(</div><div class="line">       fillColor=pal(feat$properties$scale)</div><div class="line">       )</div><div class="line">  feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="关于属性设置的三个优先级："><a href="#关于属性设置的三个优先级：" class="headerlink" title="关于属性设置的三个优先级："></a>关于属性设置的三个优先级：</h3><p><strong>按照由高到低的顺序排列为：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> feature-specific styles <span class="comment">#（也就是设置在 simple featrue的style）</span></div><div class="line"> the top-level style object <span class="comment">#（设置在features中的style）</span></div><div class="line">style-related arguments passed to the <span class="keyword">function</span> <span class="comment">#（设置在GeoJSON内的各种参数）</span></div></pre></td></tr></table></figure></p>
<h3 id="这是通过增加地图图层来进行图层控制的简单案例："><a href="#这是通过增加地图图层来进行图层控制的简单案例：" class="headerlink" title="这是通过增加地图图层来进行图层控制的简单案例："></a>这是通过增加地图图层来进行图层控制的简单案例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image1.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image2.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image3.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>以下这段代码是之前leaflet系列教程的线图篇里面的案例，这里刚好应用一下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.table(<span class="string">"D:/R/File/subwayline.txt"</span>,header=<span class="literal">TRUE</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data$size&lt;-runif(<span class="number">47</span>,<span class="number">10</span>,<span class="number">25</span>)</div><div class="line"></div><div class="line">data$Type&lt;-as.factor(data$Type)</div><div class="line">data1&lt;-filter(data,Type==<span class="string">"NO1"</span>)</div><div class="line">data2&lt;-filter(data,Type==<span class="string">"NO5"</span>)</div><div class="line">pal &lt;- colorFactor(topo.colors(<span class="number">2</span>),data$Type)</div><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>这是一个高度综合的案例，包含底图图层的多分类控制；数据图层的多分类控制以及点线面三种数据图层的综合运用。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"red"</span>,group=<span class="string">"line1"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"orange"</span>,group=<span class="string">"line2"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=<span class="string">"address"</span>,color = <span class="string">"#1843F9"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>,<span class="string">"line1"</span>,<span class="string">"line2"</span>,<span class="string">"address"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image6.png" alt=""></p>
<p>动态视频效果来一波！<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNjU4OTU4MA==" frameborder="0" 'allowfullscreen'=""></iframe></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇教程憋了很久，其实算是3个月前leaflet在线地图系列的进阶篇，但是因为当时对于leaflet地图的数据源结构理解有限，技能勉强操控shp数据源，对于json数据源所知甚少，一直拖了这么久才更新。&lt;/p&gt;
&lt;p&gt;随着近期在json数据结构的理解不断加深，对于list结构和向量化运算的掌握也多有提高，这才能熟练的在leaflet系统中操控json数据。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="json" scheme="http://www.raindu.com/tags/json/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
  </entry>
  
  <entry>
    <title>动态地理信息可视化——leaflet填充地图</title>
    <link href="http://www.raindu.com/2017/06/05/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/05/动态地理信息可视化——leaflet填充地图/</id>
    <published>2017-06-05T01:11:51.000Z</published>
    <updated>2017-06-05T01:26:41.644Z</updated>
    
    <content type="html"><![CDATA[<p>这一篇是leaflet动态地图的第四篇，也是最值得推荐的一篇，这一篇涉及到热力地图填充，通过该篇内容，大家可以体会大leaflet在线地图的R借口在处理热力地图上面颜色标度映射的强大优势。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maps)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(stringi)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(rgdal)</div></pre></td></tr></table></figure>
<h3 id="地图素材加载："><a href="#地图素材加载：" class="headerlink" title="地图素材加载："></a>地图素材加载：</h3><p><strong>（leaflet支持多种地图素材，比如常见的shapefile格式、json格式以及其他在线地图，但是因为json格式本来还没有很熟练，这里用shp格式地图素材为例进行加讲解）。</strong></p>
<p>肯定会有小伙伴儿会问，既然leaflet本身就是在线地图，为啥还要费事儿加载shp地图素材就进行映射，因为leaflet在线地图提供的地图底图本身具有多级缩放特性，每一缩放级别都有对应的行政区划界线，但是这些参数和行政区划是封装在底层的js语言中的，我们无法使用R语言直接进行调用，只能作为一个图层素材进行背景修饰，说白了，其实我们想要的仅仅是多级缩放的动态切换效果，这样再结合我们自定义的地图素材，可以呈现出更加完美的效果。（只有热力填充地图需要定义区域界线，而点图和线图都可以直接利用leaflet本身的地图素材，因为只需要坐标点位置即可）。</p>
<p>我们常用的地图素材资源无非以下三种，R包内置的地图数据、shapefile格式和json格式。以下是三种格式素材导入并在leaflet中制作的地图的基本代码：</p>
<p><strong>maps包:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapStates&lt;-map(<span class="string">"state"</span>,fill=<span class="literal">TRUE</span>,plot=<span class="literal">FALSE</span>)</div><div class="line">leaflet(mapStates) %&gt;% addTiles() %&gt;%addPolygons(fillColor=topo.colors(<span class="number">10</span>,alpha =<span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapWorld&lt;-map(<span class="string">"world"</span>,fill=<span class="literal">TRUE</span>,col=rainbow(<span class="number">200</span>),ylim=c(-<span class="number">60</span>,<span class="number">90</span>),mar=c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</div><div class="line">leaflet(mapWorld) %&gt;% addTiles() %&gt;%addPolygons(fillColor = topo.colors(<span class="number">10</span>, alpha = <span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>shapefile:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">American_map$STATE_NAME = iconv(American_map$STATE_NAME,<span class="string">"UTF8"</span>,<span class="string">"CP936"</span>) </div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%addPolygons(popup=~STATE_NAME,fillColor=topo.colors(<span class="number">10</span>,alpha=<span class="literal">NULL</span>),stroke=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>json文件：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line">geoData&lt;-readLines(<span class="string">"D:/R/mapdata/State/USA.json"</span>,warn=<span class="literal">FALSE</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div><div class="line">geoData$style=list(weight=<span class="number">1</span>,color=<span class="string">"red"</span>,fillColor=<span class="string">"green"</span>,opacity=<span class="number">1</span>,fill=<span class="literal">TRUE</span>,fillOpacity=<span class="number">0.6</span>)</div><div class="line">leaflet()%&gt;%setView(lng=-<span class="number">98.961387</span>,lat=<span class="number">39.708533</span>,zoom=<span class="number">3</span>)%&gt;%addTiles()%&gt;%addGeoJSON(geoData)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image4.png" alt=""></p>
<p>前两种素材作图过程大同小异，特别是一些标度的属性声明很类似ggplot中的函数过程，但是json格式的素材操作起来就不是很友好，他的标度属性是要在数据文件中新建style的list对象进行生命，而且json格式中的list非常多，结构相对复杂，至今我也没完全搞明白如果自由操作。</p>
<h3 id="几张分类颜色标度填充效果："><a href="#几张分类颜色标度填充效果：" class="headerlink" title="几张分类颜色标度填充效果："></a>几张分类颜色标度填充效果：</h3><p>下面是承接上面shapefile格式素材做展现的四中颜色标度（三种连续性标度和一种分类标度的映射过程）。</p>
<p><strong>colorQuantile（连续性数值变量的百分比颜色过度）:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorQuantile(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>以下两种同属连续性数值变量（使用颜色数量不同）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric(多色过度):</div><div class="line">pal&lt;-colorNumeric(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric（单色过度):</div><div class="line">pal&lt;-colorNumeric(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>以下两种也同属连续性数值变量的颜色标度映射</strong></p>
<blockquote>
<p>（但是可以自定义分组数量，其实实质上是对变量分割，后以分组形式填充，更准确的说，确实是应用了变量转换的方式（数值转有序因子），但是过程是自动进行的，而不是像在ggplot中一样不需手动转换）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（单色渐变分组过度):</div><div class="line">pal&lt;-colorBin(<span class="string">"Greens"</span>,American_map@data$POP1990,<span class="number">10</span>)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（多色色渐变分组过度):</div><div class="line">pal&lt;-colorBin(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990,<span class="number">8</span>)</div><div class="line">leaflet(American_map) %&gt;% addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>离散标度：</strong></p>
<blockquote>
<p>（这个例子是用在变量本身就是因子变量的情况下，算是分类变量情况下的颜色标度映射）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">mydata&lt;-read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">mydata$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">33</span>,replace=<span class="literal">TRUE</span>))</div><div class="line">shape &lt;- merge(china_map,mydata,by=<span class="string">"NAME"</span>)</div><div class="line">pal &lt;- colorFactor(c(<span class="string">"green"</span>,<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"yellow"</span>,<span class="string">"brown"</span>), domain = c(<span class="string">"A"</span>, <span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>))<span class="comment">#设置色盘：</span></div><div class="line">i_popup&lt;-paste0(<span class="string">"&lt;strong&gt;Province:&lt;/strong&gt;"</span>,shape$NAME,<span class="string">"&lt;br&gt;"</span>,</div><div class="line"><span class="string">"&lt;strong&gt;Level:&lt;/strong&gt;"</span>,shape$type)</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">设置弹出窗口</div><div class="line">leaflet(shape)%&gt;%addTiles()%&gt;%</div><div class="line"> setView(<span class="number">116.387021</span>,<span class="number">39.969369</span>,zoom=<span class="number">3</span>)%&gt;%</div><div class="line">addPolygons(fillColor=~pal(shape$type),fillOpacity=<span class="number">0.8</span>,color=<span class="string">"#000000"</span>,weight=<span class="number">1</span>,popup=i_popup)%&gt;%</div><div class="line">addLegend(pal=pal,values=shape@data$type,position=<span class="string">"bottomright"</span>,title=paste0(<span class="string">"小魔方基团2016年"</span>,<span class="string">"&lt;br&gt;"</span>,<span class="string">"营业分布等级"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image10.png" alt=""></p>
<p>以上地图效果都支持多节自动缩放和弹窗动态信息显示（需设置popup属性及少量html交互代码）</p>
<p>leaflet在线地图底层由js源码编写，天然支持html语言，如能结合html搭配使用，可以在动态地图元素中，特别是弹窗中无缝嵌入图片、超链接甚至视频等多类元素，感兴趣的小伙伴儿可以自行探索。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一篇是leaflet动态地图的第四篇，也是最值得推荐的一篇，这一篇涉及到热力地图填充，通过该篇内容，大家可以体会大leaflet在线地图的R借口在处理热力地图上面颜色标度映射的强大优势。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="填色地图" scheme="http://www.raindu.com/tags/%E5%A1%AB%E8%89%B2%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>动态地理信息可视化——leaflet构造路径图</title>
    <link href="http://www.raindu.com/2017/06/04/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E6%9E%84%E9%80%A0%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/04/动态地理信息可视化——leaflet构造路径图/</id>
    <published>2017-06-04T01:56:20.000Z</published>
    <updated>2017-06-04T02:08:15.814Z</updated>
    
    <content type="html"><![CDATA[<p>根据先前几篇内容的框架，今天介绍leaflet在线地图的第三篇，以线条元素构造的路径图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(dplyr)</div></pre></td></tr></table></figure>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.table(<span class="string">"D:/R/File/subwayline.txt"</span>,header=<span class="literal">TRUE</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data$Type&lt;-as.factor(data$Type)</div><div class="line">data1&lt;-filter(data,Type==<span class="string">"NO1"</span>)</div><div class="line">data2&lt;-filter(data,Type==<span class="string">"NO5"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上我用百度地图的坐标拾取平台采点拾取的背景地铁一号线和五号线的车站地理位置信息，（因为没有现成的数据，只能手工采点，可能不是很准确）</p>
<h3 id="基本语法解释："><a href="#基本语法解释：" class="headerlink" title="基本语法解释："></a>基本语法解释：</h3><p><strong>今天要介绍的leaflet类型是线条，也即addPolylines函数，其基本语法如下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">addPolylines(map, lng = <span class="literal">NULL</span>,lat = <span class="literal">NULL</span>, <span class="comment">#指定数据源并做经纬度声明</span></div><div class="line">     layerId = <span class="literal">NULL</span>, </div><div class="line">     group = <span class="literal">NULL</span>,  <span class="comment">#图层分组（制作动态可见性交互时使用）</span></div><div class="line">     stroke = <span class="literal">TRUE</span>, <span class="comment">#是否呈现路径线</span></div><div class="line">     color = <span class="string">"#03F"</span>,weight = <span class="number">5</span>,opacity = <span class="number">0.5</span>, <span class="comment">#关于线条的颜色、宽度、透明度 </span></div><div class="line">     fill = <span class="literal">FALSE</span>, fillColor = color, fillOpacity = <span class="number">0.2</span>, </div><div class="line">     dashArray = <span class="literal">NULL</span>, smoothFactor = <span class="number">1</span>, noClip = <span class="literal">FALSE</span>,  <span class="comment">#线型参数，平滑度等</span></div><div class="line">     popup = <span class="literal">NULL</span>, options = pathOptions(), data = getMapData(map)) <span class="comment">#弹窗、选项控制</span></div></pre></td></tr></table></figure>
<h3 id="构造色盘："><a href="#构造色盘：" class="headerlink" title="构造色盘："></a>构造色盘：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorFactor(topo.colors(<span class="number">2</span>),data$Type)</div></pre></td></tr></table></figure>
<h3 id="可视化过程："><a href="#可视化过程：" class="headerlink" title="可视化过程："></a>可视化过程：</h3><h4 id="作图函数：使用默认点标识"><a href="#作图函数：使用默认点标识" class="headerlink" title="作图函数：使用默认点标识"></a>作图函数：使用默认点标识</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addMarkers(data=data,~lon, ~lat,popup = ~address)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image2.png" alt=""></p>
<h4 id="使用可自定义的圆点标识车站位置"><a href="#使用可自定义的圆点标识车站位置" class="headerlink" title="使用可自定义的圆点标识车站位置"></a>使用可自定义的圆点标识车站位置</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image4.png" alt=""></p>
<h4 id="以下是几种比较常用的地图背景素材"><a href="#以下是几种比较常用的地图背景素材" class="headerlink" title="以下是几种比较常用的地图背景素材"></a>以下是几种比较常用的地图背景素材</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  </div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)   </div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    </div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)</div></pre></td></tr></table></figure>
<h4 id="几张常见的素材风格："><a href="#几张常见的素材风格：" class="headerlink" title="几张常见的素材风格："></a>几张常见的素材风格：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldGrayCanvas"</span>) %&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image7.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  %&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image8.png" alt=""></p>
<p>是不是觉得花样不够多呀，那好吧，以下这些，全部都送给你，那好不谢！</p>
<hr>
<ul>
<li>OpenStreetMap.Mapnik</li>
<li>OpenStreetMap.BlackAndWhite</li>
<li>OpenStreetMap.DE</li>
<li>OpenStreetMap.France</li>
<li>OpenStreetMap.HOT</li>
<li>OpenTopoMap</li>
<li>Thunderforest.OpenCycleMap</li>
<li>Thunderforest.Transport</li>
<li>Thunderforest.TransportDark</li>
<li>Thunderforest.SpinalMap</li>
<li>Thunderforest.Landscape</li>
<li>Thunderforest.Outdoors</li>
<li>Thunderforest.Pioneer</li>
<li>OpenMapSurfer.Roads</li>
<li>OpenMapSurfer.Grayscale</li>
<li>Hydda.Full</li>
<li>Stamen.Toner</li>
<li>Stamen.TonerBackground</li>
<li>Stamen.TonerLite</li>
<li>Stamen.Watercolor</li>
<li>Stamen.Terrain</li>
<li>Stamen.TerrainBackground</li>
<li>Stamen.TopOSMRelief</li>
<li>Esri.WorldStreetMap</li>
<li>Esri.DeLorme</li>
<li>Esri.WorldTopoMap</li>
<li>Esri.WorldImagery</li>
<li>Esri.WorldTerrain</li>
<li>Esri.WorldShadedRelief</li>
<li>Esri.WorldPhysical</li>
<li>Esri.OceanBasemap</li>
<li>Esri.NatGeoWorldMap</li>
<li>Esri.WorldGrayCanvas</li>
<li>MtbMap</li>
<li>CartoDB.Positron</li>
<li>CartoDB.PositronNoLabels</li>
<li>CartoDB.PositronOnlyLabels</li>
<li>CartoDB.DarkMatter</li>
<li>CartoDB.DarkMatterNoLabels</li>
<li>CartoDB.DarkMatterOnlyLabels</li>
<li>HikeBike.HikeBike</li>
<li>HikeBike.HillShading</li>
<li>NASAGIBS.ModisTerraTrueColorCR</li>
<li>NASAGIBS.ModisTerraBands367CR</li>
<li>NASAGIBS.ViirsEarthAtNight2012</li>
<li>NASAGIBS.ModisTerraLSTDay</li>
<li>NASAGIBS.ModisTerraSnowCover</li>
<li>NASAGIBS.ModisTerraAOD</li>
<li>NASAGIBS.ModisTerraChlorophyll</li>
</ul>
<hr>
<p>细数也有好几十个，够你玩一阵子了，使用方法仅仅是通过设置图层函数进行调用，然后就可以愉快的在图层上面进行可视化操作了。<br>addProviderTiles(“地图类型”)</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据先前几篇内容的框架，今天介绍leaflet在线地图的第三篇，以线条元素构造的路径图。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="路径图" scheme="http://www.raindu.com/tags/%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
      <category term="mini柱形/条形图" scheme="http://www.raindu.com/tags/mini%E6%9F%B1%E5%BD%A2-%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>动态地理信息可视化——散点地图系列</title>
    <link href="http://www.raindu.com/2017/06/03/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%A3%E7%82%B9%E5%9C%B0%E5%9B%BE%E7%B3%BB%E5%88%97/"/>
    <id>http://www.raindu.com/2017/06/03/动态地理信息可视化——散点地图系列/</id>
    <published>2017-06-03T01:44:35.000Z</published>
    <updated>2017-06-03T02:12:01.630Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇拖了好久的稿子，因为过年玩high了，一直放着没写，今天得空，赶快得空，赶紧整理一下。</p>
<p>本篇主讲leaflet在线地图系列中的散点系列，包含颜色映射规则（离散和连续）、大小映射规则。</p>
<p>其实也就是包含了我们看到的常规的散点图类型和气泡图类型。同时结合leaflet丰富多彩的背景地图主题进行展开。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maps)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(stringi)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<p>为方便展示这里统一使用中国省级行政地图（shp格式导入），在省会城市坐标进行指标数据映射。</p>
<h3 id="地图素材数据导入："><a href="#地图素材数据导入：" class="headerlink" title="地图素材数据导入："></a>地图素材数据导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)      <span class="comment">#中国各省省会坐标</span></div><div class="line">province_city$size&lt;-round(runif(<span class="number">34</span>,<span class="number">5</span>,<span class="number">10</span>),<span class="number">2</span>)                       <span class="comment">#添加连续数值变量</span></div><div class="line">province_city$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">34</span>,replace=<span class="literal">TRUE</span>))  <span class="comment">#添加因子变量以便之后演示</span></div><div class="line">co&lt;-substr(rainbow(<span class="number">34</span>),<span class="number">1</span>,<span class="number">7</span>)</div><div class="line">province_city&lt;-data.frame(province_city,co)</div></pre></td></tr></table></figure>
<h3 id="制作色盘："><a href="#制作色盘：" class="headerlink" title="制作色盘："></a>制作色盘：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorFactor(c(<span class="string">"green"</span>, <span class="string">"red"</span>,<span class="string">"yellow"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>), domain = c(<span class="string">"A"</span>, <span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>))<span class="comment">#因子变量的映射色盘</span></div><div class="line">cPal &lt;- colorNumeric(palette = c(<span class="string">"blue"</span>,<span class="string">"yellow"</span>,<span class="string">"red"</span>),domain =province_city$size)            <span class="comment">#数值型变量的映射色盘</span></div></pre></td></tr></table></figure>
<p>###可视化图形：</p>
<h4 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircleMarkers(lng=~jd,lat=~wd,radius=~size, color = ~co, fill=<span class="literal">TRUE</span>,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image3.png" alt=""></p>
<h4 id="离散标度映射："><a href="#离散标度映射：" class="headerlink" title="离散标度映射："></a>离散标度映射：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircles(lng=~jd,lat=~wd,color = ~pal(type),weight=~size,popup=~city)%&gt;%  </div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=pal,values = ~type,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>) </div><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircleMarkers(lng=~jd,lat=~wd,color = ~pal(type),radius = ~size,fill=<span class="literal">TRUE</span>,popup=~city) </div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=pal,values = ~type,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image4.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image5.png" alt=""></p>
<h4 id="连续标度映射："><a href="#连续标度映射：" class="headerlink" title="连续标度映射："></a>连续标度映射：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% </div><div class="line">addCircles(lng=~jd,lat=~wd,fillColor=~cPal(size),weight=~size,stroke=<span class="literal">FALSE</span>,fillOpacity=<span class="number">0.8</span>,popup=~city)%&gt;%</div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=cPal,values = ~size,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>) </div><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% </div><div class="line">addCircleMarkers(lng=~jd,lat=~wd,fillColor=~cPal(size),radius = ~size,stroke=<span class="literal">FALSE</span>,fillOpacity=<span class="number">0.8</span>,popup=~city)%&gt;%</div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=cPal,values = ~size,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image6.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image7.png" alt=""></p>
<h3 id="几种常见的地图风格主题效果："><a href="#几种常见的地图风格主题效果：" class="headerlink" title="几种常见的地图风格主题效果："></a>几种常见的地图风格主题效果：</h3><h4 id="默认点形状与几种常见的地图主题风格搭配效果："><a href="#默认点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="默认点形状与几种常见的地图主题风格搭配效果："></a>默认点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image8.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image9.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image10.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image11.png" alt=""></p>
<h4 id="实心点形状与几种常见的地图主题风格搭配效果："><a href="#实心点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="实心点形状与几种常见的地图主题风格搭配效果："></a>实心点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image12.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image13.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image14.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image15.png" alt=""></p>
<h4 id="带轮廓的点形状与几种常见的地图主题风格搭配效果："><a href="#带轮廓的点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="带轮廓的点形状与几种常见的地图主题风格搭配效果："></a>带轮廓的点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image16.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image17.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image18.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image19.png" alt=""></p>
<h3 id="可选择的地图类型："><a href="#可选择的地图类型：" class="headerlink" title="可选择的地图类型："></a>可选择的地图类型：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  <span class="comment">#浅色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)    <span class="comment">#深色深色卫星云图</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    <span class="comment">#亮白色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  <span class="comment">#深沉轮廓色</span></div><div class="line">addProviderTiles(<span class="string">"Stamen.Toner"</span>)         <span class="comment">#Third-Party Tiles</span></div><div class="line">addProviderTiles(<span class="string">"Acetate.terrain"</span>)      <span class="comment">#</span></div><div class="line">addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div><div class="line">addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)   <span class="comment">#</span></div></pre></td></tr></table></figure>
<p>本篇点形状是可以支持自定义的，需要使用网络图标资源，但是鉴于步骤和实用性，就此略过，如果感兴趣，可以私下探讨。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇拖了好久的稿子，因为过年玩high了，一直放着没写，今天得空，赶快得空，赶紧整理一下。&lt;/p&gt;
&lt;p&gt;本篇主讲leaflet在线地图系列中的散点系列，包含颜色映射规则（离散和连续）、大小映射规则。&lt;/p&gt;
&lt;p&gt;其实也就是包含了我们看到的常规的散点图类型和气泡图类型。同时结合leaflet丰富多彩的背景地图主题进行展开。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="mini柱形/条形图" scheme="http://www.raindu.com/tags/mini%E6%9F%B1%E5%BD%A2-%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>动态地理信息可视化——leaflet在线地图简介</title>
    <link href="http://www.raindu.com/2017/06/02/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E7%AE%80%E4%BB%8B/"/>
    <id>http://www.raindu.com/2017/06/02/动态地理信息可视化——leaflet在线地图简介/</id>
    <published>2017-06-02T07:14:53.000Z</published>
    <updated>2017-06-02T07:37:17.316Z</updated>
    
    <content type="html"><![CDATA[<p>最近稍微涉猎了一下leaflet这个包，突然感到发现了动态可视化的新大门，这个包所提供的地图类型、动态效果、图层展示方式都大大扩展了ggplot作图系统的在数据地图上的缺陷。</p>
<p>leaflet是业界比较流行的JS开源交互式地图包，它支持直接调用OpenStreetMap, Mapbox, and CartoDB等主流地图数据作为辅助图层来进行地理信息数据的可视化操作。</p>
<a id="more"></a>
<p>除了这些在线地图素材之外，它对于shapefile格式和json格式以及sp包的空间数据格式的地图数据都有着很好的支持，在图层函数中涵盖了点标记、线条和多边形等常用地理信息可视化图形要素。</p>
<p>该包的代码对R语言的文档输出系统有着良好的支持，可以很方便的嵌入knitr/rmarkdown文档中，也能无缝嵌入shiny系统的webapp中，兼容性可称之为逆天。</p>
<p>接下来以中国地图为例，先对该地图所能呈现和调用的地图类型做一个简短的介绍，深入应用系列技巧可能要等到年后才能陆续更新，大小耐心等吧！</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<h3 id="导入中国各省会城市地理信息数据："><a href="#导入中国各省会城市地理信息数据：" class="headerlink" title="导入中国各省会城市地理信息数据："></a>导入中国各省会城市地理信息数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>) </div><div class="line">province_city$size&lt;-round(runif(<span class="number">34</span>,<span class="number">5</span>,<span class="number">10</span>),<span class="number">2</span>)</div><div class="line">province_city$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">34</span>,replace=<span class="literal">TRUE</span>))</div><div class="line">co&lt;-substr(rainbow(<span class="number">34</span>),<span class="number">1</span>,<span class="number">7</span>)</div><div class="line">province_city&lt;-data.frame(province_city,co)</div></pre></td></tr></table></figure>
<h3 id="leaflet函数的基本语法结构如下："><a href="#leaflet函数的基本语法结构如下：" class="headerlink" title="leaflet函数的基本语法结构如下："></a>leaflet函数的基本语法结构如下：</h3><p><strong>该句加载地图数据，也可以说是对地图的初始化操作，相当于ggplot2作图系统中的ggplot（）函数，会建立一个没有内容的空白图层面板。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m&lt;-leaflet(data=province_city)</div></pre></td></tr></table></figure></p>
<p><strong>该句设定所要展示的图层中心位置，参数为带有数据的地图图层、经纬度信息以及呈现的缩放级别（3~9级不等）。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setView(m,lng=<span class="number">116.38</span>,lat=<span class="number">39.9</span>,zoom=<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<p><strong>该句会自动调用一个默认的地图图层作为页面底图。其实是一个图层函数，相当于ggplot系统的geom_XXX对象。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m&lt;-addTiles(m)</div></pre></td></tr></table></figure></p>
<p><strong>该句也是一个图层对象函数，主要呈现点对象信息，点标识为常见的雨滴形状，当然也可以进行自定义。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">addMarkers(m,lng=~jd,lat=~wd,popup=~city) <span class="comment">#地标符号</span></div></pre></td></tr></table></figure></p>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上四局代码会制作出一个以province_city为数据源、以(116.38,39.9)为视觉中心，缩放级别为3级，点标识对象为city的中国行政地图出来。</p>
<p>而且图表原生支持动态操作，你可以使用鼠标滚轮进行放大缩小操作（也可以使用页面左上角的加减号进行操作），每一个点标识都是支持鼠标点击显示弹窗信息的。（弹窗信息中支持定义文本、图片、视频、超链接，当然这些需要对html语言有一定的操作经验）。</p>
<p>该函数的另一大特色是，原生支持管道函数操作，让你的代码简洁、易懂、高效。（很多R函数是需要打开dplyr包并借助其完成对于管道函数的支持）。</p>
<p><strong>以上例子我们可以完全使用管道操作函数进行代码简化。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;%setView(lng=<span class="number">116.38</span>,lat=<span class="number">39.9</span>,zoom=<span class="number">3</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure></p>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image2.png" alt=""></p>
<p>leaflet函数支持的点有三类（我所知的），默认的是雨滴形状（addMarkers），还有两种分别是addCircle、addCircleMarkers。</p>
<p>addCircle是实心点，只有一个颜色属性，addCircleMarkers是带轮廓的圆点，可以分别对轮廓和内园进行颜色设定，两者都支持大小（面积）映射。</p>
<p>当然剩余两种最为常见的地图图层属性就是线和面了，这是物理空间的重要三要素嘛</p>
<ul>
<li>点图层：addMarkers\addCircle\addCircleMarkers</li>
<li>线图层:addPolylines</li>
<li>面图层：addPolygons</li>
</ul>
<p>其实这些对象和ggplot中的图层对象对应的很完整，geom_point()\geom_line\geom_polygon</p>
<p>除此之外，无外乎颜色映射参数、图例参数等。</p>
<p>颜色映射对于数据地图而言是最复杂也最为重要的视觉对象，毕竟你的目光中要有很大一部分数据墨水比是由色彩来呈现的，但是小魔方再在前讲解ggplot数据地图系列的时候已经讲解过非常详细的颜色映射规则。</p>
<p>针对数据地图而言，颜色映射要依据数据类型而定，数值型变量（包含定距变量、定比变量）需要使用连续渐变色进行映射，因子变量（包含分类及有序）需要使用分类色、或者同色系的离散渐变进行颜色映射。</p>
<p>在leaflet函数中对颜色进行了非常精准和高效的分类。</p>
<ol>
<li><p>用于连续数值的：colorNumeric，colorBin和colorQuantile;</p>
</li>
<li><p>用于分类输入，colorFactor。</p>
<ul>
<li>colorNumeric：针对数值变量进行均匀插值，将颜色（定义的）连续均匀分布在数值区间内。</li>
<li>colorBin：针对数值型变量进行数量段的分组，然后按照组别分别填色。（其实相当于对数值型变量进行划组，生成有序的因子组，然后以分段因子变量的形式进行颜色映射，但是这个过程在leaflet函数中是自动化完成的，无需我们手工生成新变量，这一点儿是leaflet函数相对于ggplot函数在制作数据地图方面的重要优势）。</li>
<li>colorQuantile：也是针对数值型变量，只是是以百分比分位点的形式将数值变量划分为一组百分比分位点区间（其实理念和过程与colorBin一致，只是从绝对量分组变成了百分比分组），然后进行颜色映射。</li>
<li>colorFactor：这个就是单纯的分类变量（因子或者有序）映射的颜色设置方式。</li>
</ul>
</li>
</ol>
<p><strong>图例对象：</strong><br>addLegend：是添加图例的图层对象，相当于ggplot中的guilde函数。</p>
<p>接来下给大家大致展现以下leaflet所能呈现的最为常见的几种风格地图样式。</p>
<p>###你地图可视化类型：</p>
<p><strong>地图类型：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  <span class="comment">#浅色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)    <span class="comment">#深色深色卫星云图</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    <span class="comment">#亮白色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  <span class="comment">#深沉轮廓色</span></div><div class="line">addProviderTiles(<span class="string">"Stamen.Toner"</span>)         <span class="comment">#Third-Party Tiles</span></div><div class="line">addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div><div class="line">addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)   <span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addTiles() <span class="comment">#默认风格</span></div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image7.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Stamen.Toner"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image9.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image10.png" alt=""></p>
<p>限于字数和篇幅，本篇不宜再写下去了（主要小编太困了，上下眼皮打架，已经困得不行了）</p>
<p>关于leaflet内容，年前先暂时先更新这一篇（如果回家还有时间的话，也许继续更新）。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近稍微涉猎了一下leaflet这个包，突然感到发现了动态可视化的新大门，这个包所提供的地图类型、动态效果、图层展示方式都大大扩展了ggplot作图系统的在数据地图上的缺陷。&lt;/p&gt;
&lt;p&gt;leaflet是业界比较流行的JS开源交互式地图包，它支持直接调用OpenStreetMap, Mapbox, and CartoDB等主流地图数据作为辅助图层来进行地理信息数据的可视化操作。&lt;/p&gt;
    
    </summary>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/categories/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="在线地图" scheme="http://www.raindu.com/tags/%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="leaflet" scheme="http://www.raindu.com/tags/leaflet/"/>
    
      <category term="mini柱形/条形图" scheme="http://www.raindu.com/tags/mini%E6%9F%B1%E5%BD%A2-%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>玩转数据地图系列之——地图上的迷你条形图</title>
    <link href="http://www.raindu.com/2017/06/02/%E7%8E%A9%E8%BD%AC%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%B3%BB%E5%88%97%E4%B9%8B%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8A%E7%9A%84%E8%BF%B7%E4%BD%A0%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/02/玩转数据地图系列之——地图上的迷你条形图/</id>
    <published>2017-06-02T07:01:58.000Z</published>
    <updated>2017-06-02T07:13:21.251Z</updated>
    
    <content type="html"><![CDATA[<p>最近忙的厉害，产量下降的有点严重，感谢各位还没取关的小伙伴儿。</p>
<p>一周前更新了一篇数据地图上的气泡散点图的内容，不知怎地，这段时间就是跟地图死磕上了，今天还是数据地图，不过是在数据地图上呈现条形图、柱形图。</p>
<a id="more"></a>
<p>之前的一篇因为有现成的作图包支持，geom_scatterpie函数不用花费太大力气就解决了数据地图上的气泡散点图问题。</p>
<p>可是到目前为止我还没有发现支持对应坐标位置的条形图、柱形图，这一篇是参考了知乎上大神提供的思路。</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(ggmap)</div></pre></td></tr></table></figure>
<h3 id="导入地图素材及省会城市经纬度数据"><a href="#导入地图素材及省会城市经纬度数据" class="headerlink" title="导入地图素材及省会城市经纬度数据"></a>导入地图素材及省会城市经纬度数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_shp &lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)    </div><div class="line">china_map &lt;- fortify(china_shp)     </div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>) <span class="comment">#城市经纬度数据</span></div></pre></td></tr></table></figure>
<p><strong>新建三个指标，2015年和2016年的某经济度量指标（虚构）N15、N16和环比增长率Ratio。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">province_city1&lt;-mutate(province_city,N15=runif(<span class="number">34</span>,min=<span class="number">500</span>,max=<span class="number">1000</span>),N16=runif(<span class="number">34</span>,<span class="number">600</span>,<span class="number">1100</span>),Ratio=round((N16-N15)/N15,<span class="number">3</span>))</div><div class="line">province_data&lt;-province_city1[sample(nrow(province_city1),<span class="number">10</span>),]</div></pre></td></tr></table></figure>
<p>合并后的数据结构如下，随即选取了10个城市的14、15年度某项经济指标（虚构）以及同比增长率。</p>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image1.png" alt=""></p>
<p>ggplot的现有图层图形中是没有直接根据点坐标生成条形图、柱形图的，所以这里我们只能曲线救国，使用线条图和误差线来进行模拟。</p>
<h3 id="首先来画底图："><a href="#首先来画底图：" class="headerlink" title="首先来画底图："></a>首先来画底图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat, group=group), data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image2.png" alt=""></p>
<blockquote>
<p>接下来使用geom_linerange函数（也就是条线图函数）进行各个坐标点的模拟柱形绘制。</p>
</blockquote>
<h3 id="画出14年的指标值："><a href="#画出14年的指标值：" class="headerlink" title="画出14年的指标值："></a>画出14年的指标值：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">5</span>,color=<span class="string">"orange"</span>,alpha=<span class="number">0.8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="再叠加一次16年的指标值"><a href="#再叠加一次16年的指标值" class="headerlink" title="再叠加一次16年的指标值"></a>再叠加一次16年的指标值</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,alpha=<span class="number">0.8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image4.png" alt=""></p>
<h3 id="接下来我们来对已经塑造好的双柱条形图进行美化操作，"><a href="#接下来我们来对已经塑造好的双柱条形图进行美化操作，" class="headerlink" title="接下来我们来对已经塑造好的双柱条形图进行美化操作，"></a>接下来我们来对已经塑造好的双柱条形图进行美化操作，</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd,y=wd-<span class="number">0.6</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">8</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">49</span>, label=<span class="string">"● 2016"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image5.png" alt=""></p>
<blockquote>
<p>其实最初在网上看到该图（大概是刘万祥老师的博客，在此感谢老师的启发），他的做法是使用geom_errbar图层函数，也就是误差线图层函数，其实理念是一致的。这里给出原方法。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_errorbar(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,width=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_errorbar(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,width=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd,y=wd-<span class="number">0.6</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2014"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">8</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">49</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">8</span>)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image6.png" alt=""></p>
<p>其实如果能换个思路，使用geom_errorh函数，想必一定了以做出横向的条形图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_errorbarh(data=province_data,aes(x=jd,y=wd,xmin=jd-<span class="number">3</span>,xmax=jd+<span class="number">3</span>*N15/max(N15,N16)),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,height=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_errorbarh(data=province_data,aes(x=jd,y=wd-<span class="number">0.8</span>,xmin=jd-<span class="number">3</span>,xmax=jd+<span class="number">3</span>*N16/max(N15,N16)),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,height=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd+<span class="number">0.2</span>,y=wd+<span class="number">1</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">7</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">50</span>, label=<span class="string">"● 2016"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">7</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上思路仅供大家大家参考，就像伟大的哈德利.威科姆所说的一样，ggplot只是给你了一个发挥想象力的空间，无拘无束的发挥想象力，总能创造出令人惊讶的作品。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近忙的厉害，产量下降的有点严重，感谢各位还没取关的小伙伴儿。&lt;/p&gt;
&lt;p&gt;一周前更新了一篇数据地图上的气泡散点图的内容，不知怎地，这段时间就是跟地图死磕上了，今天还是数据地图，不过是在数据地图上呈现条形图、柱形图。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="mini柱形/条形图" scheme="http://www.raindu.com/tags/mini%E6%9F%B1%E5%BD%A2-%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>玩转R语言数据地图——地图上的迷你气泡饼图</title>
    <link href="http://www.raindu.com/2017/06/02/%E7%8E%A9%E8%BD%ACR%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8A%E7%9A%84%E8%BF%B7%E4%BD%A0%E6%9F%B1%E5%BD%A2%E9%A5%BC%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/06/02/玩转R语言数据地图——地图上的迷你柱形饼图/</id>
    <published>2017-06-02T01:33:33.747Z</published>
    <updated>2017-06-02T07:02:49.852Z</updated>
    
    <content type="html"><![CDATA[<p>这个周末刷微信的时候，偶然看到一篇关于R语言12月更新包的介绍，翻到底部看了一眼，刚好看到一个关于ggplot2的一个图层插件——geom_scatterpie。</p>
<p>这个包安装之后，可以提供给ggplot新的图层函数，并制作出气泡状饼图，饼图可以分类填色，饼图大小可以映射数值变量，特别是将这种图表形式引入地图之中，那么最终呈现的地图上的气泡饼图非常炫酷。</p>
<p>今天刚好整理了下完整思路，顺便分享。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(scatterpie)</div><div class="line">world_map &lt;-readShapePoly(<span class="string">"c:/rstudy/wold_map/World_region.shp"</span>)</div><div class="line">x &lt;- world_map@data  </div><div class="line">xs &lt;- data.frame(x,id=seq(<span class="number">0</span>:<span class="number">250</span>)-<span class="number">1</span>)  </div><div class="line">world_map1 &lt;- fortify(world_map)  </div><div class="line">world_map_data &lt;- join(world_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata&lt;-read.xlsx(<span class="string">"D:/R/File/WorldGDP.xlsx"</span>,sheetName=<span class="string">"Sheet1"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>这里我使用2015年全球主要发达国家（15）的GDP、三大产业产比数据来演示此案例，GDP代表气泡图大小、三大产业占比用每一个气泡图的饼图份额占比来表示。</p>
</blockquote>
<h3 id="计算全球各国行政区划中心点："><a href="#计算全球各国行政区划中心点：" class="headerlink" title="计算全球各国行政区划中心点："></a>计算全球各国行政区划中心点：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(x) mean(range(x,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(world_map_data,.(COUNTRY),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure>
<h3 id="匹配目标国家行政区划中心点："><a href="#匹配目标国家行政区划中心点：" class="headerlink" title="匹配目标国家行政区划中心点："></a>匹配目标国家行政区划中心点：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mapdata&lt;-merge(centres,mydata,by.x=<span class="string">"COUNTRY"</span>,by.y=<span class="string">"FULLName"</span>,all.y=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><strong>利用ggplot2函数结合scatterpie图层对象进行空间数据映射。</strong></p>
<h3 id="修正局部经纬度坐标："><a href="#修正局部经纬度坐标：" class="headerlink" title="修正局部经纬度坐标："></a>修正局部经纬度坐标：</h3><p>因为GDP数据量级太大，我将其折算成5~10之间的标准数，用于映射气泡半径。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mapdata$order&lt;-as.factor(mapdata$order)</div><div class="line">mapdata$point&lt;-<span class="number">5</span>*mapdata$GDP/max(mapdata$GDP)+<span class="number">5</span></div><div class="line">value&lt;-names(mapdata)[<span class="number">8</span>:<span class="number">10</span>]</div><div class="line">mapdata[<span class="number">1</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">77.013222</span>,<span class="number">38.913611</span>) <span class="comment">#华盛顿</span></div><div class="line">mapdata[<span class="number">2</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">2.329671</span>,<span class="number">48.871029</span>)    <span class="comment">#巴黎</span></div><div class="line">mapdata[<span class="number">3</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">0.124969</span>,<span class="number">51.516434</span>)   <span class="comment">#伦敦</span></div><div class="line">mapdata[<span class="number">4</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">12.496336</span>,<span class="number">41.91076</span>)    <span class="comment">#罗马</span></div><div class="line">mapdata[<span class="number">5</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">4.882042</span>,<span class="number">52.372936</span>)    <span class="comment">#阿姆斯特丹</span></div><div class="line">mapdata[<span class="number">6</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">3.704783</span>,<span class="number">40.421502</span>)   <span class="comment">#马德里</span></div><div class="line">mapdata[<span class="number">7</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">139.650947</span>,<span class="number">35.833005</span>)   <span class="comment">#东京</span></div><div class="line">mapdata[<span class="number">8</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">13.407002</span>,<span class="number">52.527935</span>)   <span class="comment">#柏林</span></div><div class="line">mapdata[<span class="number">9</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">8.45468</span>,<span class="number">47.440827</span>)     <span class="comment">#苏黎世</span></div><div class="line">mapdata[<span class="number">11</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">149.116199</span>,-<span class="number">35.315167</span>)  <span class="comment">#墨尔本</span></div><div class="line">mapdata[<span class="number">12</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">43.264882</span>,-<span class="number">22.895071</span>) <span class="comment">#里约热内卢</span></div><div class="line">mapdata[<span class="number">15</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">99.129758</span>,<span class="number">19.449516</span>)  <span class="comment">#墨西哥城</span></div></pre></td></tr></table></figure>
<p>因为有些国家的领土中含有远离本图的海洋小岛（可能是殖民时代的产物），导致所取的领土中心位置已经严重偏离本土，所以我更改了几个国家首府的经纬度。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map_data,aes(x=long, y=lat,group=group)) +</div><div class="line"> geom_polygon(fill=<span class="string">"white"</span>, color=<span class="string">"grey"</span>)+</div><div class="line"> geom_scatterpie(data=mapdata,aes(x=long, y=lat,group=order,r=point),cols=value,color=<span class="literal">NA</span>, alpha=<span class="number">.8</span>) +</div><div class="line"> coord_equal()+</div><div class="line"> geom_scatterpie_legend(mapdata$point, x=-<span class="number">160</span>, y=-<span class="number">55</span>)+</div><div class="line"> scale_fill_wsj()+</div><div class="line"> theme_nothing(legend=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwcd2a2i.bkt.clouddn.com/image1.png" alt=""></p>
<p><strong>除此之外，你可以可以使用maps包内置的世界地图，这样省去了自己自己加载并整理地图素材数据的麻烦：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">world &lt;- map_data(<span class="string">'world'</span>)</div><div class="line">    ggplot(world, aes(long, lat,group=group)) +</div><div class="line">    geom_polygon(fill=<span class="string">"white"</span>, color=<span class="string">"grey"</span>)+</div><div class="line">    geom_scatterpie(data=mapdata,aes(x=long, y=lat,group=order,r=point),cols=value,color=<span class="literal">NA</span>, alpha=<span class="number">.8</span>) +</div><div class="line">    coord_equal()+</div><div class="line">    geom_scatterpie_legend(mapdata$point, x=-<span class="number">160</span>, y=-<span class="number">55</span>)+</div><div class="line">    scale_fill_wsj()+</div><div class="line">    theme_nothing(legend=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwcd2a2i.bkt.clouddn.com/image2.png" alt=""></p>
<p>使用maps包的地图好处是，地图数据是打包封装过的，处理效率比较高，自定义导入的shp格式地图数据需要手动进行各种操作，处理速度非常慢，建议大家尝试。</p>
<p>两幅图带图没有太大差别，导入的shp全球地图是不带南极洲的，但是maps中的世界地图是带有的。</p>
<p>该包的开发者是香港大学的Gangchuang Yu ，12月刚上线不久，下面网址是作者关于该包使用的一个小case，感兴趣可以参考。<br><a href="https://cran.r-project.org/web/packages/scatterpie/vignettes/scatterpie.html" target="_blank" rel="external">Gangchuang Yu</a></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个周末刷微信的时候，偶然看到一篇关于R语言12月更新包的介绍，翻到底部看了一眼，刚好看到一个关于ggplot2的一个图层插件——geom_scatterpie。&lt;/p&gt;
&lt;p&gt;这个包安装之后，可以提供给ggplot新的图层函数，并制作出气泡状饼图，饼图可以分类填色，饼图大小可以映射数值变量，特别是将这种图表形式引入地图之中，那么最终呈现的地图上的气泡饼图非常炫酷。&lt;/p&gt;
&lt;p&gt;今天刚好整理了下完整思路，顺便分享。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="地理信息可视化" scheme="http://www.raindu.com/tags/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="mini饼图" scheme="http://www.raindu.com/tags/mini%E9%A5%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——用数据来聊聊国产电影~</title>
    <link href="http://www.raindu.com/2017/06/01/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8%E6%95%B0%E6%8D%AE%E6%9D%A5%E8%81%8A%E8%81%8A%E5%9B%BD%E4%BA%A7%E7%94%B5%E5%BD%B1/"/>
    <id>http://www.raindu.com/2017/06/01/R语言可视化——用数据来聊聊国产电影/</id>
    <published>2017-06-01T00:57:19.000Z</published>
    <updated>2017-06-01T08:11:45.387Z</updated>
    
    <content type="html"><![CDATA[<p>最近国产电影评分风波引起了很多人的关注，豆瓣和猫眼因国产电影评分过低此被电影局约谈了，猫眼电影还因此下线了自己的电影评分系统，作为好奇宝宝，小魔方也来凑一波热闹。</p>
<p>当然今天不是要谈政治啦，刚好最近在学爬虫，那就爬一点儿官产电影的数据，用数据告诉大家，国产电影的真实处境。。（受限于技术手段和代码水平，数据不全，分析过程不敢保证精准，仅作为个人练习使用，请谨慎使用）。</p>
<a id="more"></a>
<h3 id="以下是本文所使用的一些依赖包："><a href="#以下是本文所使用的一些依赖包：" class="headerlink" title="以下是本文所使用的一些依赖包："></a>以下是本文所使用的一些依赖包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(data.table)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure>
<h3 id="爬虫过程："><a href="#爬虫过程：" class="headerlink" title="爬虫过程："></a>爬虫过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">'https://movie.douban.com/tag/中国大陆?start='</span></div><div class="line">final &lt;- data.frame()</div><div class="line"><span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:<span class="number">99</span>)&#123;</div><div class="line">fun&lt;-<span class="keyword">function</span>(m)&#123;</div><div class="line">url&lt;-paste(url,(m-<span class="number">1</span>)*<span class="number">20</span>,<span class="string">"&amp;type=T"</span>,sep=<span class="string">''</span>)</div><div class="line">web&lt;-read_html(url,encoding=<span class="string">"UTF-8"</span>)</div><div class="line">Name&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)&gt;div.pl2&gt;a"</span>)%&gt;% html_text()%&gt;%str_trim()</div><div class="line">Abstract&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)&gt;div.pl2&gt;p.pl"</span>)%&gt;% html_text()%&gt;%str_trim()</div><div class="line">Point&lt;-web %&gt;% html_nodes(<span class="string">"div.star.clearfix&gt;span.rating_nums"</span>)%&gt;%html_text()%&gt;%as.numeric()</div><div class="line">Value&lt;-web %&gt;% html_nodes(<span class="string">"div.star.clearfix&gt;span.pl"</span>)%&gt;%html_text()%&gt;%as.character()</div><div class="line">final&lt;-data.frame(Name=Name[<span class="number">1</span>:<span class="number">20</span>],Abstract=Abstract[<span class="number">1</span>:<span class="number">20</span>],Point=Point[<span class="number">1</span>:<span class="number">20</span>],Value=Value[<span class="number">1</span>:<span class="number">20</span>])</div><div class="line">&#125;</div><div class="line">final&lt;-rbind(final,fun(m))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">final$Name&lt;-sub(<span class="string">"\n"</span>,<span class="string">""</span>,final$Name)</div><div class="line">final$Name&lt;-sub(<span class="string">"/"</span>,<span class="string">""</span>,final$Name)</div><div class="line">final$Name&lt;-sub(<span class="string">" "</span>,<span class="string">""</span>,final$Name)</div><div class="line">final&lt;-final[<span class="number">1</span>:<span class="number">1961</span>,]</div></pre></td></tr></table></figure>
<blockquote>
<p>一共爬取了1961条有效电影记录（不知道这个数量是否能够涵盖16年所有公开上映的国产电影数量，其中可能混杂一些影视剧和娱乐节目）。</p>
</blockquote>
<h3 id="数据清洗："><a href="#数据清洗：" class="headerlink" title="数据清洗："></a>数据清洗：</h3><p><strong>以下通过则这匹配提取了各部电影的上映具体日期：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m&lt;-regexpr(<span class="string">"\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;"</span>,final$Abstract,perl=<span class="literal">TRUE</span>)</div><div class="line">final$Date&lt;-substring(final$Abstract,m,m+attr(m,<span class="string">"match.length"</span>)-<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><strong>提取出评价人数数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m1&lt;-regexpr(<span class="string">"\\d+"</span>,final$Value,perl=<span class="literal">TRUE</span>)</div><div class="line">final$Value&lt;-substring(final$Value,m1,m1+attr(m1,<span class="string">"match.length"</span>)-<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><strong>清除掉电影剧情及演员介绍信息中的无关信息：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">final$Abstract&lt;-gsub(<span class="string">"\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"(\\(中国大陆\\)|\\(美国\\)|\\(台湾\\)|\\(香港\\)|\\(荷兰\\))"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"((\\d&#123;4&#125;-\\d&#123;2&#125;)|(\\d+分钟)|\\(.*?电影节\\)|\\(公映版\\)|汉语普通话)"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"\\/"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"(中国大陆|香港|法国|美国)"</span>,<span class="string">""</span>,final$Abstract)</div></pre></td></tr></table></figure></p>
<p><strong>预览数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DT::datatable(final)</div></pre></td></tr></table></figure></p>
<p><strong>以下过程将电影的详情介绍信息（包含类型、剧情及演员相关信息）做了分词处理，以便后续进行词云可视化：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-paste(final$Abstract,collapse=<span class="string">" "</span>)</div><div class="line">temp1 &lt;- str_split(newdata,<span class="string">' '</span>)</div><div class="line">temp1&lt;-temp1[[<span class="number">1</span>]]</div><div class="line">temp1&lt;-gsub(<span class="string">"\\.&#123;3&#125;"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp1&lt;-gsub(<span class="string">"[a-zA-Z]&#123;2,&#125;"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp1&lt;-grep(<span class="string">"\\S"</span>,temp1,value=<span class="literal">T</span>)</div><div class="line"></div><div class="line">count1&lt;-count(temp1)</div><div class="line">count1$x&lt;-as.character(count1$x)</div><div class="line">mydata&lt;-filter(count1,nchar(x)&gt;=<span class="number">2</span>,freq&gt;=<span class="number">37</span>,x!=<span class="string">"()"</span>)</div></pre></td></tr></table></figure>
<h3 id="数据可视化过程："><a href="#数据可视化过程：" class="headerlink" title="数据可视化过程："></a>数据可视化过程：</h3><p><strong>加载词云包，可视化电影类型及高频出境电影明星的词频可视化：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(wordcloud2)</div><div class="line">wordcloud2(mydata, size = <span class="number">2</span>, fontFamily = <span class="string">"微软雅黑"</span>,minRotation = -pi/<span class="number">6</span>, maxRotation = -pi/<span class="number">6</span>,rotateRatio = <span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image1.png" alt="image1"></p>
<p>所有电影类型中，排在前五位的是：剧情片、爱情片、喜剧片、动作片、纪录片。纪录片的上映率这么高吗，感觉有点难以置信。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#提取并清洗电影演员及明星的出镜率词频数据：</span></div><div class="line">temp2&lt;-gsub(<span class="string">"[\\((][\\s\\S]*[\\))]"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp2&lt;-gsub(<span class="string">"\\d+"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp2&lt;-grep(<span class="string">"\\S"</span>,temp2,value=<span class="literal">T</span>)</div><div class="line"></div><div class="line">count2&lt;-count(temp2)</div><div class="line">count2&lt;-count2[-c(<span class="number">1</span>:<span class="number">107</span>),]</div><div class="line">count2$l&lt;-count2$x %<span class="keyword">in</span>% mydata$x </div><div class="line">mydata2&lt;-filter(count2,l==<span class="literal">FALSE</span>)</div><div class="line">mydata2&lt;-mydata2[-c(<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>),]</div><div class="line">mydata2&lt;-mydata2[,<span class="number">1</span>:<span class="number">2</span>]</div></pre></td></tr></table></figure>
<p><strong>电影参演明星及演员可视化词云</strong><br>wordcloud2(mydata2, size =.3,fontFamily = “微软雅黑”,color = “random-light”, backgroundColor = “grey”,shape = ‘star’)</p>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image2.png" alt="image2"></p>
<blockquote>
<p>排在前十位的电影明星分别是：范爷、黄晓明、周迅、黄渤、刘桦、邓超、佟大为、李晨、曾志伟、杨幂。</p>
</blockquote>
<p><strong>前三十的电影明星如下:</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata2&lt;-filter(mydata2,x!=<span class="string">"音乐"</span>,x!=<span class="string">"日本"</span>,x!=<span class="string">"日语"</span>)</div><div class="line">mydata3&lt;-mydata2[order(-mydata2$freq),][<span class="number">1</span>:<span class="number">30</span>,]</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot(mydata3,aes(reorder(x,freq),freq))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(freq+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影最频繁出境明星"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image3.png" alt="image3"></p>
<blockquote>
<p>以上是通过对各部电影的详情描述进行分词所获得的电影类型及明星出镜率分析，接下来我们回到最初的数据集，对各部电影的评分评价分数以及上映年份进行更为详细的可视化分析。（为啥冯导可以与范爷并驾齐驱，可能是因为导演的电影比较多，这里爬的时候没有区分出来）</p>
</blockquote>
<p><strong>国产电影上映年份、季度、月份、周度</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lubridate)</div><div class="line">final$Date&lt;-as.Date(final$Date) </div><div class="line">final$Year&lt;-year(final$Date)</div><div class="line">final$Month&lt;-month(final$Date)</div><div class="line">final$Week&lt;-week(final$Date)</div><div class="line">final$Quarter&lt;-quarter(final$Date)</div></pre></td></tr></table></figure>
<blockquote>
<p>以上通过超级好用的时间处理函数lubridate，整理出了所有影片上映的日期的年份、月份、季度、周等时间信息，接下来我们用这四个时间维度分别对电影的评分数据、评论数据进行精细化分析。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">datayear&lt;-data.frame(with(final,table(Year)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">datayear$Year&lt;-as.numeric(as.character(datayear$Year))</div><div class="line">ggplot(datayear,aes(Year,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">xlim(<span class="number">2000</span>,<span class="number">2017</span>)+</div><div class="line">ggtitle(<span class="string">"国产电影上映年份频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image4.png" alt="image4"></p>
<blockquote>
<p>因为抓取的电影上映年份以16年居多，所以16年是个高峰不足为奇，17年刚过去一周多，数量自然少一些。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">dataquarter&lt;-data.frame(with(final,table(Quarter)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">dataquarter$Quarter&lt;-as.numeric(as.character(dataquarter$Quarter))</div><div class="line">ggplot(dataquarter,aes(Quarter,Freq))+geom_bar(stat=<span class="string">"identity"</span>,fill=<span class="string">"steelblue"</span>)+</div><div class="line">ggtitle(<span class="string">"国产电影上映季度频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image11.png" alt="image11"></p>
<blockquote>
<p>从季度上来看，3、4季度上映上映最为频繁，可能是暑期档接着和贺岁档，时间段比较特殊。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">datamonth&lt;-data.frame(with(final,table(Month)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">datamonth$Month&lt;-as.numeric(as.character(datamonth$Month))</div><div class="line">ggplot(datamonth,aes(Month,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">scale_x_continuous(breaks=seq(<span class="number">0</span>,<span class="number">12</span>,<span class="number">1</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影上映月份频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image5.png" alt="image5"></p>
<blockquote>
<p>从月度数据上来看，也验证了季度数据的趋势，其中第三季度的高峰在9月（算是暑期的尾巴吧），第四季度高峰在12月（年末岁尾的最电影最火了）。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">dataweek&lt;-data.frame(with(final,table(Week)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">dataweek$Week&lt;-as.numeric(as.character(dataweek$Week))</div><div class="line"></div><div class="line">ggplot(na.omit(dataweek),aes(Week,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">scale_x_continuous(breaks=seq(<span class="number">0</span>,<span class="number">52</span>,<span class="number">1</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影上映周分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image6.png" alt="image6"></p>
<blockquote>
<p>周度数据也非常有趣，第7周、29周、36、37周、45周和51周出现了几个特高点，基本都超过40部/月的量级，也是与月度上映数据吻合。</p>
</blockquote>
<p><strong>接下来分析一下评分最高和最低的十部国产影片：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">datapointtop&lt;-final[order(-final$Point),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line">ggplot(datapointtop,aes(reorder(Name,Point),Point))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Point+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影评分最高TOP15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image7.png" alt="image7"></p>
<blockquote>
<p>这次真的有点惊讶了，数据显示（仅限所抓取的数据，未覆盖全，并不代表真实情况），评分最高的一部国产剧是老农民，评分高达9.7，从名字上来看挺挺朴实的一部剧，不过我好想没有看过，有空要补脑一下。</p>
<p>评分最高的电影有一个趋势，选材和主题都偏现实和文化类，我觉得这是一个好的现象，能体现电影写实性和文化传承的效果，虽然这样的剧本和影片，可能很多小伙伴不愿意付费去看。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">datapointbot&lt;-final[order(final$Point),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line">ggplot(datapointbot,aes(reorder(Name,Point),Point))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Point+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影评分最低BOT"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image8.png" alt="image8"></p>
<blockquote>
<p>评分最低的一部是心理罪，仅为2.1，而且评分最低的几部好像也不是大家耳熟能详的名字，好吧突然看到了16年的央视春晚，我能说我已经不看春晚好多年了吗！（实在不好意思，本来是想抓电影的，不知道为啥央视春晚要出来捣乱，肯定是走错片场了~）</p>
<p>以各部电影评价人数多少作为该作品关注度指标，我们可以统计最受关注的电影和最不受关注的电影榜单。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">final$Value&lt;-as.numeric(final$Value)</div><div class="line">dataValuetop15&lt;-final[order(-final$Value),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line"></div><div class="line">ggplot(dataValuetop15,aes(reorder(Name,Value),Value))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Value+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影关注度最高TOP15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image9.png" alt="image9"></p>
<blockquote>
<p>关注度最高的一步电影是《让子弹飞》，好吧竟然是好你年前的一步老电影，获评570641。前十名中我看到了《少年派的奇幻漂流》、《大话西游之大圣娶亲》、《人在囧途之泰囧》、《老炮》、《美人鱼》等。虽然热度很高，都是评分并非遥遥领先，基本都在7~8分之间。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">dataValuebot15&lt;-final[order(final$Value),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line"></div><div class="line">ggplot(dataValuebot15,aes(reorder(Name,Value),Value))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Value+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影关注度最低BOT15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image10.png" alt="image10"></p>
<blockquote>
<p>最后是几部评论最少的电影，好吧几乎都没咋听过这几部影片的名字，但是好奇怪，虽然关注度不高，但是评分都还是马马虎虎的。是不是可以说国产电影的评分和关注度并非严格相关吧。</p>
<p>声明：<br>限于技术手段和个人水平，以上所抓取数据，进涵盖豆瓣电影库中的一部分，而且其中还混杂诸多娱乐节目、连续剧以及纪录片等，所统计分析结果并不准确，仅作为爬虫和数据可视化练习使用，请勿做为商业决策依据！</p>
</blockquote>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近国产电影评分风波引起了很多人的关注，豆瓣和猫眼因国产电影评分过低此被电影局约谈了，猫眼电影还因此下线了自己的电影评分系统，作为好奇宝宝，小魔方也来凑一波热闹。&lt;/p&gt;
&lt;p&gt;当然今天不是要谈政治啦，刚好最近在学爬虫，那就爬一点儿官产电影的数据，用数据告诉大家，国产电影的真实处境。。（受限于技术手段和代码水平，数据不全，分析过程不敢保证精准，仅作为个人练习使用，请谨慎使用）。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="爬虫" scheme="http://www.raindu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="国产电影" scheme="http://www.raindu.com/tags/%E5%9B%BD%E4%BA%A7%E7%94%B5%E5%BD%B1/"/>
    
      <category term="rvest" scheme="http://www.raindu.com/tags/rvest/"/>
    
  </entry>
  
  <entry>
    <title>R语言爬虫可视化——用数据来聊聊2017年首周各大城市空气质量</title>
    <link href="http://www.raindu.com/2017/05/31/R%E8%AF%AD%E8%A8%80%E7%88%AC%E8%99%AB%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8%E6%95%B0%E6%8D%AE%E6%9D%A5%E8%81%8A%E8%81%8A2017%E5%B9%B4%E9%A6%96%E5%91%A8%E5%90%84%E5%A4%A7%E5%9F%8E%E5%B8%82%E7%A9%BA%E6%B0%94%E8%B4%A8%E9%87%8F/"/>
    <id>http://www.raindu.com/2017/05/31/R语言爬虫可视化——用数据来聊聊2017年首周各大城市空气质量/</id>
    <published>2017-05-31T08:03:36.000Z</published>
    <updated>2017-05-31T08:13:36.306Z</updated>
    
    <content type="html"><![CDATA[<p>最近学了些revst包的基础知识，勉强能爬到一些有用的数据，刚好趁着周末，捂着脸跟大家分享。</p>
<a id="more"></a>
<p>这一篇使用revst包爬取了中国环保部环境监测中心公布367个主要城市的日度AQI指数信息（2017年1~7日），由于个别城市数据有缺失，可视化过程可能会遗漏部分城市信息。</p>
<h3 id="以下是本篇需要加载的环境包："><a href="#以下是本篇需要加载的环境包：" class="headerlink" title="以下是本篇需要加载的环境包："></a>以下是本篇需要加载的环境包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggmap)</div><div class="line"><span class="keyword">library</span>(Hmisc)</div><div class="line"><span class="keyword">library</span>(leafletCN)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure>
<h3 id="数据爬取过程："><a href="#数据爬取过程：" class="headerlink" title="数据爬取过程："></a>数据爬取过程：</h3><p>使用revst包爬取了2017年1日至7日的367各主要城市AQI指数数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://datacenter.mep.gov.cn/report/air_daily/air_dairy.jsp?city=&amp;startdate=2017-01-01&amp;enddate=2017-01-07&amp;page="</span></div><div class="line">final &lt;- data.frame()</div><div class="line"><span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:<span class="number">86</span>)&#123;</div><div class="line">fun&lt;-<span class="keyword">function</span>(m)&#123;</div><div class="line">url&lt;-paste(url,m,sep=<span class="string">''</span>)</div><div class="line">web&lt;-read_html(url,encoding=<span class="string">"UTF-8"</span>)</div><div class="line">Num&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(1)"</span>) %&gt;% html_text()</div><div class="line">City&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)"</span>) %&gt;% html_text()</div><div class="line">Date&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(3)"</span>) %&gt;% html_text()</div><div class="line">AQI&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(4)"</span>) %&gt;% html_text()</div><div class="line">Level&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(5)"</span>) %&gt;% html_text()</div><div class="line">Mainpo&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(6)"</span>) %&gt;% html_text()</div><div class="line">final&lt;-data.frame(Num=Num[<span class="number">6</span>:<span class="number">35</span>],City=City[<span class="number">6</span>:<span class="number">35</span>],Date=Date[<span class="number">4</span>:<span class="number">33</span>],</div><div class="line">AQI=AQI[<span class="number">4</span>:<span class="number">33</span>],Level=Level[<span class="number">3</span>:<span class="number">32</span>],Mainpo=Mainpo[<span class="number">2</span>:<span class="number">31</span>],</div><div class="line">stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">&#125;</div><div class="line">final&lt;-rbind(final,fun(m))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="数据预处理："><a href="#数据预处理：" class="headerlink" title="数据预处理："></a>数据预处理：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">final&lt;-final[<span class="number">1</span>:<span class="number">2569</span>,]</div><div class="line">final$AQI&lt;-as.numeric(final$AQI)</div><div class="line">final$Level&lt;-factor(final$Level,levels=c(<span class="string">"重度污染"</span>,<span class="string">"严重污染"</span>,<span class="string">"轻度污染"</span>,<span class="string">"中度污染"</span>,<span class="string">"良"</span>,<span class="string">"优"</span>),order=<span class="literal">TRUE</span>)</div><div class="line">address&lt;-unique(final$City)</div><div class="line">add&lt;-get_geo_position(address)</div><div class="line">final1&lt;-merge(final,add, by.x = <span class="string">"City"</span>, by.y = <span class="string">"city"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">final1$day&lt;-substr(final1$Date,<span class="number">10</span>,<span class="number">10</span>)</div><div class="line">names(final1)</div><div class="line">final1&lt;-final1[,c(<span class="string">"City"</span>,<span class="string">"Num"</span>,<span class="string">"Date"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>,<span class="string">"Level"</span>,<span class="string">"Mainpo"</span>,<span class="string">"lon"</span>,<span class="string">"lat"</span>)]</div><div class="line">newdata1&lt;-final1[,c(<span class="string">"City"</span>,<span class="string">"lon"</span>,<span class="string">"lat"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>,<span class="string">"Level"</span>,<span class="string">"Mainpo"</span>)]</div></pre></td></tr></table></figure>
<h3 id="地图素材导入："><a href="#地图素材导入：" class="headerlink" title="地图素材导入："></a>地图素材导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">x &lt;- china_map@data      </div><div class="line">xs &lt;- data.frame(id=row.names(x),x) </div><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div><div class="line">首先查看下所选取的<span class="number">367</span>个主要城市在全国的分布情况：</div><div class="line"></div><div class="line">ggplot()+</div><div class="line"> geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">     geom_point(data=newdata1,aes(x=lon,y=lat),colour=<span class="string">"red"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">     theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image1.png" alt="image1"></p>
<h3 id="用气泡图展示主要城市AQI指数相对高低"><a href="#用气泡图展示主要城市AQI指数相对高低" class="headerlink" title="用气泡图展示主要城市AQI指数相对高低"></a>用气泡图展示主要城市AQI指数相对高低</h3><p><strong>（气泡图大小及颜色深浅均表示AQI指数强弱）</strong></p>
<blockquote>
<p>（以下数据基于2017年1日~7日367个城市的平均AQI指数数据）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">newdata2&lt;-newdata1[,c(<span class="string">"City"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>)];newdata2$day&lt;-as.factor(newdata2$day)</div><div class="line">newdata2&lt;-tapply(newdata2$AQI,list(newdata2$City),mean,na.rm=<span class="literal">TRUE</span>)</div><div class="line">newdata2&lt;-as.data.frame(newdata2)</div><div class="line">newdata2$Address&lt;-rownames(newdata2)</div><div class="line">names(newdata2)&lt;-c(<span class="string">"AQIM"</span>,<span class="string">"Address"</span>);newdata2&lt;-newdata2[,c(<span class="string">"Address"</span>,<span class="string">"AQIM"</span>)]</div><div class="line">newdata2&lt;-na.omit(newdata2)</div><div class="line">mynewdata&lt;-merge(newdata2,add, by.x = <span class="string">"Address"</span>, by.y = <span class="string">"city"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">ggplot()+</div><div class="line">    geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">     geom_point(data=mynewdata,aes(x=lon,y=lat,size=AQIM,fill=AQIM),shape=<span class="number">21</span>,colour=<span class="string">"black"</span>)+</div><div class="line">     scale_size_area(max_size=<span class="number">5</span>)+</div><div class="line">     scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"#D73434"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">     theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image2.png" alt="image2"></p>
<p>###使用中心辐射热度图及散点图叠加</p>
<p><strong>在宏观上洞察全国各省各地区的空气质量级别及集中分布趋势：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_polygon(data=mynewdata,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.5</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">geom_point(data=mynewdata,aes(x=lon,y=lat),col=<span class="string">"red"</span>,size=<span class="number">1</span>)+</div><div class="line">scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image3.png" alt="image3"></p>
<h3 id="使用热力地图查看整体城市空气质量的地域分布特征："><a href="#使用热力地图查看整体城市空气质量的地域分布特征：" class="headerlink" title="使用热力地图查看整体城市空气质量的地域分布特征："></a>使用热力地图查看整体城市空气质量的地域分布特征：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">geojsonMap(mynewdata,<span class="string">"city"</span>,popup =  paste0(mynewdata$Address,<span class="string">":"</span>,dat$AQIM),palette = <span class="string">"Reds"</span>, legendTitle = <span class="string">"AQI Index"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image4.png" alt="image4"></p>
<h3 id="AQI指数最高的10个城市："><a href="#AQI指数最高的10个城市：" class="headerlink" title="AQI指数最高的10个城市："></a>AQI指数最高的10个城市：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mynewdata3&lt;-newdata2[order(-newdata2$AQIM),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">ggplot(mynewdata3,aes(reorder(Address,AQIM),AQIM))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(AQIM+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">5</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"十大污染最严重城市"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image5.png" alt="image5"></p>
<p>因为所收集的数据中，行政区划名称与现有地图素材有出入，鉴于城市较多，匹配比较麻烦，暂时没有制作基于空气质量水平的离散填充地图，但是方法之前已经多有介绍，感兴趣的小伙伴儿可以借此自己练习。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学了些revst包的基础知识，勉强能爬到一些有用的数据，刚好趁着周末，捂着脸跟大家分享。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="爬虫" scheme="http://www.raindu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="空气质量可视化" scheme="http://www.raindu.com/tags/%E7%A9%BA%E6%B0%94%E8%B4%A8%E9%87%8F%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——中心放射状路径图</title>
    <link href="http://www.raindu.com/2017/05/31/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E4%B8%AD%E5%BF%83%E6%94%BE%E5%B0%84%E7%8A%B6%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/05/31/R语言可视化——中心放射状路径图/</id>
    <published>2017-05-31T01:26:55.000Z</published>
    <updated>2017-05-31T01:36:10.211Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直在研究ggplot剩余还没有涉略过的图表类型，试图挖掘出一些新的图表形式，就像是该包的作者所暗示的那样，ggplot2只是给你搭建了一个图层语法环境，至于具体能创造出何种图形，全凭自己的想象力。</p>
<p>慢慢的我发现还有一类geom_segment对象自己一直没有尝试过，于是满心欢喜的尝试了一下，果然还是有收获的，我发现通过这个segment图层，可以批量的创建放射状线条图，也就是路径图，这解决了我一直以来的难题，今天顺便分享给大家。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggmap)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div></pre></td></tr></table></figure>
<h3 id="加载中国省份行政地图："><a href="#加载中国省份行政地图：" class="headerlink" title="加载中国省份行政地图："></a>加载中国省份行政地图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">x &lt;- china_map@data      </div><div class="line">xs &lt;- data.frame(id=row.names(x),x)</div></pre></td></tr></table></figure>
<p><strong>转换为数据框并合并城市数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>拆分兰州数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-subset(province_city,city==<span class="string">"兰州"</span>)</div><div class="line">newdata1&lt;-subset(province_city,city!=<span class="string">"兰州"</span>)</div><div class="line">sourcex&lt;-rep(newdata$jd,<span class="number">33</span>)</div><div class="line">sourcey&lt;-rep(newdata$wd,<span class="number">33</span>)</div></pre></td></tr></table></figure></p>
<p><strong>制作以兰州为中心的点对点作图数据：</strong>（可以类比之前REmap路径图数据源）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tagetx&lt;-newdata1$jd</div><div class="line">tagety&lt;-newdata1$wd</div><div class="line"></div><div class="line">dataA&lt;-data.frame(sourcex,sourcey,tagetx,tagety)</div><div class="line">dataB&lt;-newdata1[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">dataC&lt;-cbind(dataB,dataA)</div><div class="line">dataC$point&lt;-round(runif(<span class="number">33</span>,<span class="number">10</span>,<span class="number">50</span>))</div></pre></td></tr></table></figure>
<h3 id="图形可视化过程"><a href="#图形可视化过程" class="headerlink" title="图形可视化过程"></a>图形可视化过程</h3><p><strong>利用geom_segment（）图层制作放射路径图：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image1.png" alt="image1"></p>
<p>这里再稍微的扩展一下，其实以上你看到的放射状线条是兰州与其他城市之间的直线，之所以变的有弧度，只是因为加了地图投影的缘故，这里我可以取消投影参数，看下效果。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image2.png" alt="image2"></p>
<p>这里取消投影参数之后，线条变成了点间直线，但是默认的不带投影的地图看起来与我们认知中的中国地图形状有些不一样，好像被压扁了一样。</p>
<p>其实这里还有一个图层函数也可以做出来这种放射状线条，geom_curve（）,图层，不过它本身就是有弧度的曲线，曲率可以通过参数进行微调。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image3.png" alt="image3"></p>
<p><strong>曲率调整：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>),curvature = <span class="number">0.8</span>)+ <span class="comment">#用于调整曲率，范围在-1~1之间。</span></div><div class="line">theme_nothing()</div></pre></td></tr></table></figure></p>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image4.png" alt="image4"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>),curvature =-<span class="number">0.5</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image5.png" alt="image5"></p>
<p><strong>当然，通过图形叠加，我们还可以重复多次这样的放射状线条图。</strong></p>
<blockquote>
<p>以下以北京为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">newdataA&lt;-subset(province_city,city==<span class="string">"北京"</span>)</div><div class="line">newdataB&lt;-subset(province_city,city!=<span class="string">"北京"</span>)</div><div class="line">soux&lt;-rep(newdataA$jd,<span class="number">33</span>)</div><div class="line">souy&lt;-rep(newdataA$wd,<span class="number">33</span>)</div><div class="line">tagx&lt;-newdataB$jd</div><div class="line">tagy&lt;-newdataB$wd</div><div class="line">dataD&lt;-data.frame(soux,souy,tagx,tagy)</div><div class="line">dataE&lt;-newdataB[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">dataF&lt;-cbind(dataD,dataE)</div><div class="line">dataF$point&lt;-round(runif(<span class="number">33</span>,<span class="number">10</span>,<span class="number">50</span>))</div></pre></td></tr></table></figure></p>
<p>两个中心的路径图（兰州、北京）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">geom_segment(data=dataF,aes(x=soux,y=souy,xend=tagx,yend=tagy,colour=<span class="string">"blue"</span>))+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image6.png" alt="image6"></p>
<p>当然，根据实际需要，你也可以将图层叠加N次，从而制作出与业务需求一致的多中心放射状路径图，这里只给出思路和大致步骤，感兴趣的小伙伴可以自己尝试。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一直在研究ggplot剩余还没有涉略过的图表类型，试图挖掘出一些新的图表形式，就像是该包的作者所暗示的那样，ggplot2只是给你搭建了一个图层语法环境，至于具体能创造出何种图形，全凭自己的想象力。&lt;/p&gt;
&lt;p&gt;慢慢的我发现还有一类geom_segment对象自己一直没有尝试过，于是满心欢喜的尝试了一下，果然还是有收获的，我发现通过这个segment图层，可以批量的创建放射状线条图，也就是路径图，这解决了我一直以来的难题，今天顺便分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="路径图" scheme="http://www.raindu.com/tags/%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化——ggplot绘制中心密度辐射图</title>
    <link href="http://www.raindu.com/2017/05/30/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E7%BB%98%E5%88%B6%E4%B8%AD%E5%BF%83%E5%AF%86%E5%BA%A6%E8%BE%90%E5%B0%84%E5%9B%BE/"/>
    <id>http://www.raindu.com/2017/05/30/R语言可视化——ggplot绘制中心密度辐射图/</id>
    <published>2017-05-30T08:05:43.000Z</published>
    <updated>2017-05-30T08:30:27.628Z</updated>
    
    <content type="html"><![CDATA[<p>今天这篇算是之前ggplot2图表系列的增补。</p>
<p>因为在ggplot2中一直没有看到好的关于密度辐射图（或者称它为热力辐射图，就是那种PowerMap中可以通过颜色色度探查区域指标分布密度的图表类型）的合适解决方案，最近在看github官网上ggmap的介绍帖，看到作者在ggmap函数中嵌套了geom_polygon图层并并使用fill=..level..参数和stat=”density_2d”来来制作类似的热度辐射图。</p>
<p>我就突发奇想，如果不是通过ggmap而是通过ggplot函数是否也可以呢，果然也是可以出效果的，先将方法介绍如下：</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><p>首先需要加载如下包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)      </div><div class="line"><span class="keyword">library</span>(plyr)         </div><div class="line"><span class="keyword">library</span>(maptools) </div><div class="line"><span class="keyword">library</span>(ggmap)</div></pre></td></tr></table></figure></p>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><p>接下来导入两个数据集：</p>
<p>其中一个是中国省级边界轮廓图，早期关注过数据小魔方的用户大概都知道，我曾经共享过一个名为rstudy的文件包（我在刘万祥老师的公众号里发现的，现在应该也还可以获取），如果手上没有数据可以添加魔方学院的QQ群，在群共享里查找R语言资料。（共享文件比较多，可能需要找一阵子）</p>
<p>另一个是之前在讲解REmap热度辐射图时用过的城市价值指标数据集，推送后会共享在魔方学院的QQ群里。</p>
<p><strong>导入数据集：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)  <span class="comment">#地图数据 </span></div><div class="line">china_map1 &lt;- fortify(china_map)                   <span class="comment">#转换为数据框</span></div><div class="line">data&lt;- read.csv(file=<span class="string">"D:\\R\\map\\MoveChart\\cityvaluetop10.csv"</span>,header=<span class="literal">T</span>)  <span class="comment">#城市指标数据</span></div></pre></td></tr></table></figure>
<p>因为这里使用地图仅仅是作为底图用作定位信息，可以说是陪衬，所以无需对地图和城市指标进行合并。</p>
<h3 id="图表的正式生成过程："><a href="#图表的正式生成过程：" class="headerlink" title="图表的正式生成过程："></a>图表的正式生成过程：</h3><h4 id="画底图："><a href="#画底图：" class="headerlink" title="画底图："></a>画底图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p&lt;-ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>);p</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image1.png" alt="image1"></p>
<h4 id="添加热度图层"><a href="#添加热度图层" class="headerlink" title="添加热度图层"></a>添加热度图层</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p&lt;-p+geom_polygon(data=data,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.3</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>);p</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image22.jpg" alt="image2"></p>
<h4 id="调整热度图层"><a href="#调整热度图层" class="headerlink" title="调整热度图层"></a>调整热度图层</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)）</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image2.png" alt="image3"></p>
<h4 id="清楚冗余元素"><a href="#清楚冗余元素" class="headerlink" title="清楚冗余元素"></a>清楚冗余元素</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+theme_nothing())</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image3.png" alt="image4"></p>
<h4 id="可以给以上热图添加散点辅助观测"><a href="#可以给以上热图添加散点辅助观测" class="headerlink" title="可以给以上热图添加散点辅助观测"></a>可以给以上热图添加散点辅助观测</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+geom_point(data=data,aes(x=lon,y=lat),col=<span class="string">"white"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image4.png" alt="image5"></p>
<h4 id="当然，你也可以给三点指定城市的指标数据使其变成气泡图"><a href="#当然，你也可以给三点指定城市的指标数据使其变成气泡图" class="headerlink" title="当然，你也可以给三点指定城市的指标数据使其变成气泡图"></a>当然，你也可以给三点指定城市的指标数据使其变成气泡图</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+geom_point(data=data,aes(x=lon,y=lat,size=prob),col=<span class="string">"white"</span>)+scale_size_area(max_size=<span class="number">6</span>))</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image5.png" alt="image6"></p>
<p><strong>记得清除掉第5步，即从第四步开始</strong></p>
<p>至于实际的数据标签，指标名称和区域名称，酌情添加，但是针对地图类图表，数据展示到位即可，不建议添加太多标签，影响美观性。</p>
<p>针对本图表类型，核心参数是第二个geom_polygon()中的fill = ..level..和stat=”density_2d”统计变换，使得多边形图转换成为二维水平密度图，但是至今我还没有搞懂里面的算法是什么样的，只能大概模仿出来，至于怎么用，看大家自由发挥了，效果跟真正的热力辐射图还是有些差别，但是勉强能用。</p>
<p>总结下，用到的所有代码如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_polygon(data=data,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.3</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">geom_point(data=data,aes(x=lon,y=lat,size=prob),col=<span class="string">"white"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">theme_nothing()  <span class="comment">#这一句清空主题的代码是ggmap包中的，必须加载才能用</span></div></pre></td></tr></table></figure></p>
<p>感兴趣的小伙伴儿可以移步去github官网上搜索ggmap官方介绍，里面使用ggmap调用谷歌地图做的热度图，效果很棒。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这篇算是之前ggplot2图表系列的增补。&lt;/p&gt;
&lt;p&gt;因为在ggplot2中一直没有看到好的关于密度辐射图（或者称它为热力辐射图，就是那种PowerMap中可以通过颜色色度探查区域指标分布密度的图表类型）的合适解决方案，最近在看github官网上ggmap的介绍帖，看到作者在ggmap函数中嵌套了geom_polygon图层并并使用fill=..level..参数和stat=”density_2d”来来制作类似的热度辐射图。&lt;/p&gt;
&lt;p&gt;我就突发奇想，如果不是通过ggmap而是通过ggplot函数是否也可以呢，果然也是可以出效果的，先将方法介绍如下：&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="热力地图" scheme="http://www.raindu.com/tags/%E7%83%AD%E5%8A%9B%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>用ggplot2制作静态数据可视化报告!</title>
    <link href="http://www.raindu.com/2017/05/30/%E7%94%A8ggplot2%E5%88%B6%E4%BD%9C%E9%9D%99%E6%80%81%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%A5%E5%91%8A/"/>
    <id>http://www.raindu.com/2017/05/30/用ggplot2制作静态数据可视化报告/</id>
    <published>2017-05-30T00:58:46.000Z</published>
    <updated>2017-05-30T01:08:06.343Z</updated>
    
    <content type="html"><![CDATA[<p>对于可视化呈现来说，一个图表呈现的数据信息是有限的，更多时候，我们需要呈现的是多角度多维度的数据信息。</p>
<p>这时候，就需要用在同一个版面上容纳多副相关的图表形成一个版面的可视化报告，今天是网易数独的一个数据报告，使用ggplot还原了（其中用到的国旗出现了点儿小bug，至今没有解决，有知情的的大神还望赐教！）</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"tidyverse"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"scales"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"countrycode"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggimage"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div></pre></td></tr></table></figure>
<p><strong>以下是原图：</strong></p>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/source.png" alt="source"></p>
<p>很明显这个版面是由上下两幅图表组成的，那个使用R来做也是同样的思路，制作两幅 单独的图然后将二者合并。</p>
<h3 id="图形可视化过程"><a href="#图形可视化过程" class="headerlink" title="图形可视化过程"></a>图形可视化过程</h3><p>以下是模仿过程的代码：</p>
<h4 id="图一（上半部分圆环图）"><a href="#图一（上半部分圆环图）" class="headerlink" title="图一（上半部分圆环图）"></a>图一（上半部分圆环图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">name&lt;-c(<span class="string">"司法界"</span>,<span class="string">"商人"</span>,<span class="string">"外交领域"</span>,<span class="string">"军人"</span>,<span class="string">"记者"</span>,<span class="string">"经济学家"</span>,<span class="string">"医学界"</span>,<span class="string">"学术界"</span>,<span class="string">"工程师"</span>)</div><div class="line">label&lt;-factor(name,levels=name,order=<span class="literal">T</span>)</div><div class="line">percent&lt;-c(<span class="number">0.196</span>,<span class="number">0.166</span>,<span class="number">0.126</span>,<span class="number">0.107</span>,<span class="number">0.083</span>,<span class="number">0.083</span>,<span class="number">0.082</span>,<span class="number">0.078</span>,<span class="number">0.072</span>)</div><div class="line">mydata&lt;-data.frame(label,percent)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata$anti_percent&lt;-<span class="number">1</span>-mydata$percent</div><div class="line">mydata1&lt;-gather(mydata,index,Percent,-label)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">conservation_status &lt;-paste0(name,<span class="string">"\n"</span>,percent(percent))</div><div class="line">names(conservation_status)&lt;-name</div><div class="line">global_labeller &lt;-labeller(.defalut=label_value,label=conservation_status)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyhl.ttc"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_col(data=mydata1,aes(x=<span class="number">1</span>,y=Percent,fill=index),width=<span class="number">.2</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"percent"</span>=<span class="string">"#00A0E9"</span>,<span class="string">"anti_percent"</span>=<span class="string">"#EAEBEB"</span>),guide=<span class="literal">FALSE</span>)+</div><div class="line">xlim(<span class="number">0.6</span>,<span class="number">1.1</span>)+</div><div class="line">coord_polar(theta=<span class="string">"y"</span>)+</div><div class="line">facet_grid(.~label,labeller=global_labeller)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">    line=element_blank(),</div><div class="line">    axis.text=element_blank(),</div><div class="line">    title=element_blank(),</div><div class="line">    panel.spacing=unit(<span class="number">0</span>,<span class="string">"cm"</span>),</div><div class="line">    strip.text=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">25</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">    plot.margin=unit(c(<span class="number">.5</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>),<span class="string">'lines'</span>)</div><div class="line">    );p1</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表"</span>)</div><div class="line">CairoPNG(file=<span class="string">"infography1.png"</span>,width=<span class="number">1600</span>,height=<span class="number">480</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">p1</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography1.png" alt="infography1"></p>
<h4 id="图二：（堆积条形图）"><a href="#图二：（堆积条形图）" class="headerlink" title="图二：（堆积条形图）"></a>图二：（堆积条形图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">name2&lt;-c(<span class="string">"学术界"</span>,<span class="string">"商人"</span>,<span class="string">"公务员"</span>,<span class="string">"外交领域"</span>,<span class="string">"经济学家"</span>,<span class="string">"工程师"</span>,<span class="string">"司法界"</span>,<span class="string">"医学界"</span>,<span class="string">"军人"</span>,<span class="string">"教育工作者"</span>,<span class="string">"其他"</span>)</div><div class="line">巴西&lt;-c(<span class="number">1</span>,<span class="number">1.7</span>,<span class="number">0</span>,<span class="number">0.5</span>,<span class="number">1.4</span>,<span class="number">0.3</span>,<span class="number">2.2</span>,<span class="number">2.25</span>,<span class="number">0.3</span>,<span class="number">1.4</span>)</div><div class="line">中国&lt;-c(<span class="number">0.15</span>,<span class="number">0</span>,<span class="number">3.2</span>,<span class="number">0.5</span>,<span class="number">0.35</span>,<span class="number">6.3</span>,<span class="number">0.75</span>,<span class="number">0.2</span>,<span class="number">1.1</span>,<span class="number">1.1</span>)</div><div class="line">埃及&lt;-c(<span class="number">3.15</span>,<span class="number">0.5</span>,<span class="number">0.3</span>,<span class="number">1.7</span>,<span class="number">1.9</span>,<span class="number">1.9</span>,<span class="number">3.5</span>,<span class="number">0.4</span>,<span class="number">0.9</span>,<span class="number">0</span>)</div><div class="line">印度&lt;-c(<span class="number">0.6</span>,<span class="number">2.1</span>,<span class="number">0.35</span>,<span class="number">0.4</span>,<span class="number">1.9</span>,<span class="number">1</span>,<span class="number">4.2</span>,<span class="number">0.5</span>,<span class="number">0</span>,<span class="number">0</span>)</div><div class="line">韩国&lt;-c(<span class="number">2</span>,<span class="number">1.6</span>,<span class="number">2.1</span>,<span class="number">1.7</span>,<span class="number">1.75</span>,<span class="number">0</span>,<span class="number">1.2</span>,<span class="number">0</span>,<span class="number">3.2</span>,<span class="number">0</span>)</div><div class="line">美国&lt;-c(<span class="number">0</span>,<span class="number">2.6</span>,<span class="number">0.2</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8.6</span>,<span class="number">0.4</span>,<span class="number">1</span>,<span class="number">1.1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">colorpalette&lt;-c(<span class="string">"#5B8DA2"</span>,<span class="string">"#155E7B"</span>,<span class="string">"#E49D85"</span>,<span class="string">"#1C98CB"</span>,<span class="string">"#6CC5E8"</span>,<span class="string">"#22918B"</span>,<span class="string">"#6DB3A8"</span>,<span class="string">"#211E1F"</span>,<span class="string">"#E35840"</span>,<span class="string">"#76261C"</span>,<span class="string">"#798A94"</span>)</div><div class="line"></div><div class="line">mydata2&lt;-data.frame(巴西,中国,埃及,印度,韩国,美国)</div><div class="line">mydata2&lt;-data.frame(t(mydata2))</div><div class="line">mydata2[,<span class="number">11</span>]&lt;-<span class="number">16</span>-apply(mydata2,<span class="number">1</span>,sum)</div><div class="line">names(mydata2)&lt;-name2</div><div class="line">mydata2&lt;-mydata2/<span class="number">16</span></div><div class="line">mydata2$country&lt;-rownames(mydata2)</div><div class="line"></div><div class="line">coname&lt;-c(<span class="string">"Brazil"</span>,<span class="string">"China"</span>,<span class="string">"Egypt"</span>,<span class="string">"India"</span>,<span class="string">"Korea"</span>,<span class="string">"United States of America"</span>)</div><div class="line">code=countrycode(coname, <span class="string">"country.name"</span>, <span class="string">"iso2c"</span>)</div><div class="line">mydata2$code&lt;-code</div><div class="line">rownames(mydata2)&lt;-<span class="literal">NULL</span></div><div class="line"></div><div class="line">mydata2&lt;-cbind(mydata2[,<span class="number">12</span>:<span class="number">13</span>],mydata2[,<span class="number">1</span>:<span class="number">11</span>])</div><div class="line">mydata3&lt;-gather(mydata2,cato,percent,-<span class="number">1</span>:-<span class="number">2</span>)</div><div class="line">mydata3$cato&lt;-factor(mydata3$cato,levels=rev(name2),order=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot(data=mydata3,aes(x=country,y=percent,fill=cato))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.8</span>)+</div><div class="line">expand_limits(y =-<span class="number">.1</span>)  +</div><div class="line">scale_x_discrete(limits=rev(c(<span class="string">"巴西"</span>,<span class="string">"中国"</span>,<span class="string">"埃及"</span>,<span class="string">"印度"</span>,<span class="string">"韩国"</span>,<span class="string">"美国"</span>)))+</div><div class="line">scale_fill_manual(values=rev(colorpalette),breaks=rev(levels(mydata3$cato)))+</div><div class="line">geom_flag(y=-<span class="number">.08</span>,aes(image=code),size=<span class="number">.1</span>) + </div><div class="line">guides(fill=guide_legend(keywidth=<span class="number">3.5</span>,keyheight=<span class="number">.2</span>,nrow=<span class="number">1</span>,title.hjust=<span class="number">.5</span>,title.vjust=<span class="number">.5</span>,title=<span class="literal">NULL</span>))+</div><div class="line">geom_text(aes(label=ifelse(mydata3$percent!=<span class="number">0</span>,percent(mydata3$percent),<span class="string">""</span>)),position=position_stack(vjust=<span class="number">0.5</span>),family=<span class="string">"myfont"</span>,size=<span class="number">6.5</span>,col=<span class="string">"white"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme_transparent()+</div><div class="line">theme(</div><div class="line">text=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">25</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">legend.direction=<span class="string">"horizontal"</span>,</div><div class="line">legend.key.size=unit(<span class="number">.5</span>,<span class="string">'cm'</span>),</div><div class="line">legend.position=<span class="string">"top"</span>,</div><div class="line">line=element_blank(),</div><div class="line">panel.spacing=unit(<span class="number">1</span>,<span class="string">"cm"</span>),</div><div class="line">title=element_blank(),</div><div class="line">axis.text.x=element_blank(),</div><div class="line">plot.margin=unit(c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>),<span class="string">'lines'</span>)</div><div class="line">);p2</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography2.png" alt="infography2"></p>
<h4 id="图层合并："><a href="#图层合并：" class="headerlink" title="图层合并："></a>图层合并：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表"</span>)</div><div class="line">CairoPNG(file=<span class="string">"infography2.png"</span>,width=<span class="number">1600</span>,height=<span class="number">720</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">p2</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography.png" alt="infography"></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]553270834</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/resume.png" width="550" height="300" alt="resume" align="center"><br></div>

<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于可视化呈现来说，一个图表呈现的数据信息是有限的，更多时候，我们需要呈现的是多角度多维度的数据信息。&lt;/p&gt;
&lt;p&gt;这时候，就需要用在同一个版面上容纳多副相关的图表形成一个版面的可视化报告，今天是网易数独的一个数据报告，使用ggplot还原了（其中用到的国旗出现了点儿小bug，至今没有解决，有知情的的大神还望赐教！）&lt;/p&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://www.raindu.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R语言" scheme="http://www.raindu.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据可视化" scheme="http://www.raindu.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="ggplot2" scheme="http://www.raindu.com/tags/ggplot2/"/>
    
      <category term="信息图" scheme="http://www.raindu.com/tags/%E4%BF%A1%E6%81%AF%E5%9B%BE/"/>
    
      <category term="版面设计" scheme="http://www.raindu.com/tags/%E7%89%88%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="图层控制" scheme="http://www.raindu.com/tags/%E5%9B%BE%E5%B1%82%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
</feed>

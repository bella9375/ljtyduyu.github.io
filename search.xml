<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[左手用R右手Python系列——数据合并与追加]]></title>
      <url>/2017/06/27/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%BD%E5%8A%A0/</url>
      <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/face.jpg" alt=""></p>
<p>今天这篇跟大家介绍R语言与Python数据处理中的第二个小知识点——数据合并与追加。</p>
<a id="more"></a>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>针对数据合并与追加，R与Python中都有对应的函数可以快速完成需求，根据合并与追加的使用场景，这里我将本文内容分成三部分：</p>
<ul>
<li>数据合并（简单合并，无需匹配）</li>
<li>数据合并（匹配合并）</li>
<li>数据追加</li>
</ul>
<h3 id="数据合并（简单合并，无需匹配）"><a href="#数据合并（简单合并，无需匹配）" class="headerlink" title="数据合并（简单合并，无需匹配）"></a>数据合并（简单合并，无需匹配）</h3><p>针对简单合并而言，在R语言中主要通过以下两个函数来实现：</p>
<ul>
<li>cbind()</li>
<li>dplyr::bind_cols()<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 &lt;- data.frame(A=c(<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>),</div><div class="line">                     B= c(<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>),</div><div class="line">                     C= c(<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>),</div><div class="line">                     D=c(<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>)</div><div class="line">                    )</div><div class="line">df2 &lt;- data.frame(E=c(<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>),</div><div class="line">                    <span class="literal">F</span>= c(<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>),</div><div class="line">                    G=c(<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>),</div><div class="line">                     H= c(<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>))</div><div class="line">df3 &lt;-data.frame(I=c(<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>),</div><div class="line">                     J= c(<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>),</div><div class="line">                    K=c(<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>),</div><div class="line">                    L=c(<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>)</div><div class="line">                   )</div><div class="line">df1;df2;df3</div><div class="line">mydata1&lt;-cbind(df1,df2,df3);mydata1</div><div class="line">mydata2&lt;-dplyr::bind_cols(df1,df2,df3);mydata1</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image1.jpg" alt=""></p>
<p>在Python中，简单的合并可以通过Pandas中的concat函数来实现的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'E'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'F'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'G'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'H'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'I'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'J'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'K'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'L'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">result1 = pd.concat([df1,df2,df3],axis=<span class="number">1</span>,join_axes=[df1.index])</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image2.jpg" alt=""></p>
<h3 id="横向合并：（需匹配）"><a href="#横向合并：（需匹配）" class="headerlink" title="横向合并：（需匹配）"></a>横向合并：（需匹配）</h3><p>在R语言中，这种操作有很多可选方案，如基础函数merge、plyr包中的join函数以及dplyr包中的left/right/inter/full_join等函数。</p>
<ul>
<li>merge</li>
<li>plyr::join</li>
<li>dplyr::left/right/inter/full_join</li>
</ul>
<p>这里为了节省时间，只介绍第一种基础函数，欲了解详情，可以查看这篇历史文章：</p>
<p><a href="https://zhuanlan.zhihu.com/p/27577410" target="_blank" rel="external">R语言数据处理——数据合并与追加</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">merge(x, y,  <span class="comment">#带合并的数据集名称（左右顺序）</span></div><div class="line">  by = intersect(names(x), names(y)), <span class="comment">#合并依据字段（名称相同）</span></div><div class="line">  by.x = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  by.y = by,  <span class="comment">#名称不同时需同时时声明</span></div><div class="line">  all = <span class="literal">FALSE</span>,<span class="comment">#合并类型，TRUE为全连接 （full），FALSE为内连接 （inter）</span></div><div class="line">  all.x = all,<span class="comment">#左连接</span></div><div class="line">  all.y = all,<span class="comment">#右连接</span></div><div class="line">  )</div><div class="line">``` </div><div class="line"></div><div class="line">```r </div><div class="line">df3&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>),</div><div class="line">gender=c(<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>),</div><div class="line">pay=c(<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>),</div><div class="line">m_point=c(<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>))</div><div class="line">df4&lt;-data.frame(id=c(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>),</div><div class="line">city=c(<span class="string">'Beijing '</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>, <span class="string">'Shenzhen'</span>, <span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>),</div><div class="line">age=c(<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>),</div><div class="line">category=c(<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>),</div><div class="line">price=c(<span class="number">1200</span>,<span class="number">2900</span>,<span class="number">2133</span>,<span class="number">5433</span>,<span class="number">1346</span>,<span class="number">4432</span>))</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all=<span class="literal">FALSE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.x=<span class="literal">TRUE</span>);print(mydata3)</div><div class="line">mydata3&lt;-merge(df3,df4,by=<span class="string">"id"</span>,all.y=<span class="literal">TRUE</span>);print(mydata3)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image4.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image5.jpg" alt=""></p>
<p>在Python中，这一操作也可以通过函数Pandas库中的cancat函数或者merge函数来完成。</p>
<p><strong>Pandas-merge</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">df3=pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>,<span class="number">1007</span>,<span class="number">1008</span>],</div><div class="line"><span class="string">"gender"</span>:[<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>,<span class="string">'male'</span>,</div><div class="line"><span class="string">'female'</span>,<span class="string">'male'</span>,<span class="string">'female'</span>],</div><div class="line"><span class="string">"pay"</span>:[<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>,<span class="string">'Y'</span>],</div><div class="line"><span class="string">"m-point"</span>:[<span class="number">10</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>]&#125;)</div><div class="line">df4= pd.DataFrame(&#123;<span class="string">"id"</span>:[<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>,<span class="number">1005</span>,<span class="number">1006</span>],</div><div class="line"><span class="string">"date"</span>:pd.date_range(<span class="string">'20130102'</span>,periods=<span class="number">6</span>),</div><div class="line"><span class="string">"city"</span>:[<span class="string">'Beijing'</span>, <span class="string">'Shenzhen'</span>,<span class="string">'Guangzhou'</span>,<span class="string">'Shenzhen'</span>,<span class="string">'Shanghai'</span>,<span class="string">'Beijing'</span>],</div><div class="line"><span class="string">"age"</span>:[<span class="number">23</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>],</div><div class="line"><span class="string">"category"</span>:[<span class="string">'100-A'</span>,<span class="string">'100-B'</span>,<span class="string">'110-A'</span>,<span class="string">'110-C'</span>,<span class="string">'210-A'</span>,<span class="string">'130-F'</span>],</div><div class="line"><span class="string">"price"</span>:[<span class="number">1200</span>,np.nan,<span class="number">2133</span>,<span class="number">5433</span>,np.nan,<span class="number">4432</span>]&#125;,</div><div class="line">columns =[<span class="string">'id'</span>,<span class="string">'date'</span>,<span class="string">'city'</span>,<span class="string">'category'</span>,<span class="string">'age'</span>,<span class="string">'price'</span>])</div><div class="line">print(df3);print(df4)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image6.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df_inner=pd.merge(df3,df4,how=<span class="string">'inner'</span>);print(df_inner) <span class="comment">#数据表合并（内连接：inter join）</span></div><div class="line">df_left=pd.merge(df3,df4, how=<span class="string">'left'</span>) ;print(df_left)  <span class="comment">#数据表合并（左连接：left join）</span></div><div class="line">df_right=pd.merge(df3,df4,how=<span class="string">'right'</span>);print(df_right) <span class="comment">#数据表合并（右连接:right join）</span></div><div class="line">df_outer=pd.merge(df3,df4,how=<span class="string">'outer'</span>);print(df_outer) <span class="comment">#数据表合并（全连接:full join）</span></div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image7.jpg" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image8.jpg" alt=""></p>
<h3 id="数据追加："><a href="#数据追加：" class="headerlink" title="数据追加："></a>数据追加：</h3><p>数据追加通常只需保证数据及的宽度一致且列字段名称一致，相对来说比较简单。在R语言和Python中，也很好实现。</p>
<p>在R语言中，可视化朱数据追加的函数有：</p>
<ul>
<li>rbind()</li>
<li>dplyr::bind_rows()</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata3&lt;-rbind(df1,df2,df3);mydata3</div><div class="line">mydata4&lt;-dplyr::bind_rows(df1,df2,df3);mydata4</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image11.jpg" alt=""></p>
<p>python中则可以很容易的通过数据框本身的append函数来实现简单的数据追加：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</div><div class="line">                     <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</div><div class="line">                     index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</div><div class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</div><div class="line">                    <span class="string">'B'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</div><div class="line">                     <span class="string">'D'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</div><div class="line">                      index=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</div><div class="line">df3 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A8'</span>, <span class="string">'A9'</span>, <span class="string">'A10'</span>, <span class="string">'A11'</span>],</div><div class="line">                     <span class="string">'B'</span>: [<span class="string">'B8'</span>, <span class="string">'B9'</span>, <span class="string">'B10'</span>, <span class="string">'B11'</span>],</div><div class="line">                    <span class="string">'C'</span>: [<span class="string">'C8'</span>, <span class="string">'C9'</span>, <span class="string">'C10'</span>, <span class="string">'C11'</span>],</div><div class="line">                    <span class="string">'D'</span>: [<span class="string">'D8'</span>, <span class="string">'D9'</span>, <span class="string">'D10'</span>, <span class="string">'D11'</span>]&#125;,</div><div class="line">                    index=[<span class="number">8</span>, <span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</div><div class="line">result = df1.append(df2);print(result)</div><div class="line">result = result.append(df3);print(result)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image9.jpg" alt=""></p>
<p>如果是使用canat函数也可以非常轻松的完成数据追加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = pd.concat([df1, df2, df3]);print(result)</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/R_Python/merge/image10.jpg" alt=""></p>
<p>本文汇总：</p>
<table>
<thead>
<tr>
<th>工具</th>
<th>数据合并<br>（简单合并）</th>
<th>数据合并<br>（匹配和并）</th>
<th>数据追加：</th>
</tr>
</thead>
<tbody>
<tr>
<td>R：</td>
<td>cbind<br>dplyr::bind_cols</td>
<td>merge<br>plyr::join<br>dplyr::left/right/inter/full_join</td>
<td>rbindd<br>plyr::bind_rows</td>
</tr>
<tr>
<td>Python:</td>
<td>Pandas-cancat</td>
<td>merge<br>cancat</td>
<td>append<br>cancat</td>
</tr>
</tbody>
</table>
<p>以上仅是个人常用的几种，方法肯定不至于此，欢迎大家补充！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> ggtech </tag>
            
            <tag> Python </tag>
            
            <tag> 数据合并与追加 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用R语言复盘美国总统大选结果~]]></title>
      <url>/2017/06/25/%E7%94%A8R%E8%AF%AD%E8%A8%80%E5%A4%8D%E7%9B%98%E7%BE%8E%E5%9B%BD%E6%80%BB%E7%BB%9F%E5%A4%A7%E9%80%89%E7%BB%93%E6%9E%9C/</url>
      <content type="html"><![CDATA[<p><img src="http://orp205tiu.bkt.clouddn.com/President/President17.jpg" alt=""></p>
<p>这两天各种社交媒体都被美国大选的消息刷屏，各种段子满天飞，把平时不怎么关注政治的小编都吸引了。</p>
<a id="more"></a>
<p>美国大选的投票数据，给小编的写作提供了非常宝贵的案例数据，毕竟四年才一次哦，这次一定不能放过。</p>
<p>接下来我们用R语言来复盘一下，昨日投票结果吧。</p>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><p>本文将从以下几个方面全方位展示大选的形势：</p>
<ul>
<li>克林顿与希拉里的选举人票结果及其占比；</li>
<li>二者的获胜州分布情况、各自在各州的支持率；</li>
<li>不同群体及阶层的支持率。</li>
</ul>
<p>以上可视化图形均为R语言制作，在讲解过程中会共享代码;</p>
<h3 id="加载扩展包："><a href="#加载扩展包：" class="headerlink" title="加载扩展包："></a>加载扩展包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"RColorBrewer"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maps"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"mapdata"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div></pre></td></tr></table></figure>
<h3 id="克林顿与希拉里的选举人票"><a href="#克林顿与希拉里的选举人票" class="headerlink" title="克林顿与希拉里的选举人票:"></a>克林顿与希拉里的选举人票:</h3><p><strong>二者的选举人票结果</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">290</span>,<span class="number">232</span>))</div><div class="line">ggplot(data,aes(x,y,fill=x))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">      geom_text(aes(label=y,vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>))+</div><div class="line">      ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President1.png" alt=""></p>
<p><strong>两者普选支持人数对比*</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">59698506</span>,<span class="number">59926386</span>))</div><div class="line">p %+% data1 <span class="comment">#给上图代码赋值为p,使用通道函数%+%简化代码</span></div></pre></td></tr></table></figure></p>
<p>!<img src="http://orp205tiu.bkt.clouddn.com/President/President2.png" alt=""></p>
<p><strong>两者选举人票得票比例</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">data3&lt;-data.frame(x=c(<span class="string">"Trump"</span>,<span class="string">"Clinton"</span>),y=c(<span class="number">43</span>,<span class="number">54</span>))</div><div class="line">mydata &lt;- transform(data3, mid_y = ave(data3$y,data3$x, FUN = <span class="keyword">function</span>(val) cumsum(val) - (<span class="number">0.5</span> * val)))</div><div class="line">ggplot(mydata,aes(x=<span class="number">1</span>,y=y,fill=x))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,col=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta=<span class="string">"y"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) +</div><div class="line">geom_text(aes(label=paste(y,<span class="string">"%"</span>,sep=<span class="string">""</span>)),vjust=-<span class="number">0.5</span>,hjust=<span class="number">0.5</span>,size=<span class="number">10</span>,color=<span class="string">"white"</span>)+</div><div class="line">ggtitle(<span class="string">"presidential results"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#FF5252"</span>,<span class="string">"#2196F3"</span>))+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.title = element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>),</div><div class="line">      legend.position = <span class="string">"none"</span></div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President3.png" alt=""></p>
<h3 id="二者的获胜州分布情况、各州的支持率；"><a href="#二者的获胜州分布情况、各州的支持率；" class="headerlink" title="二者的获胜州分布情况、各州的支持率；"></a>二者的获胜州分布情况、各州的支持率；</h3><p><strong>数据准备：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">AD1 &lt;- American_map@data</div><div class="line">AD2 &lt;- data.frame(id=rownames(AD1),AD1)</div><div class="line">American_map1 &lt;- fortify(American_map)</div><div class="line">American_map_data &lt;- join(American_map1,AD2, type = <span class="string">"full"</span>)</div><div class="line">American_map_data&lt;-American_map_data[,<span class="number">1</span>:<span class="number">12</span>]</div></pre></td></tr></table></figure></p>
<p><strong>提取各州数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(STATE_NAME=unique(American_map_data$STATE_NAME),STATE_ABBR=unique(American_map_data$STATE_ABBR))</div><div class="line">write.table (mydata, file =<span class="string">"D:\\R\\File\\President.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div><div class="line">newdata&lt;-read.csv(<span class="string">"D:\\R\\File\\President.csv"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>分离大陆与夏威夷、阿拉斯加：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data1&lt;-subset(American_map_data,STATE_NAME!=<span class="string">'Alaska'</span>&amp; STATE_NAME!=<span class="string">'Hawaii'</span>)    </div><div class="line">data2&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Hawaii"</span>)    </div><div class="line">data3&lt;-subset(American_map_data,STATE_NAME==<span class="string">"Alaska"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>更改阿拉斯加与夏威夷坐标并合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data2$long&lt;-data2$long+<span class="number">65</span></div><div class="line">data3$long&lt;-data3$long+<span class="number">40</span></div><div class="line">data3$lat&lt;-data3$lat-<span class="number">42</span></div><div class="line">data4&lt;-rbind(data1,data2,data3)</div></pre></td></tr></table></figure></p>
<p><strong>合并地理信息数据与选举数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">American_data &lt;- join(data4, newdata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>提取各州中心经纬度指标：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(AD1)&#123;mean(range(AD1,na.rm=<span class="literal">TRUE</span>))&#125; </div><div class="line">centres &lt;- ddply(American_data,.(STATE_ABBR),colwise(midpos,.(long,lat)))</div><div class="line">mynewdata&lt;-join(centres,newdata,type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<h4 id="美国总统大选的各州选举人票数分布："><a href="#美国总统大选的各州选举人票数分布：" class="headerlink" title="美国总统大选的各州选举人票数分布："></a>美国总统大选的各州选举人票数分布：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">      geom_polygon(data=American_data,aes(x=long,y=lat,group=group),colour=<span class="string">"grey"</span>,fill=<span class="string">"white"</span>)+</div><div class="line">      geom_point(data=mynewdata,aes(x=long,y=lat,size=Count,fill=Count),shape=<span class="number">21</span>,colour=<span class="string">"black"</span>)+</div><div class="line">      scale_size_area(max_size=<span class="number">10</span>)+ </div><div class="line">      scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"#D73434"</span>)+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"none"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President4.png" alt=""></p>
<h4 id="美国总统大选投票结果双方获胜州分布情况："><a href="#美国总统大选投票结果双方获胜州分布情况：" class="headerlink" title="美国总统大选投票结果双方获胜州分布情况："></a>美国总统大选投票结果双方获胜州分布情况：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(American_data,aes(x=long,y=lat,group=group,fill=Results))+</div><div class="line">      geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#19609F"</span>,<span class="string">"#CB1C2A"</span>),labels=c(<span class="string">"Hillary"</span>, <span class="string">"Trump"</span>))+</div><div class="line">      coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+ </div><div class="line">      theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =<span class="string">"top"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President5.png" alt=""></p>
<h4 id="希拉里各州选票支持率统计；"><a href="#希拉里各州选票支持率统计；" class="headerlink" title="希拉里各州选票支持率统计；"></a>希拉里各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(na.omit(American_data$Clinton), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Clinton_q&lt;-cut(American_data$Clinton,qa,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Clinton_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President6.png" alt=""></p>
<h4 id="川普各州选票支持率统计；"><a href="#川普各州选票支持率统计；" class="headerlink" title="川普各州选票支持率统计；"></a>川普各州选票支持率统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">qb &lt;- quantile(na.omit(American_data$Trump), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">American_data$Trump_q&lt;-cut(American_data$Trump,qb,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">ggplot(American_data,aes(long,lat,group=group,fill=Trump_q))+</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Reds"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.18</span>,<span class="number">0.75</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President7.png" alt=""></p>
<h3 id="多维度统计二者支持率"><a href="#多维度统计二者支持率" class="headerlink" title="多维度统计二者支持率;"></a>多维度统计二者支持率;</h3><h4 id="性别分布"><a href="#性别分布" class="headerlink" title="性别分布"></a>性别分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gender&lt;-data.frame(gender=c(<span class="string">"male"</span>,<span class="string">"female"</span>),clinton=c(<span class="number">41</span>,<span class="number">54</span>),trump=c(<span class="number">53</span>,<span class="number">42</span>))</div><div class="line">genderA&lt;-melt(gender,id.vars=<span class="string">"gender"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(genderA,aes(gender,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.7</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President8.png" alt=""></p>
<p>从性别上来看，男性支持川普的多一点，女性支持希拉里的多一点，这应该算是性别效应吧~</p>
<h4 id="年龄分布统计；"><a href="#年龄分布统计；" class="headerlink" title="年龄分布统计；"></a>年龄分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">age&lt;-data.frame(age=c(<span class="string">"18~29"</span>,<span class="string">"30~44"</span>,<span class="string">"45~64"</span>,<span class="string">"64~"</span>),clinton=c(<span class="number">55</span>,<span class="number">50</span>,<span class="number">44</span>,<span class="number">45</span>),trump=c(<span class="number">37</span>,<span class="number">42</span>,<span class="number">53</span>,<span class="number">53</span>))</div><div class="line">ageA&lt;-melt(age,id.vars=<span class="string">"age"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(ageA,aes(age,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President10.png" alt=""></p>
<p>这个年龄段分布的也是相当有规律啊，川普大叔很得中老年选民的亲来，而希拉里阿姨则俘获了青少年的心。</p>
<h4 id="种族分布统计；"><a href="#种族分布统计；" class="headerlink" title="种族分布统计；"></a>种族分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">race&lt;-data.frame(race=c(<span class="string">"white"</span>,<span class="string">"black"</span>,<span class="string">"latino"</span>,<span class="string">"asian"</span>,<span class="string">"other"</span>),clinton=c(<span class="number">37</span>,<span class="number">88</span>,<span class="number">65</span>,<span class="number">65</span>,<span class="number">56</span>),trump=c(<span class="number">58</span>,<span class="number">8</span>,<span class="number">29</span>,<span class="number">29</span>,<span class="number">37</span>))</div><div class="line">raceA&lt;-melt(race,id.vars=<span class="string">"race"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(raceA,aes(race,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+</div><div class="line">      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President11.png" alt=""></p>
<p>从种族上来看，希拉里在black、latino、asian以及其他种族中占据绝对优势，川普则把控着white的选票。</p>
<h4 id="选民受教育水平分布统计；"><a href="#选民受教育水平分布统计；" class="headerlink" title="选民受教育水平分布统计；"></a>选民受教育水平分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">educ&lt;-data.frame(educ=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>),clinton=c(<span class="number">45</span>,<span class="number">43</span>,<span class="number">49</span>,<span class="number">58</span>),trump=c(<span class="number">51</span>,<span class="number">52</span>,<span class="number">45</span>,<span class="number">37</span>))</div><div class="line">educA&lt;-melt(educ,id.vars=<span class="string">"educ"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(educA,aes(educ,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.95</span>)+      geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=<span class="string">"stack"</span>,size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"high"</span>,<span class="string">"some"</span>,<span class="string">"college"</span>,<span class="string">"post"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President112.png" alt=""></p>
<p>从受教育水平看，希拉里阿姨的选民受教育水平相对较高（单也非绝对，因为这里是CNN做的抽样调查，样本只有24537个，范围较小，并不代表实际情况）。</p>
<h4 id="选民收入分布统计；"><a href="#选民收入分布统计；" class="headerlink" title="选民收入分布统计；"></a>选民收入分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Inco&lt;-data.frame(inco=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>),clinton=c(<span class="number">49</span>,<span class="number">47</span>),trump=c(<span class="number">45</span>,<span class="number">48</span>))</div><div class="line">IncoA&lt;-melt(Inco,id.vars=<span class="string">"inco"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(inco,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+    geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"under $100K"</span>,<span class="string">"above $100K"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President13.png" alt=""></p>
<h4 id="选民政治倾向分布；"><a href="#选民政治倾向分布；" class="headerlink" title="选民政治倾向分布；"></a>选民政治倾向分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Ideo&lt;-data.frame(ideo=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>),clinton=c(<span class="number">84</span>,<span class="number">52</span>,<span class="number">15</span>),trump=c(<span class="number">10</span>,<span class="number">41</span>,<span class="number">81</span>))</div><div class="line">IncoA&lt;-melt(Ideo,id.vars=<span class="string">"ideo"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(IncoA,aes(ideo,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">            scale_x_discrete(limits=c(<span class="string">"liberal"</span>,<span class="string">"moderate"</span>,<span class="string">"conservative"</span>))+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President14.png" alt=""></p>
<p>上图还是比较能反映两党的政治主张的。</p>
<h4 id="选民的婚姻状况统计分布；"><a href="#选民的婚姻状况统计分布；" class="headerlink" title="选民的婚姻状况统计分布；"></a>选民的婚姻状况统计分布；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Marl&lt;-data.frame(marry=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>),clinton=c(<span class="number">37</span>,<span class="number">49</span>,<span class="number">46</span>,<span class="number">62</span>),trump=c(<span class="number">58</span>,<span class="number">47</span>,<span class="number">45</span>,<span class="number">33</span>))</div><div class="line">MarlA&lt;-melt(Marl,id.vars=<span class="string">"marry"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(MarlA,aes(marry,level,fill=Name))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">geom_text(aes(label=level,vjust=<span class="number">5</span>,hjust=<span class="number">0.5</span>),position=position_dodge(width=<span class="number">0.9</span>),size=<span class="number">10</span>,col=<span class="string">"white"</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">scale_x_discrete(limits=c(<span class="string">"married men"</span>,<span class="string">"married women"</span>,<span class="string">"unmarried men"</span>,<span class="string">"unmarried women"</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+       </div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.line.x  = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President15.png" alt=""></p>
<p>川普在已婚男性选民群体中的支持率有明显优势，而希拉里在未婚女性选民群体中优势明显。</p>
<h4 id="宗教信仰分布统计；"><a href="#宗教信仰分布统计；" class="headerlink" title="宗教信仰分布统计；"></a>宗教信仰分布统计；</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Rellglon&lt;-data.frame(rell=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>),clinton=c(<span class="number">37</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">43</span>,<span class="number">71</span>,<span class="number">58</span>,<span class="number">68</span>),trump=c(<span class="number">60</span>,<span class="number">52</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">24</span>,<span class="number">33</span>,<span class="number">26</span>))</div><div class="line">RellglonA&lt;-melt(Rellglon,id.vars=<span class="string">"rell"</span>,variable.name=<span class="string">"Name"</span>,value.name=<span class="string">"level"</span>)</div><div class="line">ggplot(RellglonA,aes(rell,level,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">      scale_fill_manual(values=c(<span class="string">"#2196F3"</span>,<span class="string">"#FF5252"</span>))+</div><div class="line">      scale_x_discrete(limits=c(<span class="string">"protestant"</span>,<span class="string">"catholic"</span>,<span class="string">"mormon"</span>,<span class="string">"orther christian"</span>,<span class="string">"jewish"</span>,<span class="string">"other religon"</span>,<span class="string">"no religion"</span>))+</div><div class="line">      ylim(-<span class="number">20</span>,<span class="number">100</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+     </div><div class="line">      coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">0</span>,direction=<span class="number">1</span>) + </div><div class="line">      facet_grid(.~Name)+</div><div class="line">theme(panel.grid = element_blank(),</div><div class="line">      panel.background = element_blank(),</div><div class="line">      axis.text.y = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.ticks.y = element_blank(),</div><div class="line">      axis.ticks.x = element_line(),</div><div class="line">      axis.title = element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/President/President16.png" alt=""></p>
<p>本文数据来源于<a href="http://edition.cnn.com/election/results" target="_blank" rel="external">CNN官网：</a></p>
<p>因为数据多源于小范围问卷调查（选票数据除外），限于样本范围和地域局限性，结果可能有偏颇。</p>
<p>文中所需的地图数据及代码文本分享在魔方 学院QQ群中：</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——用ggplot构造期待已久的雷达图]]></title>
      <url>/2017/06/24/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8ggplot%E6%9E%84%E9%80%A0%E6%9C%9F%E5%BE%85%E5%B7%B2%E4%B9%85%E7%9A%84%E9%9B%B7%E8%BE%BE%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar9.jpg" alt=""></p>
<p>之前一直苦恼于ggplot函数无法制作雷达图，心想着既然饼图可以通过柱形图+极坐标模拟出来，为啥雷达图不行。</p>
<a id="more"></a>
<h3 id="制作雷达图的传统思路："><a href="#制作雷达图的传统思路：" class="headerlink" title="制作雷达图的传统思路："></a>制作雷达图的传统思路：</h3><p>我尝试着用折线图+极坐标来模拟雷达图（之前在制作饼图和圆环图以及玫瑰图的时候就是这样做的）。</p>
<p>结果就粗线了以下不伦不类的图形：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Company = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">4000</span>,<span class="number">3200</span>,<span class="number">2800</span>,<span class="number">3700</span>),Sale2016 = c(<span class="number">6000</span>,<span class="number">4800</span>,<span class="number">4500</span>,<span class="number">3500</span>,<span class="number">4300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Company"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,group=Year,color=Year))+geom_line()+coord_polar(theta = <span class="string">"x"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar1.png" alt=""></p>
<p>虽说效果已经很接近了，但是整体上还是无法达到雷达图的要求，首尾线条没有相连，点之间是通过弧线链接而非直线。</p>
<p>后来又是在浏览r语言论坛时，无意间看到一个围绕ggplot2包开发的插件——ggradar，果不其然，是专门用于辅助ggplot2制作雷达图而生的。</p>
<p>接下来我跟大家分享该插件的使用方法：</p>
<h3 id="数据构造"><a href="#数据构造" class="headerlink" title="数据构造:"></a>数据构造:</h3><p>因为是开发版的，托管在github网站上，所以不能通过普通途径下载，需要使用devtools工具：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install_github(<span class="string">"ricardo-bion/ggradar"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggradar"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>下面开始构造数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-matrix(runif(<span class="number">40</span>,<span class="number">0</span>,<span class="number">1</span>),<span class="number">5</span>,<span class="number">8</span>) <span class="comment">#以上构造了一个值区间为0~1,个数为40的5行8列随机数矩阵。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rownames(mydata) &lt;- LETTERS[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment">#以上使用前五个大写字母为矩阵行命名；</span></div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">colnames(mydata) &lt;- c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>,<span class="string">"Alibaba"</span>,<span class="string">"Baidu"</span>,<span class="string">"Twitter"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用以上文本向量为矩阵列命名；</span></div><div class="line">mynewdata&lt;-data.frame(mydata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar5.png" alt=""></p>
<p>将矩阵数据表格转化为数据框格式作图数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#为数据框增加一列文本字段：</span></div><div class="line">Name&lt;-c(<span class="string">"USA"</span>,<span class="string">"CHN"</span>,<span class="string">"UK"</span>,<span class="string">"RUS"</span>,<span class="string">"JP"</span>)</div><div class="line">mynewdata&lt;-data.frame(Name,mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar6.png" alt=""></p>
<h3 id="ggradar包："><a href="#ggradar包：" class="headerlink" title="ggradar包："></a>ggradar包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata[<span class="number">1</span>,])</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar8.png" alt=""></p>
<p>以上的图表是默认样式，ggradar函数对数据格式以及变量值范围高度敏感，而却不过多的依赖函数内的参数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggradar(mynewdata)</div></pre></td></tr></table></figure>
<p><img src="http://orm8l6eph.bkt.clouddn.com/ggradar/ggradar7.png" alt=""></p>
<p>可以看出，ggradar函数支持多序列雷达图，只是对它规定的数据结构很不能理解，为啥不是列代表分类，行代表轴变量呢，跟ggplot的语法还是有一些偏离，不过只要数据构造好之后，作图函数的语法是相当简练的。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> ggradar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[左手用R右手Python系列——字符串格式化输出]]></title>
      <url>/2017/06/24/%E5%B7%A6%E6%89%8B%E7%94%A8R%E5%8F%B3%E6%89%8BPython%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/</url>
      <content type="html"><![CDATA[<p>学习Python不到一个月，虽然学的很渣，但是还是想通过这种途径分享自己的学习心得，毕竟当初学习R语言也是这么走过来的。</p>
<p>今天是R语言与Python综合系列的第一篇，就聊一聊两者在常用字符串输出上的差异。</p>
<a id="more"></a>
<h3 id="R语言中的字符串格式化函数："><a href="#R语言中的字符串格式化函数：" class="headerlink" title="R语言中的字符串格式化函数："></a>R语言中的字符串格式化函数：</h3><p>为了方便统一案例图片的风格，今天统一在jupyter编辑器中编辑（R和Python）。</p>
<p>通常在R语言中我们使用最多的关于字符串输出函数是paste和paste0。</p>
<p>这两着之间的差别非常微小，如同其字面意思一样，前者可以自定义字符串间隔符号，后者则默认没有间隔符号。</p>
<p>paste和paste0都可以完成单个向量字符串的连接以及两个向量间的匹配。</p>
<p>生成10个随机大写字母作为案例：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myword&lt;-sample(LETTERS,<span class="number">10</span>,replace=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>我们可以打印出两个函数的详细参数表：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">paste</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, sep = <span class="string">" "</span>, collapse = <span class="literal">NULL</span>) <span class="comment">#sep参数默认间隔为空格</span></div><div class="line">.Internal(paste(list(<span class="keyword">...</span>), sep, collapse))</div><div class="line">paste0</div><div class="line"><span class="keyword">function</span> (<span class="keyword">...</span>, collapse = <span class="literal">NULL</span>)           <span class="comment">#sep没有间隔参数（无间隔）</span></div><div class="line">.Internal(paste0(list(<span class="keyword">...</span>), collapse))</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>单个向量的连接成字符串：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p>在拼接单个向量之时，通过设置collapse参数来控制字符之间的间隔符，最终输出一个单值字符串。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paste0(myword,collapse=<span class="string">"-"</span>)</div><div class="line"><span class="string">'Q-C-X-B-M-I-E-P-G-V'</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>我们可以看到，在拼接单个向量为字符串的过程中，paste和paste0两个函数并无太大区别，因为不涉及匹配参数sep。</p>
<p>通常情况下，我们使用paste和paste0做向量间的匹配情况比较多，这种情况多见于遍历网页，遍历日期等。</p>
<p>比如假如我们们要遍历一个网页的网址如下：</p>
<p>随机打开了网易云课堂的一个课程栏目，看到一共有22页课程，此时最简单的遍历网页方法就是通过paste或者paste0。</p>
<p><a href="http://study.163.com/category/400000000146050#/" target="_blank" rel="external">网易云课堂</a></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image3.jpg" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div><div class="line">num&lt;-<span class="number">1</span>:<span class="number">22</span></div><div class="line">myurl&lt;-paste(url,num,sep=<span class="string">""</span>);myurl</div><div class="line">myurl&lt;-paste0(url,num);myurl</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image4.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>对比两个函数的用法，大家应该能领会其中的差别了吧，paste0把paste的sep参数简化了，直接强制设定为无间隔，此时做向量间匹配的话，paste0函数就可以不用设置sep参数，而paste则需设置，当然虽然在遍历网页时确实节省代码，但也不是任何场合都是如此。</p>
<p>比如我要拼接时间与日期，而且要求以“-”间隔，此时你还是需要使用传统的paste函数来完成这个任务，因为paste0已经不存在sep参数了。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydate&lt;-paste(<span class="number">2001</span>:<span class="number">2005</span>,<span class="string">"06"</span>,sep=<span class="string">"-"</span>);mydate</div></pre></td></tr></table></figure>
<p>还有一个stringr包中字符串拼接函数str_sub()也可以高效的完成上述工作，但是因为需要额外加载包，所以平时我用的频率不高。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">str_c(myword,collapse =<span class="string">""</span>)</div><div class="line">str_c(url,num,sep = <span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>在R语言中，字符串格式化输出除了以上常见操作之外，还有一些非常重要的需求，比如格式化输出百分比，格式化输出日期时间等。</p>
<p>以百分比为例：</p>
<p>我们可以通过一些扩展包内提供的百分比构造函数来高效的完成百分比构造过程。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(sca)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">percent(seq(<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0.01</span>),d=<span class="number">2</span>,sep=<span class="string">""</span>) <span class="comment">#其中的参数控制百分比输出的小数点后位数。</span></div><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">percent(runif(<span class="number">10</span>,<span class="number">0</span>,<span class="number">1</span>))         <span class="comment">#percent函数说明了目前没法看到如何控制小数点显式位数。</span></div></pre></td></tr></table></figure></p>
<p><img src="http://os131vfyg.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>接下来跟大家介绍一个重量级的函数——sprintf。此函数据说来头不小。（据说继承自C/C++）,该函数的使用可以大大简化字符串格式化输出的操作流程。</p>
<ul>
<li>%d 整数    %02d   d代表整数；2代表长度；0代表不足长度用0补齐</li>
<li>%f 浮点数  %4.2f  第一个数字代表总位数；第二个数字代表小数点位数 </li>
<li>%s 字符串 </li>
<li>%% 百分比</li>
</ul>
<p>该函数的参数远不止这三个，太多我也记不住，而且平时使用频率最高的也就这三个，所以秉着投入回报率最高的原则，建议大家用什么记什么。</p>
<p>所以以上百分比过程便只剩下这么几个代码：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sprintf(<span class="string">"%d%%"</span>,<span class="number">1</span>:<span class="number">10</span>) <span class="comment">#遍历百分比</span></div><div class="line">sprintf(<span class="string">"%d-%d-%02d"</span>,<span class="number">2001</span>,<span class="number">12</span>,<span class="number">1</span>:<span class="number">30</span>) <span class="comment">#遍历日期：</span></div><div class="line">sprintf(<span class="string">"有%.1f%%的人评价变形金刚5较差"</span>,<span class="number">30.7</span>)</div><div class="line"><span class="string">'有30.7%的人评价变形金刚5较差'</span>   </div><div class="line">sprintf(<span class="string">"%s是阿里巴巴的%s"</span>,<span class="string">"马云"</span>,<span class="string">"老板"</span>)</div><div class="line"><span class="string">'马云是阿里巴巴的老板'</span></div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image8.jpg" alt=""><br><img src="http://os131vfyg.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>当然，以上过程完全可以通过paste和str_c函数完成，只是sprintf函数来写这些东西看起来更优化，更有逼格。</p>
<p>好了重于轮到Python了，对于一个小菜鸟来说，第一次写Pyhon的教程心情很忐忑，注意了下面要换编辑器了（虽然仍然使用的jupter里）。</p>
<h3 id="Pyhton字符串格式化输出函数"><a href="#Pyhton字符串格式化输出函数" class="headerlink" title="Pyhton字符串格式化输出函数:"></a>Pyhton字符串格式化输出函数:</h3><p>Pyhton中的字符串格式化输出大概有两套比较完善的系统（我所知的）。</p>
<ul>
<li>格式化符号：%s/d/f……</li>
<li>.format模式</li>
</ul>
<p>其实第一套系统应该也是源于C/C++(感觉跟R里面的格式化符号规则是一致的)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %s. I'm %d year old"</span> % (<span class="string">'raindu'</span>,<span class="number">26</span>))</div></pre></td></tr></table></figure>
<p>以上使用print函数输出了宝宝的大名和芳龄~_~,python中的字符串格式符规则是，在要输出的主句中对应位置插入格式符，在句尾之后使用 % 连接一个元组，元组内提供主句所有的待格式化的字符串，有几个需要格式化的字符串就需要在元组中提供几个字符串对象，而且顺序一定要与待格式化的字符串在主句的位置一一对应。</p>
<p>另一种方式可以使用字典进行字符传递。 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">"I'm %(name)s. I'm %(age)d year old"</span> % &#123;<span class="string">'age'</span>:<span class="number">26</span>,<span class="string">'name'</span>:<span class="string">'raindu'</span>&#125;)</div></pre></td></tr></table></figure>
<p>这种方式最大的好处就是，以命名参数的形式传入，这样可以不用考虑字典内的键值对顺序。（因为有名字可以索引）</p>
<p>Python中的字符串格式化符号相对于R规定的更加严格、细致，上述所述R中的字符串：%s、数值%d、浮点型%f是通用的。</p>
<p>除此之外，格式化符号内部还可以提供更为详尽的格式控制。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">%[(name)][flags][width].[precision]typecode</div><div class="line">(name)为名称</div><div class="line">flags可以有+,-,<span class="string">' '</span>或<span class="number">0</span>。+表示右对齐。-表示左对齐。<span class="string">' '</span>为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。<span class="number">0</span>表示使用<span class="number">0</span>填充。</div><div class="line">width表示显示宽度</div><div class="line">precision表示小数点后精度</div></pre></td></tr></table></figure>
<p>但是发现网上关于Python教程中，使用最多的还是.format这种字符串输出形式。</p>
<p><strong>format 函数：</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;2&#125;,&#123;1&#125;,&#123;0&#125;'</span>.format(<span class="string">"小伟"</span>,<span class="string">"大伟"</span>,<span class="string">"小三"</span>)</div><div class="line"></div><div class="line"><span class="string">'小三,大伟,小伟'</span></div><div class="line"></div><div class="line"><span class="string">'&#123;1&#125;和&#123;0&#125;是一对&#123;2&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div><div class="line"></div><div class="line"><span class="string">'小伟和大伟是一对基友'</span></div></pre></td></tr></table></figure>
<p>这种传参的方式可以看做是位置参数（顺序），即在要输出的主句中插入末尾提供的对应字符串位置，即可完成格式化过程。</p>
<p>如果你不想在主句对应的花括号内写位置参数，你必须保证末尾提供的字符串顺序与主句对应要插入的位置保持一致。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'&#123;&#125;和&#123;&#125;是一对好&#123;&#125;'</span>.format(<span class="string">"大伟"</span>,<span class="string">"小伟"</span>,<span class="string">"基友"</span>)</div></pre></td></tr></table></figure>
<p>当然，你也可以在format括号内内对字符串进行命名，然后将对应名字传入主句对应花括号内部。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"I'm &#123;name&#125;. I'm &#123;age&#125; year old"</span>.format(age=<span class="number">26</span>,name=<span class="string">'raindu'</span>)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>这种情况下你也不必考虑format括号内的字符串对应顺序，因为所有的字符串都有名称，只传入名称，函数即可自动完成索引配对。</p>
<p>使用以上两种方式都可以方便的遍历网页：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url=<span class="string">"http://study.163.com/category/400000000146050#/?p="</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'%d'</span> % i</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image12.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">myurl1=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">23</span>):</div><div class="line">    urlm=url+<span class="string">'&#123;&#125;'</span>.format(i)</div><div class="line">    myurl1.append(urlm)</div><div class="line">    print(urlm)</div></pre></td></tr></table></figure>
<p><img src="http://os131vfyg.bkt.clouddn.com/image13.jpg" alt=""></p>
<p>好了今天就这样了，要同时贯穿两门语言真的不是一件容易的事情，长路漫漫以后日子要苦逼了。</p>
<h3 id="本章汇总："><a href="#本章汇总：" class="headerlink" title="本章汇总："></a>本章汇总：</h3><p><strong>R语言字符串格式化输出：</strong></p>
<ul>
<li>paste/paste0</li>
<li>stringr::str_c</li>
<li>sca::percent</li>
<li>scales::percent</li>
<li>sprintf</li>
</ul>
<p><strong>Python字符串格式化输出：</strong></p>
<ul>
<li>格式化符号：%d/%s/%f等（规则与R中的sprintf大体一致）</li>
<li>.format格式化输出：</li>
</ul>
<p><strong>关于传参的规则：</strong></p>
<ul>
<li>使用格式化符号可以通过位置参数【比较好用】、命名参数来实现字符串格式化输出【使用字典反而繁琐了】。</li>
<li>使用.format格式化输出可以通过顺序参数（编号顺序）、位置参数（前后位置顺序需一致）、名称参数（比较自由不用考虑顺序）</li>
</ul>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> ggtech </tag>
            
            <tag> Python </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用优雅的配色来缔造图表专业主义~]]></title>
      <url>/2017/06/23/%E7%94%A8%E4%BC%98%E9%9B%85%E7%9A%84%E9%85%8D%E8%89%B2%E6%9D%A5%E7%BC%94%E9%80%A0%E5%9B%BE%E8%A1%A8%E4%B8%93%E4%B8%9A%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p><img src="http://orz7qelg0.bkt.clouddn.com/%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BF1.jpg" alt=""></p>
<p>总觉得以前自己写的东西太过琐碎，纠结于步骤和技巧，而没有任何体系上和理念上的输出；</p>
<a id="more"></a>
<p>而再加上自己文风粗陋（毕竟每一篇的错别字用十个手指头都数不完呀）、排版拙劣，还有那么多小伙伴儿不离不弃，肯于点赞，实在是感到惭愧（我一般都很少看自己写的东西的不忍直视哈哈）~</p>
<p>可能之前限于能力和实力，一直在跟着别人的步调走，始终在模仿；再加上自己过于追求数量，在质量上用心不多。</p>
<p>不过现在自我感觉好一些了，开始慢慢的思考一些深度的技巧运用，偶尔也会有一些纯理念的总结。</p>
<p>以后的更新频率打算保持在一周2~3篇左右，但是每一篇的内容会向着综合性、应用性方向转变。当然，关于内容排版和文章封面图都会多花一些心思，尽可能的提升一下阅读体验。</p>
<p><strong>下面是今天的干货~</strong></p>
<p>今天要跟大家分享的是如何在实际图表场景中运用ggtech包的配色及主题，案例是关于全球互联网公司市值比较（数据皆为真实数据，来源于搜狐网）。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>因为基础的ggplot2语法已经介绍过了，这里我就不介绍具体步骤了，直接使用最终调试好的代码。</p>
<p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggtech"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>数据导入：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div><div class="line">newdata&lt;-mydata[<span class="number">1</span>:<span class="number">5</span>,]</div></pre></td></tr></table></figure>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例演示："><a href="#案例演示：" class="headerlink" title="案例演示："></a>案例演示：</h3><h4 id="柱形图（全球市值top5互联网公司-）"><a href="#柱形图（全球市值top5互联网公司-）" class="headerlink" title="柱形图（全球市值top5互联网公司 ）"></a>柱形图（全球市值top5互联网公司 ）</h4><blockquote>
<p>数据截止2015年，单位：十亿美元</p>
</blockquote>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(reorder(Name,-Value),Value,fill=Name))+geom_bar(stat=<span class="string">"identity"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      theme(axis.title = element_blank(),</div><div class="line">      legend.position=c(<span class="number">0.85</span>,<span class="number">0.8</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image6.png" alt=""></p>
<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><p>以下用饼图来呈现前五大互联网公司的相对市值大小：</p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image8.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata[<span class="number">1</span>:<span class="number">4</span>,],aes(x=<span class="number">1</span>,y=Value,fill=Name))+</div><div class="line">      geom_bar(stat=<span class="string">"identity"</span>,color=<span class="string">"white"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">      labs(title=<span class="string">"Top5 Internet Companies"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in 2015"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.text = element_blank(),</div><div class="line">           axis.ticks = element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           axis.line=element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.1</span>,<span class="number">0.1</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image11.png" alt=""></p>
<h4 id="粗边面积图"><a href="#粗边面积图" class="headerlink" title="粗边面积图"></a>粗边面积图</h4><p>接下来用国内BAT三巨头的连续7年市值数据制作堆积的粗边面积图：</p>
<p>数据来源于<a href="http://www.14du.com/" target="_blank" rel="external">www.14du.com</a>  截止2015年，单位：亿美元</p>
<p><strong>导入数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mynewdata &lt;- read.table(<span class="string">"clipboard"</span>, header = <span class="literal">T</span>, sep = <span class="string">'\t'</span>)</div></pre></td></tr></table></figure></p>
<p>使用reshape2包进行转置塑性：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line">newmydata &lt;- melt(mynewdata, id.vars = c(<span class="string">"Year"</span>),variable.name = <span class="string">"Name"</span>, value.name = <span class="string">"Value"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>Airbnb风格:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image14.png" alt=""></p>
<p><strong>Esty风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image15.png" alt=""></p>
<p><strong>Fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image16.png" alt=""></p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"grey60"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image17.png" alt=""></p>
<p><strong>Twitter风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot(newmydata,aes(Year,Value,group=Name,fill=Name))+</div><div class="line">      geom_area(position=<span class="string">"stack"</span>)+</div><div class="line">      geom_line(col=<span class="string">"orange"</span>,size=<span class="number">2</span>,position=<span class="string">"stack"</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"twitter"</span>) + </div><div class="line">      labs(title=<span class="string">"Three Big Giant of Internet Companies in China"</span>, </div><div class="line">      subtitle=<span class="string">"Market value of Internet Co in China"</span>,</div><div class="line">      caption = <span class="string">"http://www.sohu.com/"</span>)+</div><div class="line">      guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">      theme(</div><div class="line">           panel.grid=element_blank(),</div><div class="line">           panel.background=element_blank(),</div><div class="line">           axis.title = element_blank(),</div><div class="line">           legend.position=c(<span class="number">0.2</span>,<span class="number">0.6</span>)</div><div class="line">           )</div></pre></td></tr></table></figure></p>
<p><img src="http://orz7qelg0.bkt.clouddn.com/image18.png" alt=""></p>
<p>真是不好意思，没有刹住车，糊里糊涂的就写了这么多，也忘记对代码做变量中转了，其实核心代码我就写了三个，其他都是Ctrl+V、Ctrl+V不停地狂点鼠标。</p>
<p>这个ggtech包前天刚分享过的，配色上很惊艳，很有科技范，非常适合用在商业数据分析中，说不定还能给你的领导带来惊喜呢，还等什么呢，赶快来试一试吧！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 图表美化 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> ggtech </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不经意间又发现了一个有趣又炫酷的包]]></title>
      <url>/2017/06/23/%E4%B8%8D%E7%BB%8F%E6%84%8F%E9%97%B4%E5%8F%88%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E5%8F%88%E7%82%AB%E9%85%B7%E7%9A%84%E5%8C%85/</url>
      <content type="html"><![CDATA[<p><img src="http://orz60j4aw.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>关于R语言可视化的内容，之前写有个系列，最近零零散散的又发现了一些好玩的包，刚学会就赶紧来跟大家分享~</p>
<a id="more"></a>
<p>这一篇分享一个围绕ggplot开发的主题包——ggtech。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>不过这个包依赖的ggplot2版本需要很高才能搭配使用（仔细了解了下，貌似要开发版的ggplot2）</p>
<p>所以在开始本篇分享之前，你需要保证自己已经下载了开发版的ggplot2包</p>
<ul>
<li>devtools</li>
<li>curl</li>
</ul>
<p>以上两个是下载开发版ggplot2的必备包</p>
<p><strong>然后运行以下代码：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">'hadley/ggplot2'</span>)</div></pre></td></tr></table></figure></p>
<p>也许会报错，你可能需要更新你的Rtools至最新版。</p>
<p>如果实在没法下载成功开发版的ggplot2的话，也不要着急，据说ggplot2最新版本马上就要提供更新了，再稍微耐心等待几天，就会有更新提醒的。</p>
<hr>
<p>之所以跟大家分享ggtech包是因为，该将几个全球著名的互联网公司官方用色做成了图表主题和配色模板，使用ggtech可以很容易的套用这些主题和配色模板。</p>
<p>还以diamonds数据集为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggtech)</div></pre></td></tr></table></figure></p>
<h3 id="主题套用："><a href="#主题套用：" class="headerlink" title="主题套用："></a>主题套用：</h3><p><strong>套用Airbnb主题</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-diamonds[diamonds$color %<span class="keyword">in</span>%LETTERS[<span class="number">4</span>:<span class="number">7</span>], ]</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">theme_tech(theme=<span class="string">"airbnb"</span>) + </div><div class="line">scale_fill_tech(theme=<span class="string">"airbnb"</span>) +</div><div class="line">labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_airbnb_fancy() + </div><div class="line">      scale_fill_tech(theme=<span class="string">"airbnb"</span>)  + </div><div class="line">      labs(title=<span class="string">"Airbnb theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div><div class="line">``` </div><div class="line">![](http://orz60j4aw.bkt.clouddn.com/image3.png)</div><div class="line"></div><div class="line"></div><div class="line">怎么样，配色系统还不错吧，那是自然的，这组配色是取自大名鼎鼎的Airbnb的官方用色，设计感和视觉体验那都是全球顶尖水平的。</div><div class="line"></div><div class="line">而且使用以上ggtech函数之后，语法上还是与ggplot体系保持一致，只是……竟然可以设置subtitle参数了禁简直太逆天了……</div><div class="line"></div><div class="line">要知道老版本ggplot2如果想要设置一个副标题，你要么需要使用写自定义函数，要么需要使用labs并且自己指定副标题的精确位置函数。（鬼才知道呢，要一点儿一点儿写位置参数不断尝试~—~）</div><div class="line"></div><div class="line">除了Airbnb的主题之外，还有几个著名互联网公司的颜色风格主题：</div><div class="line"></div><div class="line">**etsy风格：**</div><div class="line">```r</div><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      scale_fill_tech(theme=<span class="string">"etsy"</span>) + </div><div class="line">      labs(title=<span class="string">"Etsy theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>fackbook风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">      theme_tech(theme=<span class="string">"facebook"</span>) +</div><div class="line">      scale_fill_tech(theme=<span class="string">"facebook"</span>) + </div><div class="line">      labs(title=<span class="string">"Facebook theme"</span>, </div><div class="line">      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image5.png" alt=""> </p>
<p><strong>Google风格：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+</div><div class="line">     theme_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     scale_fill_tech(theme=<span class="string">"google"</span>) + </div><div class="line">     labs(title=<span class="string">"Google theme"</span>, </div><div class="line">     subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image6.png" alt=""> </p>
<p><strong>Twitter风格：</strong></p>
<pre><code class="r">ggplot(data,aes(carat,fill=color))+geom_histogram(bins=<span class="number">30</span>)+
      theme_tech(theme=<span class="string">"twitter"</span>) + 
      scale_fill_tech(theme=<span class="string">"twitter"</span>) + 
      labs(title=<span class="string">"Twitter theme"</span>, 
      subtitle=<span class="string">"now with subtitles for ggplot2 &gt;= 2.1.0"</span>)
</code></pre>
<p><img src="http://orz60j4aw.bkt.clouddn.com/image7.png" alt=""> </p>
<p>很惊艳吧有木有，想象一下你的图表如果都是这种配色，还会被领导嫌弃嘛！</p>
<p>这种国际顶尖互联网公司的配色风格，一般都是经由世界级的视觉与色彩设计师们的大手笔，无论是设计感还是艺术感上都是棒棒哒，用在自己的业务分析图表中，绝对可以给你的工作增色不少。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> ggtech </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot图表系统中的辅助线]]></title>
      <url>/2017/06/22/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%BE%85%E5%8A%A9%E7%BA%BF/</url>
      <content type="html"><![CDATA[<p>在之前的推送中，曾经有过一篇介绍excel图表辅助线的制作方法，其中用到的技巧五花八门、令人眼花缭乱。</p>
<a id="more"></a>
<p>而ggplot图表系统中的辅助线添加起来却异常简单，非常易于操作。</p>
<p>这主要得益于ggplot函数系统的图层控制理念以及该包的开发者很早就意识到图表辅助线这一层面的图表元素需求。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p>接下来我以几个案例的形式对图表辅助线操作进行演示：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Conpany"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="添加辅助线："><a href="#添加辅助线：" class="headerlink" title="添加辅助线："></a>添加辅助线：</h3><p>以上柱形图中，我们如果想要了解五个公司的销售额均值以及单个公司销售额与均值的对比情况，需要在图表中添加一条平均线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Conpany))+geom_bar(stat=<span class="string">"identity"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上通过geom_hline图层为柱形图添加了均值辅助线，但是大家一定好奇为啥均值线那么低，低于所有公司的销售额，因为均值是季度均值，而销售额是年度累计销售额。</p>
<p>接下来我们制作一个分季度的柱形图。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ory93arir.bkt.clouddn.com/image3.png" alt=""></p>
<p>当然这种均值线在分面状态下也是可以添加的。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(reorder(Conpany,-Sale),Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+geom_hline(aes(yintercept=mean(Sale)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+facet_grid(.~Year)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image4.png" alt=""></p>
<p>辅助线在散点图中也是经常使用的一种图表元素，它可以帮助我们对分布形态进行分割和归纳，使得数据分布形态及趋势更加明显。</p>
<p>接下来使用diamond数据集来展示散点图中的辅助线。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上散点图没有很明显的分散趋势，不过为了演示散点图中的辅助线，我还是将散点像素画处理，给散点图加上均值十字线。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price))+geom_point(shape=<span class="string">"."</span>)+geom_hline(aes(yintercept=mean(price)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)+geom_vline(aes(xintercept=mean(carat)),linetype=<span class="number">5</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image6.png" alt=""></p>
<p>像素化处理之后，再加上均值十字线，你可以清晰地看到，数据分布形态中，左下角最为密集。</p>
<p><strong>辅助线的另外一种常见的用途就是在时间序列数据中。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image7.png" alt=""></p>
<p>这里可以使用辅助线来标注我们最感兴趣的时间点数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(economics,aes(date,unemploy))+geom_line()+geom_vline(aes(xintercept=as.numeric(start)),data=presidential)</div></pre></td></tr></table></figure>
<p><img src="http://ory93arir.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; head(presidential)</div><div class="line">        name      start        end      party</div><div class="line"><span class="number">1</span> Eisenhower <span class="number">1953</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">2</span>    Kennedy <span class="number">1961</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> Democratic</div><div class="line"><span class="number">3</span>    Johnson <span class="number">1963</span>-<span class="number">11</span>-<span class="number">22</span> <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div><div class="line"><span class="number">4</span>      Nixon <span class="number">1969</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> Republican</div><div class="line"><span class="number">5</span>       Ford <span class="number">1974</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> Republican</div><div class="line"><span class="number">6</span>     Carter <span class="number">1977</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">1981</span>-<span class="number">01</span>-<span class="number">20</span> Democratic</div></pre></td></tr></table></figure>
<p>presidential数据集是一个美国历届总统的任期截止时间，通过添加总统任期时间点，我们甚至可以从经济波动数据中观察到经济指标变波动与政治周期的关系。</p>
<p>start是一个代表日期的字段，也就是说我们可以赋值给geom_vline函数一个字段，从而在折线图中绘制出多个时间点的辅助线。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[竟然是一个升级版的数据透视表,Tableau真的没有那么神秘~]]></title>
      <url>/2017/06/22/%E7%AB%9F%E7%84%B6%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8D%87%E7%BA%A7%E7%89%88%E7%9A%84%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8-Tableau%E7%9C%9F%E7%9A%84%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%A5%9E%E7%A7%98/</url>
      <content type="html"><![CDATA[<p><img src="http://orxaqmu8d.bkt.clouddn.com/2017-06-22_072855.jpg" alt=""></p>
<p>前一篇跟大家详述了关于Excel在作图理念上的诸多细节，今天让我们把交点聚焦于多分类维度的数据呈现问题。</p>
<a id="more"></a>
<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>当然今天这篇我会把视角从Excel切换到Tableau，没错就是Tableau。可能很多小伙伴儿已经了解过这款商务智能工具，这是一款目前市面上最成熟、最人性化的桌面端可视化工具（没有之一，至于PowerBI，我之后会写专门的实用贴来解释）。</p>
<p>相信很多小伙伴儿（特别是已经在职场已经混迹很多年的）对Excel中的数据透视表非常熟悉，没错Tableau就是一款升级版的数据透视表。</p>
<p>它不仅仅可以将原始的一维表数据透视为二维表格，它甚至强大到可以将原始数据直接透视成多维图表，所有的流程跟Excel的数据透视表几无二致。</p>
<p><strong>特色对比</strong></p>
<p>好吧，我要为我说过的话负责，接下来我们界面菜单布局和使用体验两个角度，以案例的形式来解释以上原因：</p>
<p>在正式介绍之前，我们应该明确的是，数据可视化其实就是在呈现一组由不同维度和度量组成的字段（变量），无论是一维、二维、三维甚至更高维的情况，所以所有的可视化形式都是建立在维度与度量等指标之上的，在导入数据源之后，你就应该有意识的熟悉数据结构，认识到所有的指标的属性（是维度还是度量）以及度量之间的关系（粒度的粗细，层级的高低）。</p>
<p>想强调的第二点是，数据可视化是一种数据变量间的关系探索。因而不要带着长久以来微软的Excel强加给你的关于可视化图表类型的限制，可视化形式应该服务于业务分析与关系挖据的需求，应该说我们是按照自己的目的去定制可视化的呈现形式的，至于单个的图表类型，那只是诸多可视化形式中使用频率比较高的几种而已，事实上的可以呈现数据的图形可视化形式远不止于此。</p>
<h3 id="关于Tableau与Excel数据透视表的界面高度一致："><a href="#关于Tableau与Excel数据透视表的界面高度一致：" class="headerlink" title="关于Tableau与Excel数据透视表的界面高度一致："></a>关于Tableau与Excel数据透视表的界面高度一致：</h3><p>Excel的数据透视表和Tableau的工作表都同时提供菜单式操作和页面式操作，而且操作体验和风格大致相当。</p>
<p>页面式操作——Excel：</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>页面式操作——Tableau:（Tableau界面只有一处筛选器，放在了菜单里）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image4.jpg" alt=""></p>
<p>菜单式操作——Excel：<br><img src="http://orxaqmu8d.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>菜单式操作——Tableau:（Tableau界面只有一处筛选器，放在了菜单里）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image3.jpg" alt=""></p>
<p><strong>我们把Excel和Tableau的页面式操作和菜单式操作窗口进行对比展示：</strong></p>
<p>页面式（Excel VS Tableau）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image15.png" alt=""></p>
<p>菜单式（Excel VS Tableau）</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image16.png" alt=""></p>
<p>表面上看，Tableau就是另一个翻版的Excel数据透视表，这在两者的界面设计理念以及菜单设计上就已经一清二楚。</p>
<p>行、列、值、筛选四大模块应有尽有。唯一的不同就在于，Tableau有了一个标识模块，而Excel是没有的。</p>
<p>接下来解释原因，看过我之前文章的小伙伴儿大概都已经有所熟知我所说的可视化视觉信号，视角信号可以是物理元素（点线面）也可以是色彩元素（透明度、色调等），当然更多的时候是点线面和颜色元素的组合。</p>
<p>当然文本也可以被称为一种视觉元素，毕竟文本是可以被我们的肉眼识别的视觉信息。</p>
<p>我们常说的字不如表、表不如图，其实严格来说三者表达的信息都是一致的，但是从视觉呈现上来说，我们人类都是视觉动物，大脑主观上更能接受由这些物理元素与颜色属性等视觉信号组成的混合图形（即图表）。</p>
<p>所以说Excel所完成的就是视觉呈现中的字和表，表示纯数字的，无需对其进行各种形状、颜色的修饰，所以Excel的透视表界面中除了行、列、筛选等三个常用维度容器之外，只有一个值容器（用于盛放度量指标）。</p>
<p>而Tableau中除了行、列、筛选等三个常用维度容器之外，更多的是通过标识来进行度量的视觉信号转化过程。（当然里面也是包含文本的，文本标识就完全可以胜任Excel数据透视表中的值呈现了）。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image17.png" alt=""></p>
<p>我们从上图中可以看到，Tableau的标识模块中，不但提供了文本呈现方式（效果就是数据投透视表啦），还有各种颜色、大小、线条、形状、详细信息（图表标签）、工具提示（图表弹窗）等。可以说你能想象到的可视化元素，机会都有了。</p>
<p>这才是一款成熟的可视化软件应该具备的样子。</p>
<h3 id="多维度数据呈现案例展示："><a href="#多维度数据呈现案例展示：" class="headerlink" title="多维度数据呈现案例展示："></a>多维度数据呈现案例展示：</h3><p>说了这么久，干巴巴的总要来几个案例练习一下，同样的数据，同样的菜单，同样的字段布局，这个解释可不可以给个满分。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>也会针对Excel而言，这已经是极限了，因为Excel数据透视表透视的仅仅是表而言，没法再多给出除了数字之外的信息，这时候就是Tableau大展身手的时候啦。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>我可以将单个指标大小映射给单元格背景颜色，这时候就可以做出类似Excel色阶功能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>同样也可以将单个指标映射给单元格的字体颜色，此时指标的大小可以通过字体颜色深浅来表达。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>我同样可以将指标映射给形状、大小等，同一个图表对象上，我们可以通过将同一个指标连续添加不同的映射属性上来扩展该图表信息呈现丰富度，也可以将指标添加到文本、详细信息、工具提示等选项上来丰富图表单个指标的信息解释功能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/imaeg9.jpg" alt=""><br><img src="http://orxaqmu8d.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>而tableau最最高明之处（我觉得）就是，利用维度透析的理念来按需完成可视化探索过程，而不会受制软件工具的技术限制，因为所有的规则都是透明的，方法和Excel的透视表示类似的、逻辑与使用者对数据结构的理解和业务逻辑的识别能力有关。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orxaqmu8d.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>维度呈现自如灵活，如行云流水，随心所欲，无所不能。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/image13.jpg" alt=""></p>
<p>辅助右上角的筛选器和图例菜单，动态效果立马显现，自助式BI的精髓表达的淋漓尽致。</p>
<p><strong>Tableau也支持很流行的地图数据可视化探索功能。</strong></p>
<p>通常需要在地图上呈现的数据形式无非两种：填充地区颜色以及添加基于坐标的气泡图（也可填色）。</p>
<p><img src="http://orxaqmu8d.bkt.clouddn.com/imaeg14.jpg" alt=""></p>
<p>这些形式都可以用Tableau模块中的对应可视化形式来完成，而如果能够精心设计配色和版式，合理选择可视化形式，Tableau完全可随意出版物级别的数据可视化仪表盘。</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjg0MDU3OTE1Mg==" frameborder="0" 'allowfullscreen'=""></iframe>

<p>更多关于Tableau的干活，请持续关注本公众号后续更新。</p>
<p>当然我所说的以上规则只适用于建立在笛卡尔坐标系下的普通图表，基于极坐标系、空间投影坐标以及想树状图、气泡云图等没有明显轴维度的图表类型并不适用，但是关于维度与度量的呈现规则是适用的，因为无论什么样的图表呈现的无外乎都是一组维度与度量的指标。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> Tableau </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
            <tag> Tableau </tag>
            
            <tag> 商务智能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——多图层叠加（离散颜色填充与气泡图综合运用）]]></title>
      <url>/2017/06/21/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%A4%9A%E5%9B%BE%E5%B1%82%E5%8F%A0%E5%8A%A0%EF%BC%88%E7%A6%BB%E6%95%A3%E9%A2%9C%E8%89%B2%E5%A1%AB%E5%85%85%E4%B8%8E%E6%B0%94%E6%B3%A1%E5%9B%BE%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>今天这一篇是昨天推送的基础上进行了进一步的深化，主要讲如何在离散颜色填充的地图上进行气泡图图层叠加。</p>
<a id="more"></a>
<p>为了使得案例前后一致，仍然使用昨天的数据集。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(sp)</div></pre></td></tr></table></figure></p>
<p><strong>导入中国省界地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">data1&lt;- china_map@data      </div><div class="line">data2&lt;- data.frame(id=row.names(data1),data1)</div></pre></td></tr></table></figure></p>
<p><strong>数据格式转化及业务数据合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1,data2, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>各省省会城市经纬度数据：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div></pre></td></tr></table></figure>
<h3 id="构造数据地图作图数据："><a href="#构造数据地图作图数据：" class="headerlink" title="构造数据地图作图数据："></a>构造数据地图作图数据：</h3><p><strong>根据自己的数据量级和具体业务需要设置分割点</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-mydata[,-c(<span class="number">5</span>,<span class="number">6</span>)]</div><div class="line">mydata$zhibiao&lt;-rnorm(<span class="number">33</span>,<span class="number">100</span>,<span class="number">50</span>)</div><div class="line">mydata$zhibiao&lt;-abs(mydata$zhibiao)</div><div class="line">mydata$zhibiao2&lt;-round(mydata$zhibiao,<span class="number">0</span>)</div><div class="line">mydata$fau &lt;- cut(mydata$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">250</span>))</div></pre></td></tr></table></figure></p>
<p><strong>将转换的分段因子变量重新命名为我们需要的分段阀值：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata$fam&lt;-factor(mydata$fau,levels=c(<span class="string">'(0,50]'</span>,<span class="string">'(50,100]'</span>,<span class="string">'(100,150]'</span>,<span class="string">'(150,200]'</span>,<span class="string">'(200,250]'</span>),labels=c(<span class="string">'0~50'</span>,<span class="string">'50~100'</span>,<span class="string">'100~150'</span>,<span class="string">'150~200'</span>,<span class="string">'200~250'</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<p><strong>将业务数据与地理信息数据合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>) </div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))</div></pre></td></tr></table></figure></p>
<h3 id="离散标度填充："><a href="#离散标度填充：" class="headerlink" title="离散标度填充："></a>离散标度填充：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(china_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orwbijg12.bkt.clouddn.com/image1.png" alt=""></p>
<p><strong>在离散颜色标度的基础上添加各省份散点图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>更该散点图为气泡图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">province_city$PerforamA&lt;-round(rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>),<span class="number">0</span>)</div><div class="line">province_city$Perforamb&lt;-round(rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>),<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orwbijg12.bkt.clouddn.com/image3.png" alt=""></p>
<p>本来打算再继续在气泡图的基础上进行颜色渐变填充呢，可以试了一下，这样的话前面的底图离散颜色标度填充的的时候已经使用过了一个fill属性设置选项，而要对气泡图进行颜色渐变填充就要再使用一次fill属性，可是目前为止我还不知道如何在多图层中出现多个fill属性的时候如何识别并分别进行标度设置，当我运行如下代码时，软件无法识别两个颜色标度设置分别对应的指标，因而图表无法跑出来：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA,fill=PerforamB),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+     </div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     scale_fill_gradient2(low=<span class="string">"DarkCyan"</span>, mid=<span class="string">"Azure"</span>, high=<span class="string">"Sienna"</span>, midpoint=median(province_city$PerforamB))+ </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<blockquote>
<p>Scale for ‘fill’ is already present. Adding another scale for ‘fill’, which will replace the existing scale.<br>Error: Discrete value supplied to continuous scale</p>
</blockquote>
<p>实在是太遗憾了，不知道哪位大神知道如何处理多图层相同的fill属性，可以告知在下，这里先行谢过了。</p>
<h3 id="处理标签问题："><a href="#处理标签问题：" class="headerlink" title="处理标签问题："></a>处理标签问题：</h3><p>最后来处理标签问题，为了防止页面杂乱不堪，我只用了PerforamA指标前十个标签。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">labelper&lt;-province_city[order(province_city[,<span class="number">5</span>],decreasing=<span class="literal">T</span>),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(x=jd+<span class="number">2.3</span>,y=wd,label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=labelper) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image4.png" alt=""></p>
<p>要是把所有的标签全部都添加到地图上的话，真的不太合适，本来图层就有两个，已经出现信息相互遮挡的情况了。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">ggplot() +</div><div class="line">     geom_polygon(data=china_data, aes(x=long,y=lat,group=group,fill=fam),colour=<span class="string">"white"</span>)+</div><div class="line">     geom_point(data=province_city,aes(x=jd,y=wd,size=PerforamA),shape=<span class="number">21</span>,fill=<span class="string">"#8E0F2E"</span>,colour=<span class="string">"black"</span>,alpha=<span class="number">0.6</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(x=jd+<span class="number">2.3</span>,y=wd,label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=province_city) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+  <span class="comment">#写入标题</span></div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>),size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.4</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orwbijg12.bkt.clouddn.com/image5.png" alt=""></p>
<p>所以标签的话，还是尽量越少越好，最好别添加，本来省级行政单位作为地理常识，已经是大家心知肚明的东西了，信息表达到位了就OK了。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 数据地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——数据地图离散百分比填充（环渤海）]]></title>
      <url>/2017/06/21/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%A6%BB%E6%95%A3%E7%99%BE%E5%88%86%E6%AF%94%E5%A1%AB%E5%85%85%EF%BC%88%E7%8E%AF%E6%B8%A4%E6%B5%B7%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>今天跟大家分享如何以百分比形式填充离散分段数据地图。</p>
<a id="more"></a>
<p>案例用环渤海三省二市的地理数据。</p>
<h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a>数据准备：</h3><p><strong>加载包：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(plyr)</div></pre></td></tr></table></figure></p>
<p><strong>数据导入、转换、抽取：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CHN_adm2 &lt;- readShapePoly(<span class="string">"c:/rstudy/CHN_adm/CHN_adm2.shp"</span>) </div><div class="line">CHN_adm2_1 &lt;- fortify(CHN_adm2)   </div><div class="line">data1 &lt;- CHN_adm2@data          </div><div class="line">data2 &lt;- data.frame(id=row.names(data1),data1)        </div><div class="line">china_map_data &lt;- join(CHN_adm2_1, data2, type = <span class="string">"full"</span>) </div><div class="line">huanbohai &lt;-subset(china_map_data,NAME_1==c(<span class="string">"Beijing"</span>,<span class="string">"Tianjin"</span>,<span class="string">"Nei Mongol"</span>,<span class="string">"Hebei"</span>,<span class="string">"Shandong"</span>))</div></pre></td></tr></table></figure></p>
<p><strong>建立业务数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">huanbohai_perm&lt;-data.frame(NAME_2=unique(huanbohai$NAME_2),zhibiao=rnorm(<span class="number">42</span>,<span class="number">100</span>,<span class="number">50</span>))</div><div class="line">huanbohai_perm$zhibiao&lt;-round(huanbohai_perm$zhibiao,<span class="number">0</span>)</div><div class="line">write.table (huanbohai_perm, file =<span class="string">"C:/rstudy/huanbohai.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><strong>业务数据导入及合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(<span class="string">"C:/rstudy/huanbohai.csv"</span>,header=<span class="literal">T</span>)</div><div class="line">huanbohai_map_data &lt;- join(huanbohai,mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>将转换的分段因子变量重新命名为我们需要的分段阀值：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">huanbohai_map_data$fau &lt;- cut(huanbohai_map_data$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">40</span>,<span class="number">80</span>,<span class="number">120</span>,<span class="number">160</span>,<span class="number">200</span>)) </div><div class="line">huanbohai_map_data$fam&lt;-factor(huanbohai_map_data$fau,levels=c(<span class="string">'(0,40]'</span>,<span class="string">'(40,80]'</span>,<span class="string">'(80,120]'</span>,<span class="string">'(120,160]'</span>,<span class="string">'(160,200]'</span>),labels=c(<span class="string">'0~40'</span>,<span class="string">'40~80'</span>,<span class="string">'80~120'</span>,<span class="string">'120~160'</span>,<span class="string">'160~200'</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure></p>
<h3 id="离散颜色标度填充（实际值分段）"><a href="#离散颜色标度填充（实际值分段）" class="headerlink" title="离散颜色标度填充（实际值分段）:"></a>离散颜色标度填充（实际值分段）:</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot(huanbohai_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orvigieh3.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上是昨天在东三省填充地图中所使用过的方法，接下来我解释一种新的填充方案，通过将数量段转换为百分比进行离散颜色标度填充：</p>
<h3 id="离散颜色标度分割（百分比数量段）："><a href="#离散颜色标度分割（百分比数量段）：" class="headerlink" title="离散颜色标度分割（百分比数量段）："></a>离散颜色标度分割（百分比数量段）：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">qa &lt;- quantile(na.omit(huanbohai_map_data$zhibiao), c(<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>,<span class="number">0.8</span>,<span class="number">1.0</span>))</div><div class="line">huanbohai_map_data$zhibiao_q&lt;-cut(huanbohai_map_data$zhibiao,qa,labels = c(<span class="string">"0-20%"</span>, <span class="string">"20-40%"</span>,<span class="string">"40-60%"</span>,<span class="string">"60-80%"</span>, <span class="string">"80-100%"</span>),include.lowest = <span class="literal">TRUE</span>)</div><div class="line">&gt; levels(huanbohai_map_data$zhibiao_q)</div><div class="line">[<span class="number">1</span>] <span class="string">"0-20%"</span>   <span class="string">"20-40%"</span>  <span class="string">"40-60%"</span>  <span class="string">"60-80%"</span>  <span class="string">"80-100%"</span></div></pre></td></tr></table></figure>
<p>通过将指标变量以分段百分比的方式进行分割，新建立一个百分比分段因子变量：</p>
<p><strong>离散渐变（百分比）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))</div><div class="line">ggplot(huanbohai_map_data,aes(long,lat))+</div><div class="line">     geom_polygon(aes(group=group,fill=zhibiao_q),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+</div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position =c(<span class="number">0.2</span>,<span class="number">0.7</span>),</div><div class="line">          legend.text.align=<span class="number">1</span></div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>带标签</strong></p>
<h3 id="接下来处理标签问题："><a href="#接下来处理标签问题：" class="headerlink" title="接下来处理标签问题："></a>接下来处理标签问题：</h3><p>创建各城市中心地理坐标：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(data1) mean(range(data1,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(huanbohai_map_data,.(city),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure></p>
<p><strong>填充并添加标签：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ggplot(huanbohai_map_data,aes(long,lat))+</div><div class="line">     geom_polygon(aes(group=group,fill=zhibiao_q),colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     geom_text(aes(label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=centres) +</div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+ </div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          legend.text.align=<span class="number">1</span>,</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.2</span>,<span class="number">0.7</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orvigieh3.bkt.clouddn.com/image3.png" alt=""></p>
<p>文件及代码分享在QQ群共享中.</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 数据地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——数据地图应用（东三省）]]></title>
      <url>/2017/06/20/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E5%BA%94%E7%94%A8%EF%BC%88%E4%B8%9C%E4%B8%89%E7%9C%81%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>今天是一个案例应用，采用东北三省地图进行离散颜色映射，让大家感受下R语言在地理信息空间可视化方面的强大功能，同时也会对之前强调过的地图配色技巧进行应用。</p>
<a id="more"></a>
<h3 id="加载工具包："><a href="#加载工具包：" class="headerlink" title="加载工具包："></a>加载工具包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)       <span class="comment">###绘图函数</span></div><div class="line"><span class="keyword">library</span>(plyr)          <span class="comment">###数据合并工具</span></div><div class="line"><span class="keyword">library</span>(maptools)      <span class="comment">###地图素材导入</span></div><div class="line"><span class="keyword">library</span>(sp)</div><div class="line"><span class="keyword">library</span>(Cairo)         <span class="comment">#图片高清导出</span></div><div class="line"><span class="keyword">library</span>(RColorBrewer)  <span class="comment">###有一些高质量的地图配色模板可以参考</span></div></pre></td></tr></table></figure>
<h3 id="数据导入、转换、合并、提取"><a href="#数据导入、转换、合并、提取" class="headerlink" title="数据导入、转换、合并、提取"></a>数据导入、转换、合并、提取</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CHN_adm2 &lt;- readShapePoly(<span class="string">"c:/rstudy/CHN_adm/CHN_adm2.shp"</span>) <span class="comment">#中国地理信息数据 </span></div><div class="line">CHN_adm2_1 &lt;- fortify(CHN_adm2)  <span class="comment">#转化为数据框 </span></div><div class="line">data1 &lt;- CHN_adm2@data           <span class="comment">#提取行政区划信息</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data2 &lt;- data.frame(id=row.names(data1),data1)        </div><div class="line">china_map_data &lt;- join(CHN_adm2_1,data2, type = <span class="string">"full"</span>) <span class="comment">#合并地理信息数据与经纬度数据</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng &lt;-subset(china_map_data,NAME_1==c(<span class="string">"Heilongjiang"</span>,<span class="string">"Jilin"</span>,<span class="string">"Liaoning"</span>))  <span class="comment">#抽取东北三省的合并数据信息</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image3.png" alt=""></p>
<p>到这里你可以查看一下东三省的市级行政单位详细信息：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">aaa&lt;-data.frame(name=unique(dongsansheng$NAME_2))</div><div class="line">aaa</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image4.png" alt=""></p>
<p>以上已经完成了东北三省的数据提取与整理工作，但是如果要使用自己的数据对各个市级行政进行填充，我们还需要自己制作一个业务数据文件文件，以前我都是将上一步的市级行政单位信息复制黏贴到excel表格中，然后建立业务数据，但是突然发现使用write导出函数可以很容易的将行政单位导出成csv格式数据，而且还避免手动黏贴造成的格式错误：</p>
<h3 id="构造作图数据："><a href="#构造作图数据：" class="headerlink" title="构造作图数据："></a>构造作图数据：</h3><p>同上，将市级行政单位提取出来，并附带建立一个指标变量。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_perm&lt;-data.frame(NAME_2=unique(dongsansheng$NAME_2),zhibiao=rnorm(<span class="number">35</span>,<span class="number">100</span>,<span class="number">20</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image5.png" alt=""></p>
<p>将指标变量保留整数<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_perm$zhibiao&lt;-round(dongsansheng_perm$zhibiao,<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<p>使用write函数将东三省的行政单位信息导出到数据文件目录下，并取名dongsansheng<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">write.table (dongsansheng_perm, file =<span class="string">"C:/rstudy/dongsansheng.csv"</span>, sep =<span class="string">","</span>, row.names =<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p>如果你需要最后显示各市中文名称的话，可以自己将各市中文名称添加到行政信息文件中，然后将指标列数据更换成自己的真实业务指标。当然如果想要直接使用拼音的话就不必添加中文名。</p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用read.csv函数将刚才整理好的带有业务数据的文件再次导入：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(<span class="string">"C:/rstudy/dongsansheng.csv"</span>,header=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p><strong>将业务数据与地理信息数据再次合并</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data &lt;- join(dongsansheng,mydata, type=<span class="string">"full"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image7.png" alt=""></p>
<p>至此，制作地图的信息已经全部整理完毕，接下来要正式开始进行填充填充：</p>
<h3 id="地图数据可视化："><a href="#地图数据可视化：" class="headerlink" title="地图数据可视化："></a>地图数据可视化：</h3><p>对于连续渐变填充的方法，之前已经有多篇推送进行介绍，这里还是给出代码，便于大家对不同的方法做出来的效果进行比较：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill=zhibiao)) +</div><div class="line">     geom_polygon(colour=<span class="string">"grey40"</span>) +</div><div class="line">     scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"steelblue"</span>) +</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     theme(              </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank()</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image8.png" alt=""></p>
<p>不要以为到这里就完事儿啦，精彩的好戏还在后头呢！</p>
<p>虽然我们使用连续渐变映射做出来了东三省的数据地图，可以如果我问你你能明确的告诉我某一个市的数值范围具体在那个数量段，你可以立马的告诉我吗，反正我是不能。</p>
<p>连续渐变只能给读者一个大小顺序上的感官印象，我们的依靠肉眼很难辨别出某一个地区的指标所处的数量段，这是连续渐变填充情况下的最大弊端：</p>
<p>经过一段时间的摸索，我终于找到了好的解决办法：下面就是通过数值分割的离散填充技巧具体步骤：</p>
<p><strong>首先要了解自己的业务指标具体分布情况：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">summary(dongsansheng_map_data$zhibiao)</div><div class="line"></div><div class="line">Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </div><div class="line"><span class="number">63.00</span>   <span class="number">93.00</span>   <span class="number">93.00</span>   <span class="number">98.73</span>  <span class="number">100.00</span>  <span class="number">161.00</span></div></pre></td></tr></table></figure></p>
<p><strong>计划将该指标在0~200之间均分为5份：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data$fau &lt;- cut(dongsansheng_map_data$zhibiao, breaks = c(<span class="number">0</span>,<span class="number">40</span>,<span class="number">80</span>,<span class="number">120</span>,<span class="number">160</span>,<span class="number">200</span>))</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">levels(dongsansheng_map_data$fau)</div><div class="line">[<span class="number">1</span>] <span class="string">"(0,40]"</span>    <span class="string">"(40,80]"</span>   <span class="string">"(80,120]"</span>  <span class="string">"(120,160]"</span> <span class="string">"(160,200]"</span></div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image9.png" alt=""></p>
<p>以上通过查看因子水平，我们得到了分割后的因子变量情况，但是直接将该因子变量作为离散颜色边度填充依据的话，那么图例中的因子变成就会默认使用（0，40]……很不美观，所以我们需要对各段因子变量进行重新命名：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dongsansheng_map_data$fam&lt;-factor(dongsansheng_map_data$fau,levels=c(<span class="string">'(0,40]'</span>,<span class="string">'(40,80]'</span>,<span class="string">'(80,120]'</span>,<span class="string">'(120,160]'</span>,<span class="string">'(160,200]'</span>),labels=c(<span class="string">'0~40'</span>,<span class="string">'40~80'</span>,<span class="string">'80~120'</span>,<span class="string">'120~160'</span>,<span class="string">'160~200'</span>),order=<span class="literal">TRUE</span>)</div><div class="line"></div><div class="line">levels(dongsansheng_map_data$fam)</div><div class="line">[<span class="number">1</span>] <span class="string">"0~40"</span>    <span class="string">"40~80"</span>   <span class="string">"80~120"</span>  <span class="string">"120~160"</span> <span class="string">"160~200"</span></div></pre></td></tr></table></figure>
<p>这样的分段更加符合我们的认知，看起来也更加的协调。</p>
<p><strong>接下来就是离散颜色标度的填充：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>))  <span class="comment">#首先定义字体，如果你特别追求字体细节的话</span></div></pre></td></tr></table></figure></p>
<p>填充函数：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image10.png" alt=""></p>
<p>这里因为指标全部是正值，且分割后的因子变量是有序因子变量，我用了RColorBrewer包中的单色调离散颜色方案。</p>
<p>其中Blues也是一个很好的选择：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data, aes(x = long, y = lat, group = group,fill =fam)) +</div><div class="line">     geom_polygon(colour=<span class="string">"white"</span>)+</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Blues"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+       </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>), </div><div class="line">          legend.text.align=<span class="number">1</span>, <span class="comment">###图例标签右对齐             </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image11.png" alt=""></p>
<p>这个包的配色方案中还有很多非常漂亮的颜色，大家可以依次尝试。</p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image12.png" alt=""></p>
<p><strong>接下来我们来处理各省份的标签问题：</strong></p>
<p>这里有一个很棘手的问题，因为要想给各个城市设置标签，我们必须知道各个城市详细的经纬度数据，而我们的数据集中有的经纬度数据是各城市的轮廓线数据，并没有各城市（城市中心）精确的经纬度数据，所以这里只能勉为其难的取各个城市区域的中心位置作为添加标签的依据（哪位小伙伴儿如果能够获取详细的城市中心经纬度数据，可以共享一下，虽然也可以一个一个的通过百度地图查找当时毕竟效率低）。</p>
<p>获取各个城市区域中心经纬度坐标：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(data1) mean(range(data1,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(dongsansheng_map_data,.(city),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure>
<p><img src="http://orumtgac4.bkt.clouddn.com/image13.png" alt=""></p>
<p>接下来就添加标签：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(dongsansheng_map_data,aes(long,lat)) +               </div><div class="line">     geom_polygon(aes(group=group,fill=fam),colour=<span class="string">"white"</span>) +</div><div class="line">     scale_fill_brewer(palette=<span class="string">"Greens"</span>) +  <span class="comment">###Blues&amp;Greens</span></div><div class="line">     geom_text(aes(label=city),size =<span class="number">3</span>,family=<span class="string">"myFont"</span>,fontface=<span class="string">"plain"</span>,data=centres) +</div><div class="line">     ggtitle(<span class="string">"某公司2015~2016年度营业状况分布图"</span>)+    </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+  </div><div class="line">     theme(  </div><div class="line">          title=element_text(family=<span class="string">"myFont"</span>),             </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.6</span>)</div><div class="line">          )</div></pre></td></tr></table></figure></p>
<p><img src="http://orumtgac4.bkt.clouddn.com/image14.png" alt=""></p>
<p>到此，整个数据地图填充完毕，今天这篇主要针对离散标度颜色填充进行，还有一类离散颜色标度填充方式是将具体的数值转化成百分比数量段进行填充，作为该篇的续集下次再讲，代码文件和数据将会分享在魔方学院QQ群里供群友下载。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 数据地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[那些培训师都不曾告诉你的关于Excel图表的秘密~]]></title>
      <url>/2017/06/20/%E9%82%A3%E4%BA%9B%E5%9F%B9%E8%AE%AD%E5%B8%88%E9%83%BD%E4%B8%8D%E6%9B%BE%E5%91%8A%E8%AF%89%E4%BD%A0%E7%9A%84%E5%85%B3%E4%BA%8EExcel%E5%9B%BE%E8%A1%A8%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      <content type="html"><![CDATA[<p>这是一篇关于Excel数据可视化的心得汇总！</p>
<a id="more"></a>
<p>Excel对宽数据和长数据的适用范围：</p>
<h3 id="Excel的图表模块更适合宽数据"><a href="#Excel的图表模块更适合宽数据" class="headerlink" title="Excel的图表模块更适合宽数据"></a>Excel的图表模块更适合宽数据</h3><p>（即汇总过的二维表）；</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image1.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image2.jpg" alt=""></p>
<p>在长表中，我将选中得三列全部作为簇状柱形图的数据源，默认的柱形图如下所示，虽然在横轴上也出现了两个维度信息（公司维度、日期维度），但是两个维度布局的很不友好。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image3.jpg" alt=""></p>
<h3 id="Excel图表数据源行列限制规则："><a href="#Excel图表数据源行列限制规则：" class="headerlink" title="Excel图表数据源行列限制规则："></a>Excel图表数据源行列限制规则：</h3><p>针对宽数据而言，Excel并不严格限定行列（允许行列自由转置），过渡的自由有时候会造成制图效率的低下，所以如果等领会我接下来交给你的心得，那么你的制图效率将会提高很多。</p>
<p>在详细解释以上内容之前，你需要对数据结构中的基本概念有所了解，即什么叫维度、什么叫度量。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image4.jpg" alt=""></p>
<p>如果不那么严格的进行定义，你可以粗略的将数值型指标当做度量（并不绝对，要视实际意义而定），类别型指标视作度量。（这其实对应于统计学中的变量类别划分标准：定类变量/定序变量——维度，定距变量/定比变量——度量）</p>
<p>了解变量类型之后，我们可以知道，我们的源数据包含两个维度（公司、日期），一个度量（对应日期某公司的指标）。</p>
<p>源数据的维度之间可以自由的转职（与线性代数中的转至概念没什么差别，就是行列位置的对应调整，并不改变具体度量值，改变的只是呈现数据的方式）。</p>
<p>转至在Excel中有两种方式可以完成，一种是复制数据源，选择性黏贴——行列转换。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>另一种则是在已经完成的默认图表选择菜单中点击行列数据变换。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>我使用同一数据源的原始维度和转之后的维度分别插入了默认的簇状柱形图。结果如下。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image6.jpg" alt=""></p>
<p>仔细分析以上数据源与默认图表的行列对应关系你会发现，三个字段的位置在原始表格与图形化后的图表上分布及其有规律。</p>
<p>列标题总是对应图表中的横轴，行标题总是对应图表中的图例。而度量总是呈现在图表的纵轴（数量轴）上。</p>
<p>这个规律是Excel图表的默认规则，当然你不必要严格执行此规则，那么不执行的后果就是，如果维度呈现的顺序不符合你的意图，你要么需要在源数据中进行数据转至，要么需要在图表的选择菜单里进行行列变化，进而转换成你中意的图表呈现形式。</p>
<p>所以结论就是，你的数据源组织，需符合以下要求：</p>
<p>1、想要对比的维度按列分布；（最终将会呈现在X轴上）<br>2、需要分类的维度按行分布：（最终通过图例中的颜色分类进行区分）。<br>3、行列虽然可以自由变换（通过数据源选择性黏贴转至或者在图表的选择菜单中进行行列变换），但一定要想清楚你的图表侧重对比那个维度，按照那个维度分类。</p>
<h3 id="Excel与数据聚合功能："><a href="#Excel与数据聚合功能：" class="headerlink" title="Excel与数据聚合功能："></a>Excel与数据聚合功能：</h3><p>Excel的图表模块并没有数据聚合功能。（原因大概是这个模块并不能识别因子变量）。</p>
<p>我所说的聚合是指，通过将一组分类指标（一个维度与一个度量）按照类别分开并计算各类的均值、众数、中位数、方差、标准差、求和计算等。</p>
<p>所以，无论你的维度理念包含多少类别，Excel图表都只会把单个观测值视作单独的指标，这是它与主流可视化工具以及编程类工具在可视化功能上的最大差别和缺憾，也是验证上述观点中：Excel图表模块专为二维表（宽数据）所设计的证据之一。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>以上图示中，列是一个呈现公司维度的指标，这种维度在数据库中非常常见，可能是日期的细分维度、也可鞥是地区的细分维度。</p>
<p>但是Excel的默认图表将维度的单个观测全部视作唯一值，而不会对齐进行任何分类聚合操作。</p>
<p>所以我们要想直接呈现汇总后的图表，需动用数据透析表进行维度透析，或者，将其整理成二维表制作多分类的可视化图表。</p>
<p>（以上操作同样适合条形图，只是条形图实质上相当于将柱形图向右旋转了90，所以条形图的行列概念与柱形图刚好颠倒过来）</p>
<h3 id="Excel维度指标的识别："><a href="#Excel维度指标的识别：" class="headerlink" title="Excel维度指标的识别："></a>Excel维度指标的识别：</h3><p>这里先放四张图供大家思考：</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image8.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image9.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image10.jpg" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image11.jpg" alt=""></p>
<p>我想大家一定看出了些猫腻，但是好像还不说不出其中的端倪。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>我是这么理解的，Excel的图表模块是通过行列标题来自动探测并识别维度指标的。以上四幅图最符合我们需求的的应该是第一张图，该图完整的呈现了两个维度和度量的信息。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>图二中，我们在首行首列的位置放入了一个YEAR的名称，我们理所当然的以为这个只是首列的标题而已，可是Excel并没有这么智能，它将其视作与后几列同样性质的公司维度中的一个名称。因为首列也成了一个特殊的公司（日期则成了该特殊公司的另一个维度不同水平的指标）。</p>
<p>所以整个图表的行维度（公司数）变成了6个，而因为没有定义列维度（原始数据中失去了行标题，其实是有的，但是因为添加了一个首行首列交叉位置的YEAR标签，结果Excel将首行作为列的一个维度，因而也就不存在名义上的日期维度分类）。</p>
<p>尽管Excel不知道丢失的维度的具体水平及名称，可是改变不了原始数据是一个二维表这样一个事实，因而还是给丢失的维度信息在图表中补全了，但是是通过默认的系列1、系列2、系列3……等方式来弥补的。</p>
<p><strong>接下来看图示3：</strong></p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image10.jpg" alt=""></p>
<p>该图的原始数据仍然是一个二维表，但是只有明确的行列维度信息（你以为你写了一组2012、2013^2016这么一组有规律的数据，Excel就能明白这是一个日期维度呀，那你真的是想多了，它跟其他的数值型指标没有任何的区别），与图2的过程类似，维度信息的丢失改变不了原始数据是二维表这样一个事实。因而Excel仍然会帮其补全行列维度（图表横轴补全了原始表列维度信息【即我们想当然以为当做行维度信息的日期和后5列指标】，图表纵轴补原始表中行维度信息，此时行为度信息已经不是我们想当然以为的那个日期指标，而是一组未知度量）。</p>
<p><strong>图示4：</strong></p>
<p>图示4中只明确了表格中列维度信息，而没有声明行维度信息，因为不存在错误识别，该状况下，Excel可以很完美的识别列维度（呈现在图表的横轴上）。而丢失的行维度信息则自动补全（呈现在图例的分类颜色指标上）。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image11.jpg" alt=""></p>
<p>综上所示，Excel识别维度信息是通过原始二维表表结构中的首行首列标签来识别的(切记不要在首行首列中写入任何信息，一定要留白、一定要留白、一定要留白)。</p>
<p>倘若不慎将首行首列（即行列维度标签的交叉单元格）标签交叉位置写入任何内容，那么结果是致命性的，你的列为度（也就是图表的横轴上）会被加入一个虚假的维度类别指标。</p>
<h3 id="关于作图效率："><a href="#关于作图效率：" class="headerlink" title="关于作图效率："></a>关于作图效率：</h3><p>以下是分别在Excel中制作多分类序列图表和其他软件工具（包含桌面端可视化工具以及编程工具等）所分别适用的数据源。</p>
<p><img src="http://ortu7ddty.bkt.clouddn.com/image13.png" alt=""><br><img src="http://ortu7ddty.bkt.clouddn.com/image14.png" alt=""></p>
<p>从效率上来说，自然是其他 工具能更高一些，Excel将每一个分类都视作一个列字段（典型二维表风格），其他的工具是通过将分类序列进行堆栈操作，聚合成一个包含类别变量（因子变量）和一个度量（数值型变量）从而大大简化了数据源，这在分类特别特别多的时候具有很大的优势。（想象一下如果有一千个分类，你难倒要在Excel里面列出1001个列字段吗，使用二维表仍然是三个字段，公司名称、日期，指标）。</p>
<p>当然 也不能说Excel这种二维表作图一无是处，二维表直观易懂，其本事就兼具图形化的信息呈现功能，否则为什么很多专业的报告中除了图表之外，包含很多表格呢，而一维表这种篇原始（但是易于存储）结构的数据应该不会常用于报告中。</p>
<p>所以说对于小数据或者二维表而言，Excel的图表工具还是非常适于此种可视化场景，而要是将二维表用于其他攻击高来进行可视化（可视化桌面端工具或者编程工具），则你需要额外进行数据的长宽转换。<br>（关于数据长宽转换以及多维数据集在不同可视化工具中的最有可视化解决方案，我会专门列一篇进行分析讲解）</p>
<p>以上关于行列维度的分析并不适用于呈现连续性数据的图表类型（如直方图、散点图、气泡图等），原因很简单，如果图表的二维坐标系中都呈现连续性指标，那么也就无所谓维度了，维度是针对分类资料所定义的一种特殊指标，连续性指标也就只剩下度量指标啦。</p>
<p>事实上Excel出了为二维表作图而生之外，还是转门为分类数据可视化而生的（可能我说的比较绝对了，大家不要喷我），为什么的，原因有两个：</p>
<ol>
<li><p>Excel的现存图表库中绝大多数图表是适应分类数据作图，（只要一个轴支持分类数据即可算作离散数据可视化类型，而真正用于连续性数据可视化呈现的图表类型及其少，比如散点图【你会发现Excel的散点图也是支持类别变量的】、气泡图、直方图【直方图以往都是在数据分析库模块中，需要单独调用才能使用，近期才加入普通图表的菜单入口】）。</p>
</li>
<li><p>普通的业务分析场景下，更多的是不同维度间的交叉对比和汇总分析，而连续数据的可视化多用于预测与建模，这在学术研究中（时间序列数据的建模）以及企业的战略数据挖掘部门（市场拓展与销售预测等）使用场景比较多，而且数据量一般都大。（这也决定了Excel使用的局限性，即更适合客观呈现、适合分类资料的汇总可视化，不适合用于大数据量的挖掘呈现）。</p>
</li>
<li><p>当然我还有一个证据在证明我以上的看法，那就是最近两年微软公司尽心尽力培育的PowerBI商务智能系统，在数据源上完美支持主流数据库，可视化形式上使用一维表进行操作，在数据量上也大大突破了Excel所能承受的量级。这或许就是当前大数据如火如荼的形势下，微软的office系统显然已经无法支撑大数据下的分析与可视化需求，必须布局其自己的大数据分析与可视化系统。</p>
</li>
</ol>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> Excel </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Excel </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot图表中的线条]]></title>
      <url>/2017/06/19/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E7%BA%BF%E6%9D%A1/</url>
      <content type="html"><![CDATA[<p>今天跟大家分享的是<code>ggplot</code>图表中的一类重要元素——线条。</p>
<p>不要觉得专门为线条写一章推送有点小题大做，其实线条对于图表而言，功不可没，即便是不起眼的网格、轴线、或者线条的粗线、线型、磅数等都将决定着你的图表品质。</p>
<p>R语言中ggplot函数系统中涉及到线条的地方有很多，最常见的场景就是我们做<code>geom_line()</code>（折线图）、<code>geom_path（）</code>(路径图),以及图表的绘图区（<code>panel</code>）、图表区、网格系统（<code>grid</code>）中所涉及到的线条。</p>
<a id="more"></a>
<p>今天以一个折线图为例，简要说明ggplot函数中关于线条的主要参数及其效果。</p>
<h3 id="数据构造过程："><a href="#数据构造过程：" class="headerlink" title="数据构造过程："></a>数据构造过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(reshape2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Company = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">4000</span>,<span class="number">3200</span>,<span class="number">2800</span>,<span class="number">3700</span>),Sale2016 = c(<span class="number">6000</span>,<span class="number">4800</span>,<span class="number">4500</span>,<span class="number">3500</span>,<span class="number">4300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Company"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<h3 id="案例引入："><a href="#案例引入：" class="headerlink" title="案例引入："></a>案例引入：</h3><p>我先用一个简单的折线图代码跑出来一个折线图：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,fill=Year))+geom_line()</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orssvamao.bkt.clouddn.com/image2.png" alt=""></p>
<blockquote>
<p>geom_path: Each group consists of only one observation. Do you need to adjust the group aesthetic?</p>
</blockquote>
<p>当我用以上代码运行的时候，软件报错，提示如上：</p>
<p>图表展示区给出了一个只有坐标系的空白图表；</p>
<p>相信根据英文意思也可以明白怎么回事，因为我们给折线图的X轴映射是一个离散的因子变量，而默认状态下软件会将单条记录都会视作一个分类，这样肯定是无法出来图表的，而如果是一个连续变量，则会只会当做一个类别进行映射。</p>
<p>我们使用过ggplot内内置数据集验证我们的猜想。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">head(LakeHuron)</div><div class="line">LakeHuron$data&lt;-seq(<span class="number">1875</span>,<span class="number">1972</span>,<span class="number">1</span>)</div><div class="line">ggplot(LakeHuron,aes(data,LakeHuron))+geom_line()</div></pre></td></tr></table></figure></p>
<h3 id="参数解释说明："><a href="#参数解释说明：" class="headerlink" title="参数解释说明："></a>参数解释说明：</h3><p>以上使用了一个时间序列数据，很顺利的完成了折线图的制作。</p>
<p>那么针对离散变量的折线图到底如何来做呢，我们可以通过group指定分组的形式来达到目的。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Company,Sale,group=Year,fill=Year))+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image3.png" alt=""></p>
<p>通过指定group即告知软件将变量按照年份变量分组，否则单个不重复记录都会被当做一个单独分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year))+geom_line()+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point()  <span class="comment">#按照年份分组的同时按照年份进行线条的颜色映射</span></div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image5.png" alt=""></p>
<h3 id="参数变化的对比效果："><a href="#参数变化的对比效果：" class="headerlink" title="参数变化的对比效果："></a>参数变化的对比效果：</h3><p>接下来通过对线条内部参数的修改，我们可以体会到ggplot对于线条细节的把控是多么的专注：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image6.png" alt=""></p>
<p>线条的参数主要有<code>size</code>、<code>colour</code>、<code>linetype</code>.</p>
<p>其中线条的类型主要有<code>0=blank</code>,<code>1=solid</code>,<code>2=dashed</code>,<code>3=dotted</code>,<code>4=dotdash</code>,<code>5=longdash</code>,<code>6=twodash</code></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>每一个类型示例如下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line()+geom_point() </div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">1</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">2</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">3</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">4</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">5</span>,size=<span class="number">1.5</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(linetype=<span class="number">6</span>,size=<span class="number">1.5</span>)+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orssvamao.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>下面是关于线条粗度的不同感知：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">1</span>,linetype=<span class="number">1</span>)+geom_point() </div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">3</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">4</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">5</span>,linetype=<span class="number">1</span>)+geom_point()</div><div class="line">ggplot(newdata,aes(Company,Sale,group=Year,colour=Year))+geom_line(size=<span class="number">6</span>,linetype=<span class="number">1</span>)+geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://orssvamao.bkt.clouddn.com/image8.png" alt=""></p>
<p>以上依次使用的线条粗度值为1,2,3,4,5,6，大家可以通过图表感受到ggplot图表中线条的粗度变化规律。</p>
<p>除了折线图（以及路径图，等图层中的线条之外），在theme系统中存在大量的关于线条的属性设置(网格系统、图表边框、轴线、图例系统)，均可以参照以上参数进行设置。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 图表美化 </tag>
            
            <tag> theme </tag>
            
            <tag> 视觉信号 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Word天呀，气泡图居然还有这种操作~]]></title>
      <url>/2017/06/19/Word%E5%A4%A9%E5%91%80%EF%BC%8C%E6%B0%94%E6%B3%A1%E5%9B%BE%E5%B1%85%E7%84%B6%E8%BF%98%E6%9C%89%E8%BF%99%E7%A7%8D%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>在之前写实习僧爬虫可视化案例之时，曾经用过一个很类似气泡图的图表——气泡云图（superbubble）。</p>
<p>它的图表信息呈现与文字云非常相似，都是在控制一组元素的大小，文字云的大小是文字，气泡云图的大小是形状（气泡）。</p>
<a id="more"></a>
<h3 id="关于可视思维的一些感想："><a href="#关于可视思维的一些感想：" class="headerlink" title="关于可视思维的一些感想："></a>关于可视思维的一些感想：</h3><p>虽然看起来，它与普通气泡图比起来非常相似，但是实质上数据信息含量已经大相径庭，气泡图实际上使用了三个指标变量，而气泡云图仅适用了两个（而且仅有大小变量是数值型的）。</p>
<p>实际上以上对比是为了启发大家一种认识图表的思路：</p>
<p>通常情况下，我们被各种课程或者书籍指导着，认识到的可视化无一例外的是从数据如何转换为图表，坦白的说，这中思路问题不大，至少没有方向性的失误。</p>
<p>但是可视化是一套理念，而非流程或者过程，从数据到图表仅仅解决的是数据（变量）通过视觉信号映射到图表的过程，更为完善的可视化视角应该是：</p>
<p>你既要知道视觉元素是是如何通过数据映射到图表上的，更要知道一张已经被映射完成的图表，其视觉信号如何还原为原始的数据结构，毕竟很多职场人士是先看到自己觉得满意的图表之后，再回过头来思考自己的数据怎么做成那种理想的图表。</p>
<p>即可视化是一套从数据信息到视觉信息，再由视觉信息还原数据信息的过程。（个人愚见）</p>
<p>今天要讲的气泡云图，你可以这么理解，我们有一组指标（离散），并且想要呈现（从宏观上）该组指标的客观大小。以上属于正向的从数据到图表的可视化思维。</p>
<p>更加常见的情况是，我看到了一张非常漂亮的气泡云图，我想要将其用在我的项目或者业务报告之中，那么你一定要搞明白，你是否有这么一组指标（数据），仅需从宏观上呈现其大小。（因为这种需求有很多图表类型可以运用，而且达到的目的大同小异）。</p>
<p>这里仍然以之前那个实习僧职位需求top100企业为例：</p>
<p>我会分别使用PowerBI、Tableau、R语言来制作这一案例。</p>
<h3 id="PowerBI："><a href="#PowerBI：" class="headerlink" title="PowerBI："></a>PowerBI：</h3><p>我完成后的整个软件界面是这样的，大家可以看到，我只使用了两个字段：分别是一个文本标签和一组对应频率。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image1.jpg" alt=""></p>
<p>在superbubble的菜单中，刚好对应category选项和Role_DisplayName_Values字段。</p>
<p>就这样，完成了PowerBI中的气泡云图的制作。（该图表对象并非PowerBI内置图表对象，需要在其官方的在线社区中下载对应插件并加载之后才可用）。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image2.jpg" alt=""></p>
<h3 id="Tableau"><a href="#Tableau" class="headerlink" title="Tableau:"></a>Tableau:</h3><p>在Tableau操作界面中，仍然是使用两个字段，我将文本字段作为标签，freq作为大小映射给了该图表对象，同时因为Tableau系统中的图形对于颜色设置了非常严格的使用标准，所以默认是单色的，为了不过于单调，我将freq又映射给了一个颜色标度。（由此可见Tableau在数据可视化领域的专业性和权威性，PowerBI一直是在替用户选择，Tbaleau是用户掌握选择权）。</p>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image3.jpg" alt=""><br><img src="http://orrrzlir6.bkt.clouddn.com/image4.jpg" alt=""></p>
<h3 id="R语言："><a href="#R语言：" class="headerlink" title="R语言："></a>R语言：</h3><p>R语言的官方社区中没有气泡云图（superbubble），但是在HTMLwidgets的开发者社区里，有一个制作该图表的扩展包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">"jcheng5/bubbles"</span>)</div><div class="line"><span class="keyword">library</span>(bubbles)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div></pre></td></tr></table></figure></p>
<p><strong>example：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bubbles(value = runif(<span class="number">26</span>),label=LETTERS,color=rainbow(<span class="number">26</span>, alpha=<span class="literal">NULL</span>)[sample(<span class="number">26</span>)])</div></pre></td></tr></table></figure></p>
<p><strong>以下接前面案例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(&quot;D:R/File/shixiseng_job.csv&quot;,stringsAsFactors=FALSE,check.names=FALSE)</div><div class="line">color1&lt;-brewer.pal(9,&quot;YlOrRd&quot;)</div><div class="line">color2&lt;-brewer.pal(9,&quot;Greens&quot;)</div><div class="line">color&lt;-c(color1,color2)</div><div class="line">colorpan&lt;-sample(color,100,replace = TRUE)</div><div class="line">bubbles(value =mydata$Freq,label=mydata$Var1,color=colorpan)</div></pre></td></tr></table></figure>
<p><img src="http://orrrzlir6.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>简单几行代码，一幅还算看的过眼的superbubble图表就完美出炉了，关键是，它的信息呈现角度与众不同，给人的视觉感受比较震撼，令人耳目一新，心领神会。</p>
<h3 id="本文总结："><a href="#本文总结：" class="headerlink" title="本文总结："></a>本文总结：</h3><p><strong>总结一下今天的分享概要：</strong></p>
<p>1 可视化的两个环节：</p>
<ul>
<li>从数据到图表——数据元素到视觉信号的映射过程</li>
<li>从图表到数据——视觉信号还原为数据结构的过程<br>2 图表的数据信息含量一致，与所使用的软件无关：</li>
</ul>
<p>因而所有的可视化工具在设计底层理念的时候，都是有规律的，不要害怕软件操作难，我们掌握心法就好。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 气泡云图.superbubble </tag>
            
            <tag> PowerBI </tag>
            
            <tag> Tableau </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot图表配色技巧]]></title>
      <url>/2017/06/18/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E5%9B%BE%E8%A1%A8%E9%85%8D%E8%89%B2%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>今天跟大家分享ggplot图表的配色原理与基本技巧。</p>
<p>图表配色是一个很深奥的话题，多亏了R语言平台的众多开发者贡献的配色包，让图表的配色不再深不可测。</p>
<a id="more"></a>
<h3 id="图表配色常用类型："><a href="#图表配色常用类型：" class="headerlink" title="图表配色常用类型："></a>图表配色常用类型：</h3><p><strong>这里我暂且将所有的配色场景划分为两类：</strong></p>
<blockquote>
<p>离散变量配色与连续变量配色</p>
</blockquote>
<p><code>ggplot</code>函数的配色机制相对来说比较智能，当你给<code>colour</code>或者<code>fill</code>属性指定给变量映射的时候，该函数就会自动的区分变量属性（是离散变量或者是连续变量），进而给出适用于两种情况的配色风格。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orqx7zr30.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image3.png" alt=""></p>
<p>大家可以对比以上两句代码：我并没有指定任何实际的颜色，只是将<code>colour</code>颜色属性指定给离散变量cut或者连续变量<code>depth</code>,而输出的图表已经完成了默认的离散颜色映射和连续颜色渐变映射。</p>
<p>对于以上两种类型颜色使用场景，如果是要自行修改，则需要自行定义颜色标度：</p>
<h3 id="常用配色方案简介："><a href="#常用配色方案简介：" class="headerlink" title="常用配色方案简介："></a>常用配色方案简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_colour_XXX:</div></pre></td></tr></table></figure>
<p>这里最经常适用的三种情况</p>
<p>第一种情况，使用<code>ggthemes</code>包中的颜色主题，其中有些非常流行的颜色主题，如经济学人的主题<code>scale_colour_economist()</code>、<code>scale_colour_wsj()</code>,还有<code>excel</code>的主题、<code>tableau</code>主题以及<code>stata</code>主题。</p>
<p>第二种情况，可以使用<code>RColorBrewer</code>包中的配色卡，以下是该包<code>scale_colour_brewer()</code>函数所允许使用的所有离散颜色色卡。</p>
<p>该配色系统方案给予我们三种关于分类变量的配色场景：</p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image4.png" alt=""></p>
<ul>
<li><p>同色系方案，即在同一个色系中均匀取出若干个色段，用于分类变量填充，最终呈现的效果，看起来非常清爽，图中最上面的一排颜色均为此类。（适用于表达有序因子分类变量，比如GDP的分段呈现等）</p>
</li>
<li><p>二分色系方案，即两个色系方向平滑过渡，均匀取值，中间色一般为白色或者淡色。（适用于表达含有正负值的分类数量段，譬如增长率指标、利润率等）</p>
</li>
<li><p>多分类不同色系方案，取不同色系相对协调的一组颜色，这种情况比较适合用于表达仅作分类，分类项之间没有顺序和大小的普通情况。</p>
</li>
</ul>
<p>以上色卡以及配色包是由一个著名的专做地图可视化配色方案的团队所开发的，网址如下，提供在线配色并免费下载服务。（网站可能被屏蔽，如无法打开需要使用VPN）</p>
<p><a href="http://colorbrewer2.org/#" target="_blank" rel="external">RColorBrewer</a></p>
<p>当然第三种就是自己DIY了，R支持直接调用可识别的颜色名称以及颜色代码（16进制代码）。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_fill_manual(values=c(<span class="string">"#FB882C"</span>,<span class="string">"#5B88A0"</span>))</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scale_fill_manual(values=c(&quot;Linen&quot;,&quot;Peru&quot;,&quot;PeachPuff&quot;,&quot;SandyBrown&quot;,&quot;Chocolate&quot;))</div></pre></td></tr></table></figure></p>
<p>连续型配色方案：</p>
<p>而针对连续型变量颜色修改的情况，可探讨的余地不多：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">scale_fill_gradient（）</div><div class="line">scale_fill_gradient2（）</div><div class="line">scale_fill_gradient（） <span class="comment">#允许分配一组双色连续渐变，low="white",high="red"</span></div><div class="line">scale_fill_gradient2（）<span class="comment">#允许分配一组三色连续渐变，low="blue",mid="white",high="red"</span></div></pre></td></tr></table></figure>
<h3 id="配色方案案例演示："><a href="#配色方案案例演示：" class="headerlink" title="配色方案案例演示："></a>配色方案案例演示：</h3><p>接下来针对以上几种情况，我分别演示一个案例：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"RColorBrewer"</span>)</div></pre></td></tr></table></figure>
<p><strong>离散型配色方案：</strong></p>
<p>使用ggthemes包中的颜色主题（华尔街日报的主题色模板）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_wsj()</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image5.png" alt=""></p>
<p>使用RColorBrewer包中的配色卡</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_brewer(palette=<span class="string">"Greens"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用DIY方式自己制作配色卡</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+scale_colour_manual(values=c(<span class="string">"#84CEFC"</span>,<span class="string">"#ACDAE4"</span>,<span class="string">"#5C9EA4"</span>,<span class="string">"#04FEFC"</span>,<span class="string">"#4CD2CC"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>连续型：</strong></p>
<p>双色渐变：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()+scale_colour_gradient(low=<span class="string">"white"</span>,high=<span class="string">"Blue"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image8.png" alt=""></p>
<p>三色渐变：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(carat,price,colour=depth))+geom_point()+scale_colour_gradient2(low=<span class="string">"#8E0F2E"</span>, mid=<span class="string">"#BFBEBE"</span>, high=<span class="string">"#0E4E75"</span>,midpoint=median(na.omit(diamonds$depth)))</div></pre></td></tr></table></figure></p>
<p><img src="http://orqx7zr30.bkt.clouddn.com/image9.png" alt=""></p>
<p>以上就是R中最常用到的配色技巧，可以满足我们大部分使用场景的需求。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 图表美化 </tag>
            
            <tag> 配色技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于数据地图的几个遗留问题解决方案]]></title>
      <url>/2017/06/18/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%9A%84%E5%87%A0%E4%B8%AA%E9%81%97%E7%95%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<p>今天跟大家分享三个数据地图的遗留问题，包括以前因为技术手段限制无法解决的问题，以及读者吐槽最多的问题。</p>
<a id="more"></a>
<ul>
<li>如何在一个版面上呈现不同行政级别的地理信息；</li>
<li>如何给版面添加mini导航定位窗口；</li>
<li>关于九段线问题。</li>
</ul>
<h3 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h3><p>关于第一个问题的解决方案，其实很简单，就是通过两个不同行政级别的图层进行叠加来达到目的。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maps)  </div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggthemes"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggimage"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">world_map&lt;-map_data(<span class="string">"world"</span>)</div><div class="line">data&lt;-read.csv(<span class="string">"D:/R/mapdata/Word_State.csv"</span>,stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)  </div><div class="line">data1&lt;-filter(data,region==<span class="string">"Russia"</span> | Address==<span class="string">"Asia"</span>)</div><div class="line">mymapdata&lt;-merge(world_map[,<span class="number">1</span>:<span class="number">5</span>],data1,type=<span class="string">"right"</span>)%&gt;%filter(long&gt;=<span class="number">30</span> &amp; lat&gt;=<span class="number">10</span>)%&gt;%arrange(group,order)</div></pre></td></tr></table></figure>
<p><strong>底层的区域地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot(mymapdata)+</div><div class="line">geom_polygon(aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image1.jpg" alt=""></p>
<p><strong>表层的中国省级行政区划地图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">china_map &lt;- readShapePoly(<span class="string">"D:/R/rstudy/CHN_adm/bou2_4p.shp"</span>)      </div><div class="line">china_map1 &lt;- fortify(china_map)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot(china_map1)+</div><div class="line">geom_polygon(aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image2.jpg" alt=""></p>
<p><strong>将两个图层对象放在同一个图形对象中</strong>（注意先后顺序）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=mymapdata,aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image3.jpg" alt=""></p>
<h3 id="minimini导航窗口"><a href="#minimini导航窗口" class="headerlink" title="minimini导航窗口"></a>minimini导航窗口</h3><p>第二个问题，关于minimini导航窗口。</p>
<p>其实这个问题多少跟第一个问题有些关联，也是旨在给我们要呈现的中心地图一个区域定位的作用。解决方案依然是拼图，不过这次是拼的图表（整个图表对象），而非图表中的图层。</p>
<p><strong>位于中间的中国行政区划地图：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map();p1</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot()+</div><div class="line">geom_polygon(data=world_map,aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">annotate(geom=<span class="string">"rect"</span>,xmin =<span class="number">30</span>, xmax =<span class="number">155</span>,ymin =<span class="number">10L</span>, ymax = <span class="number">55</span>,colour=<span class="string">"grey"</span>,fill=<span class="string">"orange"</span>,alpha=<span class="number">.3</span>)+</div><div class="line">theme_map() %+replace% theme(plot.background=element_rect(colour=<span class="string">"black"</span>));p2</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image4.jpg" alt=""></p>
<p><strong>拼贴合并：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vie&lt;-viewport(width=<span class="number">0.30</span>,height=<span class="number">0.25</span>,x=<span class="number">0.25</span>,y=<span class="number">0.25</span>)</div><div class="line">p1;print(p2,vp=vie)</div></pre></td></tr></table></figure></p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image5.jpg" alt=""></p>
<p>第三个问题；也是被吐槽最多的九段线问题，这个问题，其实严格来说，我也没有办法搞定。</p>
<h3 id="关于九段线问题："><a href="#关于九段线问题：" class="headerlink" title="关于九段线问题："></a>关于九段线问题：</h3><p>一般的九段线标识方法有两种，一种是在实际位置框定九段线范围，另一种则是将九段线的实际范围单独移至版面的边缘位置。第一种方法需要精确的九段线经纬点数据，获取不易，第二种则九段线位置过于灵活，然后不好掌握数据。</p>
<p>如果你能获取带有九段线数据的地图素材，那么这是最佳的解决方案，倘若不行，我们就要对图表后期进行处理（大部分人想到的方法是使用PS等软件，当然 这也是一种解决方案，至少清晰度上可以保证）。</p>
<p>但是既然是在R里面写代码，突然跑去玩PS总感觉怪怪的，能用代码解决的问题就不算问题，没错拼图嘛，R依然搞的定。</p>
<p><strong>首先你要有个九段线素材图片。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jiuduanxian&lt;-<span class="string">"E:/数据可视化/R/R语言学习笔记/可视化/timg.jpg"</span></div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,col=<span class="string">"grey"</span>)+</div><div class="line">geom_image(aes(image=jiuduanxian,x=<span class="number">130</span>,y=<span class="number">20</span>),size=<span class="number">.2</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">theme_map()</div></pre></td></tr></table></figure>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image7.jpg" alt=""></p>
<p>我找的这个九段线素材可能跟中国地图风格搭配的不是很好，当然各位使用的时候可以自己去找相对准确、美观的素材使用。</p>
<p>最后提醒大家，关于九段线问题，一定要在报告或者文章末尾进行免责声明，涉及到领土争端问题，不仅仅要意识到，而且要尽可能的做好应对措施，避免不必要的麻烦。</p>
<hr>
<p><strong><em>关于数据源问题的说明：</em></strong></p>
<p>点击博客左下侧的GitHub链接：</p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image8.jpg" alt=""></p>
<p>进入本人GitHub主页之后，打开名为datawarehouse的数据仓库；</p>
<p><img src="http://orpzs13ft.bkt.clouddn.com/image9.jpg" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 数据地图 </tag>
            
            <tag> 九段线 </tag>
            
            <tag> mini导航窗口 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot的theme订制]]></title>
      <url>/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E7%9A%84theme%E8%AE%A2%E5%88%B6/</url>
      <content type="html"><![CDATA[<p>ggplot作图系统在R预言诸多可视化包中之所以如此的风靡，除了它拥有自己的图层理念之外，我觉得还要归功于它对于图表细节元素的灵活调整。</p>
<p>对于ggplot的初学者而言，可能没有太多的在意图表的主题是否优雅，配色是否美观，仅求能够准确无误的出图就OK了。</p>
<p>但是如果仅限于此，那么使用ggplot作图真的就是杀鸡用了宰牛刀了。</p>
<a id="more"></a>
<p>就拿默认的图表来说，虽然你只靠两句代码就可以跑出来一幅还算及格的图表，可是ggplot语法博大精深，背后给你的代码默认匹配的参数不计其数。</p>
<p>其中有一组特别庞大的参数组就是<code>theme（）</code>参数：</p>
<p>默认的图表再不添加任何自定义主题和配色的情况下，软件会给出默认的主题和配色：</p>
<p>默认主题是<code>theme_gray</code>,中一共给出了两套主题，分别是<code>theme_gray</code>、<code>theme_bw</code></p>
<p>接下来我们来一步步验证：</p>
<h3 id="首先加载包："><a href="#首先加载包：" class="headerlink" title="首先加载包："></a>首先加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>（ggplot2）</div><div class="line"><span class="keyword">library</span>（reshape2）</div><div class="line"><span class="keyword">library</span>(ggtheme)</div></pre></td></tr></table></figure>
<h3 id="构造作图数据："><a href="#构造作图数据：" class="headerlink" title="构造作图数据："></a>构造作图数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div><div class="line">mydata&lt;-melt(data,id.vars=c(<span class="string">"Name"</span>,<span class="string">"Conpany"</span>),variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<h3 id="初始化绘图："><a href="#初始化绘图：" class="headerlink" title="初始化绘图："></a>初始化绘图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上代码（已经简化的不能再简化了，不夸张的说，再少一个标点符号，就要报错了）跑出来的默认堆积条形图。</p>
<h3 id="添加主题："><a href="#添加主题：" class="headerlink" title="添加主题："></a>添加主题：</h3><p>可是在R预言可视化这个领域内，以上图表绝对是一个烂大街的货色，怎么说呢，因为你不修改主题，它搭配的主题永远都是<code>theme_gray</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_gray()</div><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orp205tiu.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上两个图表分别套用了默认主题<code>theme_gray()</code>和备用主题<code>theme_bw()</code>，所以看去来前者与第一幅图无异，后者则差别很大。</p>
<p>虽然看起来修改主题好像很简单的样纸，殊不知，在主题内部，该函数是设定了不计其数、让人眼花缭乱的参数。</p>
<h3 id="主题函数结构："><a href="#主题函数结构：" class="headerlink" title="主题函数结构："></a>主题函数结构：</h3><p>你可以通过<code>theme_gray</code> 查看主题函数内的参数配置：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme_gray</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme_bw</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image5.png" alt=""></p>
<p>哈哈看傻眼了吧，其实仔细捋一捋，主题函数内的参数虽然繁杂，但是绝对算不上晦涩。</p>
<p><strong>以下是自己整理的主题参数列表：</strong></p>
<p><img src="http://orp205tiu.bkt.clouddn.com/image6.png" alt=""></p>
<p>通过设定主题参数，你也可以制作专属的图表主题模板。</p>
<p>接下来我将设定一个简单的主题模板用于修改以上的图表主题；</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">theme_xmf &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, bg=<span class="string">'white'</span>)&#123;</div><div class="line">    <span class="keyword">require</span>(grid)</div><div class="line">    theme_classic(<span class="keyword">...</span>) +</div><div class="line">        theme(rect=element_rect(fill=bg),</div><div class="line">              plot.margin=unit(rep(<span class="number">0.5</span>,<span class="number">4</span>), <span class="string">'lines'</span>),</div><div class="line">              panel.background=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>),</div><div class="line">              panel.border=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>),</div><div class="line">              panel.grid=element_blank(),</div><div class="line">              axis.title = element_text(color=<span class="string">'black'</span>, vjust=<span class="number">0.1</span>),</div><div class="line">              axis.ticks.length = unit(-<span class="number">0.3</span>,<span class="string">"lines"</span>),</div><div class="line">              axis.ticks = element_line(colour = <span class="string">"grey20"</span>),             </div><div class="line">              legend.title=element_blank(),</div><div class="line">              legend.key=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'transparent'</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="套用自己的自定义主题："><a href="#套用自己的自定义主题：" class="headerlink" title="套用自己的自定义主题："></a>套用自己的自定义主题：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image7.png" alt=""></p>
<p>这里要强调一点，主题中是不包含颜色模板设定的，因为颜色的使用场景及类别比较复杂，会有专门的颜色标度进行设定，其实就是<code>scale_colour_xxx()/scale_fill_xxx()</code>进行设定（分别为点、线色以及区域色）</p>
<p>这里暂且使用一个<code>RColorbrewer</code>色板中的渐变色装饰一下，不做过多解释，下一节，专门讨论颜色。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()+scale_fill_brewer(palette=<span class="string">"Blues"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image8.png" alt=""></p>
<p>至于图表中的颜色填充顺序和图例相反，这个问题只需追加一句代码即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+geom_bar(stat=<span class="string">"identity"</span>)+theme_xmf()+scale_fill_brewer(palette=<span class="string">"Blues"</span>)+guides(fill = guide_legend(reverse = <span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orp205tiu.bkt.clouddn.com/image9.png" alt=""></p>
<p>其他的细节设定，下次讲。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 图表美化 </tag>
            
            <tag> 主题定制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leaflet的小搭档leaflet.minicharts来了，从此动态地图又多了一些乐趣~~~]]></title>
      <url>/2017/06/17/leaflet%E7%9A%84%E5%B0%8F%E6%90%AD%E6%A1%A3leaflet-minicharts%E6%9D%A5%E4%BA%86%EF%BC%8C%E4%BB%8E%E6%AD%A4%E5%8A%A8%E6%80%81%E5%9C%B0%E5%9B%BE%E5%8F%88%E5%A4%9A%E4%BA%86%E4%B8%80%E4%BA%9B%E4%B9%90%E8%B6%A3/</url>
      <content type="html"><![CDATA[<p>本文内容取材自leaflet.minicharts包官方主页的案例介绍，本篇案例虽然是关于leaflet在线地图的辅助包，但是该包的出现对于leaflet生态系统来说，确是有着划时代的意义。</p>
<p>该包大大扩充了leaflet包所能呈现的图表形式，打破了散点图、路径图、热力图三类图表对于传统地图数据呈现形式的垄断地位。</p>
<p>该包为此提供了气泡饼图、玫瑰图、mini柱形图以及时间维度控制器等多种数据可视化元素。</p>
<a id="more"></a>
<p>以下便是作者对该包的简要介绍及案例演示：</p>
<h3 id="leaflet-minicharts包简介："><a href="#leaflet-minicharts包简介：" class="headerlink" title="leaflet.minicharts包简介："></a>leaflet.minicharts包简介：</h3><p>一直以来，借助于Rstudio团队开发的交互式地图工具包——leaflet，在R语言中创建交互式地图已非难事。但是该包仅仅提供了很少的集中图表呈现类型，因而在一张单独的地图上呈现的数据信息量被大大限制了。</p>
<p>倘若你要在地图上呈现一些点数据，你只能需要使用两个变量定位出这些点在地图上的位置，然后更改点的半径和点的填充颜色来呈现数据。<br>然后leaflet.minicharts包的出现大大改变了这一格局。你可以在利用其提供的两个附加函数，在leaflet包的交互地图上增加更多的mini图表。</p>
<p>这些mini图表可以呈现比之前多得多的变量数据（理论上不受变量数量的限制），目前为止，仅支持三种图表类型：</p>
<p>barcharts (the default), pie charts and polar area charts.</p>
<h3 id="数据预览："><a href="#数据预览：" class="headerlink" title="数据预览："></a>数据预览：</h3><p>该包内提供了一个法国自2010~2017年包含电力产品、电力消费及结构变动趋势的数据集。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"leaflet.minicharts"</span>)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line">data(<span class="string">"eco2mix"</span>)</div><div class="line">head(eco2mix)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image1.jpg" alt=""></p>
<h3 id="地图数据及作图数据整理："><a href="#地图数据及作图数据整理：" class="headerlink" title="地图数据及作图数据整理："></a>地图数据及作图数据整理：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">geojson &lt;-readOGR(<span class="string">"D:/R/mapdata/State/France.json"</span>,<span class="string">"OGRGeoJSON"</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">prod2016 &lt;- eco2mix %&gt;%</div><div class="line">  mutate(</div><div class="line">    renewable = bioenergy + solar + wind + hydraulic,</div><div class="line">    non_renewable = total - bioenergy - solar - wind - hydraulic</div><div class="line">  ) %&gt;%</div><div class="line">  filter(grepl(<span class="string">"2016"</span>,month) &amp; area!= <span class="string">"France"</span>) %&gt;%</div><div class="line">  select(-month) %&gt;%</div><div class="line">  group_by(area,lat,lng) %&gt;%</div><div class="line">  summarise_all(sum) %&gt;%</div><div class="line">  ungroup()</div><div class="line">``` </div><div class="line"></div><div class="line">  </div><div class="line">### 制作背景地图：</div><div class="line"></div><div class="line">抽取了法国2016年的能源消费结构数据信息：</div><div class="line"></div><div class="line">```r</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(leafletCN)</div><div class="line">basemap &lt;- leaflet(geojson,width =<span class="string">"100%"</span>,height=<span class="string">"400px"</span>) %&gt;% amap() %&gt;%</div><div class="line">addPolygons(weight=<span class="number">1</span>,color=<span class="string">"#444444"</span>,opacity=<span class="number">1</span>,fillColor =<span class="string">"white"</span>,fillOpacity =<span class="number">0.7</span>,smoothFactor=<span class="number">0.5</span>)</div></pre></td></tr></table></figure>
<h4 id="默认图表（柱形图）"><a href="#默认图表（柱形图）" class="headerlink" title="默认图表（柱形图）"></a>默认图表（柱形图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">renewable2016 &lt;- prod2016 %&gt;% select(hydraulic,solar,wind)</div><div class="line">colors &lt;- c(<span class="string">"#3093e5"</span>,<span class="string">"#fcba50"</span>,<span class="string">"#a0d9e8"</span>)</div><div class="line">basemap %&gt;%</div><div class="line">  addMinicharts(</div><div class="line">    prod2016$lng, prod2016$lat,</div><div class="line">    chartdata = renewable2016,</div><div class="line">    colorPalette = colors,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image3.jpg" alt=""></p>
<h4 id="气泡饼图"><a href="#气泡饼图" class="headerlink" title="气泡饼图"></a>气泡饼图</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">colors &lt;- c(<span class="string">"#4fc13c"</span>, <span class="string">"#cccccc"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prod2016$lng, prod2016$lat,</div><div class="line">    type = <span class="string">"pie"</span>,</div><div class="line">    chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)], </div><div class="line">    colorPalette = colors, </div><div class="line">    width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image2.jpg" alt=""></p>
<h4 id="玫瑰图1："><a href="#玫瑰图1：" class="headerlink" title="玫瑰图1："></a>玫瑰图1：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">basemap %&gt;%</div><div class="line">addMinicharts(</div><div class="line">prod2016$lng, prod2016$lat,</div><div class="line">type = <span class="string">"polar-radius"</span>,</div><div class="line">chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)],</div><div class="line">colorPalette = colors,</div><div class="line">width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image5.jpg" alt=""></p>
<h4 id="玫瑰图2："><a href="#玫瑰图2：" class="headerlink" title="玫瑰图2："></a>玫瑰图2：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">basemap %&gt;%</div><div class="line">addMinicharts(</div><div class="line">prod2016$lng, prod2016$lat,</div><div class="line">type = <span class="string">"polar-area"</span>,</div><div class="line">chartdata = prod2016[, c(<span class="string">"renewable"</span>, <span class="string">"non_renewable"</span>)],</div><div class="line">colorPalette = colors,</div><div class="line">width = <span class="number">60</span> * sqrt(prod2016$total)/sqrt(max(prod2016$total)),transitionTime=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<h3 id="添加时间趋势："><a href="#添加时间趋势：" class="headerlink" title="添加时间趋势："></a>添加时间趋势：</h3><h4 id="柱形图（带时间趋势）"><a href="#柱形图（带时间趋势）" class="headerlink" title="柱形图（带时间趋势）"></a>柱形图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image4.jpg" alt=""></p>
<h4 id="饼图（带时间趋势）"><a href="#饼图（带时间趋势）" class="headerlink" title="饼图（带时间趋势）"></a>饼图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    type=<span class="string">"pie"</span>,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image6.jpg" alt=""></p>
<h4 id="玫瑰图（带时间趋势）"><a href="#玫瑰图（带时间趋势）" class="headerlink" title="玫瑰图（带时间趋势）"></a>玫瑰图（带时间趋势）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">prodRegions &lt;- eco2mix %&gt;% filter(area != <span class="string">"France"</span>)</div><div class="line">basemap %&gt;% </div><div class="line">  addMinicharts(</div><div class="line">    prodRegions$lng, prodRegions$lat, </div><div class="line">    chartdata = prodRegions[, c(<span class="string">"hydraulic"</span>, <span class="string">"solar"</span>, <span class="string">"wind"</span>)],</div><div class="line">    time = prodRegions$month,</div><div class="line">    colorPalette = colors,</div><div class="line">    type=<span class="string">"pie"</span>,</div><div class="line">    width = <span class="number">45</span>, height = <span class="number">45</span></div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://oro4ux3mq.bkt.clouddn.com/image7.jpg" alt="">  </p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> minicharts </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——图表排版之一页多图]]></title>
      <url>/2017/06/17/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E6%8E%92%E7%89%88%E4%B9%8B%E4%B8%80%E9%A1%B5%E5%A4%9A%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>昨天跟大家分享了关于图表嵌套的函数用法，今天跟大家分享在多图情况下如何正确的进行图表的版面布局。</p>
<p>这里要分享的图表版面设计其实就是指，在做了很多图的情况下，如何将诸多图表合理的布局在一张大的版面上，而不是一幅一幅的导出最后在其他软件中手动拼凑。</p>
<a id="more"></a>
<p>这个技能在制作多图仪表盘场景下，将会特别有用：</p>
<p>还需要强调下这里所指的一页多图与我们之前介绍过的分面可是大有不同，分面其实是一幅图表中，将分类变量所构成的分类图表分图呈现，但是本质上所有分面内的单个图表共享标题、图例、坐标轴刻度（虽然可以手动定义）。</p>
<p>也就是说分面的图表类型与诸多元素都是一样的，但是分面解决不了不同图表的排版布局问题：比如单独绘制而成的一幅散点图、柱形图和一幅饼图，分面将无能为力。</p>
<p>R语言中可以实现多图同页布局的函数有很多（我所知道的旧有大概四五种），但是有些参数略微复杂不便记忆，这里只跟大家介绍两种：</p>
<p><strong>关于多图排版的函数简介：</strong></p>
<p>一种是grid.layout函数（就是我们昨天所讲到的图表嵌套所用到的是同一个包），另一个是rmisc包中的multiplot函数：</p>
<h3 id="grid-layout函数："><a href="#grid-layout函数：" class="headerlink" title="grid.layout函数："></a>grid.layout函数：</h3><ul>
<li>require(ggplot2)</li>
<li>require(grid)</li>
</ul>
<p>绘制备用图表（这里必须给图表命名，因为最后制作汇总图的时候需要引用图表名称）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chart1 &lt;- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) + geom_point()</div><div class="line">chart2 &lt;- ggplot(diamonds, aes(carat, depth, colour = color)) + geom_point()</div><div class="line">chart3&lt;- ggplot(diamonds, aes(carat, depth, colour = color)) + geom_point() + facet_grid(.~color)</div></pre></td></tr></table></figure>
<p>以上三个函数定义了三个图表对象，如果想要查看图表则只需给出图表名称然后回车即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.newpage()  <span class="comment">###新建图表版面</span></div><div class="line">pushViewport(viewport(layout = grid.layout(<span class="number">2</span>,<span class="number">2</span>))) <span class="comment">####将版面分成2*2矩阵</span></div><div class="line">vplayout &lt;- <span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row = x, layout.pos.col = y)&#125;</div></pre></td></tr></table></figure>
<h3 id="定义图表的布局规则"><a href="#定义图表的布局规则" class="headerlink" title="定义图表的布局规则"></a>定义图表的布局规则</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">print(chart3, vp = vplayout(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>))   <span class="comment">###将（1,1)和(1,2)的位置画图chart3</span></div><div class="line">print(chart2, vp = vplayout(<span class="number">2</span>,<span class="number">1</span>))     <span class="comment">###将(2,1)的位置画图chart2          </span></div><div class="line">print(chart1 , vp = vplayout(<span class="number">2</span>,<span class="number">2</span>))    <span class="comment">###将（2,2)的位置画图chart1</span></div></pre></td></tr></table></figure>
<p><img src="http://oro3igf2g.bkt.clouddn.com/image1.png" alt=""><br><img src="http://oro3igf2g.bkt.clouddn.com/image2.png" alt=""><br><img src="http://oro3igf2g.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上函数将逐步按照之前的位置规则按照对应顺序绘制三幅图表，每打印一次你都可以看到画布上增加一个图表。</p>
<p>以上是该方法制作一页多图的全部过程，其实因为里面有自定义函数，看起来稍微有点儿麻烦，不过不影响理解。</p>
<h3 id="multiplot函数："><a href="#multiplot函数：" class="headerlink" title="multiplot函数："></a>multiplot函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lattice"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div></pre></td></tr></table></figure>
<p>使用multiplot函数制作一页多图的语法非常简单，过程同样也是先制作出单个图表并命名，然后一句函数就搞定：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">multiplot(chart1,chart2,chart3, cols=<span class="number">2</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oro3igf2g.bkt.clouddn.com/image4.png" alt=""></p>
<p>虽然使用multiplot函数非常方便高效，但是默认情况下，它不会对单个的图表长宽比例做最优布局，我们的案例中，chart3是一个水平分面图，属于矮款型的，但是multiplot函数将它压缩成长宽近似的矩形，放在四象限的第二个位置。</p>
<p>整体看上去，第一种方法虽然过程复杂些，但是局部灵活些，可以调整单个图表所占的空间，第二种方式更加高效、快捷，但是布局上欠缺优化（也许是我还没有接触到内部的局部调整参数，有懂的小伙伴儿麻烦指导一下，不胜感激）！</p>
<p>对了，做完图之后记得使用<br>dev.off() #<br>函数关闭活动版面，否则会影响之后的其他不相关图表！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 版面控制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot携手plotly，让你的图表灵动起来！]]></title>
      <url>/2017/06/16/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E6%90%BA%E6%89%8Bplotly%EF%BC%8C%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%9B%BE%E8%A1%A8%E7%81%B5%E5%8A%A8%E8%B5%B7%E6%9D%A5%EF%BC%81/</url>
      <content type="html"><![CDATA[<p>这段时间一直在研究ggplot2这个神奇的可视化利器，可是ggplot2纵然所向披靡，唯独无法呈现动态效果！</p>
<p>最近发现R语言的官方CRAN中有一款名叫plotly的包，详细了解了下，这个plotly是基于js脚本语言开发的专用于动态交互可视化的利器，开发有在线版和桌面本，而且效果相当不错！</p>
<a id="more"></a>
<p>而这里提到的plotly包就是该机构专门针对R语言环境发布的可视化包（具有不仅R语言，给MATLAB和Python都留有接口），不但可以协助ggplot2包将静态图表动态化，而且拥有自己独特的作图函数语法（语法非常精炼，据说是参考ggplot的语法写的，基本上一看就懂）。</p>
<p>今天只涉及ggplot结合plotly而动态化图表的功能，暂不涉及plotly的独有作图函数。（主要是自己也正摸索中，找个合适的时间再跟大家分享）。</p>
<p>这个包因为是辅助ggplot2开发的，所以需要ggplot2包同时加载协同工作。</p>
<h3 id="包下载及加载："><a href="#包下载及加载：" class="headerlink" title="包下载及加载："></a>包下载及加载：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(<span class="string">"ropensci/plotly"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plotly"</span>)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<h3 id="数据集预览："><a href="#数据集预览：" class="headerlink" title="数据集预览："></a>数据集预览：</h3><p>这里我将使用ggplot2的内置数据集diamonds先做出图表，然后使用plotly函数进行动态化。</p>
<p>为了更加明显的看出最终的动效，这里使用随机取样，只抽取500个记录。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">2333</span>)</div><div class="line">mydata &lt;- mydata[sample(nrow(mydata), <span class="number">500</span>), ]</div><div class="line">head(mydata)</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orn9f9laz.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="plotly动态图表演示："><a href="#plotly动态图表演示：" class="headerlink" title="plotly动态图表演示："></a>plotly动态图表演示：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(carat,price,colour=color))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image3.png" alt=""></p>
<p>接下来是我们要重点关注的地方，以上使用ggplot函数制作的默认的散点图，是一张静态的不带任何交互效果的图表。</p>
<p>尽管ggplot的作者在图表背后针对默认的图表主题及背景做了深度美化，但是没有动态效果这一点儿着实让人感觉有点儿美中不足：</p>
<p>我所说的动态效果是指：当鼠标悬浮到任何一个数据点，立马会有弹出文本框显示该数据点的具体指标信息，当鼠标点击图例中的分类标识时，显示对应分类项下的数据点，而其他未被选中的数据点均会自动隐藏或者淡化（变成浅灰色）。这是我所理解的动态图表的最基础属性。</p>
<p>但是有了plotly包的辅助，ggplot所做出来的图表立马可是实现以上所述的功能：</p>
<p>而所需要的函数却极其简单：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplotly()</div></pre></td></tr></table></figure>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image4.png" alt=""></p>
<p>运行完以上代码，再次zoom你的图表，仔细观察你会发现，图表右上角多出了一行菜单，而且当你将鼠标悬浮在任意一个数据点上时，立马回弹出对应的文本信息对对应数据点进行详细注释。</p>
<p>更加不可思议的是，当你用鼠标单击右侧图例对应分类项，则图表中会对应只显示选中的分类项目数据点；</p>
<p>右上角的菜单中你可以自由选择将图表聚焦呈现、放大缩小、保存为图片等多种功能。</p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image5.png" alt=""></p>
<p>下面是我录制的一个动态小视频，可以感受下plotly带给ggplot的动态交互体验：<br><img src="http://orn9f9laz.bkt.clouddn.com/image6.png" alt=""></p>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=t13096cfgh5&tiny=0&auto=0" allowfullscreen></iframe>

<p>而且这种动态效果机会不受ggplot图表类型及版面的限制，在分面情况下，动态效果依然如故：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(carat,price,colour=color))+geom_point()+theme_economist()+scale_colour_economist()+facet_wrap(~cut)</div><div class="line">ggplotly()</div></pre></td></tr></table></figure></p>
<p><img src="http://orn9f9laz.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上图表中加入了经济学人的主题及配色模板，动态效果依然还在，有了这种动态效果，展示呈现多维数据方面，省去了不少麻烦，特别是分类较多时，一时半会很难弄清楚某种分类的整体分布情况，而通过动态选择，可以很容易的过滤掉暂时无关的分类项对信息获取的障碍。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 动态图表 </tag>
            
            <tag> 版面控制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Excel依然是一款强大的数据可视化利器~]]></title>
      <url>/2017/06/16/Excel%E4%BE%9D%E7%84%B6%E6%98%AF%E4%B8%80%E6%AC%BE%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%A9%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>早期的数据小魔方用户大概都知道，我最初也是从学习Excel起步的，只是学习的深入了之后，才开开慢慢的迁移到R语言。</p>
<p>我往R语言转型并不代表自己开始放弃Excel或者觉得Excel不适合做可视化，只是想体验一下Excel外围的可视化世界是什么样子的，毕竟在这个大行业内，还活跃着太多可视化领域的佼佼者，譬如 PowerBI、Tableau等。</p>
<a id="more"></a>
<h3 id="对图表的粗浅认识："><a href="#对图表的粗浅认识：" class="headerlink" title="对图表的粗浅认识："></a>对图表的粗浅认识：</h3><p>当然，这些软件各有特点，但是在要划分一个类别的话，我觉得可以划分为三类：</p>
<ul>
<li>Excel（以及寄生于Excel平台的各种辅助软件dashboard、Think-cell-chart）</li>
<li>桌面端可视化工具（以Tableau、PowerBI等）</li>
<li>编程工具。（以R语言、Python以及各种js开源可视化库）</li>
</ul>
<p>但若要继续对其进行简化分类的话，我觉得其实可以分为两类：</p>
<ul>
<li>Excel家族；</li>
<li>非Excel家族。</li>
</ul>
<p>也许这里的分类大家会觉得摸不着头脑，我的理由是，数据可视化很重要的一步即是对原始业务数据结构的理解，而在Excel的图表库中，微软所设计的图形库是基于二维表的。（因为Excel自由灵活的表结构不限制变量类型，不识别因子变量（即用于构造模型或者用于图形映射））。</p>
<p>也许以上解释并不能令你满意，这里我只强调一点，同样制作一个多分类的柱形图（或者条形图），假若你获取的原始数据是三个字段，一个门店名称，一个季度标签，一个销售额，那么这种数据结构你是无法对其进行图表化呈现的，你需要借助Excel的数据透视功能，对其进行维度交叉透析，进而使用汇总表（二维表）进行多分类图表构建。</p>
<p>以上就是Excel中图表构建原理的大致过程，而除Excel之外的数据可视化产品，基本上都是使用一维表结构（长数据）来构建可视化图形的。其中因子变量（即通常意义上的分类变量）充当着至关重要的作用。</p>
<p>这也是用惯了Excel的小伙伴儿，如果想要迁移到其他可视化工具上，迈出的第一步往往无比艰难（也不能一概而论，假如你经常使用Excel的数据透视表功能，并且对数据库有所了解，对于数据的长宽转换应该早就烂熟于心了，这道坎不会困扰你太久）。</p>
<p>二维表有二维表的好处，即所见即所得，因为二表已经具备一定的图形化特征，而不单单是表了，但是二维表作图在效率上有着天然的劣势，即你会淡化对数据数据结构的理解，会被Excel的这种作图理念所吞噬，进而被绑架。（纯属个人愚见）</p>
<p>又扯远了，今天的主角仍然是Excel，我使用自己学习以来的案例来说明，Excel仍然是一款不折不扣的优秀可视化工具。</p>
<p>###案例模仿：</p>
<p>学习的第一步当然是模仿，所以才有了这些积淀很久的案例：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image13.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image14.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image15.jpg" alt=""></p>
<h3 id="调整高难度案例："><a href="#调整高难度案例：" class="headerlink" title="调整高难度案例："></a>调整高难度案例：</h3><p>模仿可以快速提升你的“图感”，然后你会更大胆的去挑战高难度动作：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image17.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image2.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image3.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image4.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image5.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image6.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image7.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image8.png" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image1.jpg" alt=""></p>
<h3 id="尝试着自己找案例练习："><a href="#尝试着自己找案例练习：" class="headerlink" title="尝试着自己找案例练习："></a>尝试着自己找案例练习：</h3><p>等有了足够的经验和技巧积累，尝试着自己找案例去做：</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image16.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image19.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image20.jpg" alt=""></p>
<h3 id="实习中接触项目锻炼："><a href="#实习中接触项目锻炼：" class="headerlink" title="实习中接触项目锻炼："></a>实习中接触项目锻炼：</h3><p>实习是很好的锻炼机会，可能你不需要做高难度高复杂度的工作，但是你能学到如何平衡技能与实际业务数据，融合并凝练细节。</p>
<p><img src="http://orm967kgl.bkt.clouddn.com/image9.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image10.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orm967kgl.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>Excel的强大远不止于此，如果你能习得名称管理器、开发工具与高级查询函数，那么制作动态仪表盘是分分钟的事儿，再将平时里积淀的优秀版式、配色方案等融入其中，那么你的工作价值一定会呈指数级增长。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 可视化案例呈现 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Excel </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习R语言我都做了那些有趣的事情！！！]]></title>
      <url>/2017/06/16/%E5%AD%A6%E4%B9%A0R%E8%AF%AD%E8%A8%80%E6%88%91%E9%83%BD%E5%81%9A%E4%BA%86%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%81%EF%BC%81%EF%BC%81/</url>
      <content type="html"><![CDATA[<p>学习R语言已经整整一年光景了， 是时候整理一下自己学习以来的收获和成就。</p>
<p>虽然一直学的很专注（一直埋头在可视化的小圈子了，总感觉这样是停留在舒适区，也许外面的风景会更好），但是专注有专注的好处，就是每一个细节都有机会做的更好！</p>
<p>以下是我学习以来自己练习过程中的一些案例，包括给别人定做的报告、高仿的商务图表、以及我尝试着创新出的一些好玩的创意图表，集中分享给大家。</p>
<a id="more"></a>
<p><strong>以下案例按照时间顺序排列：</strong></p>
<h3 id="刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表"><a href="#刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表" class="headerlink" title="刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表"></a>刚入门没多久，就跃跃欲试的开始模仿那些曾经用Excel做过的商务图表</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image7.jpg" alt=""></p>
<h3 id="也热衷于制作各种炫酷的信息图："><a href="#也热衷于制作各种炫酷的信息图：" class="headerlink" title="也热衷于制作各种炫酷的信息图："></a>也热衷于制作各种炫酷的信息图：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image8.jpg" alt=""></p>
<h3 id="练习了大量的数据地图"><a href="#练习了大量的数据地图" class="headerlink" title="练习了大量的数据地图"></a>练习了大量的数据地图</h3><p>（所以才有资格跟大家输出地理信息可视化案例呀！）</p>
<p><img src="http://orm8l6eph.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image2.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="给别人定做过一些有报酬的小作品："><a href="#给别人定做过一些有报酬的小作品：" class="headerlink" title="给别人定做过一些有报酬的小作品："></a>给别人定做过一些有报酬的小作品：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image4.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image5.jpg" alt=""></p>
<h3 id="尝试着爬取数据，做一些地理信息可视化作品："><a href="#尝试着爬取数据，做一些地理信息可视化作品：" class="headerlink" title="尝试着爬取数据，做一些地理信息可视化作品："></a>尝试着爬取数据，做一些地理信息可视化作品：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image6.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image16.jpg" alt=""></p>
<h3 id="一些零零散散的小创意也会令自己成就感爆满："><a href="#一些零零散散的小创意也会令自己成就感爆满：" class="headerlink" title="一些零零散散的小创意也会令自己成就感爆满："></a>一些零零散散的小创意也会令自己成就感爆满：</h3><p><img src="http://orm8l6eph.bkt.clouddn.com/image9.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image10.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image11.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image12.png" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image13.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image14.jpg" alt=""><br><img src="http://orm8l6eph.bkt.clouddn.com/image15.png" alt=""></p>
<p>以上所有图表（不含文字云）都是基于R语言ggplot2包绘制；</p>
<p>回首学习的过程，虽然很痛苦但也都挺过来了，没有专门学习R语言的相关课程（几乎也不存在这种可能，因为我在案例中融入的元素并不是来自于R语言本身，而是以前积淀的可视化基础），也几乎没有正儿八经的看完一本R语言可视化的参考书。</p>
<p>当然这些并不是全部，还有很多案例来不及给大家分享，那些学完爬虫之后，自己能够遍历网页，获取实用数据的时刻，确实非常令人振奋。</p>
<p>也许学习技能的最好方式，就是立马用起来，做一些有趣的事情，时刻保持着热情，那么总能有所收获！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 可视化案例呈现 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> 商务图表 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——图表嵌套（母子图）]]></title>
      <url>/2017/06/15/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9B%BE%E8%A1%A8%E5%B5%8C%E5%A5%97%EF%BC%88%E6%AF%8D%E5%AD%90%E5%9B%BE%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>之前在学习ggplot的时候，一直存在着一个困惑。</p>
<p>就是这个函数是否允许两个做出来的两个相关图表重叠嵌套（也就是在一个大图（主图）的边缘位置，放置另一个缩小版的小图）。</p>
<p>这个想法很奇葩，本来想着没啥希望，鉴于该包的开发者那犀利的审美观，估计也不能允许这种情况的发生。</p>
<p>不过最近浏览一位大神的博客，真的有这种情况的解决措施，喜出望外，赶紧在这里分享给大家。</p>
<a id="more"></a>
<p>不过他的处理方式不是通过ggplot的内置函数，而是通过grid包中的viewport函数来实现的：</p>
<p><strong>以下是具体的实现步骤：</strong></p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)  <span class="comment">#用于画图，主图和附图都使用ggplot的内置数据集</span></div><div class="line"><span class="keyword">library</span>(grid)     <span class="comment">#用于设定附图的长宽及叠放在主图的精确位置</span></div></pre></td></tr></table></figure>
<h3 id="加载并预览数据集："><a href="#加载并预览数据集：" class="headerlink" title="加载并预览数据集："></a>加载并预览数据集：</h3><p>这里我们还是使用关于钻石的那个数据集（之前的图表案例很多都是使用该数据集）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data(diamonds)</div><div class="line">head(diamonds)</div></pre></td></tr></table></figure></p>
<p><img src="http://orkcefhda.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="制作复合图的主图："><a href="#制作复合图的主图：" class="headerlink" title="制作复合图的主图："></a>制作复合图的主图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image2.png" alt=""></p>
<p>以上函数可以制作出以carat和price为主要对应关系的散点图，同时分类变量cut通过颜色映射进行区分。最后调整了图例位置和图表背景。</p>
<p><strong>设定附图长宽及分布精确位置：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div></pre></td></tr></table></figure>
<h3 id="制作附图"><a href="#制作附图" class="headerlink" title="制作附图:"></a>制作附图:</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=cut,alpha=<span class="number">.2</span>))+geom_density()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line"></div><div class="line">chart2  <span class="comment">#预览附图</span></div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image5.png" alt=""></p>
<p>因为附图要放置在主图边缘并且缩放很大比例，为了防止其背景和网格线系统遮挡主图的重要信息，对其主题元素进行了大量的简化。</p>
<h3 id="将主图与附图合成一并显示："><a href="#将主图与附图合成一并显示：" class="headerlink" title="将主图与附图合成一并显示："></a>将主图与附图合成一并显示：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="将以上代码打包组合："><a href="#将以上代码打包组合：" class="headerlink" title="将以上代码打包组合："></a>将以上代码打包组合：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div><div class="line">chart1</div><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=cut,alpha=<span class="number">.2</span>))+geom_density()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure>
<p><img src="http://orkcefhda.bkt.clouddn.com/image3.png" alt=""></p>
<p>其实仔细看这种做法，里面也不外乎图层叠加，先做出主图，然后通过viewport函数将附图缩小并叠加到主图上，不过这种方式用来展示一些需要多角度透视的数据分布问题还是很合适的，而且因为是依赖于不同的包，所有主图与附图之间没有严格的类型限制，你所需要做的只是调整好两个图表的位置与大小，别让彼此相互遮挡掩盖重要信息就OK了。</p>
<p><strong>下面我将附图的类型更换为堆积直方图大家看下效果：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">chart1&lt;-ggplot(diamonds,aes(carat,price,colour=cut))+geom_point()+theme(legend.position=c(<span class="number">0.9</span>,<span class="number">0.72</span>),legend.background=element_rect(I(<span class="number">0</span>)))</div><div class="line">chart1</div><div class="line">vie&lt;-viewport(width=<span class="number">0.669</span>,height=<span class="number">0.4</span>,x=<span class="number">0.7</span>,y=<span class="number">0.306</span>)</div><div class="line">chart2 &lt;-ggplot(diamonds,aes(depth,fill=color))+geom_histogram()+xlim(<span class="number">54</span>,<span class="number">70</span>) +</div><div class="line">       theme(axis.text.y=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             axis.title.y=element_blank(),</div><div class="line">             axis.text.x=element_text(face=<span class="string">"bold"</span>,colour=<span class="string">"black"</span>),</div><div class="line">             plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>),</div><div class="line">             panel.background=element_rect(I(<span class="number">0</span>)),</div><div class="line">             panel.grid.major=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             panel.grid.minor=element_line(colour=<span class="literal">NA</span>),</div><div class="line">             legend.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">1</span>),</div><div class="line">             legend.position=c(<span class="number">0.85</span>,<span class="number">0.72</span>))</div><div class="line">print(chart2,vp=vie)</div></pre></td></tr></table></figure></p>
<p><img src="http://orkcefhda.bkt.clouddn.com/image4.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 版式设计 </tag>
            
            <tag> grid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——地图与气泡图结合应用]]></title>
      <url>/2017/06/14/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8E%E6%B0%94%E6%B3%A1%E5%9B%BE%E7%BB%93%E5%90%88%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>今天跟大家分享如何在地图上进行散点图、气泡图绘制。</p>
<p>昨天跟大家介绍了<code>ggplot</code>函数进行地图绘制的原理，通过轮廓点和分组来定义每一个地区（国家边界），通过多边形填充来完成区域填色。</p>
<p><code>ggplot</code>的图层叠加原理允许许我们在坐标系统的叠加多个图层；</p>
<a id="more"></a>
<p>所以在地图上叠加散点、甚至气泡可以很容易的实现：</p>
<h3 id="包的导入："><a href="#包的导入：" class="headerlink" title="包的导入："></a>包的导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div></pre></td></tr></table></figure>
<h3 id="导入地理信息数据："><a href="#导入地理信息数据：" class="headerlink" title="导入地理信息数据："></a>导入地理信息数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">china_map &lt;- readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)            <span class="comment"># 读取地图信息数据</span></div><div class="line">china_map1 &lt;- fortify(china_map)                               <span class="comment">#转化为数据框</span></div></pre></td></tr></table></figure>
<h3 id="业务数据导入及作图数据合并："><a href="#业务数据导入及作图数据合并：" class="headerlink" title="业务数据导入及作图数据合并："></a>业务数据导入及作图数据合并：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)             <span class="comment">#读取业务数据</span></div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)   <span class="comment">#读取省会城市坐标</span></div><div class="line">china_data &lt;- join(province_city, mydata, type=<span class="string">"full"</span>)         <span class="comment">#合并两个数据框</span></div></pre></td></tr></table></figure>
<p><img src="http://orii3gxl2.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="地图语法："><a href="#地图语法：" class="headerlink" title="地图语法："></a>地图语法：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">     geom_polygon(data=china_map1, aes(x=long, y=lat, group=group), fill=<span class="string">"grey95"</span>, colour=<span class="string">"grey60"</span>)+ </div><div class="line">     geom_point(data=china_data, aes(x = jd,y = wd, size=zhibiao, fill=zhibiao2, alpha=<span class="number">0.3</span>), shape=<span class="number">21</span>, colour=<span class="string">"black"</span>)+ </div><div class="line">     scale_size_area(max_size=<span class="number">8</span>)+         </div><div class="line">scale_fill_gradient2(low=<span class="string">"DarkCyan"</span>, mid=<span class="string">"Azure"</span>, high=<span class="string">"Sienna"</span>, midpoint=median(na.omit</div><div class="line">(china_data$zhibiao2)))+         </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +ggtitle(<span class="string">"Heat&amp;Bubble plot"</span>)+</div><div class="line">     theme(</div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = <span class="string">"none"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p><img src="http://orii3gxl2.bkt.clouddn.com/image3.png" alt=""></p>
<p>以上语法中，使用了<code>geom_polygon()</code>多边形函数来定义并填充地图背景 （注意里面的<code>fill</code>参数（指定地图区域颜色），<code>colour</code>参数指定多边形（也就是地区轮廓线）边框颜色），然后通过<code>geom_point()</code>函数添加散点图图层。</p>
<p>图层中指定数据源为合并后的业务数据，散点面积（大小）用<code>zhibiao1</code>来映射，气泡图颜色用<code>zhibiao2</code>来映射（本来散点是只有点颜色（使用<code>colour</code>控制，没有填充色的，可是当给散点指定其形状后，散点就有了面积属性可以使用<code>fill</code>进行颜色填充），气泡的轮廓线用<code>colour</code>来指定）。</p>
<p>之后的<code>scale_size_area（）</code>和<code>scale_fill_gradient2（）</code>是对前面<code>geom_point</code>内的<code>fill</code>与<code>size</code>两个标度进行的深度调整，<code>scale_size_area（）</code>告诉软件散点大小与面积要严格的与指标1具体数值大小成比例，并规定面积最大为25。</p>
<p><code>scale_fill_gradient2（）</code>定义了一个三色渐变，<code>low</code>、<code>mid</code>、<code>high</code>分别由一个颜色代码控制，同时均值颜色要映射给指标2的平均数。</p>
<p>最后的<code>ggtitle</code>定义主题，<code>theme</code>内的参数清除掉所有图层上的无关元素（背景、网格系统、横纵轴标签、刻度线、轴标题、图例）</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> ggplot2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 数据地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用R语言抓取网页图片——从此高效存图告别手工时代]]></title>
      <url>/2017/06/13/%E7%94%A8R%E8%AF%AD%E8%A8%80%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87%E2%80%94%E2%80%94%E4%BB%8E%E6%AD%A4%E9%AB%98%E6%95%88%E5%AD%98%E5%9B%BE%E5%91%8A%E5%88%AB%E6%89%8B%E5%B7%A5%E6%97%B6%E4%BB%A3/</url>
      <content type="html"><![CDATA[<p>今天这个标题实在是有点言过其实了，对于R的爬虫知识，我只是领会了一点儿皮毛。</p>
<p>主要看不懂正则表达式，特别是那种一个括号里要匹配多种类型文本的语句，特像火星文，估计短期很难搞懂了。</p>
<p>再加上对于HTML结构没啥感觉，在目标定位上很苦恼。</p>
<p>但是相对于文本信息而言，图片在html中的地址比较好获取，这里仅以图片抓取为例，会Python爬虫的大神还求轻喷~</p>
<a id="more"></a>
<p>今天要爬取的是一个多图的知乎网页，是一个外拍的帖子，里面介绍了巨多各种外拍技巧，很实用的干货。</p>
<h3 id="网页分析："><a href="#网页分析：" class="headerlink" title="网页分析："></a>网页分析：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(downloader)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div></pre></td></tr></table></figure>
<p><a href="https://www.zhihu.com/question/19647535" target="_blank" rel="external">知乎某外拍帖子</a></p>
<p>打开网页之后，在帖子内容里随便定位一张图片，然后单击右键——检查元素（Ctrl+Shift+I），页面右侧弹出的网页结构会自动定位到该图片的地址，你会看到该图片在html结构中的名称标签：——（img）;地址标签——（src）。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image1.png" alt=""><br><img src="http://orh5ym86b.bkt.clouddn.com/image9.jpg" alt=""></p>
<p>我们想要获取的就是该图片的地址信息，你可以尝试着使用downlond函数下载单张图片。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"https://pic4.zhimg.com/2db250e935ca4f1b8b2b546c60104067_b.jpg"</span></div><div class="line">download(url,<span class="string">"D:/R/Image/picturebbb.jpg"</span>, mode = <span class="string">"wb"</span>)</div></pre></td></tr></table></figure>
<p>这样就完成了自动下载过程，但是图片地址仍然是肉眼观察获取的，显然不够智能，我们想要的效果是通过一个函数自动的批量获取图片地址并下载图片。</p>
<p>那么下一步的目标就很明确了，如何通过函数批评获取图片地址，然后将包含图片地址的字符串向量传递给下载函数。</p>
<p>以上就需要我们大致了解html的构建了，知道所有的图片存放在html构建的那一部分里面，通过网址定位到图片存放区间，通过获取图片存放的区间，批量获取图片地址，然后传递给下载函数执行。</p>
<p>太深入的我也不太了解，但是html的常用结构无非是head/body/,head中存放网页标题和导航栏的信息（我是小白，不要吐槽以上每一句话的准确性哈~），而我们要抓取的目标图片肯定是存放在body中啦。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image2.png" alt=""></p>
<p>继续打开body部分，你会被一大摞的<div> </div>结构晃瞎眼，不要担心，我已经瞎了好几回了~—~</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image3.png" alt=""></p>
<p>div是html里面的分区结构，每一个分区都是以<div>开头,以</div>结尾。（html中几乎所有结构都是这种方式，仔细观察一下其他形式的结构就会发现）。</p>
<p>当然div分区有N多个，而且div结构本身可以层层嵌套。对于太复杂的网页，在你发现图片存放的div分区之前估计会先被div语句晃瞎眼。</p>
<p>那怎么办呢，还记得在本文开始部分，说的那个手动定位吗，依靠浏览器的审查元素功能，我们可以先定位要下载的第一张图片，右键——检查，找到该图片的div分支结构。</p>
<p>我们需要获取的信息是该图片的div分区名称信息（就是div结构中的class属性或者ID属性）</p>
<p>class和ID获取其中一个就行，如果是class属性，则地址书写规则是：div.class，如果是ID则规则是div#ID。</p>
<p>如果class和ID中字符较长，且单词间存在空格，空格以英文.号替换。</p>
<p>以上图片的div分支结构定位信息就可以写作div.zm-editable-content.clearfix</p>
<p>其实这里有一个简便方法，如果你不确定自己定位的区间是否正确的话，可以查看右下角的html路径（可以自动根据你的鼠标所在的html位置定位父级路径）。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image4.png" alt=""></p>
<h3 id="简单爬取测试："><a href="#简单爬取测试：" class="headerlink" title="简单爬取测试："></a>简单爬取测试：</h3><p>接下来使用read_html函数获取网页并一步一步的定位图片地址。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url &lt;- <span class="string">'https://www.zhihu.com/question/19647535'</span></div><div class="line">link&lt;- read_html(url)%&gt;% html_nodes(<span class="string">"div.zm-editable-content.clearfix"</span>)%&gt;%html_nodes(<span class="string">"img"</span>)%&gt;%html_attr(<span class="string">"src"</span>)</div></pre></td></tr></table></figure>
<p>我们需要获取的是图片所在div分支结构中的img标签下的src内容（也就是图片地址），那么如果不想抓取一大堆不相干的图片的话，就必须明确目标图片的存放位置，以上代码过程从url(该知乎帖子页面网址)定位到目标图片所在的div分支结构，然后定位到分支结构中的img(图片标签)中的src信息（也就是目标图片网址）。</p>
<p>运行以上两句代码并以head函数预览link向量的前几行，查看获取的图片地址是否正确。</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image5.png" alt=""></p>
<p>很遗憾，我们获取的存放图片地址信息的字符串向量中，每隔一行都有一个无效网址，如果不清除掉这些无效网址或者筛选出那些完整的网址的时候，download函数执行到无效网址会终端，下载过程就会失败。</p>
<p>这里需要使用stringr包来进行条件筛选。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pat = <span class="string">"https"</span></div><div class="line">link&lt;-grep(pat, link,value=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image6.png" alt=""></p>
<p>匹配之后，只保留了完整的图片网址，这就是我们最终要的结果。现在可以使用一个for循环来自动执行图片批量下载任务。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dir.create(<span class="string">"D:R/Case/"</span>) <span class="comment">#新建文件夹</span></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:length(link)) </div><div class="line">&#123;</div><div class="line"> download(link[i],paste(<span class="string">"D:/R/Case/picture"</span>,i,<span class="string">".jpg"</span>,sep = <span class="string">""</span>), mode = <span class="string">"wb"</span>)</div><div class="line">&#125;  <span class="comment">#一个循环批处理所有下载任务</span></div></pre></td></tr></table></figure>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image7.png" alt=""></p>
<p>至此，爬虫的代码部分完成，剩余的时间……嘿嘿，泡一杯咖啡，看会儿美剧，静静地等待软件完成自动下载过程吧（速度视图片原始大小和宽带速度而定）。</p>
<p>结束之后，到D盘的Case文件夹下浏览下刚才下载的成果：</p>
<p><img src="http://orh5ym86b.bkt.clouddn.com/image8.png" alt=""></p>
<p>394张图片全部顺序标号，乖乖的躺在文件夹里了（当然里面还包含各种表情包图片，这个，我真的不太会分辨，暂时木办法）。</p>
<h3 id="内容总结："><a href="#内容总结：" class="headerlink" title="内容总结："></a>内容总结：</h3><p>下面就今天分享内容总结以下几点：</p>
<p>用R抓取图片的核心要点是获取html结构中存放图片的div分区中的img标签内的src内容（也就是图片地址，有时候可能需要使用read_src内的地址）。<br>图片的目标div分区结构的选取至关重要（如果你不指定div分区地址、只使用img标签下的src定位的话，很有可能抓取了全网页的图片网址，各种特殊符号和表情包、菜单栏和logo图表都会被抓取）<br>如果不太确定自己定位的div结构是否正确，可以借助鼠标选取+html路径信息来定位；<br>有时候有些网页的图片不是集中存放在单个div分区结构中，而是每张图片都是单独的div结构，这时候如果还是定位的最底层div分区位置的话，那么你可能只能获取单张图片地址。这时候适当的定位父级div分支结构名称（酌情观察，看那个父级结构范围可以涵盖所有目标图片的子div分支结构）<br>还有一种情况，就是有些公开的图片网站图片存储结构非常规则，分页存储，单页中单个div结构下的一组图片名称是按照数字顺序编号的：</p>
<p>比如：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http：//<span class="comment">################.1.jpg</span></div><div class="line"> http：//<span class="comment">################.2.jpg</span></div><div class="line"> http：//<span class="comment">################.3.jpg</span></div><div class="line"> http：//<span class="comment">################.4.jpg</span></div><div class="line"> ………………………………………</div><div class="line"> http：//<span class="comment">################.n.jpg</span></div></pre></td></tr></table></figure>
<p>如果你碰到这种存储方式的图片网页，那你真的太幸运了，不用再傻乎乎的去从网页地址的html结构中一步一步的去定位图片地址了，直接使用for循环遍历完所有的图片网址，然后直接传递给download函数批量下载就OK了。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(n <span class="keyword">in</span> <span class="number">1</span>:<span class="number">50</span>)</div><div class="line">  <span class="comment">#自己定位到网页最后一个子页面，查看下最大的图片编号是多少。</span></div><div class="line">    &#123;   </div><div class="line">  </div><div class="line">     link&lt;- c(paste(<span class="string">"http：//################/"</span>,n,<span class="string">".jpg"</span>,sep=<span class="string">""</span>),link)</div><div class="line">     &#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:length(link))</div><div class="line">&#123;</div><div class="line"> download(link[i],paste(<span class="string">"D:/R/Case/picture"</span>,i,<span class="string">".jpg"</span>,sep = <span class="string">""</span>), mode = <span class="string">"wb"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样完全避免了从网址中曾曾定位获取图片地址的麻烦，直接就可以获取全网页所有目标图片的地址，效率就更高了。</p>
<p>以上是小魔方最近学习过程中的一丁点儿心得，会爬虫的大神别喷我，我真的是个小白~</p>
<p>声明：</p>
<p>以上图片爬虫代码仅作个人练习R语言爬虫使用，各位小伙伴儿练习完毕之后，请尊重知乎原答主的版权，勿将所抓取图片商用，或者直接删除。<br>学好技术也要遵守底线，做一个规矩的技术达人。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 网络爬虫 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> revst </tag>
            
            <tag> 网络抓取 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[当PowerBI遇到R语言]]></title>
      <url>/2017/06/13/%E5%BD%93PowerBI%E9%81%87%E5%88%B0R%E8%AF%AD%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>PowerBI作为微软系最新的商务智能办公系统，自去年发布以来，一直都备受瞩目。</p>
<p>他的更新频次相当之高，功能更新迭代非常迅速。</p>
<p>大概对可视化领域稍有涉猎的朋友们，都明白其中缘由，大数据与云计算的趋势席卷全球，海量数据处理成为了限制各行业发展的掣肘。而受制于编程工具的门槛，大部分数据处理业务人员，可能要严重依赖Excel以及其他无需编程的可视化自助操作软件。</p>
<a id="more"></a>
<p>以上需求也称为自助式BI工具，也就是无需IT人员主导的、业务人员可自行操作的商务智能工具。</p>
<p>而目前这个领域，<code>Tableau</code>的成功商业化使其已经赢得先机，广大的用户基础以及多次功能迭代，无论是在可视化呈现形式还是报表的质量上都可圈可点。</p>
<p>微软帝国必须亮出必杀技了（为什么没有盖茨的软件在什么事情上都落后一拍，移动操作系统、搜索、智能终端），前期在<code>office2013</code>版就已推出<code>PowerQuery</code>、<code>PowerPivot</code>、<code>PowerView</code>、<code>PowerMap</code>等四款高质量插件。</p>
<p>在最新的Excel2016版中更是将其封装成内置程序（这样就不用自己配置各种环境啦）,同时将四件套整合，建立了<code>PowerBI</code>的在线平台和桌面端工具<code>PowerBI Desktop</code>。</p>
<p>虽然<code>PowerBI</code>的可视化图表类型和质量（受制于开发周期和市场经验）还不够完善，但是免费呀（<code>Tableau</code>据说几千刀呢）……这一条就够啦……</p>
<p>当然PowerBI自出生始就含着金汤勺，地图库是对接的BingMap,依靠PowerQuery的支持具备强大的数据源获取能力、依靠PowerPivot的支持又增添了功能强大的数据建模处理能力，PowerView与PowerMap结合基本上可以解决大部分的可视化形式。</p>
<p>除此之外，PowerBI的在线社区允许广大开发者贡献高质量的、令人眼花缭乱的新型可视化对象。（你以为PowerBI只有内置的那几款图表对象吗，去他的社区看一看吧，里面能淘到很多好东西）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image1.png" alt=""></p>
<p><a href="https://app.powerbi.com/visuals/" target="_blank" rel="external">第三方可视化库网址：</a></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image2.png" alt=""></p>
<p>这些可视化视觉对象在社区中被划分为两类：</p>
<ul>
<li>Custom visuals</li>
<li>R-powered visuals</li>
</ul>
<p>今天要跟大家分享的内容仅包含内置视觉对象中的R脚本和在线社区的R风格视觉对象。</p>
<p>下面是干货~</p>
<h3 id="使用体验："><a href="#使用体验：" class="headerlink" title="使用体验："></a>使用体验：</h3><p>最近试用了PowerBI的R语言脚本对象功能，虽然用着很蹩脚，但是作为微软商务智能系统开始尝试对接主流统计学编程语言的开始，这一步还是很有意义的。</p>
<p>接下来就针对我所经历的使用体验跟大家分享一下（其实还是吐槽居多）：</p>
<p>PowerBI中支持的R相关的图表有两类：</p>
<ul>
<li>一类是需要在R中自建脚本代码执行，插入R图形对象来显示输出结果的形式。</li>
<li>另一类是PowerBI线上社区以及官方平台引用并借鉴优秀的R语言可视化包所封装的PowerBI视觉对象。</li>
</ul>
<p>第一种需要大家有R基础，会书写图形代码。导入数据集后，输入并运行R代码即可在PowerBI页面生成R语言风格的可视化图表。（当然既然是运行的R代码，前提你PC上肯定得事先安装好R的Gui程序，如果有Rstudio的话,PowerBI也是支持调用的。）</p>
<p>这种方式基本相当于把PowerBI作为R的第三方IDE了，不过现在称它为R的第三方IDE确实为时过早，因为……</p>
<p>它的代码运行效率和操作体验简直不能再烂，别说RStudio,就连R的官方Gui界面都要比它好用好几倍……</p>
<ul>
<li>代码时效速度超级慢；</li>
<li>需要事先导入数据集；</li>
<li>只能在数据对象中显示图形对象而无法显示文本信息；</li>
</ul>
<h3 id="第一类R语言视觉对象案例演示："><a href="#第一类R语言视觉对象案例演示：" class="headerlink" title="第一类R语言视觉对象案例演示："></a>第一类R语言视觉对象案例演示：</h3><p>接下来我运行几段程序作为案例演示：</p>
<p>自建R脚本需要在开始——获取数据——插入RScript对象：</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image5.png" alt=""></p>
<p>在弹出的执行R脚本输入框中以R代码的形式获取数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data(mtcars)</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image6.png" alt=""></p>
<p>待连接成功后，导入数据集：</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image7.png" alt=""></p>
<p>数据模型加载完成后，在PowerBI右侧的字段列表中会列出数据集的所有可用字段，在左侧左上角表格栏目可以展示并预览整个数据观测值。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image9.png" alt=""><br><img src="http://orgmkkktc.bkt.clouddn.com/image8.png" alt=""></p>
<p>数据集导入之后，在可视化图表对象中选择R脚本，并插入，同时将右侧字段列表中需要用到的字段拖入值区域。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image4.png" alt=""></p>
<p>你发会发现，插入R脚本对象后，执行的所有鼠标操作在R脚本编辑器中都被记录为R代码（很类似Excel中的录制宏啊有木有~）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image10.png" alt=""></p>
<p>现在你可以在R脚本编辑器中自由的编写并执行代码了。（代码与R中的一样，写完一句代码，选中点击编辑器的运营按钮）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">ggplot(mtcars,aes(qsec,disp,colour=factor(cyl)))+geom_point()+theme_economist()+scale_colour_economist()+guides(colour=guide_legend(title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image11.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mtcars,aes(qsec,disp,size=mpg,colour=factor(cyl)))+geom_point()+scale_size_area()+theme_economist()+scale_colour_economist()+guides(colour=guide_legend(title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image12.png" alt=""></p>
<p>接下来我使用diamonds数据集（来自ggplot2包）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">ggplot(diamonds,aes(depth,fill=color))+geom_histogram()+theme_economist()+scale_fill_economist()+guides(fill=guide_legend(title=<span class="literal">NULL</span>))+scale_x_discrete(limits=c(<span class="number">50</span>,<span class="number">70</span>))</div></pre></td></tr></table></figure></p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image13.png" alt=""></p>
<p>虽然以上图表都很完美的输出了结果，但是过程还是很艰辛的，PowerBI无法像在R里面调用数据集那么方便，每次想换一个数据，都要重新建立一个RScript对象。</p>
<h3 id="第二类R语言视觉对象案例演示："><a href="#第二类R语言视觉对象案例演示：" class="headerlink" title="第二类R语言视觉对象案例演示："></a>第二类R语言视觉对象案例演示：</h3><p>下面跟大家介绍关于PowerBI的的第二类R视觉对象，也是个人比较推荐的一类。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image3.png" alt=""></p>
<p>因为这些视觉对象是经过开发者努力改造过了，基本上不需要你写代码就可以输出的精美图表（因为是后台调用的R程序，所以依然需要你事前安装R软件）。</p>
<p>这一类图表对象你可以在PowerBI的线上开发者社区下载到图表插件和案例demo。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image18.png" alt=""></p>
<p>每一个R图表对象都提供插件下载和Sample独享可供参考。</p>
<p>下载完事儿之后，在可视化菜单中导入视觉对象。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image15.png" alt=""></p>
<p>插入刚才导入的相关性可视化图表对象，并将要呈现的相关性的字段拖入Values字段框中。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image16.png" alt=""></p>
<p>之后你会发现图表对象会自动相关热力矩阵图。（颜色深浅代表相关性大小，正为蓝，负为红）</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image17.png" alt=""></p>
<p>该图表对象调用的是R中的corrplot函数。我们在RStudio中使用该函数生成相似的案例图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(corrplot)</div><div class="line">data(mtcars)</div><div class="line">corr &lt;- cor(mtcars[,c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)])</div><div class="line">corrplot(corr)</div></pre></td></tr></table></figure>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image18.png" alt=""></p>
<p>看吧是不是很像呢~</p>
<p>和相关性矩阵图一样的R图表视觉对象在社区中一共有6个（包含Correlation plot）。</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image19.png" alt=""></p>
<p>以上六个图形视觉对象都是包含着统计算法和统计模型的视觉可视化对象，经过设计师的精心设计，复杂的统计算法模型呈现出精美的视觉图表图表对象，决策者可以在不用深入了解模型和算法原理的基础上，很直观的领会模型所表达的决策信息。这就是数据可视化的魅力所在。（当然如果能具备这些模型的理论基础的话，用起来就更加的得心应手啦）</p>
<p>小魔方已经将微软第三方应用平台的所有视觉对象插件打包整理（包含R对象的几款插件），共享在魔方学院的QQ群文件里啦，想要体验的小伙伴儿赶快去下载吧~</p>
<p><img src="http://orgmkkktc.bkt.clouddn.com/image20.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> PowerBI </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> PowerBI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——多边形与数据地图填充]]></title>
      <url>/2017/06/12/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E5%A4%9A%E8%BE%B9%E5%BD%A2%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E5%A1%AB%E5%85%85/</url>
      <content type="html"><![CDATA[<p>ggplot函数中有一类特殊的图表类型叫做多边形，很难用传统的视角来定义它属于哪一类图表，因为它能够呈现信息多种多样。</p>
<p>特别是在做某些比较高阶的图表——地图时，这种多边形函数便能够大显神通。</p>
<a id="more"></a>
<p>之前本公众号所推送的所有涉及地图图表绘制所使用的技巧，几乎全部都依赖多边形函数的支持。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div></pre></td></tr></table></figure></p>
<p>这里以之前推送过的全球地图为例：</p>
<h3 id="传统做法（shp形状）"><a href="#传统做法（shp形状）" class="headerlink" title="传统做法（shp形状）"></a>传统做法（shp形状）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">world_map &lt;-readShapePoly(<span class="string">"c:/rstudy/wold_map/World_region.shp"</span>)</div></pre></td></tr></table></figure>
<p>使用路径图进行区域轮廓描边：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +</div><div class="line">geom_path()</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image1.png" alt=""></p>
<p>更改路径线为白色，清除掉背景和网格线以及坐标轴：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +</div><div class="line">geom_path(colour=<span class="string">"steelblue"</span>)+ theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image2.png" alt=""></p>
<p>使用多边形进行描边并填充：（在多边形中是可以进行线条与形状分别填色的）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map,aes(x=long,y=lat,group=group)) +geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"grey"</span>) + theme( panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image3.png" alt=""></p>
<p>这就是我们之前所制作的填色地图的主体代码语句，数据集是从shp文件导入，可以看出，其实只需要三列字段信息，就可以画出一幅地图来：经纬度（二维坐标信息，也可以看作是一组代表X、Y轴的散点），另外的一列变量group其实是一个分类变量，将同一个单位区域轮廓（一个国家或者地区、岛屿等）用一组相同的编号表示。</p>
<p>如果再加上一列连续数值变量，可以将其指定为fill渐变填充的参考指标，那么最终完成的图表就是一幅按照不同地区指标大小对应渐变填色地图。</p>
<h3 id="内置地图素材包："><a href="#内置地图素材包：" class="headerlink" title="内置地图素材包："></a>内置地图素材包：</h3><p>其实这种不带任何实质数据信息的地图，很多R包中都有提供：（这里以maps包为例）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maps)</div><div class="line">states&lt;-map_data(<span class="string">"state"</span>)</div><div class="line">ggplot(states,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image4.png" alt=""></p>
<p>map包是一个专门用来做地图的加载包，里面存有几个可以用的地图数据包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">states&lt;-map_data(<span class="string">"world"</span>) <span class="comment">#全球地图</span></div><div class="line">ggplot(world,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">france&lt;-map_data(<span class="string">"france"</span>) <span class="comment">#法国地图</span></div><div class="line">ggplot(france,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">county&lt;-map_data(<span class="string">"county"</span>) <span class="comment">#美国郡级</span></div><div class="line">ggplot(county,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+ theme(panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image7.png" alt=""></p>
<h3 id="添加地图投影："><a href="#添加地图投影：" class="headerlink" title="添加地图投影："></a>添加地图投影：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">france&lt;-map_data(<span class="string">"france"</span>) <span class="comment">#法国地图</span></div><div class="line">ggplot(france,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+coord_map(<span class="string">"polyconic"</span>)+theme(</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">county&lt;-map_data(<span class="string">"county"</span>) <span class="comment">#美国郡级</span></div><div class="line">ggplot(county,aes(long,lat,group=group))+geom_polygon(fill=<span class="string">"white"</span>,colour=<span class="string">"steelblue"</span>)+coord_map(<span class="string">"polyconic"</span>)+theme(</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://oreu76dnk.bkt.clouddn.com/image9.png" alt=""></p>
<p>地图图表作为ggplot函数中一大类比较高阶的图表，可以做出很多让人眼花缭乱、令人尖叫的作品来，感兴趣的小伙伴儿赶快学起来。</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 多边形填充 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言颜色综合运用与色彩方案共享]]></title>
      <url>/2017/06/11/R%E8%AF%AD%E8%A8%80%E9%A2%9C%E8%89%B2%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%E4%B8%8E%E8%89%B2%E5%BD%A9%E6%96%B9%E6%A1%88%E5%85%B1%E4%BA%AB/</url>
      <content type="html"><![CDATA[<p>今天这篇主要讲解R语言颜色综合运用，主要跟大家介绍如何提取那些专业色彩包中的颜色搭配用于在基础绘图系统和高级绘图系统中共享。</p>
<a id="more"></a>
<p>其实无论是R语言的预设配色系统、自定义颜色表还是哪些专属配色包，我们所使用（或者R语言识别的）的仅仅就是一组字符向量所代表的色值而已，并不神秘。</p>
<p>通过scales中的色彩获取函数，我们可以将专属配色主题（RColorBrewer、ggthemes）中的配色主题提取出来，以函数的形式传递给基础绘图系统（plot）以及ggplot绘图系统。</p>
<h3 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h3><ul>
<li>RColorBrewer部分：</li>
<li>ggthemes部分：</li>
<li>scales：（brewer.pal运用：）</li>
</ul>
<h3 id="RColorBrewer部分"><a href="#RColorBrewer部分" class="headerlink" title="RColorBrewer部分"></a>RColorBrewer部分</h3><p>关于RColorBrewer包之前在写ggplot函数系统的时候已经有所涉猎，其中专门讲解过它的官方配色网站：<a href="http://colorbrewer2.org/#" target="_blank" rel="external">colorbrewer</a></p>
<p>这是一个非常神奇的网站，RColorBrewer包中的配色方案全部来源于此，而且网站上允许自定义色彩序列和类型，衍生出来的颜色要比该包中的配色资源多出很多倍。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line">display.brewer.pal(n, name)</div><div class="line">display.brewer.all(type=<span class="string">"all"</span>)</div></pre></td></tr></table></figure>
<p>ColorBrewer设计团队将配色方案分为三种：</p>
<ul>
<li>seq:连续渐变色</li>
<li>div:双向渐变色</li>
<li>qual:分类色</li>
</ul>
<p>通过display函数可以查看不同类型的色板：</p>
<p>颜色查看：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">display.brewer.all(type = <span class="string">"all"</span>)  <span class="comment">#查看所有色板</span></div><div class="line">display.brewer.all(type = <span class="string">"seq"</span>)  <span class="comment">#查看单色渐变色板</span></div><div class="line">display.brewer.all(type = <span class="string">"div"</span>)  <span class="comment">#查看双色渐变色板</span></div><div class="line">display.brewer.all(type = <span class="string">"qual"</span>) <span class="comment">#查看离散（分类）色板</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image4.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image5.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image6.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上通过display四个函数成功显示了全部色板、单色渐变色板、双色渐变色板、离散（分类）色板</p>
<p>当然你也可以通过display.brewer.pal(n, name)函数显示指定名称的颜色主题：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">display.brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">5</span>),mar=c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of BuGn "</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"OrRd"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of OrRd"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"YlGn"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of YlGn"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"Oranges"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of Oranges"</span>)</div><div class="line">mycolors&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"Blues"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">9</span>),col=mycolors,border=mycolors,axes=<span class="literal">FALSE</span>, horiz=<span class="literal">T</span>,main=<span class="string">"MyColors of Blues"</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image9.png" alt=""></p>
<p>大家已经看到了，通过brewer.pal(n, “name”)函数，可以很轻松的提取出你想要的配色主题。</p>
<p>如果你想要某个配色主题的其中几个色值，可使用如下方式提取：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">display.brewer.pal(<span class="number">6</span>, <span class="string">"BuGn"</span>)<span class="comment">#按顺序提取前六个</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image1.png" alt=""></p>
<p>如果想要提取某一组色彩主题不连续的颜色，可以使用文本函数：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">a&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>)</div><div class="line">show_col(a[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],labels=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image10.png" alt=""></p>
<p>通过向量合并，你还可以自己从色彩包中自定义色彩方案。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">b1&lt;-brewer.pal(<span class="number">9</span>, <span class="string">"BuGn"</span>);b2&lt;-brewer.pal(<span class="number">9</span>,<span class="string">"Blues"</span>)</div><div class="line">c&lt;-c(b1[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],b2[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>)])</div><div class="line">show_col(c,labels=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image11.png" alt=""></p>
<p>其实都是些很简单的文本函数组合，毕竟色彩方案在软件中也就是一组字符向量而已。</p>
<p>以上这些色彩方案可以很容易的应用到基础绘图系统和ggplot绘图系统中。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">c&lt;-c(<span class="number">50</span>,<span class="number">30</span>,<span class="number">50</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">40</span>)</div><div class="line">names(c)&lt;-LETTERS[<span class="number">1</span>:<span class="number">6</span>]</div><div class="line">mycolor&lt;-brewer.pal(<span class="number">9</span>,<span class="string">"Greens"</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(c),col=mycolor[c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>)],clockwise=<span class="literal">T</span>,radius=<span class="number">1</span>,border=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image12.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line">mydata&lt;-data.frame(c)</div><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,labels=c(<span class="string">"E"</span>, <span class="string">"D"</span>, <span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"F"</span>,<span class="string">"B"</span>))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image13.png" alt=""></p>
<h3 id="ggthemes部分："><a href="#ggthemes部分：" class="headerlink" title="ggthemes部分："></a>ggthemes部分：</h3><p>接下来讲解ggthemes部分，其实ggthemes包原本是转为ggplot2包开发的辅助包（前面加的前缀——gg就可以看出来，这种包还有很多），里面提供了大量高质量的主题、颜色方案。其中就有我们所熟知的economist主题方案以及wsj方案，还有诸如stata、excel、tableau、solarized、tufte等主题方案。</p>
<p>ggthemes包中的色彩方案都是打包好，命名过的，所以我们引用的时候，只需赋值即可。</p>
<p>这里以economist和WSJ为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">m1&lt;-economist_pal()(<span class="number">6</span>)</div><div class="line">show_col(m1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image14.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mycolor&lt;-m1&lt;-economist_pal()(<span class="number">5</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(<span class="number">6</span>),col=mycolor,border=<span class="literal">F</span>,clockwise=<span class="literal">T</span>,init.angle=<span class="number">90</span>,radius=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image15.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_economist(labels=c(<span class="string">"E"</span>, <span class="string">"D"</span>, <span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"F"</span>,<span class="string">"B"</span>))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image16.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m2&lt;-wsj_pal()(<span class="number">6</span>)</div><div class="line">show_col(m2)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image17.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mycolor&lt;-m1&lt;-wsj_pal()(<span class="number">6</span>)</div><div class="line">pie(sort(c,decreasing=<span class="literal">T</span>),labels=names(c),col=mycolor,border=<span class="literal">F</span>,clockwise=<span class="literal">T</span>,init.angle=<span class="number">90</span>,radius=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image18.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank())+</div><div class="line">    scale_fill_wsj(labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image19.png" alt=""></p>
<p>其实关于economist和wsj的配色主题远不止这些元素，里面规定了详细的序列用色标准、线条用色标准、形状标准和背景色参考方案，这些信息，你可以通过使用ggthemes_data函数进行查看：</p>
<p><strong>WSJ背景色</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$wsj$bg         </div><div class="line">     gray     green      blue     brown </div><div class="line"><span class="string">"#efefef"</span> <span class="string">"#e9f3ea"</span> <span class="string">"#d4dee7"</span> <span class="string">"#f8f2e4"</span></div></pre></td></tr></table></figure></p>
<p><strong>WSJ主题色</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$wsj$palettes   <span class="comment">#主题色</span></div><div class="line">$rgby</div><div class="line">   yellow       red      blue     green </div><div class="line"><span class="string">"#d3ba68"</span> <span class="string">"#d5695d"</span> <span class="string">"#5d8ca8"</span> <span class="string">"#65a479"</span> </div><div class="line"></div><div class="line">$red_green</div><div class="line">    green       red </div><div class="line"><span class="string">"#088158"</span> <span class="string">"#ba2f2a"</span> </div><div class="line"></div><div class="line">$black_green</div><div class="line">    black      gray   ltgreen     green </div><div class="line">  <span class="string">"#000000"</span> <span class="string">"#595959"</span> <span class="string">"#59a77f"</span> <span class="string">"#008856"</span> </div><div class="line"></div><div class="line">$dem_rep</div><div class="line">     blue       red      gray </div><div class="line">   <span class="string">"#006a8e"</span> <span class="string">"#b1283a"</span> <span class="string">"#a8a6a7"</span> </div><div class="line"></div><div class="line">$colors6</div><div class="line">      red      blue      gold     green    orange     black </div><div class="line">   <span class="string">"#c72e29"</span> <span class="string">"#016392"</span> <span class="string">"#be9c2e"</span> <span class="string">"#098154"</span> <span class="string">"#fb832d"</span> <span class="string">"#000000"</span></div></pre></td></tr></table></figure></p>
<p><strong>economist背景色：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$economist$bg</div></pre></td></tr></table></figure></p>
<p><strong>economist主题色：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggthemes_data$economist$fg</div></pre></td></tr></table></figure></p>
<p>也可以使用scales包中的show_col函数进行颜色的图形化输出：<br>显示主题颜色：</p>
<p><strong>《华尔街日报》</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">show_col(ggthemes_data$wsj$bg)                      <span class="comment">#背景色</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$rgby)           <span class="comment">#rgby</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$red_green)      <span class="comment">#red_green</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$black_green)    <span class="comment">#black_green</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$dem_rep)        <span class="comment">#dem_rep</span></div><div class="line">show_col(ggthemes_data$wsj$palettes$colors6)        <span class="comment">#colors6</span></div></pre></td></tr></table></figure></p>
<p><strong>《经济学人》</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">show_col(ggthemes_data$economist$bg)                <span class="comment">#背景色</span></div><div class="line">show_col(ggthemes_data$economist$fg)                <span class="comment">#主题色</span></div><div class="line">show_col(ggthemes_data$economist$stata)             <span class="comment">#基于stata的配色方案</span></div></pre></td></tr></table></figure></p>
<p>以上ggthemes包中的所有颜色，你都可以通过names_pal()(n)的格式进行提取，然后使用文本函数进行抽取、转化、合并，自由搭配出属于自己的专属配色方案</p>
<h3 id="scales包的brewer-pal函数："><a href="#scales包的brewer-pal函数：" class="headerlink" title="scales包的brewer_pal函数："></a>scales包的brewer_pal函数：</h3><p>接下来的时间我会将全部精力放在brewer_pal函数上，告诉你为什么，因为这个函数是scales专门为图形标度所设置的颜色设置函数，而以上我们所述的RColorBrewer里面的brewer.pal以及ggthemes包中的names_pal函数，是用于提取自己的配色方案，适用范围较小。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"scales"</span>)</div><div class="line">brewer_pal(type = <span class="string">"seq"</span>, palette = <span class="number">1</span>, direction = <span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p>该函数直接对接RColorBrewer包中的配色主题，但是增加了一些输出参数，可以对输出的主题进行更加灵活的自定义操作。</p>
<p>type设置颜色种类，palette设置色板（可以是字符名称，也可以是编号），direction设置颜色输出顺序（默认为原始顺序，-1代表倒序，对于连续渐变类型的色板比较重要）。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">show_col(brewer_pal()(<span class="number">10</span>))</div><div class="line">show_col(brewer_pal(<span class="string">"div"</span>)(<span class="number">5</span>))</div><div class="line">show_col(brewer_pal(palette = <span class="string">"Greens"</span>)(<span class="number">5</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image20.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image21.png" alt=""><br><img src="http://ordxl0ss6.bkt.clouddn.com/image22.png" alt=""></p>
<p>可以看出来，brewer_pal()函数允许通过色板类型、色彩数据、主题类型进行筛选输出。</p>
<p>我们可以通过brewer_pal函数将色彩信息传递给指定向量，或者直接将brewer_pal指定给col或者fill等图表中的标度参数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">2</span>),mar=c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">pie(rep(<span class="number">1</span>,times=<span class="number">6</span>),labels=<span class="string">""</span>,col=brewer_pal(palette=<span class="string">"Greens"</span>)(<span class="number">6</span>),border=<span class="literal">F</span>,radius=<span class="number">1</span>,clockwise=<span class="literal">T</span>)</div><div class="line">pie(rep(<span class="number">1</span>,times=<span class="number">6</span>),labels=<span class="string">""</span>,col=brewer_pal(palette=<span class="string">"Greens"</span>,direction =-<span class="number">1</span>)(<span class="number">6</span>),border=<span class="literal">F</span>,radius=<span class="number">1</span>,clockwise=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image3.png" alt=""></p>
<p>因为ggplot中有专用于RColorBrewer的色彩主题函数scale_fill(colour)_brewer(），用于对接RColorBrewer中的色彩库，所以我们想要在ggplot图表系统中使用RColorBrewer中的配色主题，不必使用brewer_pal进行提取。</p>
<p>并且，brewer_pal函数内的参数，在scale_fill(colour)_brewer(）函数内也可以使用，对色彩方案进行筛选、抽取。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(Rmisc)</div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">p1&lt;- ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank(),</div><div class="line">    legend.position=<span class="string">"top"</span>)+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div><div class="line">p2&lt;- ggplot(data=mydata,aes(x=factor(<span class="number">1</span>),y=c,fill=factor(c),order=desc(c)))+</div><div class="line">    geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">    coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">    theme(panel.grid = element_blank(),</div><div class="line">    panel.background = element_blank(),</div><div class="line">    axis.text = element_blank(),</div><div class="line">    axis.ticks = element_blank(),</div><div class="line">    axis.title = element_blank(),</div><div class="line">    legend.position=<span class="string">"top"</span>)+</div><div class="line">    scale_fill_brewer(palette=<span class="string">"Greens"</span>,direction =-<span class="number">1</span>,labels=names(c))+</div><div class="line">    guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div><div class="line">multiplot(p1,p2,cols=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image25.png" alt=""></p>
<p>除此之外，还有一个叫ggtech的包，专门为ggplot2包提供科技公司风格配色方案。仔细看了包，没有取色函数，但是提供了全部的色值信息。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggtech)</div><div class="line">tech_key = list(airbnb = c(<span class="string">"#FF5A5F"</span>,<span class="string">"#FFB400"</span>, <span class="string">"#007A87"</span>, <span class="string">"#FFAA91"</span>, <span class="string">"#7B0051"</span>), </div><div class="line">facebook = c(<span class="string">"#3b5998"</span>,<span class="string">"#6d84b4"</span>, <span class="string">"#afbdd4"</span>, <span class="string">"#d8dfea"</span>), </div><div class="line">google = c(<span class="string">"#5380E4"</span>, <span class="string">"#E12A3C"</span>, <span class="string">"#FFBF03"</span>,<span class="string">"#00B723"</span>), </div><div class="line">etsy = c(<span class="string">"#F14000"</span>, <span class="string">"#67B6C3"</span>, <span class="string">"#F0DA47"</span>, <span class="string">"#EBEBE6"</span>, <span class="string">"#D0D0CB"</span>),</div><div class="line">twitter = c(<span class="string">"#55ACEE"</span>, <span class="string">"#292f33"</span>, <span class="string">"#8899a6"</span>, <span class="string">"#e1e8ed"</span>))</div><div class="line">show_col(tech_key$airbnb)</div><div class="line">show_col(tech_key$facebook)</div><div class="line">show_col(tech_key$google)</div><div class="line">show_col(tech_key$etsy)</div><div class="line">show_col(tech_key$twitter)</div></pre></td></tr></table></figure>
<p><img src="http://ordxl0ss6.bkt.clouddn.com/image26.png" alt=""></p>
<p>以上是今天所要讲的主要内容，因为关于这块儿的内容，非常丰富，我也只能涉略一点儿，想要了解更多的R语言配色知识，可以参考详细的官方文档。</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[R预设配色系统及自定义色板]]></title>
      <url>/2017/06/11/R%E9%A2%84%E8%AE%BE%E9%85%8D%E8%89%B2%E7%B3%BB%E7%BB%9F%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%89%B2%E6%9D%BF/</url>
      <content type="html"><![CDATA[<p>关于配色的话题，已经聊过很多次了，但是就像是之前说过的，对于图形可视化而言，配色决定着作品的“颜值”,谈再多次都不嫌多。</p>
<p>今天是R语言配色系统综合篇的上篇（当然是有下篇啦，下篇将会教你如何优雅的提取各种高大上配色主题，作为己用。经过几天的研究，小魔方已经发现了如果将各种高质量配色包中的主题色板通过函数的形式在高级绘图系统和低级绘图系统之间相互共享）。</p>
<a id="more"></a>
<p>今天的内容主要包含两部分：</p>
<ul>
<li>R预置色彩系统的色板</li>
<li>R语言自定义颜色调用</li>
</ul>
<p>其实在R语言的色彩系统中，有两大类颜色系统，一类是预设的调色盘，通过调色盘，你可以获取任意数量的色彩组合。</p>
<h3 id="R预置色彩系统的色板"><a href="#R预置色彩系统的色板" class="headerlink" title="R预置色彩系统的色板"></a>R预置色彩系统的色板</h3><p>R语言的预设调色板一共有五个：</p>
<ul>
<li>rainbow</li>
<li>heat.colors</li>
<li>terrain.colors</li>
<li>topo.colors</li>
<li>cm.colors</li>
</ul>
<p>这五个调色板就像是一个大染缸一样，排列着无数的色彩组合。取色也很简单，就是使用预设色盘名称+色彩数据即可：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rainbow(<span class="number">10</span>)</div><div class="line"></div><div class="line"> [<span class="number">1</span>] <span class="string">"#FF0000FF"</span> <span class="string">"#FF9900FF"</span> <span class="string">"#CCFF00FF"</span> <span class="string">"#33FF00FF"</span> <span class="string">"#00FF66FF"</span> <span class="string">"#00FFFFFF"</span></div><div class="line"> [<span class="number">7</span>] <span class="string">"#0066FFFF"</span> <span class="string">"#3300FFFF"</span> <span class="string">"#CC00FFFF"</span> <span class="string">"#FF0099FF"</span></div></pre></td></tr></table></figure>
<p>以上既是通过名称+数量的方式获取的一组10个颜色，同样我们可以通过scales包中show_col函数查看具体的颜色效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(scales)</div><div class="line">show_col(rainbow(<span class="number">10</span>),labels=<span class="literal">T</span>)<span class="comment">#labels控制是否显示HEX格式的色值信息.</span></div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image1.png" alt=""></p>
<p>接下来我用一个版面矩阵将五个色盘颜色全部显示出来：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">5</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</div><div class="line">n&lt;-<span class="number">1000</span></div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=rainbow(n),border=rainbow(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Rainbow Color"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=heat.colors(n),border=heat.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Heat.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=terrain.colors(n),border=terrain.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Terrain.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=topo.colors(n),border=topo.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Topo.Colors"</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=cm.colors(n),border=cm.colors(n),horiz=<span class="literal">T</span>,axes=<span class="literal">F</span>,main=<span class="string">"Cm.Colors"</span>)</div><div class="line">dev.off()<span class="comment">#关闭上次的绘图面板</span></div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image2.png" alt=""></p>
<p>运行以上代码之后，你会看到绘图面板上出现的五个色板色彩过渡效果，第一个rainbow是运用最为频繁的的色板，也是我们所熟知的彩虹七色，其余四个是截取rainbow色斑的某一段暖色系、冷色系或者单色做的渐变过渡。</p>
<p>五种颜色调用方法非常简单，名称+数量就可以。而且你也可以通过文本函数将不同色盘中截取的颜色相互混合使用。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">1</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>,yaxs=<span class="string">"i"</span>)</div><div class="line">a&lt;-heat.colors(<span class="number">10</span>)</div><div class="line">b&lt;-topo.colors(<span class="number">10</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=b,border=b,main=<span class="string">"Topo.Colors10"</span>,axes=<span class="literal">F</span>)</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=a,border=a,main=<span class="string">"Heat.Colors10"</span>,axes=<span class="literal">F</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">c&lt;-c(a[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)],b[c(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>)])</div><div class="line">barplot(rep(<span class="number">1</span>,times=<span class="number">10</span>),col=c,border=c,axes=<span class="literal">F</span>,main=<span class="string">"topo&amp;heat 10"</span>);box()</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image4.png" alt=""></p>
<p>以上通过将两个色板提取出来的颜色进行组合，创造出了新的色彩组合。</p>
<h3 id="R语言自定义颜色调用"><a href="#R语言自定义颜色调用" class="headerlink" title="R语言自定义颜色调用"></a>R语言自定义颜色调用</h3><p>接下来介绍R语言的第二大色彩系统，自定义颜色。</p>
<p>R语言系统中内置了657中带有自定义名称的颜色（就是我们平时所熟知的blue、red、grey等）。</p>
<p>通过colors()函数可以查看这657种颜色的色值及名称类别信息：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">head(colors(),<span class="number">10</span>)</div><div class="line"> [<span class="number">1</span>] <span class="string">"white"</span>         <span class="string">"aliceblue"</span>     <span class="string">"antiquewhite"</span>  <span class="string">"antiquewhite1"</span></div><div class="line"> [<span class="number">5</span>] <span class="string">"antiquewhite2"</span> <span class="string">"antiquewhite3"</span> <span class="string">"antiquewhite4"</span> <span class="string">"aquamarine"</span>   </div><div class="line"> [<span class="number">9</span>] <span class="string">"aquamarine1"</span>   <span class="string">"aquamarine2"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line">count(cl)</div></pre></td></tr></table></figure>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image5.png" alt=""></p>
<p>count函数列出了所有657中颜色名称。</p>
<p>使用show_col函数可以查看所有657中颜色的图形显示效果</p>
<p>show_col(cl,labels=F)#因为颜色数量太多，使用labels=F参数略去颜色色值信息。<br><img src="http://ordw0vyu9.bkt.clouddn.com/image6.png" alt=""></p>
<p>使用colorRampPalette函数可以自由调用任何一种自定义颜色。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">colorRamp(colors, bias = <span class="number">1</span>, space = c(<span class="string">"rgb"</span>, <span class="string">"Lab"</span>), interpolate = c(<span class="string">"linear"</span>, <span class="string">"spline"</span>))</div><div class="line">colorRampPalette(colors, <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<p>color函数的介绍如上，具体的参数解释可以通过？colorRampPalette查看他的官方文档，这里我们直接取色。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">4</span>),mar=c(<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">2</span>,<span class="number">0.5</span>),xaxs=<span class="string">"i"</span>, yaxs=<span class="string">"i"</span>)</div><div class="line">n &lt;- <span class="number">1000</span></div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"red"</span>, <span class="string">"green"</span>))(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"blue"</span>, <span class="string">"yellow"</span>, <span class="string">"orange"</span>))(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c( <span class="string">"white"</span>, <span class="string">"gold"</span>, <span class="string">"yellow"</span>, <span class="string">"brown"</span>), bias=<span class="number">1.2</span>)(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">mycolors &lt;- colorRampPalette(c(<span class="string">"red"</span>,<span class="string">"gold"</span>, <span class="string">"yellow"</span>, <span class="string">"grey"</span>,<span class="string">"orange"</span>), bias=<span class="number">1.2</span>)(n)</div><div class="line">barplot(rep(<span class="number">1</span>,times=n),col=mycolors,border=mycolors,horiz=<span class="literal">T</span>,axes=<span class="literal">FALSE</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://ordw0vyu9.bkt.clouddn.com/image7.png" alt=""></p>
<p>除了这两大色彩系统系统之外，R语言也支持直接以色值（HEX）形式输入的颜色，只需使用c()函数生成色值组成的字符向量，R语言就可自动识别。</p>
<p>还有一些特殊用途的grey函数，hsv函数等等可以通过设定灰度或者色调、饱和度、亮度等等方式获取颜色使用，这些由于过于繁琐，这里就略去了，甘感兴趣的小盆友可以自己探索。</p>
<p>当然，这里还没有讲解到那些已经做得很成熟的主题配色包，比如ggthemes（专为ggplot2开发的主题包）、RColorbrewer（里面存放着大量高质量的配色方案）、以及ggtech（是一个科技主题的配色包，主要供ggplot函数调用）。</p>
<p>通过scales包中的brewer.col，我们可以提取出以上各包的配色主题，来用于我们的可视化图表中，不光是ggplot绘图系统，即便是在基础绘图系统（base::plot）中也是可以调用这些色彩方案的，好了这里先放个彩蛋，下期再见！</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 图表配色 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 配色 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——极坐标变换与衍生图表类型]]></title>
      <url>/2017/06/11/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%9E%81%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2%E4%B8%8E%E8%A1%8D%E7%94%9F%E5%9B%BE%E8%A1%A8%E7%B1%BB%E5%9E%8B/</url>
      <content type="html"><![CDATA[<p>今天这篇内容会比较杂乱一点，因为会讲到ggplot函数中的一大类通过极坐标支持才能呈现出来的图表效果。</p>
<p>ggplot作图背后的图表哲学，没有给予饼图（以及衍生出的圆环图、玫瑰图等放射状图表类型）存在的空间（主要是该包的开发者个人的审美观，比较反感次坐标轴以及功能类型雷同的重复性图层函数，所以它宁可开发出分面图层原理也不愿意增加次坐标轴，不愿意为原本柱形图可以表达的图表形式再单独开发一种功能雷同的饼图函数）。</p>
<p>但是巧的是，在常见的三种坐标形式中，极坐标转换可以非常轻松的将常见的柱形图（条形图）、堆积柱形图通过只一句极坐标函数就神奇的转化为饼图、玫瑰图、圆环图等（不知道是有意为之还是偶然的巧合）。</p>
<a id="more"></a>
<h3 id="饼图的实现原理："><a href="#饼图的实现原理：" class="headerlink" title="饼图的实现原理："></a>饼图的实现原理：</h3><p>饼图需要借助柱形图结合极坐标进行转化：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image1.png" alt=""></p>
<p>当使用一个因子变量作为横轴，使用分类变量进行填充时，该柱形图变成了单条堆积柱形图。</p>
<p>接下来我们通过以上函数添加极坐标（注意极坐标的设定是如何影响最终的图表形式的）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar()+</div><div class="line">coord_polar()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image4.png" alt=""></p>
<p>从做出的图表以及极坐标函数内的参数我们可以看出来，当参数指定为x时，最终柱形图的x轴会被指定为极坐标的x轴（圆周），而柱形图的y轴则会成为极坐标的y轴（半径）。当指定为y轴时，柱形图的y轴为成为极坐标的x轴（圆周），柱形图的x轴会成为极坐标的y轴（半径）。</p>
<p>同时极坐标状态下，饼图的半径是由柱形图（条形图）宽度决定的，以上图表中圆心有个空白，如果我们将柱形图柱形图宽度定义为1,则会成为正圆。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image5.png" alt=""></p>
<h3 id="极坐标系下图表元素控制："><a href="#极坐标系下图表元素控制：" class="headerlink" title="极坐标系下图表元素控制："></a>极坐标系下图表元素控制：</h3><p>图中其他的元素控制方式与往常的柱形图做法一样：</p>
<p>去掉极坐标轴的轴刻度标签，去掉两个轴标题、更换配色：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=factor(<span class="number">1</span>),fill=cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text = element_blank(),</div><div class="line">	axis.ticks = element_blank(),</div><div class="line">	axis.title = element_blank()</div><div class="line">	)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image6.png" alt=""></p>
<p>当有多个序列时：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image7.png" alt=""></p>
<p>通过极坐标转换可以实现圆环图、圆条图效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">1</span>,fill=<span class="string">"steelblue"</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.x = element_blank(),</div><div class="line">	axis.title = element_blank())</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image8.png" alt=""></p>
<p>改变极坐标轴参数设置，可以模拟南丁格尔玫瑰图效果：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,fill=<span class="string">"#3182BD"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.y = element_blank(),</div><div class="line">	axis.ticks= element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">ylim(c(-<span class="number">3000</span>,<span class="number">22500</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image9.png" alt=""></p>
<h3 id="极坐标系下多序列图表："><a href="#极坐标系下多序列图表：" class="headerlink" title="极坐标系下多序列图表："></a>极坐标系下多序列图表：</h3><p>当然如果你使用的原始柱形图数据中添加了分类序列（也就是堆积柱形图），按照上面的方式可以制作更加复杂的圆环图、堆叠玫瑰图</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"y"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    panel.grid = element_blank(),</div><div class="line">	panel.background = element_blank(),</div><div class="line">	axis.text.x = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image10.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    axis.text.y = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">ylim(c(-<span class="number">2000</span>,<span class="number">12000</span>))+</div><div class="line">theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image11.png" alt=""></p>
<p>尝试着用分面来解决多序列问题：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds,aes(x=color,fill=cut))+</div><div class="line">geom_bar(width=<span class="number">0.95</span>,colour=<span class="string">"white"</span>)+</div><div class="line">coord_polar(theta = <span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">theme(</div><div class="line">    axis.text.y = element_blank(),</div><div class="line">	axis.title = element_blank())+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Blues"</span>)+</div><div class="line">guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">ylim(c(-<span class="number">2000</span>,<span class="number">6000</span>))+</div><div class="line">theme_bw()+</div><div class="line">facet_grid(.~cut)</div></pre></td></tr></table></figure></p>
<p><img src="http://ord0k5mhu.bkt.clouddn.com/image12.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 极坐标 </tag>
            
            <tag> 饼图 </tag>
            
            <tag> 圆环图 </tag>
            
            <tag> 玫瑰图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言图表美化——巧用分面表达优化图表布局，做出堪比杂志级视觉体验的商务图表]]></title>
      <url>/2017/06/10/R%E8%AF%AD%E8%A8%80%E5%9B%BE%E8%A1%A8%E7%BE%8E%E5%8C%96%E2%80%94%E2%80%94%E5%B7%A7%E7%94%A8%E5%88%86%E9%9D%A2%E8%A1%A8%E8%BE%BE%E4%BC%98%E5%8C%96%E5%9B%BE%E8%A1%A8%E5%B8%83%E5%B1%80%EF%BC%8C%E5%81%9A%E5%87%BA%E5%A0%AA%E6%AF%94%E6%9D%82%E5%BF%97%E7%BA%A7%E8%A7%86%E8%A7%89%E4%BD%93%E9%AA%8C%E7%9A%84%E5%95%86%E5%8A%A1%E5%9B%BE%E8%A1%A8/</url>
      <content type="html"><![CDATA[<p>图表的优化布局在Excel中一直都是个大难题，难在Excel软件固有的限制。</p>
<p>特别是在制作多序列多分类图表的时候，放在一个图中显得序列过于拥挤，影响视觉效果，做出分面表达又耗时费力，需要掌握诸多技巧，（版式设计呀、单元格锚定呀等等、照相机呀什么的）是在是有心无力。</p>
<a id="more"></a>
<p>但是像R语言这样依靠图形语法来控制的作图形式，却不存在这样的问题。</p>
<p>今天跟大家分享如何在R语言中巧用分面表达来优化多系列多分类图表的版式布局！</p>
<p>其实这一篇在不久前曾经发过的，当时还处于摸索阶段，写的很粗糙，今天重发一遍，所有的代码和图表都是优化过的，不仔细观察，还真看不出来，仔细对比一下就能发现了！</p>
<p>我是分割线~</p>
<hr>
<p>当数据序列比较多的时候，特别是超过四个以后，还用堆积柱形图（条形图）、或者簇状柱形图的话，图表必然会因为系列太多而受到挤压或者变形，整体就会不协调、不美观。</p>
<p>还有ggplot不支持次坐标轴功能，它的作图思维基本源于塔夫脱的可视化理念，而且作者个人的审美也比较抵触次坐标轴，但是他留给大家解决多序列图表的方案是——图形分面</p>
<p>以下仅以常用的柱形图、条形图为例进行讲解（所有的图形对象几乎都支持分面）</p>
<h3 id="构造作图数据集："><a href="#构造作图数据集：" class="headerlink" title="构造作图数据集："></a>构造作图数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data&lt;-data.frame(Name = c(<span class="string">"苹果"</span>,<span class="string">"谷歌"</span>,<span class="string">"脸书"</span>,<span class="string">"亚马逊"</span>,<span class="string">"腾讯"</span>),</div><div class="line">Conpany = c(<span class="string">"Apple"</span>,<span class="string">"Google"</span>,<span class="string">"Facebook"</span>,<span class="string">"Amozon"</span>,<span class="string">"Tencent"</span>),</div><div class="line">Sale2013 = c(<span class="number">5000</span>,<span class="number">3500</span>,<span class="number">2300</span>,<span class="number">2100</span>,<span class="number">3100</span>),</div><div class="line">Sale2014 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2015 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>),</div><div class="line">Sale2016 = c(<span class="number">5050</span>,<span class="number">3800</span>,<span class="number">2900</span>,<span class="number">2500</span>,<span class="number">3300</span>))</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="数据重塑（宽转长）："><a href="#数据重塑（宽转长）：" class="headerlink" title="数据重塑（宽转长）："></a>数据重塑（宽转长）：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-melt(mydata,id.vars=<span class="string">"Conpany"</span>,variable.name=<span class="string">"Year"</span>,value.name=<span class="string">"Sale"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><p><strong>默认输出图表：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image3.png" alt=""></p>
<p>默认图表的配色确实挺难看的，这里我使用华尔街日报、经济学人的主题、及配色模板进行适度美化。</p>
<p><strong>华尔街日报：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>经济学人</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank())</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image5.png" alt=""></p>
<p>以上是我们使用传统的方法通过将颜色映射到不同类别的年度收入变量上，达到了区分效果，可是这样终究不是办法，五个序列实在是有点多，已经让然有点儿眼花缭乱了，如果有8个序列、10个序列呢，那又该怎么办呢~</p>
<p>下面跟大家分享其中一种比较有效的解决办法——通过分面表达解决多序列图表呈现问题</p>
<h3 id="横排分面："><a href="#横排分面：" class="headerlink" title="横排分面："></a>横排分面：</h3><p><strong>柱形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(.~Year)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">           axis.title = element_blank(),</div><div class="line">          legend.position=<span class="string">'none'</span>,</div><div class="line">          axis.text.x=element_text(size=<span class="number">7.5</span>)</div><div class="line">         )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>条形分面（横排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">     axis.line.y=element_line(),</div><div class="line">     axis.line.x=element_blank(),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(.~Year)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">     axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>),</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"solid"</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank()</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image9.png" alt=""></p>
<h3 id="竖排分面："><a href="#竖排分面：" class="headerlink" title="竖排分面："></a>竖排分面：</h3><p><strong>柱形分面（竖排）：</strong></p>
<p>左<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(axis.title = element_blank(),legend.position=<span class="string">'none'</span>)+</div><div class="line">facet_grid(Year~.)</div><div class="line">右</div><div class="line">p2&lt;-ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">scale_fill_economist()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">7.5</span>,face=<span class="string">"bold"</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p>使用multiplot函数进行版面合并：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span>(grid)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line">multiplot(p1,p2,cols=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/21.jpg" alt=""></p>
<p><strong>条形分面（竖排）：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image16.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">facet_grid(Year~.)+</div><div class="line">coord_flip()+</div><div class="line">theme_economist(base_size=<span class="number">14</span>)+</div><div class="line">scale_fill_economist()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">1.1</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.2</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      strip.text=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image17.png" alt=""></p>
<h3 id="关于簇状、分面图表数据标签问题："><a href="#关于簇状、分面图表数据标签问题：" class="headerlink" title="关于簇状、分面图表数据标签问题："></a>关于簇状、分面图表数据标签问题：</h3><p><strong>簇状图数据标签处理：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image10.png" alt=""></p>
<p><strong>横向分面柱图数据标签问题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">facet_grid(.~Year)+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position =position_dodge(<span class="number">0.9</span>),fontface=<span class="string">"bold"</span>, vjust =<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">2</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">5</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">7.5</span>)</div><div class="line">      )</div></pre></td></tr></table></figure></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image11.png" alt=""></p>
<p><strong>横向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">coord_flip()+facet_grid(.~Year)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.2</span>,vjust=<span class="number">0.5</span>,colour=<span class="string">"white"</span>,size=<span class="number">4</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image12.png" alt=""></p>
<p><strong>竖向分面柱形图数据标签问题：</strong></p>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image19.png" alt=""></p>
<p><strong>竖向分面条形图数据标签问题：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ggplot(mydata,aes(Conpany,Sale,fill=Year,label =Sale))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>)+</div><div class="line">theme_wsj()+scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">facet_grid(Year~.)+coord_flip()+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"The Financial Performance of Five Giant"</span>)+</div><div class="line">geom_text(aes(y = Sale + <span class="number">0.05</span>), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3.5</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.25</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.y=element_text(size=<span class="number">10</span>),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://orb53xpn8.bkt.clouddn.com/image18.png" alt=""></p>
<p>以上是本人在学习ggplot函数过程中的一些练习案例，当然要是仔细琢磨，里面的瑕疵还不少，改进空间还有很多，以后有机会慢慢跟大家补充，过几天再跟大家继续分享关于ggplot更加精深的用法技巧！</p>
<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leaflet在线地图进阶宝典——高级交互特性]]></title>
      <url>/2017/06/09/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E4%BA%A4%E4%BA%92%E7%89%B9%E6%80%A7(%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C)/</url>
      <content type="html"><![CDATA[<p>本文针对leaflet的高级交互特性进行展开，主要涉及到leaflet中等值线地图的鼠标悬浮效果及点击效果的动态呈现。这也是leaflet的天然HTML属性所具有的强大优势。</p>
<p>在制作高质量在线数据地图的项目中，leaflet结合扩展的HTML性能，可以呈现非常人性化的动态效果，如能结合css、shiny等装饰器和交互框架，几乎可以胜任常见的动态交互网站的制作。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"sp"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"leaflet"</span>)</div><div class="line">options(stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"><span class="comment">#锁定目录：</span></div><div class="line">setwd(<span class="string">"D:/R/mapdata/State"</span>)</div></pre></td></tr></table></figure>
<p><strong>导入美国地图素材（含数据）</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">states&lt;-geojsonio::geojson_read(<span class="string">"us-states.geojson"</span>, what = <span class="string">"sp"</span>)</div></pre></td></tr></table></figure>
<p>###案例1：<br>一个简单的开始：（引用mapbox地图）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">m &lt;- leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%  <span class="comment">#设置呈现的视觉中心</span></div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,       <span class="comment">#添加地图图层</span></div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>)))</div><div class="line">m %&gt;% addPolygons()   <span class="comment">#地图呈现</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or9afbo77.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>分箱及设置色盘：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),   <span class="comment">#显式声明颜色映射变量</span></div><div class="line">  weight = <span class="number">2</span>,                       <span class="comment">#线宽</span></div><div class="line">  opacity = <span class="number">1</span>,                     <span class="comment">#透明度</span></div><div class="line">  color = <span class="string">"white"</span>,               <span class="comment">#颜色</span></div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>)             <span class="comment">#填充透明度</span></div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(     <span class="comment">#设置高亮属性</span></div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=t051262r2bq&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="设置鼠标点击事件："><a href="#设置鼠标点击事件：" class="headerlink" title="设置鼠标点击事件："></a>设置鼠标点击事件：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">labels &lt;- sprintf(<span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,states$name,states$density) %&gt;% lapply(htmltools::HTML)  <span class="comment">#转化为HTML格式标签</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">m &lt;-m %&gt;% addPolygons(</div><div class="line">  fillColor = ~pal(density),</div><div class="line">  weight = <span class="number">2</span>,</div><div class="line">  opacity = <span class="number">1</span>,</div><div class="line">  color = <span class="string">"white"</span>,</div><div class="line">  dashArray = <span class="string">"3"</span>,</div><div class="line">  fillOpacity = <span class="number">0.7</span>,</div><div class="line">  highlight = highlightOptions(</div><div class="line">    weight = <span class="number">5</span>,</div><div class="line">    color = <span class="string">"#666"</span>,</div><div class="line">    dashArray = <span class="string">""</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    bringToFront = <span class="literal">TRUE</span></div><div class="line">    ),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(    <span class="comment">#标签选项设置（参数类别HTML属性）</span></div><div class="line">    style=list(<span class="string">"font-weight"</span>=<span class="string">"normal"</span>,padding=<span class="string">"3px 8px"</span>),</div><div class="line">    textsize=<span class="string">"15px"</span>,</div><div class="line">    direction=<span class="string">"auto"</span>)</div><div class="line">  );m</div></pre></td></tr></table></figure>
<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=b0512cl0epo&tiny=0&auto=0" allowfullscreen></iframe>

<h3 id="增加图例："><a href="#增加图例：" class="headerlink" title="增加图例："></a>增加图例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m %&gt;% addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">  position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or9afbo77.bkt.clouddn.com/image3.png" alt=""></p>
<p>以下是该案例的完整代码：<br><code>From http://leafletjs.com/examples/choropleth/us-states.js</code><br>（数据源，js格式记得保存为geojson格式）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">bins &lt;- c(<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="literal">Inf</span>)</div><div class="line">pal &lt;- colorBin(<span class="string">"YlOrRd"</span>, domain = states$density, bins = bins)</div><div class="line"></div><div class="line">labels &lt;- sprintf(</div><div class="line">  <span class="string">"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;"</span>,</div><div class="line">  states$name, states$density</div><div class="line">) %&gt;% lapply(htmltools::HTML)</div><div class="line"></div><div class="line">leaflet(states) %&gt;%</div><div class="line">  setView(-<span class="number">96</span>, <span class="number">37.8</span>, <span class="number">4</span>) %&gt;%</div><div class="line">  addProviderTiles(<span class="string">"MapBox"</span>, options = providerTileOptions(</div><div class="line">    id = <span class="string">"mapbox.light"</span>,</div><div class="line">    accessToken = Sys.getenv(<span class="string">'MAPBOX_ACCESS_TOKEN'</span>))) %&gt;%</div><div class="line">  addPolygons(</div><div class="line">    fillColor = ~pal(density),</div><div class="line">    weight = <span class="number">2</span>,</div><div class="line">    opacity = <span class="number">1</span>,</div><div class="line">    color = <span class="string">"white"</span>,</div><div class="line">    dashArray = <span class="string">"3"</span>,</div><div class="line">    fillOpacity = <span class="number">0.7</span>,</div><div class="line">    highlight = highlightOptions(</div><div class="line">      weight = <span class="number">5</span>,</div><div class="line">      color = <span class="string">"#666"</span>,</div><div class="line">      dashArray = <span class="string">""</span>,</div><div class="line">      fillOpacity = <span class="number">0.7</span>,</div><div class="line">      bringToFront = <span class="literal">TRUE</span>),</div><div class="line">    label = labels,</div><div class="line">    labelOptions = labelOptions(</div><div class="line">      style = list(<span class="string">"font-weight"</span> = <span class="string">"normal"</span>, padding = <span class="string">"3px 8px"</span>),</div><div class="line">      textsize = <span class="string">"15px"</span>,</div><div class="line">      direction = <span class="string">"auto"</span>)) %&gt;%</div><div class="line">  addLegend(pal = pal, values = ~density, opacity = <span class="number">0.7</span>, title = <span class="literal">NULL</span>,</div><div class="line">    position = <span class="string">"bottomright"</span>)</div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——REmapH(中心热度图)]]></title>
      <url>/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapH-%E4%B8%AD%E5%BF%83%E7%83%AD%E5%BA%A6%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>今天是REmap系列的最后一篇——REmapH函数。</p>
<p>这个函数的特色是可以做中心辐射的热力图，这种热力图在气象、人口密度、海拔测绘领域有诸多运用，当然也可以上当用在商务场合——特别是跟地理信息有关的数据呈现方面。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"REmap"</span>)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">?remapH</div><div class="line">remapH(data,</div><div class="line">      maptype = <span class="string">'china'</span>,</div><div class="line">      theme = get_theme(<span class="string">"Dark"</span>),</div><div class="line">      blurSize = <span class="number">30</span>,</div><div class="line">      color = c(<span class="string">'blue'</span>, <span class="string">'cyan'</span>, <span class="string">'lime'</span>, <span class="string">'yellow'</span>, <span class="string">'red'</span>),</div><div class="line">      minAlpha = <span class="number">0.05</span>,</div><div class="line">      opacity = <span class="number">1</span>,</div><div class="line">      <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<ul>
<li>data为要传入的数据，数据为三列，第一列为lon(经度)，第二列为lat(维度)，第三列为prob(密度/概率)；</li>
<li>maptype为要绘制的地图类型，可选有：”china”，”world”或中国各省份名字；</li>
<li>theme为绘制的地图主题类型，可由get_theme函数传入；</li>
<li>blurSize为热力效果的泛化范围，可调整热力点中心的扩散程度；</li>
<li>color为热力的渐变颜色；</li>
<li>minAlpha为热力点的展示阈值，对应data中的prob列，作图时各点密度会对比minAlpha，以凸显不同密度所展示的不同热力分布；</li>
<li>opacity为透明度，调整热力图的透明度。</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>, </div><div class="line">          lineColor = <span class="string">"Random"</span>,</div><div class="line">          backgroundColor = <span class="string">"#1b1b1b"</span>, </div><div class="line">          titleColor = <span class="string">"#fff"</span>,</div><div class="line">          borderColor = <span class="string">"rgba(100,149,237,1)"</span>, </div><div class="line">          regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">          labelShow = <span class="literal">T</span>, </div><div class="line">          pointShow = <span class="literal">F</span>, </div><div class="line">          pointColor = <span class="string">"gold"</span></div><div class="line">          )</div></pre></td></tr></table></figure>
<p>theme为主题，设置该参数后无需设置get_theme里其他参数，可选有”Dark”、”Sky”、”blue”和”none”四种</p>
<ul>
<li>lineColoe为线条颜色，对应为map图里面迁徙线条的颜色</li>
<li>backgroundColor为图片的背景色，支持16进制颜色输入，也支持rgb()函数和rgba()</li>
<li>titleColor为标题的颜色，设置同上</li>
<li>borderColor为地图中各省、市边界颜色</li>
<li>regionColor为地图中各区域颜色，各省份和市</li>
<li>labelShow为是否展示各省、市名字，设置为True时展示</li>
<li>pointShow为是否展示各省会城市所在点，设置为True时展示</li>
<li>pointColor设置上述点的颜色</li>
</ul>
<p>接下来首先通过两个案例进行讲解：</p>
<h3 id="案例1："><a href="#案例1：" class="headerlink" title="案例1："></a>案例1：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">options(remap.js.web=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<p>这里有一个包含经纬度信息及对应密度的数据集，通过该数据集我们可以看到看到REmapH函数制作热力图的大致效果：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data&lt;- read.csv(file=<span class="string">"D:\\R\\map\\MoveChart\\cityvaluetop10.csv"</span>,header=<span class="literal">T</span>)</div></pre></td></tr></table></figure></p>
<p>数据结构如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">head(data)</div><div class="line">       lon      lat prob</div><div class="line"><span class="number">1</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">2</span> <span class="number">115.3948</span> <span class="number">24.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">3</span> <span class="number">114.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">4</span> <span class="number">113.3948</span> <span class="number">23.40800</span> <span class="number">0.85</span></div><div class="line"><span class="number">5</span> <span class="number">114.7307</span> <span class="number">27.69586</span> <span class="number">0.80</span></div><div class="line"><span class="number">6</span> <span class="number">110.5066</span> <span class="number">28.69586</span> <span class="number">0.80</span></div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">48</span> obs. of  <span class="number">3</span> variables:</div><div class="line"> $ lon : num  <span class="number">114</span> <span class="number">115</span> <span class="number">114</span> <span class="number">113</span> <span class="number">115</span> <span class="keyword">...</span></div><div class="line"> $ lat : num  <span class="number">23.4</span> <span class="number">24.4</span> <span class="number">23.4</span> <span class="number">23.4</span> <span class="number">27.7</span> <span class="keyword">...</span></div><div class="line"> $ prob: num  <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.85</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.8</span> <span class="number">0.75</span> <span class="number">0.75</span> <span class="keyword">...</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapH(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or82vn70x.bkt.clouddn.com/image1.png" alt=""></p>
<p>接下来制作辽宁省省域热力图数据集：</p>
<h3 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h3><p><strong>首先使用mapNames函数获取辽宁省市级行政单位：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city_ln&lt;-mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure></p>
<p><strong>获取各市级行政单位经纬度信息：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">city_list&lt;-get_geo_position(city_ln)</div><div class="line"></div><div class="line">&gt; city_list</div><div class="line">        lon      lat     city</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>   大连市</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>   朝阳市</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>   丹东市</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>   铁岭市</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>   沈阳市</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>   抚顺市</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span> 葫芦岛市</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>   阜新市</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>   锦州市</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>   鞍山市</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>   本溪市</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>   营口市</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>   辽阳市</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>   盘锦市</div></pre></td></tr></table></figure></p>
<p><strong>生成一列密度数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">point&lt;-round(runif(<span class="number">14</span>,min=<span class="number">0.3</span>,max=<span class="number">0.95</span>),<span class="number">2</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">0.89</span> <span class="number">0.82</span> <span class="number">0.91</span> <span class="number">0.87</span> <span class="number">0.90</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.89</span> <span class="number">0.87</span> <span class="number">0.94</span> <span class="number">0.90</span> <span class="number">0.85</span> <span class="number">0.88</span> <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的热力图作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-data.frame(city_list[,<span class="number">1</span>:<span class="number">2</span>],point)</div><div class="line"></div><div class="line">        lon      lat point</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.89</span></div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.82</span></div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span></div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.87</span></div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.90</span></div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.90</span></div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.85</span></div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.89</span></div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.87</span></div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.94</span></div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.90</span></div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.85</span></div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.88</span></div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.88</span></div></pre></td></tr></table></figure></p>
<p><strong>作图函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapH(newdata,</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image2.png" alt=""></p>
<p>因为以上数据集中使用的各市中心城市的密度数据，所以整体密度太过分散，看不出渐变效果，当然密度图的数据记录是不受数量限制的，在有较多数据点呈现密集分布的地方，可以看到非常明显的颜色热度渐变效果。</p>
<p>这里我通过添加一列分类数据，将以上密度图数据进行改造：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">newdata$perA&lt;-rep(<span class="string">"A"</span>,<span class="number">14</span>)</div><div class="line">newdata$perB&lt;-rep(<span class="string">"B"</span>,<span class="number">14</span>)</div><div class="line">newdata$perC&lt;-rep(<span class="string">"C"</span>,<span class="number">14</span>)</div></pre></td></tr></table></figure>
<p>使用Reshape2包对数据进行一维转化：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- melt(newdata, id.vars=c(<span class="string">"lon"</span>,<span class="string">"lat"</span>,<span class="string">"point"</span>))</div><div class="line"></div><div class="line">        lon      lat point variable value</div><div class="line"><span class="number">1</span>  <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perA     A</div><div class="line"><span class="number">2</span>  <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perA     A</div><div class="line"><span class="number">3</span>  <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">4</span>  <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">5</span>  <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">6</span>  <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perA     A</div><div class="line"><span class="number">7</span>  <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perA     A</div><div class="line"><span class="number">8</span>  <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perA     A</div><div class="line"><span class="number">9</span>  <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perA     A</div><div class="line"><span class="number">10</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perA     A</div><div class="line"><span class="number">11</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perA     A</div><div class="line"><span class="number">12</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perA     A</div><div class="line"><span class="number">13</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perA     A</div><div class="line"><span class="number">14</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perA     A</div><div class="line"><span class="number">15</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perB     B</div><div class="line"><span class="number">16</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perB     B</div><div class="line"><span class="number">17</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">18</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">19</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">20</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perB     B</div><div class="line"><span class="number">21</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perB     B</div><div class="line"><span class="number">22</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perB     B</div><div class="line"><span class="number">23</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perB     B</div><div class="line"><span class="number">24</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perB     B</div><div class="line"><span class="number">25</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perB     B</div><div class="line"><span class="number">26</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perB     B</div><div class="line"><span class="number">27</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perB     B</div><div class="line"><span class="number">28</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perB     B</div><div class="line"><span class="number">29</span> <span class="number">121.6214</span> <span class="number">38.91934</span>  <span class="number">0.85</span>     perC     C</div><div class="line"><span class="number">30</span> <span class="number">120.4573</span> <span class="number">41.57949</span>  <span class="number">0.81</span>     perC     C</div><div class="line"><span class="number">31</span> <span class="number">124.3626</span> <span class="number">40.00569</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">32</span> <span class="number">123.8488</span> <span class="number">42.29257</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">33</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">34</span> <span class="number">123.9636</span> <span class="number">41.88608</span>  <span class="number">0.93</span>     perC     C</div><div class="line"><span class="number">35</span> <span class="number">120.8434</span> <span class="number">40.71736</span>  <span class="number">0.91</span>     perC     C</div><div class="line"><span class="number">36</span> <span class="number">121.6765</span> <span class="number">42.02798</span>  <span class="number">0.87</span>     perC     C</div><div class="line"><span class="number">37</span> <span class="number">121.1336</span> <span class="number">41.10087</span>  <span class="number">0.89</span>     perC     C</div><div class="line"><span class="number">38</span> <span class="number">123.0010</span> <span class="number">41.11412</span>  <span class="number">0.82</span>     perC     C</div><div class="line"><span class="number">39</span> <span class="number">123.7735</span> <span class="number">41.29985</span>  <span class="number">0.88</span>     perC     C</div><div class="line"><span class="number">40</span> <span class="number">122.2415</span> <span class="number">40.67256</span>  <span class="number">0.95</span>     perC     C</div><div class="line"><span class="number">41</span> <span class="number">123.2437</span> <span class="number">41.27445</span>  <span class="number">0.90</span>     perC     C</div><div class="line"><span class="number">42</span> <span class="number">122.0773</span> <span class="number">41.12594</span>  <span class="number">0.84</span>     perC     C</div></pre></td></tr></table></figure></p>
<p><strong>从新运行图表函数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remapH(newdata[,<span class="number">1</span>:<span class="number">3</span>],</div><div class="line">       maptype = <span class="string">"辽宁"</span>,</div><div class="line">       theme =get_theme(theme = <span class="string">"Dark"</span>),</div><div class="line">       blurSize = <span class="number">70</span>,</div><div class="line">       color = <span class="string">"red"</span>,</div><div class="line">       minAlpha = <span class="number">10</span>,</div><div class="line">       opacity = <span class="number">1</span>,</div><div class="line">       )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or82vn70x.bkt.clouddn.com/image3.png" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> REmap </tag>
            
            <tag> 热力密度地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——REmapC(填充地图)]]></title>
      <url>/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmapC-%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>今天跟大家介绍REmap函数家族中的第三个函数——REmapC。</p>
<p>REmapC函数允许我们同时在一张地图上制作填充图和点图、线图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(REmap)</div><div class="line"><span class="keyword">library</span>(baidumap)</div></pre></td></tr></table></figure>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?remapC</div><div class="line">remapC(data,</div><div class="line">       maptype = <span class="string">'china'</span>,</div><div class="line">      markLineData = <span class="literal">NULL</span>,</div><div class="line">      markPointData = <span class="literal">NULL</span>,</div><div class="line">      color = c(<span class="string">'#1e90ff'</span>,<span class="string">'#f0ffff'</span>),</div><div class="line">      theme = get_theme(<span class="string">"Bright"</span>),</div><div class="line">      title = <span class="string">""</span>,</div><div class="line">      subtitle = <span class="string">""</span>,</div><div class="line">      markLineTheme = markLineControl(),</div><div class="line">      markPointTheme = markPointControl(),</div><div class="line">      geoData = <span class="literal">NA</span>,</div><div class="line">      mindata = <span class="literal">NA</span>,</div><div class="line">      maxdata = <span class="literal">NA</span>)</div></pre></td></tr></table></figure>
<p><strong>四个主要参数说明：</strong></p>
<ul>
<li>参数一：data为需要的原始数据框格式数据，共2列，第一列为省份或者城市名称，第二列为对应的数值，数值大小将决定地图颜色深浅。</li>
<li>参数二：maptype为地图类型设置，可选world、china或者中国省份名称</li>
<li>参数三：color为热力图渐变颜色，默认为2个颜色，第一个为终止色，第二个为初始色。如果只有一个颜色，系统会自动以白色补充为初始铯色。</li>
<li>参数四：mindata与maxdata可以设置颜色极端点对应数据的上下限（默认是使用data中的数据最大值最小值作为两端极值）。</li>
</ul>
<h3 id="一、全国热力图"><a href="#一、全国热力图" class="headerlink" title="一、全国热力图"></a>一、全国热力图</h3><p>首先利用mapnames函数提取全国各省份名称：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)           <span class="comment">#全国省份</span></div><div class="line">value &lt;- rnorm(<span class="number">34</span>,<span class="number">100</span>,<span class="number">30</span>)               <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)    <span class="comment">#合成数据框作图数据</span></div><div class="line">remapC(mydata,color=c(<span class="string">"yellow"</span>,<span class="string">"red"</span>),title=<span class="string">"全国分省热地图"</span>,subtitle=<span class="string">"我是副标题"</span>) <span class="comment">#制作热力图</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>默认的颜色标度是从最小值到最大值。以上函数中省略了markLineData，markPointData 两个参数，所以并未显示点线图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ad_ln &lt;- mapNames(<span class="string">"liaoning"</span>) </div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="string">"大连市"</span>   <span class="string">"朝阳市"</span>   <span class="string">"丹东市"</span>   <span class="string">"铁岭市"</span>   <span class="string">"沈阳市"</span>   <span class="string">"抚顺市"</span>   <span class="string">"葫芦岛市"</span> <span class="string">"阜新市"</span>   <span class="string">"锦州市"</span>  </div><div class="line">[<span class="number">10</span>] <span class="string">"鞍山市"</span>   <span class="string">"本溪市"</span>   <span class="string">"营口市"</span>   <span class="string">"辽阳市"</span>   <span class="string">"盘锦市"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">value_ln&lt;-rnorm(<span class="number">14</span>,<span class="number">100</span>,<span class="number">30</span>)</div><div class="line">data_ln &lt;-data.frame(ad_ln,value_ln) </div><div class="line"></div><div class="line">      ad_ln  value_ln</div><div class="line"><span class="number">1</span>    大连市  <span class="number">79.67630</span></div><div class="line"><span class="number">2</span>    朝阳市  <span class="number">41.93198</span></div><div class="line"><span class="number">3</span>    丹东市 <span class="number">173.31586</span></div><div class="line"><span class="number">4</span>    铁岭市 <span class="number">106.01990</span></div><div class="line"><span class="number">5</span>    沈阳市 <span class="number">119.40256</span></div><div class="line"><span class="number">6</span>    抚顺市  <span class="number">79.54820</span></div><div class="line"><span class="number">7</span>  葫芦岛市 <span class="number">155.62993</span></div><div class="line"><span class="number">8</span>    阜新市 <span class="number">122.99599</span></div><div class="line"><span class="number">9</span>    锦州市  <span class="number">94.17395</span></div><div class="line"><span class="number">10</span>   鞍山市  <span class="number">82.18944</span></div><div class="line"><span class="number">11</span>   本溪市  <span class="number">98.70972</span></div><div class="line"><span class="number">12</span>   营口市 <span class="number">115.59957</span></div><div class="line"><span class="number">13</span>   辽阳市 <span class="number">104.89199</span></div><div class="line"><span class="number">14</span>   盘锦市  <span class="number">92.92975</span></div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_out &lt;- remapC(data_ln,</div><div class="line">                   maptype = <span class="string">"liaoning"</span>,</div><div class="line">                   color=c(<span class="string">"green"</span>),</div><div class="line">                   title=<span class="string">"辽宁省热力地图"</span>,</div><div class="line">                   theme = get_theme(<span class="string">"Sky"</span>),</div><div class="line">                   maxdata=<span class="number">180</span></div><div class="line">                   )                             </div><div class="line">plot(map_out)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF2.png" alt=""></p>
<h3 id="接下来做一个案例："><a href="#接下来做一个案例：" class="headerlink" title="接下来做一个案例："></a>接下来做一个案例：</h3><p>每年春运，广东省人口会大批回流原住地，形成壮观的春运人流大军，我们模拟出广东省回流各省的人口数，使用填色地图表示人流规模，使用动态流向线表示回流最大的前10个省份。</p>
<p>因为没有实际的数据，这里我用函数模拟数据（非真实数据）：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">province &lt;- mapNames(<span class="string">"china"</span>)            <span class="comment">#全国省份</span></div><div class="line">value &lt;- round(rnorm(<span class="number">34</span>,<span class="number">1000</span>,<span class="number">30</span>),<span class="number">0</span>)      <span class="comment">#随机生成分省值</span></div><div class="line">mydata &lt;- data.frame(province,value)     <span class="comment">#合并数据</span></div><div class="line"></div><div class="line">labelper&lt;-mydata[order(mydata[,<span class="string">"value"</span>],decreasing=<span class="literal">T</span>),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">origin&lt;-rep(<span class="string">"广州"</span>,length(labelper))</div><div class="line">destination&lt;-labelper$province</div><div class="line">line_data&lt;-data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p>画图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">map_out1 &lt;- remapC(mydata,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>因为假设广东是人口迁出地，给广东填色是没有任何意义的，所以mydata数据中需要忽略 广东的数据<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mydata1 &lt;- mydata[-<span class="number">12</span>,]</div><div class="line">map_out2 &lt;- remapC(mydata1,</div><div class="line">                  maptype = <span class="string">"china"</span>,</div><div class="line">                  title=<span class="string">"人口迁徙地图"</span>,</div><div class="line">                  theme = get_theme(<span class="string">"Drak"</span>),</div><div class="line">                  color=c(<span class="string">"#CD0000"</span>,<span class="string">"#FFEC8B"</span>),   </div><div class="line">                  markLineData=line_data,   </div><div class="line">                  markLineTheme=markLineControl(</div><div class="line">                  color=<span class="string">"white"</span>, </div><div class="line">                  lineWidth=<span class="number">2</span>, </div><div class="line">                  lineType=<span class="string">"dashed"</span>  </div><div class="line">                  ),</div><div class="line">                  markPointData=line_data[<span class="number">2</span>],</div><div class="line">                  markPointTheme=markPointControl(</div><div class="line">                  symbolSize=<span class="number">13</span>,  </div><div class="line">                  effect=<span class="literal">T</span>,           </div><div class="line">                  effectType=<span class="string">"scale"</span>,    </div><div class="line">                  color=<span class="string">"white"</span></div><div class="line">                  )</div><div class="line">                   )                             </div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7qctnpz.bkt.clouddn.com/GIF4.gif" alt=""></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> REmap </tag>
            
            <tag> 填充地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——案例综合运用]]></title>
      <url>/2017/06/08/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%A1%88%E4%BE%8B%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>今天跟大家介绍一个REmap包的新函数——REmapB。</p>
<p>它是REmap包中诸多组函数中的一位，功能上要强大于之前介绍的REmap函数，不仅可以完成REmap函数的所有图表效果，而且可以做出前者没有的地图效果。</p>
<a id="more"></a>
<h3 id="语法简介："><a href="#语法简介：" class="headerlink" title="语法简介："></a>语法简介：</h3><p><strong>以下是该函数的详细语法及参数：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">?remapB</div><div class="line">remapB(center = c(<span class="number">104.114129</span>,<span class="number">37.550339</span>),</div><div class="line">       zoom = <span class="number">5</span>,</div><div class="line">       color = <span class="string">"Bright"</span>,</div><div class="line">       title = <span class="string">""</span>,</div><div class="line">       subtitle = <span class="string">""</span>,</div><div class="line">       markLineData = <span class="literal">NA</span>,</div><div class="line">       markPointData = <span class="literal">NA</span>,</div><div class="line">       markLineTheme = markLineControl(),</div><div class="line">       markPointTheme = markPointControl(),</div><div class="line">       geoData = <span class="literal">NA</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：center为地图中心，经纬度格式；</li>
<li>参数二：zoom为缩放设置，默认为5，代表全国地图，增大至10可放大至地市</li>
<li>参数三：color为地图颜色，可选有”Bright”, “Blue”, “light”, “dark”, “redalert”, “googlelite”, “grassgreen”, “midnight”, “pink”, “darkgreen”, “bluish”, “grayscale”, “hardedge”</li>
<li>参数四：title为地图主标题</li>
<li>参数五：subtitle为地图副标题</li>
<li>参数六：markLineData为绘制线条需要的数据，包括起点和终点两列</li>
<li>参数七：markPointDate为绘制点需要的数据，仅终点一列</li>
<li>参数八：markLineTheme为线条主题设置，通过markLineControl( )函数设置</li>
<li>参数九：markPointTheme为点主题设置，通过markPointControl( )函数设置</li>
<li>参数十：geoData为点、线绘制的地理位置数据存储，可以只是输入经纬度数据，也可通过get_geo_position(‘地点’)获取</li>
</ul>
<p>其中以上参数中，markLineTheme和markLineTheme内含有诸多属性设置，类似REmap中的theme设置：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">markLineTheme = markLineControl(symbol = <span class="literal">NA</span>,<span class="comment">#控制线型</span></div><div class="line">symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),    <span class="comment">#线条粗度变动范围</span></div><div class="line">smooth = <span class="literal">T</span>,             <span class="comment">#启用线条平滑度设置</span></div><div class="line">smoothness =<span class="number">0.2</span>,        <span class="comment">#线条平滑度</span></div><div class="line">effect = <span class="literal">T</span>,             <span class="comment">#线条动效</span></div><div class="line">lineWidth = <span class="number">2</span>,          <span class="comment">#线宽</span></div><div class="line">lineType = ‘dotted’,    <span class="comment">#线条类别</span></div><div class="line">color =‘Random’)        <span class="comment">#线条颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为标记样式，具体指线条两端的标记的形状，两个值分别为起点和终点，经过实际使用symbol参数不可修改</li>
<li>参数二：symbolSize为线条两端标记大小，对应symbol参数的两个值，实际上第一个值没用，因为开始标记为none</li>
<li>参数三：smooth为逻辑参数，设置线条是否平滑</li>
<li>参数四：smoothness为平滑度，smooth参数设置为T时有效，体现线条的弧度，减小到0时为直线</li>
<li>参数五：effect为逻辑参数，是否显示动态效果</li>
<li>参数六：lineWidth为线条粗细</li>
<li>参数七：lineType为线条类型，可选有solid（实线）、dotted（点线）、dashed（虚线）</li>
<li>参数八：color为线条颜色</li>
</ul>
<p>根据以上参数名称，可以大致了解每一个参数的含义：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">markPointTheme = markPointControl(symbol = <span class="string">"heart"</span>, <span class="comment">#点形状</span></div><div class="line">symbolSize = <span class="string">"Random"</span>,   <span class="comment">#点大小</span></div><div class="line">effect = <span class="literal">T</span>,              <span class="comment">#动效启用</span></div><div class="line">effectType = <span class="string">"scale"</span>,    <span class="comment">#动效类型</span></div><div class="line">color = <span class="string">"Random"</span>)        <span class="comment">#颜色</span></div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：symbol为点样式，可选项none、circle、rectangle、triangle、diamond、emptyCirle、emptyRectangle、emptyTriangle、emptyDiamond、heart、droplet、pin、arrow、star</li>
<li>参数二：symbolSize为点大小</li>
<li>参数三：effect为逻辑参数，是否显示动态效果</li>
<li>参数四：effectType为动态效果样式，可选scale（放大）和bounce（跳动）</li>
<li>参数五：color为点颜色</li>
</ul>
<p>解读：effect参数在点太多时，动态效果会失效，这时建议设置为FALSE。在remapB( )函数中通过另外一个参数markPointData也可以设置点颜色，优先级高于color参数。</p>
<h3 id="案例应用："><a href="#案例应用：" class="headerlink" title="案例应用："></a>案例应用：</h3><h4 id="接下来我们可以根据以上参数说明制作一个一对多的流向图："><a href="#接下来我们可以根据以上参数说明制作一个一对多的流向图：" class="headerlink" title="接下来我们可以根据以上参数说明制作一个一对多的流向图："></a>接下来我们可以根据以上参数说明制作一个一对多的流向图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>,<span class="string">"xian"</span>,<span class="string">"chengdu"</span>,<span class="string">"changchun"</span>,<span class="string">"taiyuan"</span>,<span class="string">"nanyang"</span>,<span class="string">"zhengzhou"</span>)  <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"nanyang"</span>,length(destination))  <span class="comment">#起点</span></div><div class="line">map_data&lt;- data.frame(origin,destination)  <span class="comment">#合成数据框格式的作图数据</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remapB(zoom=<span class="number">5</span>, <span class="comment">#参数5绘制省级国家地图</span></div><div class="line">                   color=<span class="string">"dark"</span>,</div><div class="line">                   title=<span class="string">"我是主标题"</span>,</div><div class="line">                   subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                   markLineData=map_data,</div><div class="line">                   markPointData=destination,</div><div class="line">                   markLineTheme=markLineControl(),</div><div class="line">                   markPointTheme=markPointControl()</div><div class="line">                   )</div><div class="line">plot(map_out)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF.gif" alt=""></p>
<p>####通过设置markLineTheme、markPointTheme两个主题内部的详细风格参数，你可以对线条以及数据点的气泡进行个性化设置。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF1.gif" alt=""></p>
<p>如果只想要绘制流向线而不需要终点的点的话，直接给markPointData赋值为NA就可以了。</p>
<h4 id="只要将我们的数据结构重新整理，就可以制作出路径地图："><a href="#只要将我们的数据结构重新整理，就可以制作出路径地图：" class="headerlink" title="只要将我们的数据结构重新整理，就可以制作出路径地图："></a>只要将我们的数据结构重新整理，就可以制作出路径地图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">newdata&lt;- c(<span class="string">"shanghai"</span>,<span class="string">"guangzhou"</span>,<span class="string">"chengdu"</span>,<span class="string">"xian"</span>,<span class="string">"taiyuan"</span>,<span class="string">"济南"</span>,<span class="string">"shanghai"</span>) </div><div class="line">origin&lt;-c(newdata[-<span class="number">7</span>])</div><div class="line">destination&lt;-c(newdata[-<span class="number">1</span>])</div><div class="line">map_data&lt;- data.frame(origin,destination)</div><div class="line"></div><div class="line">map_out2&lt;-remapB(zoom=<span class="number">5</span>, </div><div class="line">                 color=<span class="string">"dark"</span>,</div><div class="line">                 title=<span class="string">"我是主标题"</span>,</div><div class="line">                 subtitle=<span class="string">"我是副标题"</span>,</div><div class="line">                 markLineData=map_data,</div><div class="line">                 markPointData=destination,                </div><div class="line">                 markLineTheme = markLineControl(</div><div class="line">                 symbol = <span class="literal">NA</span>,            </div><div class="line">                 symbolSize = c(<span class="number">0</span>,<span class="number">4</span>),   </div><div class="line">                 smooth = <span class="literal">T</span>,             </div><div class="line">                 smoothness =<span class="number">0.2</span>,      </div><div class="line">                 effect = <span class="literal">T</span>,            </div><div class="line">                 lineWidth = <span class="number">2</span>,         </div><div class="line">                 lineType =<span class="string">"dotted"</span>,  </div><div class="line">                 color =<span class="string">"white"</span>),</div><div class="line">                 markPointTheme = markPointControl(</div><div class="line">                 symbol = <span class="string">"heart"</span>, </div><div class="line">                 symbolSize = <span class="string">"Random"</span>,  </div><div class="line">                 effect = <span class="literal">T</span>,              </div><div class="line">                 effectType = <span class="string">"scale"</span>,   </div><div class="line">                 color = <span class="string">"white"</span>) </div><div class="line">                 )</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF2.gif" alt=""></p>
<h4 id="最后一个案例使用REmapB函数制作目标分布图："><a href="#最后一个案例使用REmapB函数制作目标分布图：" class="headerlink" title="最后一个案例使用REmapB函数制作目标分布图："></a>最后一个案例使用REmapB函数制作目标分布图：</h4><p>首先搜索大连地区的大学：</p>
<p>加载百度地图包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"baidumap"</span>)</div><div class="line"><span class="comment">#查找大连的所有大学</span></div><div class="line">dl_college &lt;- getPlace(<span class="string">"大学"</span>,<span class="string">"大连"</span>)</div><div class="line">Get <span class="number">125</span> records, <span class="number">7</span> page. </div><div class="line">    Getting  <span class="number">0</span> th page </div><div class="line">    Getting  <span class="number">1</span> th page </div><div class="line">    Getting  <span class="number">2</span> th page </div><div class="line">    Getting  <span class="number">3</span> th page </div><div class="line">    Getting  <span class="number">4</span> th page </div><div class="line">    Getting  <span class="number">5</span> th page </div><div class="line">    Getting  <span class="number">6</span> th page </div><div class="line">Done!</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#预览数据：</span></div><div class="line">head(dl_college)</div><div class="line"></div><div class="line">                        name                                           address      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学                                         轻工苑<span class="number">1</span>号 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学                     辽宁省大连市甘井子区凌工路<span class="number">2</span>号 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学                             辽宁省大连市凌海路<span class="number">1</span>号 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） 沙河口区黄河路<span class="number">794</span>号交通大学小吃一条街内(近西南路) <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区)                   中国辽宁省大连市旅顺南路西段<span class="number">6</span>号 <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学                                      学府大街<span class="number">10</span>号 <span class="number">39.10660</span> <span class="number">121.8282</span></div><div class="line">       telephone</div><div class="line"><span class="number">1</span> (<span class="number">0411</span>)<span class="number">86323693</span></div><div class="line"><span class="number">2</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">3</span>           &lt;<span class="literal">NA</span>&gt;</div><div class="line"><span class="number">4</span> (<span class="number">0411</span>)<span class="number">84106313</span></div><div class="line"><span class="number">5</span> (<span class="number">0411</span>)<span class="number">86111157</span></div><div class="line"><span class="number">6</span> (<span class="number">0411</span>)<span class="number">87402114</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">str(dl_college)</div><div class="line"></div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">125</span> obs. of  <span class="number">5</span> variables:</div><div class="line"> $ name     : chr  <span class="string">"大连工业大学"</span> <span class="string">"大连理工大学"</span> <span class="string">"大连海事大学"</span> <span class="string">"大连交通大学（沙河口校区）"</span> <span class="keyword">...</span></div><div class="line"> $ address  : chr  <span class="string">"轻工苑1号"</span> <span class="string">"辽宁省大连市甘井子区凌工路2号"</span> <span class="string">"辽宁省大连市凌海路1号"</span> <span class="string">"沙河口区黄河路794号交通大学小吃一条街内(近西南路)"</span> <span class="keyword">...</span></div><div class="line"> $ lat      : num  <span class="number">39</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.9</span> <span class="number">38.8</span> <span class="keyword">...</span></div><div class="line"> $ lon      : num  <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">122</span> <span class="number">121</span> <span class="keyword">...</span></div><div class="line"> $ telephone: chr  <span class="string">"(0411)86323693"</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="string">"(0411)84106313"</span> <span class="keyword">...</span></div></pre></td></tr></table></figure>
<p>一共抓取了大连地区的125个带有大学的机构经纬度地址：</p>
<p><strong>构造作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">newdata1&lt;-dl_college[,c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>)]</div><div class="line">head(newdata1)</div><div class="line">                        name      lat      lon</div><div class="line"><span class="number">1</span>               大连工业大学 <span class="number">38.97890</span> <span class="number">121.5332</span></div><div class="line"><span class="number">2</span>               大连理工大学 <span class="number">38.88868</span> <span class="number">121.5362</span></div><div class="line"><span class="number">3</span>               大连海事大学 <span class="number">38.87753</span> <span class="number">121.5387</span></div><div class="line"><span class="number">4</span> 大连交通大学（沙河口校区） <span class="number">38.91790</span> <span class="number">121.5770</span></div><div class="line"><span class="number">5</span>   大连外国语大学(旅顺校区) <span class="number">38.81853</span> <span class="number">121.3154</span></div><div class="line"><span class="number">6</span>                   大连大学 <span class="number">39.10660</span> <span class="number">121.8282</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">newdata2&lt;-newdata1[,c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>)]</div><div class="line">map_out3 &lt;- remapB(center = c(<span class="number">121.62139</span>,<span class="number">38.91934</span>),  </div><div class="line">                zoom = <span class="number">14</span>,</div><div class="line">                color = <span class="string">"Blue"</span>,</div><div class="line">                title = <span class="string">"大连高校分布图"</span>,</div><div class="line">                markPointData =newdata2[<span class="number">3</span>],</div><div class="line">                markPointTheme = markPointControl(</div><div class="line">                symbol = <span class="string">"pin"</span>,</div><div class="line">                symbolSize = <span class="number">3</span>,</div><div class="line">                effect = <span class="literal">T</span>,</div><div class="line">                color = <span class="string">"yellow"</span>),</div><div class="line">                geoData =newdata2 </div><div class="line">               )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or7gx50mg.bkt.clouddn.com/GIF3.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out3)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> REmap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——REmap(路径图)]]></title>
      <url>/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap-%E8%B7%AF%E5%BE%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>今天紧接昨天的内容，跟大家分享如何使用REmap函数制作路径图。</p>
<p>路径图所需要的数据结构非常简单，两列数据，左侧是起点，右侧是终点，并且每一行的终点是下一行的起点，这样最终才可以制作出连接在一起的路径图。</p>
<a id="more"></a>
<p><strong>首先我们来构造所需的数据：</strong></p>
<h3 id="构造数据："><a href="#构造数据：" class="headerlink" title="构造数据："></a>构造数据：</h3><p><strong>起点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"hefei"</span>,<span class="string">"nanjing"</span>,<span class="string">"济南"</span>,<span class="string">"dalian"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>终点数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(origin[-<span class="number">1</span>],origin[<span class="number">1</span>]) <span class="comment">#将起点数据首尾互换，并构造终点数据</span></div></pre></td></tr></table></figure></p>
<p><strong>将终点数据、起点数据合并为数据框格式的作图数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image1.png" alt=""></p>
<h3 id="绘图过程："><a href="#绘图过程：" class="headerlink" title="绘图过程："></a>绘图过程：</h3><p><strong>绘图：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;- remap(mapdata=map_data,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out1)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure></p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image2.png" alt=""></p>
<p>上面的例子中，为了使得路径图首尾相连，终点数据是起点数据调换首尾行而得到的。</p>
<p><strong>那么如果不要求路径图首尾相连的话可以设置如下结构：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">map_data1&lt;-map_data[-<span class="number">7</span>,]</div><div class="line"></div><div class="line">map_out2&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out2)  <span class="comment">#在web上展示图形</span></div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image3.png" alt=""></p>
<p>这种路径图的形式非常适合用于表达带有很多中间节点的动态路线。</p>
<p><strong>当然如果你也可以将数据源设置成两条毫不相干的路线：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data1&lt;-c(<span class="string">"西安"</span>,<span class="string">"zhengzhou"</span>,<span class="string">"shijiazhuang"</span>,<span class="string">"beijing"</span>,<span class="string">"shenyang"</span>,<span class="string">"changhcun"</span>,<span class="string">"哈尔滨"</span>) </div><div class="line">data2&lt;-c(<span class="string">"nanyang"</span>,<span class="string">"wuhan"</span>,<span class="string">"changsha"</span>,<span class="string">"南昌"</span>,<span class="string">"guangzhou"</span>,<span class="string">"南宁"</span>,<span class="string">"贵阳"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">origin&lt;-c(data1[<span class="number">1</span>:<span class="number">6</span>],data2[<span class="number">1</span>:<span class="number">6</span>])</div><div class="line">destination&lt;-c(data1[<span class="number">2</span>:<span class="number">7</span>],data2[<span class="number">2</span>:<span class="number">7</span>])</div><div class="line">map_data1&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'Dark'</span>)</div><div class="line">          )</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>随机生成的线条和气泡颜色看着挺别扭，我们可以将其修改为自定义颜色：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;- remap(mapdata=map_data1,        </div><div class="line">          title =<span class="string">"我是主标题"</span>,</div><div class="line">          subtitle =<span class="string">"我是副标题"</span>,</div><div class="line">          theme =get_theme(theme=<span class="string">'none'</span>,</div><div class="line">          lineColor = <span class="string">"white"</span>,    </div><div class="line">          backgroundColor=<span class="string">"black"</span>      </div><div class="line">          )</div><div class="line">           )</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image6.png" alt=""></p>
<p>你可以用这种方法，结合自己的数据来表达多个地域之间的流动方向：比如一打一路、长征、贸易路线、铁路路线图等都非常适合这种表达。</p>
<p>gif效果：</p>
<p><img src="http://or6biw7ir.bkt.clouddn.com/image8.gif" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> REmap </tag>
            
            <tag> 路径图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——REmap动态地图]]></title>
      <url>/2017/06/07/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94REmap%E5%8A%A8%E6%80%81%E5%9C%B0%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>今天开始，要跟着大家学习一个新的可视化R包——REmap包。</p>
<p>说起来，这个包要归功于百度的可视化开源项目——echarts,它是国内为数不多的高水平开源可视化js库，在业界地位首屈一指。</p>
<p>经过大神的努力，我们终于可以在R语言中以简洁的REmap函数形式，来调用Echarts核心功能，而不用亲自去学js代码，就可以创建动态地图可视化作品。</p>
<a id="more"></a>
<p>如果有小伙伴儿熟悉百度的大数据可视化项目——百度迁徙地图，以及交通通勤图，以及后来的一带一路可视化路线图，肯定对那些动态地图上流动的线条和路径有很深的印象。</p>
<p>下面我们开始简单介绍REmap的主要功能：</p>
<p>REmap包中涵盖有一组函数，我所知道并用过的有REmap、REmapB、REmapC、REmapH。</p>
<p>每一个函数都对应着几种炫酷的动态效果类型：</p>
<p>今天我们先介绍REmap函数并利用该函数制作简单的流向图：</p>
<h3 id="安装及加载："><a href="#安装及加载：" class="headerlink" title="安装及加载："></a>安装及加载：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">install.packages(<span class="string">"devtools"</span>)</div><div class="line">devtools::install_github(<span class="string">"lchiffon/REmap"</span>)   <span class="comment">#开发者/包名</span></div><div class="line"><span class="keyword">library</span>(REmap)    <span class="comment">#加载</span></div></pre></td></tr></table></figure>
<h3 id="语法介绍："><a href="#语法介绍：" class="headerlink" title="语法介绍："></a>语法介绍：</h3><p>REmap函数的作图理念与ggplot其实还是有雷同的，它也是将数据信息和美学信息分开表达，数据信息包含在数据表中，而美化修饰参数都包含在theme内。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">remap(mapdata, title = <span class="string">" "</span>, </div><div class="line">subtitle = <span class="string">""</span>, </div><div class="line">theme = get_theme(<span class="string">"Dark"</span>))</div></pre></td></tr></table></figure></p>
<p>这是一个典型的REmap函数的结构，mapdata是我们所要展示的数据框格式数据集，里面包含了两列数据：起点位置、终点信息。</p>
<p>title用于设置主标题、subtitle用于设置副标题。而theme用于设定整个图形的主题风格，该主题是一个封装的函数变量，里面包含诸多参数信息（各种点线面的颜色、度量等信息）。</p>
<p>下面是一个典型的REmap主题内的参数示例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">get_theme(theme = <span class="string">"Dark"</span>,</div><div class="line">                  lineColor = <span class="string">"Random"</span>,</div><div class="line">                  backgroundColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  titleColor = <span class="string">"fff"</span>,</div><div class="line">                  borderColor = <span class="string">"rgba(100,149,237,1)"</span>,</div><div class="line">                  regionColor = <span class="string">"#1b1b1b"</span>,</div><div class="line">                  labelShow = <span class="literal">T</span>,</div><div class="line">                  pointShow = <span class="literal">F</span>,</div><div class="line">                  pointColor = <span class="string">"gold"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong></p>
<ul>
<li>参数一：theme为总体配色，默认选项有“Dark”、“Bright”、“Sky”、“none”</li>
<li>参数二：lineColor为线条颜色，默认是随机， 也可自行设置，如’red’</li>
<li>参数三：backgroundColor为地图外背景颜色</li>
<li>参数四：titleColor为标题颜色</li>
<li>参数五：borderColor为地图中地域边缘颜色，不同省份、城市的边缘</li>
<li>参数六：regionColor为地域颜色，即地图显示的颜色</li>
<li>参数七：labelShow为逻辑参数，是否显示地域名称，默认为T，即显示，只用于remapC函数</li>
<li>参数八：pointShow为逻辑参数，是否显示地域所在点，默认为F，不显示，只用于remapC函数</li>
<li>参数九：pointColor为pointShow中点的颜色，只用于remapC函数</li>
</ul>
<p><strong>REmap可以非常轻松的获取城市地点的经纬度数据：</strong></p>
<p>以大连为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">get_city_coord(<span class="string">"大连"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">121.62139</span>  <span class="number">38.91934</span></div></pre></td></tr></table></figure></p>
<p>如果想要获取一组城市的经纬度信息，可以直接赋值给城市向量：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">city_list &lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)</div><div class="line">get_geo_position(city_list)</div><div class="line"></div><div class="line">       lon      lat      city</div><div class="line"><span class="number">1</span> <span class="number">116.4136</span> <span class="number">39.91101</span>   beijing</div><div class="line"><span class="number">2</span> <span class="number">117.2059</span> <span class="number">39.09091</span>   tianjin</div><div class="line"><span class="number">3</span> <span class="number">123.4390</span> <span class="number">41.81134</span>  shenyang</div><div class="line"><span class="number">4</span> <span class="number">121.6214</span> <span class="number">38.91934</span>    dalian</div><div class="line"><span class="number">5</span> <span class="number">113.6313</span> <span class="number">34.75349</span> zhengzhou</div></pre></td></tr></table></figure></p>
<p>而且据说这两个函数大部分时候对拼音与汉字，甚至拼音的大小写都不敏感，所以避免了很多麻烦。</p>
<h3 id="生成模拟数据集："><a href="#生成模拟数据集：" class="headerlink" title="生成模拟数据集："></a>生成模拟数据集：</h3><p><strong>创建起始点：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">destination&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">origin&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure></p>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination)</div></pre></td></tr></table></figure></p>
<p><strong>数据预览：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">head(map_data)</div><div class="line">  origin destination</div><div class="line"><span class="number">1</span> dalian     beijing</div><div class="line"><span class="number">2</span> dalian     tianjin</div><div class="line"><span class="number">3</span> dalian    shenyang</div><div class="line"><span class="number">4</span> dalian      dalian</div><div class="line"><span class="number">5</span> dalian   zhengzhou</div></pre></td></tr></table></figure></p>
<h3 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_out&lt;-remap(mapdata=map_data,        <span class="comment">#流向地图的数据源（依次为起点、重点两列）</span></div><div class="line">                title=<span class="string">"我是标题"</span>,       <span class="comment">#设置主标题</span></div><div class="line">                subtitle=<span class="string">"我是副标题"</span>,  <span class="comment">#设置副标题</span></div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>)) <span class="comment">#设置主题（默认主题一共有三套：“Dark”,“Bright,”Sky“）</span></div></pre></td></tr></table></figure>
<p>运行以上代码之后，动态图表已经生成名为<code>map_out</code>的对象，只需使用<code>plot</code>函数调用一下<code>map_out</code>图表对象就可以看到该动态图表效果。</p>
<blockquote>
<p>提示下，这里的<code>map_out</code>的对象是一个<code>js</code>代码生成的<code>html</code>对象，运行完<code>plot</code>之后，动态图表效果不是呈现在R的图表窗口而是调用了桌面浏览器的Web窗口。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plot(map_out)</div><div class="line">Save img as: C:\Users\ADMINI~<span class="number">1</span>\AppData\Local\Temp\RtmpAxQndv/ID_20161015191055_242761.html</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image1.png" alt=""></p>
<p>运行完成之后，浏览器窗口会自动呈现动态图表效果：</p>
<p>其实仔细看以上代码，与<code>ggplot</code>的地图代码相比，要简单很多，数据集也很简单（最重要的直接支持地点名称而不需要经纬度数据），当然这些便利性主要归功于它的底层代码是调用<code>Echarts</code>项目，地理位置信息有百度地图的强大系统支持。</p>
<h3 id="可选主题介绍："><a href="#可选主题介绍：" class="headerlink" title="可选主题介绍："></a>可选主题介绍：</h3><p><strong>Dark主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map_out1&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Dark"</span>))</div><div class="line">plot(map_out1)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>Sky主题：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_out2&lt;-remap(mapdata=map_data,title=<span class="string">"我是标题"</span>,subtitle=<span class="string">"我是副标题"</span>,theme =get_theme(theme=<span class="string">"Sky"</span>))</div><div class="line"></div><div class="line">map_out&lt;-remap(mapdata=map_data,        </div><div class="line">                title=<span class="string">"我是标题"</span>,        </div><div class="line">                subtitle=<span class="string">"我是副标题"</span>, </div><div class="line">                theme =get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out2)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="关于主题自定义："><a href="#关于主题自定义：" class="headerlink" title="关于主题自定义："></a>关于主题自定义：</h3><p>以上是该函数内置的三款主题，当然如果你要想自定义主题的话，也是可以的，但是需要将<code>theme=&quot;Sky&quot;</code>设置为<code>none</code>，否则系统主题会覆盖掉你自定义的主题。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">map_out3&lt;-remap(mapdata=map_data,    <span class="comment">#设计流向地图</span></div><div class="line">title=<span class="string">"我是标题"</span>,                    <span class="comment">#设置标题</span></div><div class="line">subtitle=<span class="string">"我是副标题"</span>,               <span class="comment">#设置副标题</span></div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>,        <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"SandyBrown"</span>)            <span class="comment">#设置地区颜色</span></div><div class="line">)</div><div class="line">plot(map_out3)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image4.png" alt=""></p>
<p>但是个人习惯，还是比较喜欢先将主题定义好并命名，然后在运行图表代码的时候直接饮用，这样比较利于后期主题的微调：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mytheme&lt;-get_theme(theme=<span class="string">"none"</span>,     <span class="comment">#设置主题     </span></div><div class="line">lineColor=<span class="string">"blue"</span>,                    <span class="comment">#设置线条颜色</span></div><div class="line">backgroundColor=<span class="string">"white"</span>,             <span class="comment">#设置背景颜色</span></div><div class="line">titleColor=<span class="string">"black"</span>,                  <span class="comment">#设置标题颜色</span></div><div class="line">borderColor=<span class="string">"grey"</span>,                  <span class="comment">#设置地区边界颜色</span></div><div class="line">regionColor=<span class="string">"Bisque"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">map_out4&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"none"</span>))</div><div class="line">plot(map_out4)</div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image5.png" alt=""></p>
<p>当然如果将数据框中的数据两列调换，那么地图就可以做成流入图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">origin&lt;- c(<span class="string">"beijing"</span>,<span class="string">"tianjin"</span>,<span class="string">"shenyang"</span>,<span class="string">"dalian"</span>,<span class="string">"zhengzhou"</span>)    <span class="comment">#终点</span></div><div class="line">destination&lt;- rep(<span class="string">"dalian"</span>,length(destination))        <span class="comment">#起点</span></div></pre></td></tr></table></figure>
<p><strong>合成数据框格式的起终点数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">map_data&lt;- data.frame(origin,destination) </div><div class="line"></div><div class="line">map_out5&lt;-remap(mapdata=map_data,    </div><div class="line">title=<span class="string">"我是标题"</span>,                   </div><div class="line">subtitle=<span class="string">"我是副标题"</span>,             </div><div class="line">theme=get_theme(theme=<span class="string">"Bright"</span>))</div><div class="line">plot(map_out5)</div></pre></td></tr></table></figure></p>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image6.png" alt=""></p>
<p>如果想要存储该HTML对象，需要设定临时目录：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/Rscript"</span>)      <span class="comment">#保存图片的位置，不做修改默认为R的工作路径</span></div><div class="line">options(remap.js.web=<span class="literal">T</span>)    <span class="comment">#动态网页图保存命令</span></div><div class="line">plot(map_out5)             <span class="comment">#保存的同时自动调用浏览器窗口</span></div></pre></td></tr></table></figure>
<p><img src="http://or5l0vdpe.bkt.clouddn.com/image7.png" alt=""></p>
<p>其实以上所有图表都是带有动态交互效果的！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> REmap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leaflet在线地图进阶宝典之——高级辅助特性]]></title>
      <url>/2017/06/06/leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E4%B9%8B%E2%80%94%E2%80%94%E9%AB%98%E7%BA%A7%E8%BE%85%E5%8A%A9%E7%89%B9%E6%80%A7/</url>
      <content type="html"><![CDATA[<p>本文跟大家分享leaflet在线地图的高级附加属性，这些属性通常来讲仅仅作为我们数据额可视化项目的修饰元素，而并不会影响数据元素。</p>
<p>但是有了这些辅助修饰元素，往往可以使你的数据可视化项目变得更具人性化。</p>
<a id="more"></a>
<p>本文内容根据leaflet的官方主页（R语言接口）翻译而来：</p>
<p><strong>附加属性：</strong></p>
<ul>
<li>测度工具：Leaflet Measure  <blockquote>
<p>增加该工具可以轻而易举的让你在可视化地图中通过鼠标打点，测量两点之间的距离，如果是闭合区域，则可以直接计算闭合区域的真实面积。</p>
</blockquote>
</li>
<li>网格线：Graticule<blockquote>
<p>网格线可以提供平面坐标系下地理空间的经纬度位置参考线。</p>
</blockquote>
</li>
<li>昼夜分界线：Terminator (day/night indicator)<blockquote>
<p>昼夜分界线可以提供一天中不同地区的昼夜分界状况。</p>
</blockquote>
</li>
<li>mini小地图：Minimap<blockquote>
<p>mini窗口小地图可以提供定位窗口，让你知道主版面中位置在更大范围地理区域上的大致方位，就相当于游戏中的mini导航图。</p>
</blockquote>
</li>
<li>辅助按钮：EasyButton<blockquote>
<p>辅助按钮可以提供一键初始化比例尺，一键定位功能。</p>
</blockquote>
</li>
<li>自定义js属性：Custom JavaScript with htmlwidgets::onRender<blockquote>
<p>你可以利用leaflet与HTML的接口工具对地图版面进行更加丰富的属性设置。</p>
</blockquote>
</li>
</ul>
<h3 id="测度工具：Leaflet-Measure"><a href="#测度工具：Leaflet-Measure" class="headerlink" title="测度工具：Leaflet Measure"></a>测度工具：Leaflet Measure</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line">m&lt;-leaflet()%&gt;%addTiles()</div><div class="line">m %&gt;%fitBounds(-<span class="number">73.9</span>,<span class="number">40.75</span>,-<span class="number">73.95</span>,<span class="number">40.8</span>) %&gt;%addMeasure()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image1.png" alt=""></p>
<p>右上侧的小弹窗打开之后选择创建测距选项，就可以通过鼠标打点儿，测量两点之间的地理距离，如果是三个以上的点，则会测量出闭合多边形区域的面积。</p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1NDI4OA==" frameborder="0" 'allowfullscreen'=""></iframe>

<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">m %&gt;%</div><div class="line">  fitBounds(<span class="number">13.76134</span>, <span class="number">52.675499</span>, <span class="number">13.0884</span>, <span class="number">52.33812</span>) %&gt;%   <span class="comment">#设定版面呈现的地理区域范围</span></div><div class="line">  addMeasure(</div><div class="line">    position = <span class="string">"bottomleft"</span>,       <span class="comment">#测距菜单位置</span></div><div class="line">    primaryLengthUnit = <span class="string">"meters"</span>,  <span class="comment">#测量的点距离输出单位</span></div><div class="line">    primaryAreaUnit = <span class="string">"sqmeters"</span>,  <span class="comment">#测量的闭合多边形区域面积输出单位</span></div><div class="line">    activeColor = <span class="string">"#3D535D"</span>,       <span class="comment">#</span></div><div class="line">    completedColor = <span class="string">"#7D4479"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image2.png" alt=""></p>
<h3 id="网格线：Graticule"><a href="#网格线：Graticule" class="headerlink" title="网格线：Graticule"></a>网格线：Graticule</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% addGraticule()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;% </div><div class="line">addGraticule(interval = <span class="number">10</span>, style = list(color = <span class="string">"#FF0000"</span>, weight = <span class="number">1</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image4.png" alt=""></p>
<p>而且网格线系统是可控元素，控制方式就是将其当成一个单独的图层，然后分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>) %&gt;%</div><div class="line">  addGraticule(group = <span class="string">"Graticule"</span>) %&gt;%</div><div class="line">  addLayersControl(overlayGroups = c(<span class="string">"Graticule"</span>),options=layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image5.png" alt=""><br><img src="http://or3sddq9r.bkt.clouddn.com/image6.png" alt=""></p>
<h3 id="昼夜分界线：Terminator-day-night-indicator"><a href="#昼夜分界线：Terminator-day-night-indicator" class="headerlink" title="昼夜分界线：Terminator (day/night indicator)"></a>昼夜分界线：Terminator (day/night indicator)</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;% addTerminator()</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>昼夜分界线支持自定义日期和分组功能：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;%</div><div class="line">  addTiles() %&gt;%</div><div class="line">  addTerminator(</div><div class="line">    resolution=<span class="number">10</span>,</div><div class="line">    time = <span class="string">"2013-06-20T21:00:00Z"</span>,</div><div class="line">    group = <span class="string">"daylight"</span>) %&gt;%</div><div class="line">  addLayersControl(</div><div class="line">    overlayGroups = <span class="string">"daylight"</span>,</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image8.png" alt=""></p>
<h3 id="mini导航地图：Minimap"><a href="#mini导航地图：Minimap" class="headerlink" title="mini导航地图：Minimap"></a>mini导航地图：Minimap</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap()</div></pre></td></tr></table></figure>
<p><strong>mini导航地图中的地图背景也是支持自定义的：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>) %&gt;%</div><div class="line">  addProviderTiles(providers$Esri.WorldStreetMap) %&gt;%</div><div class="line">  addMiniMap(tiles = providers$Esri.WorldStreetMap,toggleDisplay = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image9.png" alt=""></p>
<p>视频演示：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI1Nzg3Mg==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助工具菜单："><a href="#辅助工具菜单：" class="headerlink" title="辅助工具菜单："></a>辅助工具菜单：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(htmlwidgets)</div><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addEasyButton(easyButton(      <span class="comment">#添加一键恢复初始窗口比利时</span></div><div class="line">    icon=<span class="string">"fa-globe"</span>, title=<span class="string">"Zoom to Level 1"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.setZoom(1); &#125;"</span>))) %&gt;%</div><div class="line">  addEasyButton(easyButton(     <span class="comment">#添加一键定位功能（根据你的所在位置）</span></div><div class="line">    icon=<span class="string">"fa-crosshairs"</span>, title=<span class="string">"Locate Me"</span>,</div><div class="line">    onClick=JS(<span class="string">"function(btn, map)&#123; map.locate(&#123;setView: true&#125;); &#125;"</span>)))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image12.jpg" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI5NjIyNA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="辅助按钮：EasyButton"><a href="#辅助按钮：EasyButton" class="headerlink" title="辅助按钮：EasyButton"></a>辅助按钮：EasyButton</h3><p>以下代码展示了如何通过调用js工具控件来通过打开菜单工具开启地图上的点聚合功能，同时关闭菜单工具按钮，关闭点聚合功能。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;% addTiles() %&gt;%</div><div class="line">  addMarkers(data=quakes,</div><div class="line">    clusterOptions = markerClusterOptions(),</div><div class="line">    clusterId = <span class="string">"quakesCluster"</span>) %&gt;%</div><div class="line">  addEasyButton(easyButton(</div><div class="line">    states = list(</div><div class="line">      easyButtonState(   <span class="comment">#状态1：打开菜单，开启点聚合</span></div><div class="line">        stateName=<span class="string">"unfrozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle"</span>,</div><div class="line">        title=<span class="string">"Freeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn,map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.freezeAtZoom();</div><div class="line">            btn.state('frozen-markers');</div><div class="line">          &#125;")</div><div class="line">      ),</div><div class="line">      easyButtonState( <span class="comment">#状态2：关闭菜单，结束点聚合功能</span></div><div class="line">        stateName=<span class="string">"frozen-markers"</span>,</div><div class="line">        icon=<span class="string">"ion-toggle-filled"</span>,</div><div class="line">        title=<span class="string">"UnFreeze Clusters"</span>,</div><div class="line">        onClick = JS(<span class="string">"</span></div><div class="line">          function(btn, map) &#123;</div><div class="line">            var clusterManager =</div><div class="line">              map.layerManager.getLayer('cluster', 'quakesCluster');</div><div class="line">            clusterManager.unfreeze();</div><div class="line">            btn.state('unfrozen-markers');</div><div class="line">          &#125;")</div><div class="line">      )</div><div class="line">    )</div><div class="line">  ))</div></pre></td></tr></table></figure>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image10.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzM0MDg4MA==" frameborder="0" 'allowfullscreen'=""></iframe>


<h3 id="自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender"><a href="#自定义js属性：Custom-JavaScript-with-htmlwidgets-onRender" class="headerlink" title="自定义js属性：Custom JavaScript with htmlwidgets::onRender"></a>自定义js属性：Custom JavaScript with htmlwidgets::onRender</h3><p>基础图层会根据导航窗内的图层风格改变而随之转换：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">mymap&lt;-leaflet() %&gt;% setView(<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>)</div><div class="line">esri &lt;- grep(<span class="string">"^Esri"</span>, providers, value = <span class="literal">TRUE</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> (provider <span class="keyword">in</span> esri) &#123;</div><div class="line">  mymap &lt;-mymap %&gt;% addProviderTiles(provider, group = provider)</div><div class="line">&#125;</div><div class="line"></div><div class="line">mymap %&gt;%</div><div class="line">  addLayersControl(baseGroups = names(esri),</div><div class="line">    options = layersControlOptions(collapsed = <span class="literal">FALSE</span>)) %&gt;%</div><div class="line">  addMiniMap(tiles = esri[[<span class="number">1</span>]], toggleDisplay = <span class="literal">TRUE</span>,</div><div class="line">    position = <span class="string">"bottomleft"</span>) %&gt;%</div><div class="line">  htmlwidgets::onRender(<span class="string">"</span></div><div class="line">    function(el, x) &#123;</div><div class="line">      var myMap = this;</div><div class="line">      myMap.on('baselayerchange',</div><div class="line">        function (e) &#123;</div><div class="line">          myMap.minimap.changeLayer(L.tileLayer.provider(e.name));</div><div class="line">        &#125;)</div><div class="line">    &#125;")</div></pre></td></tr></table></figure></p>
<p><img src="http://or3sddq9r.bkt.clouddn.com/image11.png" alt=""></p>
<p>动态效果：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNzI3MDY4OA==" frameborder="0" 'allowfullscreen'=""></iframe>


<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Leaflet在线地图进阶宝典——json素材操纵与图层面板控制]]></title>
      <url>/2017/06/05/Leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E8%BF%9B%E9%98%B6%E5%AE%9D%E5%85%B8%E2%80%94%E2%80%94json%E7%B4%A0%E6%9D%90%E6%93%8D%E7%BA%B5%E4%B8%8E%E5%9B%BE%E5%B1%82%E9%9D%A2%E6%9D%BF%E6%8E%A7%E5%88%B6/</url>
      <content type="html"><![CDATA[<p>这篇教程憋了很久，其实算是3个月前leaflet在线地图系列的进阶篇，但是因为当时对于leaflet地图的数据源结构理解有限，技能勉强操控shp数据源，对于json数据源所知甚少，一直拖了这么久才更新。</p>
<p>随着近期在json数据结构的理解不断加深，对于list结构和向量化运算的掌握也多有提高，这才能熟练的在leaflet系统中操控json数据。</p>
<a id="more"></a>
<p><strong>本篇主要分为两大部分：</strong></p>
<ul>
<li>如何自如的操纵json数据来打造leaflet所能识别的数据源和style属性；</li>
<li>如何操控leaflet控制台版面中的地图图层和数据图层。</li>
</ul>
<p>想要很好的理解本文，你需先对leaflet系统基础语法有所掌握（其实可视化的图层语法都大同小异，leaflet属于JavaScript语言打造的在线地图库，同D3、plotly、Rcharts以及Highcharts等接口的语法差别不大）。</p>
<p>但如果你在看本文之前已经看过我的前期四篇leaflet入门篇：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27012917" target="_blank" rel="external">动态地理信息可视化——leaflet在线地图简介</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26994131" target="_blank" rel="external">动态地理信息可视化——散点地图系列</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27005732" target="_blank" rel="external">动态地理信息可视化——leaflet构造路径图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27009715" target="_blank" rel="external">动态地理信息可视化——leaflet填充地图</a></li>
</ul>
<p>那么本文理解起来就容易多了，仅仅是温故知新罢了！</p>
<p>当然如果你学有余力的话，你也可以顺便把百度的Echarts系统地图接口也学习一下：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27019450" target="_blank" rel="external">R语言可视化——REmap动态地图</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27021446" target="_blank" rel="external">R语言可视化——REmap(路径图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27032696" target="_blank" rel="external">R语言可视化——REmapC(填充地图)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27041506" target="_blank" rel="external">R语言可视化——REmapH(中心热度图)</a></li>
</ul>
<p>如果你能熟练掌握以上两套在线地图语法，那么制作此类可视化项目至少在技术角度上来说已经没有任何门槛。</p>
<p><strong>以下是本文的主要内容：</strong></p>
<p>json地图数据结构和变量操控：</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line"><span class="keyword">library</span>(sf)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(htmltools)</div></pre></td></tr></table></figure>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><p><strong>这样的全局预设可以为你省却很多麻烦，强烈建议</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">options(stringsAsFactors=<span class="literal">FALSE</span>,warn=<span class="literal">FALSE</span>) </div><div class="line">setwd(<span class="string">"D:/R/mapdatanew/"</span>)</div><div class="line"></div><div class="line">url&lt;-<span class="string">"https://raw.githubusercontent.com/ljtyduyu/DataWarehouse/master/Mapdata/City/110100.json"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>最近把自己所有的关于地图可视化的数据传到了个人Github上，这样无论是大家以后调用数据还是自己平时练习都方便多了！</p>
</blockquote>
<p>以下数据导入json原生数据格式的三种方式：（2,3两种是没啥区别的，但是simplifyVector=FALSE参数设定与否则至关重要，他决定着输入的json数据是经过平整的向量化数据还是原生的list数据，这里的leaflet需要原生格式的json数据）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">geojson1&lt;-fromJSON(url)  <span class="comment">#在同一层级对象长度一致，便会被自动视作数据框。</span></div><div class="line">geojson2&lt;-fromJSON(url,simplifyVector=<span class="literal">FALSE</span>)  <span class="comment">#不强转化为数据框。</span></div><div class="line">geojson3&lt;-readLines(url,warn=<span class="literal">FALSE</span>,encoding=<span class="string">"UTF-8"</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>设置随机中非常必要，否则容易导致每次的效果都不一样：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">1234</span>)</div></pre></td></tr></table></figure></p>
<h3 id="向地图素材中添加作图数据："><a href="#向地图素材中添加作图数据：" class="headerlink" title="向地图素材中添加作图数据："></a>向地图素材中添加作图数据：</h3><p><strong>向list对象中添加数据（随机数据）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">geojson3$features&lt;-lapply(geojson3$features,<span class="keyword">function</span>(feat)&#123;</div><div class="line">feat$properties$scale&lt;-runif(<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>)</div><div class="line">feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>从list对象中读取数据(主要读取我们可做更改与扩展的行政区划列表信息)</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-ldply(geojson3$features,<span class="keyword">function</span>(feat)&#123; </div><div class="line">name&lt;-feat$properties$name</div><div class="line">id&lt;- feat$properties$id</div><div class="line">scale&lt;-as.numeric(feat$properties$scale)</div><div class="line">mydata&lt;-data.frame(name,id,scale)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p><strong>Default styles for all features </strong></p>
<blockquote>
<p>it has  higher precedence  compare with  the style in a function of GeoJSON<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">geojson3$style=list(weight=<span class="number">1</span>,color=<span class="string">"#555555"</span>,opacity=<span class="number">1</span>,fillOpacity=<span class="number">0.8</span>)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>Color by scale using quantiles</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pal&lt;-colorQuantile(<span class="string">"Greens"</span>,mydata$scale)</div></pre></td></tr></table></figure></p>
<p><strong>Add a properties$style list to each feature</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">geojson3$features &lt;- lapply(geojson3$features, <span class="keyword">function</span>(feat) &#123;</div><div class="line">  feat$properties$style&lt;-list(</div><div class="line">       fillColor=pal(feat$properties$scale)</div><div class="line">       )</div><div class="line">  feat</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="关于属性设置的三个优先级："><a href="#关于属性设置的三个优先级：" class="headerlink" title="关于属性设置的三个优先级："></a>关于属性设置的三个优先级：</h3><p><strong>按照由高到低的顺序排列为：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> feature-specific styles <span class="comment">#（也就是设置在 simple featrue的style）</span></div><div class="line"> the top-level style object <span class="comment">#（设置在features中的style）</span></div><div class="line">style-related arguments passed to the <span class="keyword">function</span> <span class="comment">#（设置在GeoJSON内的各种参数）</span></div></pre></td></tr></table></figure></p>
<h3 id="这是通过增加地图图层来进行图层控制的简单案例："><a href="#这是通过增加地图图层来进行图层控制的简单案例：" class="headerlink" title="这是通过增加地图图层来进行图层控制的简单案例："></a>这是通过增加地图图层来进行图层控制的简单案例：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image1.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image2.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image3.png" alt=""><br><img src="http://or2u6tot7.bkt.clouddn.com/image4.png" alt=""></p>
<p><strong>以下这段代码是之前leaflet系列教程的线图篇里面的案例，这里刚好应用一下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.table(<span class="string">"D:/R/File/subwayline.txt"</span>,header=<span class="literal">TRUE</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data$size&lt;-runif(<span class="number">47</span>,<span class="number">10</span>,<span class="number">25</span>)</div><div class="line"></div><div class="line">data$Type&lt;-as.factor(data$Type)</div><div class="line">data1&lt;-filter(data,Type==<span class="string">"NO1"</span>)</div><div class="line">data2&lt;-filter(data,Type==<span class="string">"NO5"</span>)</div><div class="line">pal &lt;- colorFactor(topo.colors(<span class="number">2</span>),data$Type)</div><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>这是一个高度综合的案例，包含底图图层的多分类控制；数据图层的多分类控制以及点线面三种数据图层的综合运用。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles(group =<span class="string">"OSM (default)"</span>)%&gt;%</div><div class="line">setView(lng=<span class="number">116.435889</span>,lat=<span class="number">39.932642</span>,zoom=<span class="number">8</span>)%&gt;%</div><div class="line">addGeoJSON(geojson3,group=<span class="string">"GeoJSON"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$CartoDB.Positron,group=<span class="string">"CartoDB"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLines,options=providerTileOptions(opacity=<span class="number">0.35</span>),group=<span class="string">"TonerLines"</span>)%&gt;%</div><div class="line">addProviderTiles(providers$Stamen.TonerLabels,group=<span class="string">"TonerLabels"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"red"</span>,group=<span class="string">"line1"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"orange"</span>,group=<span class="string">"line2"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,radius=~size,group=<span class="string">"address"</span>,color = <span class="string">"#1843F9"</span>)%&gt;%</div><div class="line">addLayersControl(</div><div class="line">   baseGroups = c(<span class="string">"OSM (default)"</span>, <span class="string">"CartoDB"</span>, <span class="string">"TonerLines"</span>,<span class="string">"TonerLabels"</span>),</div><div class="line">   overlayGroups = c(<span class="string">"GeoJSON"</span>,<span class="string">"line1"</span>,<span class="string">"line2"</span>,<span class="string">"address"</span>),</div><div class="line">   options=layersControlOptions(collapsed = <span class="literal">FALSE</span>)</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><img src="http://or2u6tot7.bkt.clouddn.com/image6.png" alt=""></p>
<p>动态视频效果来一波！<iframe height="498" width="510" src="http://player.youku.com/embed/XMjgwNjU4OTU4MA==" frameborder="0" 'allowfullscreen'=""></iframe></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> json </tag>
            
            <tag> leaflet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态地理信息可视化——leaflet填充地图]]></title>
      <url>/2017/06/05/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E5%A1%AB%E5%85%85%E5%9C%B0%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>这一篇是leaflet动态地图的第四篇，也是最值得推荐的一篇，这一篇涉及到热力地图填充，通过该篇内容，大家可以体会大leaflet在线地图的R借口在处理热力地图上面颜色标度映射的强大优势。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maps)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(stringi)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(rgdal)</div></pre></td></tr></table></figure>
<h3 id="地图素材加载："><a href="#地图素材加载：" class="headerlink" title="地图素材加载："></a>地图素材加载：</h3><p><strong>（leaflet支持多种地图素材，比如常见的shapefile格式、json格式以及其他在线地图，但是因为json格式本来还没有很熟练，这里用shp格式地图素材为例进行加讲解）。</strong></p>
<p>肯定会有小伙伴儿会问，既然leaflet本身就是在线地图，为啥还要费事儿加载shp地图素材就进行映射，因为leaflet在线地图提供的地图底图本身具有多级缩放特性，每一缩放级别都有对应的行政区划界线，但是这些参数和行政区划是封装在底层的js语言中的，我们无法使用R语言直接进行调用，只能作为一个图层素材进行背景修饰，说白了，其实我们想要的仅仅是多级缩放的动态切换效果，这样再结合我们自定义的地图素材，可以呈现出更加完美的效果。（只有热力填充地图需要定义区域界线，而点图和线图都可以直接利用leaflet本身的地图素材，因为只需要坐标点位置即可）。</p>
<p>我们常用的地图素材资源无非以下三种，R包内置的地图数据、shapefile格式和json格式。以下是三种格式素材导入并在leaflet中制作的地图的基本代码：</p>
<p><strong>maps包:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapStates&lt;-map(<span class="string">"state"</span>,fill=<span class="literal">TRUE</span>,plot=<span class="literal">FALSE</span>)</div><div class="line">leaflet(mapStates) %&gt;% addTiles() %&gt;%addPolygons(fillColor=topo.colors(<span class="number">10</span>,alpha =<span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mapWorld&lt;-map(<span class="string">"world"</span>,fill=<span class="literal">TRUE</span>,col=rainbow(<span class="number">200</span>),ylim=c(-<span class="number">60</span>,<span class="number">90</span>),mar=c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</div><div class="line">leaflet(mapWorld) %&gt;% addTiles() %&gt;%addPolygons(fillColor = topo.colors(<span class="number">10</span>, alpha = <span class="literal">NULL</span>), stroke = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image2.png" alt=""></p>
<p><strong>shapefile:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">American_map &lt;-readShapePoly(<span class="string">"C:/rstudy/USA_map/STATES.SHP"</span>)</div><div class="line">American_map$STATE_NAME = iconv(American_map$STATE_NAME,<span class="string">"UTF8"</span>,<span class="string">"CP936"</span>) </div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%addPolygons(popup=~STATE_NAME,fillColor=topo.colors(<span class="number">10</span>,alpha=<span class="literal">NULL</span>),stroke=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image3.png" alt=""></p>
<p><strong>json文件：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line">geoData&lt;-readLines(<span class="string">"D:/R/mapdata/State/USA.json"</span>,warn=<span class="literal">FALSE</span>)%&gt;%paste(collapse=<span class="string">"\n"</span>)%&gt;%fromJSON(simplifyVector=<span class="literal">FALSE</span>)</div><div class="line">geoData$style=list(weight=<span class="number">1</span>,color=<span class="string">"red"</span>,fillColor=<span class="string">"green"</span>,opacity=<span class="number">1</span>,fill=<span class="literal">TRUE</span>,fillOpacity=<span class="number">0.6</span>)</div><div class="line">leaflet()%&gt;%setView(lng=-<span class="number">98.961387</span>,lat=<span class="number">39.708533</span>,zoom=<span class="number">3</span>)%&gt;%addTiles()%&gt;%addGeoJSON(geoData)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image4.png" alt=""></p>
<p>前两种素材作图过程大同小异，特别是一些标度的属性声明很类似ggplot中的函数过程，但是json格式的素材操作起来就不是很友好，他的标度属性是要在数据文件中新建style的list对象进行生命，而且json格式中的list非常多，结构相对复杂，至今我也没完全搞明白如果自由操作。</p>
<h3 id="几张分类颜色标度填充效果："><a href="#几张分类颜色标度填充效果：" class="headerlink" title="几张分类颜色标度填充效果："></a>几张分类颜色标度填充效果：</h3><p>下面是承接上面shapefile格式素材做展现的四中颜色标度（三种连续性标度和一种分类标度的映射过程）。</p>
<p><strong>colorQuantile（连续性数值变量的百分比颜色过度）:</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorQuantile(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image5.png" alt=""></p>
<p><strong>以下两种同属连续性数值变量（使用颜色数量不同）</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric(多色过度):</div><div class="line">pal&lt;-colorNumeric(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title = <span class="string">"1990年人口数量（万人"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorNumeric（单色过度):</div><div class="line">pal&lt;-colorNumeric(<span class="string">"Greens"</span>,American_map@data$POP1990)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity  = <span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image7.png" alt=""></p>
<p><strong>以下两种也同属连续性数值变量的颜色标度映射</strong></p>
<blockquote>
<p>（但是可以自定义分组数量，其实实质上是对变量分割，后以分组形式填充，更准确的说，确实是应用了变量转换的方式（数值转有序因子），但是过程是自动进行的，而不是像在ggplot中一样不需手动转换）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（单色渐变分组过度):</div><div class="line">pal&lt;-colorBin(<span class="string">"Greens"</span>,American_map@data$POP1990,<span class="number">10</span>)</div><div class="line">leaflet(American_map)%&gt;%addTiles()%&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">colorBin（多色色渐变分组过度):</div><div class="line">pal&lt;-colorBin(c(<span class="string">"darkgreen"</span>,<span class="string">"yellow"</span>,<span class="string">"orangered"</span>),American_map@data$POP1990,<span class="number">8</span>)</div><div class="line">leaflet(American_map) %&gt;% addTiles() %&gt;%</div><div class="line">addPolygons(color=~pal(American_map@data$POP1990),fillOpacity=<span class="number">0.8</span>,weight=<span class="number">1</span>)%&gt;%</div><div class="line">addLegend(pal=pal,values=American_map@data$POP1990,position=<span class="string">"bottomleft"</span>,title=<span class="string">"1990年人口数量（万人）"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image9.png" alt=""></p>
<p><strong>离散标度：</strong></p>
<blockquote>
<p>（这个例子是用在变量本身就是因子变量的情况下，算是分类变量情况下的颜色标度映射）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">mydata&lt;-read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">mydata$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">33</span>,replace=<span class="literal">TRUE</span>))</div><div class="line">shape &lt;- merge(china_map,mydata,by=<span class="string">"NAME"</span>)</div><div class="line">pal &lt;- colorFactor(c(<span class="string">"green"</span>,<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"yellow"</span>,<span class="string">"brown"</span>), domain = c(<span class="string">"A"</span>, <span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>))<span class="comment">#设置色盘：</span></div><div class="line">i_popup&lt;-paste0(<span class="string">"&lt;strong&gt;Province:&lt;/strong&gt;"</span>,shape$NAME,<span class="string">"&lt;br&gt;"</span>,</div><div class="line"><span class="string">"&lt;strong&gt;Level:&lt;/strong&gt;"</span>,shape$type)</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">设置弹出窗口</div><div class="line">leaflet(shape)%&gt;%addTiles()%&gt;%</div><div class="line"> setView(<span class="number">116.387021</span>,<span class="number">39.969369</span>,zoom=<span class="number">3</span>)%&gt;%</div><div class="line">addPolygons(fillColor=~pal(shape$type),fillOpacity=<span class="number">0.8</span>,color=<span class="string">"#000000"</span>,weight=<span class="number">1</span>,popup=i_popup)%&gt;%</div><div class="line">addLegend(pal=pal,values=shape@data$type,position=<span class="string">"bottomright"</span>,title=paste0(<span class="string">"小魔方基团2016年"</span>,<span class="string">"&lt;br&gt;"</span>,<span class="string">"营业分布等级"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://or1v6ecv9.bkt.clouddn.com/image10.png" alt=""></p>
<p>以上地图效果都支持多节自动缩放和弹窗动态信息显示（需设置popup属性及少量html交互代码）</p>
<p>leaflet在线地图底层由js源码编写，天然支持html语言，如能结合html搭配使用，可以在动态地图元素中，特别是弹窗中无缝嵌入图片、超链接甚至视频等多类元素，感兴趣的小伙伴儿可以自行探索。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> 填色地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态地理信息可视化——leaflet构造路径图]]></title>
      <url>/2017/06/04/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E6%9E%84%E9%80%A0%E8%B7%AF%E5%BE%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>根据先前几篇内容的框架，今天介绍leaflet在线地图的第三篇，以线条元素构造的路径图。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(dplyr)</div></pre></td></tr></table></figure>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.table(<span class="string">"D:/R/File/subwayline.txt"</span>,header=<span class="literal">TRUE</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">data$Type&lt;-as.factor(data$Type)</div><div class="line">data1&lt;-filter(data,Type==<span class="string">"NO1"</span>)</div><div class="line">data2&lt;-filter(data,Type==<span class="string">"NO5"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上我用百度地图的坐标拾取平台采点拾取的背景地铁一号线和五号线的车站地理位置信息，（因为没有现成的数据，只能手工采点，可能不是很准确）</p>
<h3 id="基本语法解释："><a href="#基本语法解释：" class="headerlink" title="基本语法解释："></a>基本语法解释：</h3><p><strong>今天要介绍的leaflet类型是线条，也即addPolylines函数，其基本语法如下：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">addPolylines(map, lng = <span class="literal">NULL</span>,lat = <span class="literal">NULL</span>, <span class="comment">#指定数据源并做经纬度声明</span></div><div class="line">     layerId = <span class="literal">NULL</span>, </div><div class="line">     group = <span class="literal">NULL</span>,  <span class="comment">#图层分组（制作动态可见性交互时使用）</span></div><div class="line">     stroke = <span class="literal">TRUE</span>, <span class="comment">#是否呈现路径线</span></div><div class="line">     color = <span class="string">"#03F"</span>,weight = <span class="number">5</span>,opacity = <span class="number">0.5</span>, <span class="comment">#关于线条的颜色、宽度、透明度 </span></div><div class="line">     fill = <span class="literal">FALSE</span>, fillColor = color, fillOpacity = <span class="number">0.2</span>, </div><div class="line">     dashArray = <span class="literal">NULL</span>, smoothFactor = <span class="number">1</span>, noClip = <span class="literal">FALSE</span>,  <span class="comment">#线型参数，平滑度等</span></div><div class="line">     popup = <span class="literal">NULL</span>, options = pathOptions(), data = getMapData(map)) <span class="comment">#弹窗、选项控制</span></div></pre></td></tr></table></figure>
<h3 id="构造色盘："><a href="#构造色盘：" class="headerlink" title="构造色盘："></a>构造色盘：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorFactor(topo.colors(<span class="number">2</span>),data$Type)</div></pre></td></tr></table></figure>
<h3 id="可视化过程："><a href="#可视化过程：" class="headerlink" title="可视化过程："></a>可视化过程：</h3><h4 id="作图函数：使用默认点标识"><a href="#作图函数：使用默认点标识" class="headerlink" title="作图函数：使用默认点标识"></a>作图函数：使用默认点标识</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addMarkers(data=data,~lon, ~lat,popup = ~address)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image2.png" alt=""></p>
<h4 id="使用可自定义的圆点标识车站位置"><a href="#使用可自定义的圆点标识车站位置" class="headerlink" title="使用可自定义的圆点标识车站位置"></a>使用可自定义的圆点标识车站位置</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addTiles()%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircleMarkers(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image4.png" alt=""></p>
<h4 id="以下是几种比较常用的地图背景素材"><a href="#以下是几种比较常用的地图背景素材" class="headerlink" title="以下是几种比较常用的地图背景素材"></a>以下是几种比较常用的地图背景素材</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  </div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)   </div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    </div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)</div></pre></td></tr></table></figure>
<h4 id="几张常见的素材风格："><a href="#几张常见的素材风格：" class="headerlink" title="几张常见的素材风格："></a>几张常见的素材风格：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.WorldGrayCanvas"</span>) %&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image7.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%</div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  %&gt;%</div><div class="line">addPolylines(data=data1,~lon,~lat,color=<span class="string">"blue"</span>)%&gt;%</div><div class="line">addPolylines(data=data2,~lon,~lat,color=<span class="string">"green"</span>)%&gt;%</div><div class="line">addCircles(data=data,~lon, ~lat,popup = ~address,color=~Type)</div></pre></td></tr></table></figure>
<p><img src="http://or029s79c.bkt.clouddn.com/image8.png" alt=""></p>
<p>是不是觉得花样不够多呀，那好吧，以下这些，全部都送给你，那好不谢！</p>
<hr>
<ul>
<li>OpenStreetMap.Mapnik</li>
<li>OpenStreetMap.BlackAndWhite</li>
<li>OpenStreetMap.DE</li>
<li>OpenStreetMap.France</li>
<li>OpenStreetMap.HOT</li>
<li>OpenTopoMap</li>
<li>Thunderforest.OpenCycleMap</li>
<li>Thunderforest.Transport</li>
<li>Thunderforest.TransportDark</li>
<li>Thunderforest.SpinalMap</li>
<li>Thunderforest.Landscape</li>
<li>Thunderforest.Outdoors</li>
<li>Thunderforest.Pioneer</li>
<li>OpenMapSurfer.Roads</li>
<li>OpenMapSurfer.Grayscale</li>
<li>Hydda.Full</li>
<li>Stamen.Toner</li>
<li>Stamen.TonerBackground</li>
<li>Stamen.TonerLite</li>
<li>Stamen.Watercolor</li>
<li>Stamen.Terrain</li>
<li>Stamen.TerrainBackground</li>
<li>Stamen.TopOSMRelief</li>
<li>Esri.WorldStreetMap</li>
<li>Esri.DeLorme</li>
<li>Esri.WorldTopoMap</li>
<li>Esri.WorldImagery</li>
<li>Esri.WorldTerrain</li>
<li>Esri.WorldShadedRelief</li>
<li>Esri.WorldPhysical</li>
<li>Esri.OceanBasemap</li>
<li>Esri.NatGeoWorldMap</li>
<li>Esri.WorldGrayCanvas</li>
<li>MtbMap</li>
<li>CartoDB.Positron</li>
<li>CartoDB.PositronNoLabels</li>
<li>CartoDB.PositronOnlyLabels</li>
<li>CartoDB.DarkMatter</li>
<li>CartoDB.DarkMatterNoLabels</li>
<li>CartoDB.DarkMatterOnlyLabels</li>
<li>HikeBike.HikeBike</li>
<li>HikeBike.HillShading</li>
<li>NASAGIBS.ModisTerraTrueColorCR</li>
<li>NASAGIBS.ModisTerraBands367CR</li>
<li>NASAGIBS.ViirsEarthAtNight2012</li>
<li>NASAGIBS.ModisTerraLSTDay</li>
<li>NASAGIBS.ModisTerraSnowCover</li>
<li>NASAGIBS.ModisTerraAOD</li>
<li>NASAGIBS.ModisTerraChlorophyll</li>
</ul>
<hr>
<p>细数也有好几十个，够你玩一阵子了，使用方法仅仅是通过设置图层函数进行调用，然后就可以愉快的在图层上面进行可视化操作了。<br>addProviderTiles(“地图类型”)</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> 路径图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> mini柱形/条形图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态地理信息可视化——散点地图系列]]></title>
      <url>/2017/06/03/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E6%95%A3%E7%82%B9%E5%9C%B0%E5%9B%BE%E7%B3%BB%E5%88%97/</url>
      <content type="html"><![CDATA[<p>这是一篇拖了好久的稿子，因为过年玩high了，一直放着没写，今天得空，赶快得空，赶紧整理一下。</p>
<p>本篇主讲leaflet在线地图系列中的散点系列，包含颜色映射规则（离散和连续）、大小映射规则。</p>
<p>其实也就是包含了我们看到的常规的散点图类型和气泡图类型。同时结合leaflet丰富多彩的背景地图主题进行展开。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maps)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(stringi)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(htmltools)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<p>为方便展示这里统一使用中国省级行政地图（shp格式导入），在省会城市坐标进行指标数据映射。</p>
<h3 id="地图素材数据导入："><a href="#地图素材数据导入：" class="headerlink" title="地图素材数据导入："></a>地图素材数据导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)      <span class="comment">#中国各省省会坐标</span></div><div class="line">province_city$size&lt;-round(runif(<span class="number">34</span>,<span class="number">5</span>,<span class="number">10</span>),<span class="number">2</span>)                       <span class="comment">#添加连续数值变量</span></div><div class="line">province_city$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">34</span>,replace=<span class="literal">TRUE</span>))  <span class="comment">#添加因子变量以便之后演示</span></div><div class="line">co&lt;-substr(rainbow(<span class="number">34</span>),<span class="number">1</span>,<span class="number">7</span>)</div><div class="line">province_city&lt;-data.frame(province_city,co)</div></pre></td></tr></table></figure>
<h3 id="制作色盘："><a href="#制作色盘：" class="headerlink" title="制作色盘："></a>制作色盘：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pal &lt;- colorFactor(c(<span class="string">"green"</span>, <span class="string">"red"</span>,<span class="string">"yellow"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>), domain = c(<span class="string">"A"</span>, <span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"E"</span>))<span class="comment">#因子变量的映射色盘</span></div><div class="line">cPal &lt;- colorNumeric(palette = c(<span class="string">"blue"</span>,<span class="string">"yellow"</span>,<span class="string">"red"</span>),domain =province_city$size)            <span class="comment">#数值型变量的映射色盘</span></div></pre></td></tr></table></figure>
<p>###可视化图形：</p>
<h4 id="作图函数："><a href="#作图函数：" class="headerlink" title="作图函数："></a>作图函数：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircleMarkers(lng=~jd,lat=~wd,radius=~size, color = ~co, fill=<span class="literal">TRUE</span>,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image3.png" alt=""></p>
<h4 id="离散标度映射："><a href="#离散标度映射：" class="headerlink" title="离散标度映射："></a>离散标度映射：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircles(lng=~jd,lat=~wd,color = ~pal(type),weight=~size,popup=~city)%&gt;%  </div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=pal,values = ~type,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>) </div><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% addCircleMarkers(lng=~jd,lat=~wd,color = ~pal(type),radius = ~size,fill=<span class="literal">TRUE</span>,popup=~city) </div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=pal,values = ~type,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image4.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image5.png" alt=""></p>
<h4 id="连续标度映射："><a href="#连续标度映射：" class="headerlink" title="连续标度映射："></a>连续标度映射：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% </div><div class="line">addCircles(lng=~jd,lat=~wd,fillColor=~cPal(size),weight=~size,stroke=<span class="literal">FALSE</span>,fillOpacity=<span class="number">0.8</span>,popup=~city)%&gt;%</div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=cPal,values = ~size,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>) </div><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;% </div><div class="line">addCircleMarkers(lng=~jd,lat=~wd,fillColor=~cPal(size),radius = ~size,stroke=<span class="literal">FALSE</span>,fillOpacity=<span class="number">0.8</span>,popup=~city)%&gt;%</div><div class="line">addLegend(<span class="string">"bottomright"</span>,pal=cPal,values = ~size,title = <span class="string">"GDP等级"</span>,labFormat = labelFormat(suffix = <span class="string">"档"</span>),opacity=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image6.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image7.png" alt=""></p>
<h3 id="几种常见的地图风格主题效果："><a href="#几种常见的地图风格主题效果：" class="headerlink" title="几种常见的地图风格主题效果："></a>几种常见的地图风格主题效果：</h3><h4 id="默认点形状与几种常见的地图主题风格搭配效果："><a href="#默认点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="默认点形状与几种常见的地图主题风格搭配效果："></a>默认点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image8.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image9.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image10.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image11.png" alt=""></p>
<h4 id="实心点形状与几种常见的地图主题风格搭配效果："><a href="#实心点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="实心点形状与几种常见的地图主题风格搭配效果："></a>实心点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addCircles(lng=~jd,lat=~wd,color=<span class="string">"red"</span>,weight=~size,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image12.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image13.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image14.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image15.png" alt=""></p>
<h4 id="带轮廓的点形状与几种常见的地图主题风格搭配效果："><a href="#带轮廓的点形状与几种常见的地图主题风格搭配效果：" class="headerlink" title="带轮廓的点形状与几种常见的地图主题风格搭配效果："></a>带轮廓的点形状与几种常见的地图主题风格搭配效果：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city) </div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div><div class="line">leaflet(province_city)%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)%&gt;%addCircleMarkers(lng=~jd,lat=~wd,radius=~size,color=~co,fill=<span class="literal">TRUE</span>,popup=~city)</div></pre></td></tr></table></figure>
<p><img src="http://oqy752iiv.bkt.clouddn.com/image16.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image17.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image18.png" alt=""><br><img src="http://oqy752iiv.bkt.clouddn.com/image19.png" alt=""></p>
<h3 id="可选择的地图类型："><a href="#可选择的地图类型：" class="headerlink" title="可选择的地图类型："></a>可选择的地图类型：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  <span class="comment">#浅色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)    <span class="comment">#深色深色卫星云图</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    <span class="comment">#亮白色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  <span class="comment">#深沉轮廓色</span></div><div class="line">addProviderTiles(<span class="string">"Stamen.Toner"</span>)         <span class="comment">#Third-Party Tiles</span></div><div class="line">addProviderTiles(<span class="string">"Acetate.terrain"</span>)      <span class="comment">#</span></div><div class="line">addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div><div class="line">addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)   <span class="comment">#</span></div></pre></td></tr></table></figure>
<p>本篇点形状是可以支持自定义的，需要使用网络图标资源，但是鉴于步骤和实用性，就此略过，如果感兴趣，可以私下探讨。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> mini柱形/条形图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态地理信息可视化——leaflet在线地图简介]]></title>
      <url>/2017/06/02/%E5%8A%A8%E6%80%81%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94leaflet%E5%9C%A8%E7%BA%BF%E5%9C%B0%E5%9B%BE%E7%AE%80%E4%BB%8B/</url>
      <content type="html"><![CDATA[<p>最近稍微涉猎了一下leaflet这个包，突然感到发现了动态可视化的新大门，这个包所提供的地图类型、动态效果、图层展示方式都大大扩展了ggplot作图系统的在数据地图上的缺陷。</p>
<p>leaflet是业界比较流行的JS开源交互式地图包，它支持直接调用OpenStreetMap, Mapbox, and CartoDB等主流地图数据作为辅助图层来进行地理信息数据的可视化操作。</p>
<a id="more"></a>
<p>除了这些在线地图素材之外，它对于shapefile格式和json格式以及sp包的空间数据格式的地图数据都有着很好的支持，在图层函数中涵盖了点标记、线条和多边形等常用地理信息可视化图形要素。</p>
<p>该包的代码对R语言的文档输出系统有着良好的支持，可以很方便的嵌入knitr/rmarkdown文档中，也能无缝嵌入shiny系统的webapp中，兼容性可称之为逆天。</p>
<p>接下来以中国地图为例，先对该地图所能呈现和调用的地图类型做一个简短的介绍，深入应用系列技巧可能要等到年后才能陆续更新，大小耐心等吧！</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(mapdata)</div><div class="line"><span class="keyword">library</span>(leaflet)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div></pre></td></tr></table></figure>
<h3 id="导入中国各省会城市地理信息数据："><a href="#导入中国各省会城市地理信息数据：" class="headerlink" title="导入中国各省会城市地理信息数据："></a>导入中国各省会城市地理信息数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>) </div><div class="line">province_city$size&lt;-round(runif(<span class="number">34</span>,<span class="number">5</span>,<span class="number">10</span>),<span class="number">2</span>)</div><div class="line">province_city$type&lt;-factor(sample(LETTERS[<span class="number">1</span>:<span class="number">5</span>],<span class="number">34</span>,replace=<span class="literal">TRUE</span>))</div><div class="line">co&lt;-substr(rainbow(<span class="number">34</span>),<span class="number">1</span>,<span class="number">7</span>)</div><div class="line">province_city&lt;-data.frame(province_city,co)</div></pre></td></tr></table></figure>
<h3 id="leaflet函数的基本语法结构如下："><a href="#leaflet函数的基本语法结构如下：" class="headerlink" title="leaflet函数的基本语法结构如下："></a>leaflet函数的基本语法结构如下：</h3><p><strong>该句加载地图数据，也可以说是对地图的初始化操作，相当于ggplot2作图系统中的ggplot（）函数，会建立一个没有内容的空白图层面板。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m&lt;-leaflet(data=province_city)</div></pre></td></tr></table></figure></p>
<p><strong>该句设定所要展示的图层中心位置，参数为带有数据的地图图层、经纬度信息以及呈现的缩放级别（3~9级不等）。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setView(m,lng=<span class="number">116.38</span>,lat=<span class="number">39.9</span>,zoom=<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<p><strong>该句会自动调用一个默认的地图图层作为页面底图。其实是一个图层函数，相当于ggplot系统的geom_XXX对象。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m&lt;-addTiles(m)</div></pre></td></tr></table></figure></p>
<p><strong>该句也是一个图层对象函数，主要呈现点对象信息，点标识为常见的雨滴形状，当然也可以进行自定义。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">addMarkers(m,lng=~jd,lat=~wd,popup=~city) <span class="comment">#地标符号</span></div></pre></td></tr></table></figure></p>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image1.png" alt=""></p>
<p>以上四局代码会制作出一个以province_city为数据源、以(116.38,39.9)为视觉中心，缩放级别为3级，点标识对象为city的中国行政地图出来。</p>
<p>而且图表原生支持动态操作，你可以使用鼠标滚轮进行放大缩小操作（也可以使用页面左上角的加减号进行操作），每一个点标识都是支持鼠标点击显示弹窗信息的。（弹窗信息中支持定义文本、图片、视频、超链接，当然这些需要对html语言有一定的操作经验）。</p>
<p>该函数的另一大特色是，原生支持管道函数操作，让你的代码简洁、易懂、高效。（很多R函数是需要打开dplyr包并借助其完成对于管道函数的支持）。</p>
<p><strong>以上例子我们可以完全使用管道操作函数进行代码简化。</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet(province_city)%&gt;%addTiles()%&gt;%setView(lng=<span class="number">116.38</span>,lat=<span class="number">39.9</span>,zoom=<span class="number">3</span>)%&gt;%addMarkers(lng=~jd,lat=~wd,popup=~city)</div></pre></td></tr></table></figure></p>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image2.png" alt=""></p>
<p>leaflet函数支持的点有三类（我所知的），默认的是雨滴形状（addMarkers），还有两种分别是addCircle、addCircleMarkers。</p>
<p>addCircle是实心点，只有一个颜色属性，addCircleMarkers是带轮廓的圆点，可以分别对轮廓和内园进行颜色设定，两者都支持大小（面积）映射。</p>
<p>当然剩余两种最为常见的地图图层属性就是线和面了，这是物理空间的重要三要素嘛</p>
<ul>
<li>点图层：addMarkers\addCircle\addCircleMarkers</li>
<li>线图层:addPolylines</li>
<li>面图层：addPolygons</li>
</ul>
<p>其实这些对象和ggplot中的图层对象对应的很完整，geom_point()\geom_line\geom_polygon</p>
<p>除此之外，无外乎颜色映射参数、图例参数等。</p>
<p>颜色映射对于数据地图而言是最复杂也最为重要的视觉对象，毕竟你的目光中要有很大一部分数据墨水比是由色彩来呈现的，但是小魔方再在前讲解ggplot数据地图系列的时候已经讲解过非常详细的颜色映射规则。</p>
<p>针对数据地图而言，颜色映射要依据数据类型而定，数值型变量（包含定距变量、定比变量）需要使用连续渐变色进行映射，因子变量（包含分类及有序）需要使用分类色、或者同色系的离散渐变进行颜色映射。</p>
<p>在leaflet函数中对颜色进行了非常精准和高效的分类。</p>
<ol>
<li><p>用于连续数值的：colorNumeric，colorBin和colorQuantile;</p>
</li>
<li><p>用于分类输入，colorFactor。</p>
<ul>
<li>colorNumeric：针对数值变量进行均匀插值，将颜色（定义的）连续均匀分布在数值区间内。</li>
<li>colorBin：针对数值型变量进行数量段的分组，然后按照组别分别填色。（其实相当于对数值型变量进行划组，生成有序的因子组，然后以分段因子变量的形式进行颜色映射，但是这个过程在leaflet函数中是自动化完成的，无需我们手工生成新变量，这一点儿是leaflet函数相对于ggplot函数在制作数据地图方面的重要优势）。</li>
<li>colorQuantile：也是针对数值型变量，只是是以百分比分位点的形式将数值变量划分为一组百分比分位点区间（其实理念和过程与colorBin一致，只是从绝对量分组变成了百分比分组），然后进行颜色映射。</li>
<li>colorFactor：这个就是单纯的分类变量（因子或者有序）映射的颜色设置方式。</li>
</ul>
</li>
</ol>
<p><strong>图例对象：</strong><br>addLegend：是添加图例的图层对象，相当于ggplot中的guilde函数。</p>
<p>接来下给大家大致展现以下leaflet所能呈现的最为常见的几种风格地图样式。</p>
<p>###你地图可视化类型：</p>
<p><strong>地图类型：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)  <span class="comment">#浅色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)    <span class="comment">#深色深色卫星云图</span></div><div class="line">addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)    <span class="comment">#亮白色</span></div><div class="line">addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)  <span class="comment">#深沉轮廓色</span></div><div class="line">addProviderTiles(<span class="string">"Stamen.Toner"</span>)         <span class="comment">#Third-Party Tiles</span></div><div class="line">addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div><div class="line">addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)   <span class="comment">#</span></div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addTiles() <span class="comment">#默认风格</span></div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image3.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldStreetMap"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldImagery"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image5.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.WorldTerrain"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Esri.NatGeoWorldMap"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image7.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Stamen.Toner"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"CartoDB.Positron"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image9.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leaflet()%&gt;%addProviderTiles(<span class="string">"Stamen.TonerLabels"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwsfozmb.bkt.clouddn.com/image10.png" alt=""></p>
<p>限于字数和篇幅，本篇不宜再写下去了（主要小编太困了，上下眼皮打架，已经困得不行了）</p>
<p>关于leaflet内容，年前先暂时先更新这一篇（如果回家还有时间的话，也许继续更新）。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 地理信息可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> 在线地图 </tag>
            
            <tag> leaflet </tag>
            
            <tag> mini柱形/条形图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玩转数据地图系列之——地图上的迷你条形图]]></title>
      <url>/2017/06/02/%E7%8E%A9%E8%BD%AC%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%B3%BB%E5%88%97%E4%B9%8B%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8A%E7%9A%84%E8%BF%B7%E4%BD%A0%E6%9D%A1%E5%BD%A2%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>最近忙的厉害，产量下降的有点严重，感谢各位还没取关的小伙伴儿。</p>
<p>一周前更新了一篇数据地图上的气泡散点图的内容，不知怎地，这段时间就是跟地图死磕上了，今天还是数据地图，不过是在数据地图上呈现条形图、柱形图。</p>
<a id="more"></a>
<p>之前的一篇因为有现成的作图包支持，geom_scatterpie函数不用花费太大力气就解决了数据地图上的气泡散点图问题。</p>
<p>可是到目前为止我还没有发现支持对应坐标位置的条形图、柱形图，这一篇是参考了知乎上大神提供的思路。</p>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(ggmap)</div></pre></td></tr></table></figure>
<h3 id="导入地图素材及省会城市经纬度数据"><a href="#导入地图素材及省会城市经纬度数据" class="headerlink" title="导入地图素材及省会城市经纬度数据"></a>导入地图素材及省会城市经纬度数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_shp &lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)    </div><div class="line">china_map &lt;- fortify(china_shp)     </div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>) <span class="comment">#城市经纬度数据</span></div></pre></td></tr></table></figure>
<p><strong>新建三个指标，2015年和2016年的某经济度量指标（虚构）N15、N16和环比增长率Ratio。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">province_city1&lt;-mutate(province_city,N15=runif(<span class="number">34</span>,min=<span class="number">500</span>,max=<span class="number">1000</span>),N16=runif(<span class="number">34</span>,<span class="number">600</span>,<span class="number">1100</span>),Ratio=round((N16-N15)/N15,<span class="number">3</span>))</div><div class="line">province_data&lt;-province_city1[sample(nrow(province_city1),<span class="number">10</span>),]</div></pre></td></tr></table></figure>
<p>合并后的数据结构如下，随即选取了10个城市的14、15年度某项经济指标（虚构）以及同比增长率。</p>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image1.png" alt=""></p>
<p>ggplot的现有图层图形中是没有直接根据点坐标生成条形图、柱形图的，所以这里我们只能曲线救国，使用线条图和误差线来进行模拟。</p>
<h3 id="首先来画底图："><a href="#首先来画底图：" class="headerlink" title="首先来画底图："></a>首先来画底图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat, group=group), data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image2.png" alt=""></p>
<blockquote>
<p>接下来使用geom_linerange函数（也就是条线图函数）进行各个坐标点的模拟柱形绘制。</p>
</blockquote>
<h3 id="画出14年的指标值："><a href="#画出14年的指标值：" class="headerlink" title="画出14年的指标值："></a>画出14年的指标值：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">5</span>,color=<span class="string">"orange"</span>,alpha=<span class="number">0.8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image3.png" alt=""></p>
<h3 id="再叠加一次16年的指标值"><a href="#再叠加一次16年的指标值" class="headerlink" title="再叠加一次16年的指标值"></a>再叠加一次16年的指标值</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,alpha=<span class="number">0.8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image4.png" alt=""></p>
<h3 id="接下来我们来对已经塑造好的双柱条形图进行美化操作，"><a href="#接下来我们来对已经塑造好的双柱条形图进行美化操作，" class="headerlink" title="接下来我们来对已经塑造好的双柱条形图进行美化操作，"></a>接下来我们来对已经塑造好的双柱条形图进行美化操作，</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_linerange(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd,y=wd-<span class="number">0.6</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">8</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">49</span>, label=<span class="string">"● 2016"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">8</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image5.png" alt=""></p>
<blockquote>
<p>其实最初在网上看到该图（大概是刘万祥老师的博客，在此感谢老师的启发），他的做法是使用geom_errbar图层函数，也就是误差线图层函数，其实理念是一致的。这里给出原方法。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_errorbar(data=province_data,aes(x=jd-<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N15/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,width=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_errorbar(data=province_data,aes(x=jd+<span class="number">0.5</span>,ymin=wd,ymax=wd+<span class="number">0.7</span>*N16/max(N15,N16)*<span class="number">5</span>),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,width=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd,y=wd-<span class="number">0.6</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2014"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">8</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">49</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">8</span>)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image6.png" alt=""></p>
<p>其实如果能换个思路，使用geom_errorh函数，想必一定了以做出横向的条形图。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(aes(x=long, y=lat,group=group),data=china_map, fill=<span class="string">"white"</span>, colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_errorbarh(data=province_data,aes(x=jd,y=wd,xmin=jd-<span class="number">3</span>,xmax=jd+<span class="number">3</span>*N15/max(N15,N16)),size=<span class="number">3</span>,color=<span class="string">"#5B88A0"</span>,height=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_errorbarh(data=province_data,aes(x=jd,y=wd-<span class="number">0.8</span>,xmin=jd-<span class="number">3</span>,xmax=jd+<span class="number">3</span>*N16/max(N15,N16)),size=<span class="number">3</span>,color=<span class="string">"#FB882C"</span>,height=<span class="number">0</span>,alpha=<span class="number">0.8</span>)+</div><div class="line">geom_text(aes(x=jd+<span class="number">0.2</span>,y=wd+<span class="number">1</span>,label=paste0(province_data$province,ifelse(Ratio&gt;<span class="number">0</span>,<span class="string">"▲"</span>,<span class="string">"▼"</span>),Ratio*<span class="number">100</span>,<span class="string">"%"</span>)), data=province_data,family=<span class="string">"myFont"</span>,size=<span class="number">2.5</span>)+</div><div class="line">theme_nothing()+</div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">52</span>, label=<span class="string">"● 2015"</span>, color= <span class="string">"#5B88A0"</span>, size=<span class="number">7</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>, x=<span class="number">105</span>, y=<span class="number">50</span>, label=<span class="string">"● 2016"</span>, color= <span class="string">"#FB882C"</span>, size=<span class="number">7</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwruh83x.bkt.clouddn.com/image7.png" alt=""></p>
<p>以上思路仅供大家大家参考，就像伟大的哈德利.威科姆所说的一样，ggplot只是给你了一个发挥想象力的空间，无拘无束的发挥想象力，总能创造出令人惊讶的作品。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> mini柱形/条形图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玩转R语言数据地图——地图上的迷你气泡饼图]]></title>
      <url>/2017/06/02/%E7%8E%A9%E8%BD%ACR%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%9C%B0%E5%9B%BE%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E4%B8%8A%E7%9A%84%E8%BF%B7%E4%BD%A0%E6%9F%B1%E5%BD%A2%E9%A5%BC%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>这个周末刷微信的时候，偶然看到一篇关于R语言12月更新包的介绍，翻到底部看了一眼，刚好看到一个关于ggplot2的一个图层插件——geom_scatterpie。</p>
<p>这个包安装之后，可以提供给ggplot新的图层函数，并制作出气泡状饼图，饼图可以分类填色，饼图大小可以映射数值变量，特别是将这种图表形式引入地图之中，那么最终呈现的地图上的气泡饼图非常炫酷。</p>
<p>今天刚好整理了下完整思路，顺便分享。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"maptools"</span>)</div><div class="line"><span class="keyword">library</span>(scatterpie)</div><div class="line">world_map &lt;-readShapePoly(<span class="string">"c:/rstudy/wold_map/World_region.shp"</span>)</div><div class="line">x &lt;- world_map@data  </div><div class="line">xs &lt;- data.frame(x,id=seq(<span class="number">0</span>:<span class="number">250</span>)-<span class="number">1</span>)  </div><div class="line">world_map1 &lt;- fortify(world_map)  </div><div class="line">world_map_data &lt;- join(world_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata&lt;-read.xlsx(<span class="string">"D:/R/File/WorldGDP.xlsx"</span>,sheetName=<span class="string">"Sheet1"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,stringsAsFactors = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>这里我使用2015年全球主要发达国家（15）的GDP、三大产业产比数据来演示此案例，GDP代表气泡图大小、三大产业占比用每一个气泡图的饼图份额占比来表示。</p>
</blockquote>
<h3 id="计算全球各国行政区划中心点："><a href="#计算全球各国行政区划中心点：" class="headerlink" title="计算全球各国行政区划中心点："></a>计算全球各国行政区划中心点：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">midpos &lt;- <span class="keyword">function</span>(x) mean(range(x,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres &lt;- ddply(world_map_data,.(COUNTRY),colwise(midpos,.(long,lat)))</div></pre></td></tr></table></figure>
<h3 id="匹配目标国家行政区划中心点："><a href="#匹配目标国家行政区划中心点：" class="headerlink" title="匹配目标国家行政区划中心点："></a>匹配目标国家行政区划中心点：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mapdata&lt;-merge(centres,mydata,by.x=<span class="string">"COUNTRY"</span>,by.y=<span class="string">"FULLName"</span>,all.y=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><strong>利用ggplot2函数结合scatterpie图层对象进行空间数据映射。</strong></p>
<h3 id="修正局部经纬度坐标："><a href="#修正局部经纬度坐标：" class="headerlink" title="修正局部经纬度坐标："></a>修正局部经纬度坐标：</h3><p>因为GDP数据量级太大，我将其折算成5~10之间的标准数，用于映射气泡半径。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mapdata$order&lt;-as.factor(mapdata$order)</div><div class="line">mapdata$point&lt;-<span class="number">5</span>*mapdata$GDP/max(mapdata$GDP)+<span class="number">5</span></div><div class="line">value&lt;-names(mapdata)[<span class="number">8</span>:<span class="number">10</span>]</div><div class="line">mapdata[<span class="number">1</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">77.013222</span>,<span class="number">38.913611</span>) <span class="comment">#华盛顿</span></div><div class="line">mapdata[<span class="number">2</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">2.329671</span>,<span class="number">48.871029</span>)    <span class="comment">#巴黎</span></div><div class="line">mapdata[<span class="number">3</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">0.124969</span>,<span class="number">51.516434</span>)   <span class="comment">#伦敦</span></div><div class="line">mapdata[<span class="number">4</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">12.496336</span>,<span class="number">41.91076</span>)    <span class="comment">#罗马</span></div><div class="line">mapdata[<span class="number">5</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">4.882042</span>,<span class="number">52.372936</span>)    <span class="comment">#阿姆斯特丹</span></div><div class="line">mapdata[<span class="number">6</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">3.704783</span>,<span class="number">40.421502</span>)   <span class="comment">#马德里</span></div><div class="line">mapdata[<span class="number">7</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">139.650947</span>,<span class="number">35.833005</span>)   <span class="comment">#东京</span></div><div class="line">mapdata[<span class="number">8</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">13.407002</span>,<span class="number">52.527935</span>)   <span class="comment">#柏林</span></div><div class="line">mapdata[<span class="number">9</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">8.45468</span>,<span class="number">47.440827</span>)     <span class="comment">#苏黎世</span></div><div class="line">mapdata[<span class="number">11</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(<span class="number">149.116199</span>,-<span class="number">35.315167</span>)  <span class="comment">#墨尔本</span></div><div class="line">mapdata[<span class="number">12</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">43.264882</span>,-<span class="number">22.895071</span>) <span class="comment">#里约热内卢</span></div><div class="line">mapdata[<span class="number">15</span>,c(<span class="string">"long"</span>,<span class="string">"lat"</span>)]&lt;-c(-<span class="number">99.129758</span>,<span class="number">19.449516</span>)  <span class="comment">#墨西哥城</span></div></pre></td></tr></table></figure>
<p>因为有些国家的领土中含有远离本图的海洋小岛（可能是殖民时代的产物），导致所取的领土中心位置已经严重偏离本土，所以我更改了几个国家首府的经纬度。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot(world_map_data,aes(x=long, y=lat,group=group)) +</div><div class="line"> geom_polygon(fill=<span class="string">"white"</span>, color=<span class="string">"grey"</span>)+</div><div class="line"> geom_scatterpie(data=mapdata,aes(x=long, y=lat,group=order,r=point),cols=value,color=<span class="literal">NA</span>, alpha=<span class="number">.8</span>) +</div><div class="line"> coord_equal()+</div><div class="line"> geom_scatterpie_legend(mapdata$point, x=-<span class="number">160</span>, y=-<span class="number">55</span>)+</div><div class="line"> scale_fill_wsj()+</div><div class="line"> theme_nothing(legend=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwcd2a2i.bkt.clouddn.com/image1.png" alt=""></p>
<p><strong>除此之外，你可以可以使用maps包内置的世界地图，这样省去了自己自己加载并整理地图素材数据的麻烦：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">world &lt;- map_data(<span class="string">'world'</span>)</div><div class="line">    ggplot(world, aes(long, lat,group=group)) +</div><div class="line">    geom_polygon(fill=<span class="string">"white"</span>, color=<span class="string">"grey"</span>)+</div><div class="line">    geom_scatterpie(data=mapdata,aes(x=long, y=lat,group=order,r=point),cols=value,color=<span class="literal">NA</span>, alpha=<span class="number">.8</span>) +</div><div class="line">    coord_equal()+</div><div class="line">    geom_scatterpie_legend(mapdata$point, x=-<span class="number">160</span>, y=-<span class="number">55</span>)+</div><div class="line">    scale_fill_wsj()+</div><div class="line">    theme_nothing(legend=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqwcd2a2i.bkt.clouddn.com/image2.png" alt=""></p>
<p>使用maps包的地图好处是，地图数据是打包封装过的，处理效率比较高，自定义导入的shp格式地图数据需要手动进行各种操作，处理速度非常慢，建议大家尝试。</p>
<p>两幅图带图没有太大差别，导入的shp全球地图是不带南极洲的，但是maps中的世界地图是带有的。</p>
<p>该包的开发者是香港大学的Gangchuang Yu ，12月刚上线不久，下面网址是作者关于该包使用的一个小case，感兴趣可以参考。<br><a href="https://cran.r-project.org/web/packages/scatterpie/vignettes/scatterpie.html" target="_blank" rel="external">Gangchuang Yu</a></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 地理信息可视化 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> mini饼图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——用数据来聊聊国产电影~]]></title>
      <url>/2017/06/01/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8%E6%95%B0%E6%8D%AE%E6%9D%A5%E8%81%8A%E8%81%8A%E5%9B%BD%E4%BA%A7%E7%94%B5%E5%BD%B1/</url>
      <content type="html"><![CDATA[<p>最近国产电影评分风波引起了很多人的关注，豆瓣和猫眼因国产电影评分过低此被电影局约谈了，猫眼电影还因此下线了自己的电影评分系统，作为好奇宝宝，小魔方也来凑一波热闹。</p>
<p>当然今天不是要谈政治啦，刚好最近在学爬虫，那就爬一点儿官产电影的数据，用数据告诉大家，国产电影的真实处境。。（受限于技术手段和代码水平，数据不全，分析过程不敢保证精准，仅作为个人练习使用，请谨慎使用）。</p>
<a id="more"></a>
<h3 id="以下是本文所使用的一些依赖包："><a href="#以下是本文所使用的一些依赖包：" class="headerlink" title="以下是本文所使用的一些依赖包："></a>以下是本文所使用的一些依赖包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(data.table)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"dplyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure>
<h3 id="爬虫过程："><a href="#爬虫过程：" class="headerlink" title="爬虫过程："></a>爬虫过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">'https://movie.douban.com/tag/中国大陆?start='</span></div><div class="line">final &lt;- data.frame()</div><div class="line"><span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:<span class="number">99</span>)&#123;</div><div class="line">fun&lt;-<span class="keyword">function</span>(m)&#123;</div><div class="line">url&lt;-paste(url,(m-<span class="number">1</span>)*<span class="number">20</span>,<span class="string">"&amp;type=T"</span>,sep=<span class="string">''</span>)</div><div class="line">web&lt;-read_html(url,encoding=<span class="string">"UTF-8"</span>)</div><div class="line">Name&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)&gt;div.pl2&gt;a"</span>)%&gt;% html_text()%&gt;%str_trim()</div><div class="line">Abstract&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)&gt;div.pl2&gt;p.pl"</span>)%&gt;% html_text()%&gt;%str_trim()</div><div class="line">Point&lt;-web %&gt;% html_nodes(<span class="string">"div.star.clearfix&gt;span.rating_nums"</span>)%&gt;%html_text()%&gt;%as.numeric()</div><div class="line">Value&lt;-web %&gt;% html_nodes(<span class="string">"div.star.clearfix&gt;span.pl"</span>)%&gt;%html_text()%&gt;%as.character()</div><div class="line">final&lt;-data.frame(Name=Name[<span class="number">1</span>:<span class="number">20</span>],Abstract=Abstract[<span class="number">1</span>:<span class="number">20</span>],Point=Point[<span class="number">1</span>:<span class="number">20</span>],Value=Value[<span class="number">1</span>:<span class="number">20</span>])</div><div class="line">&#125;</div><div class="line">final&lt;-rbind(final,fun(m))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">final$Name&lt;-sub(<span class="string">"\n"</span>,<span class="string">""</span>,final$Name)</div><div class="line">final$Name&lt;-sub(<span class="string">"/"</span>,<span class="string">""</span>,final$Name)</div><div class="line">final$Name&lt;-sub(<span class="string">" "</span>,<span class="string">""</span>,final$Name)</div><div class="line">final&lt;-final[<span class="number">1</span>:<span class="number">1961</span>,]</div></pre></td></tr></table></figure>
<blockquote>
<p>一共爬取了1961条有效电影记录（不知道这个数量是否能够涵盖16年所有公开上映的国产电影数量，其中可能混杂一些影视剧和娱乐节目）。</p>
</blockquote>
<h3 id="数据清洗："><a href="#数据清洗：" class="headerlink" title="数据清洗："></a>数据清洗：</h3><p><strong>以下通过则这匹配提取了各部电影的上映具体日期：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m&lt;-regexpr(<span class="string">"\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;"</span>,final$Abstract,perl=<span class="literal">TRUE</span>)</div><div class="line">final$Date&lt;-substring(final$Abstract,m,m+attr(m,<span class="string">"match.length"</span>)-<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><strong>提取出评价人数数据</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">m1&lt;-regexpr(<span class="string">"\\d+"</span>,final$Value,perl=<span class="literal">TRUE</span>)</div><div class="line">final$Value&lt;-substring(final$Value,m1,m1+attr(m1,<span class="string">"match.length"</span>)-<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p><strong>清除掉电影剧情及演员介绍信息中的无关信息：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">final$Abstract&lt;-gsub(<span class="string">"\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"(\\(中国大陆\\)|\\(美国\\)|\\(台湾\\)|\\(香港\\)|\\(荷兰\\))"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"((\\d&#123;4&#125;-\\d&#123;2&#125;)|(\\d+分钟)|\\(.*?电影节\\)|\\(公映版\\)|汉语普通话)"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"\\/"</span>,<span class="string">""</span>,final$Abstract)</div><div class="line">final$Abstract&lt;-gsub(<span class="string">"(中国大陆|香港|法国|美国)"</span>,<span class="string">""</span>,final$Abstract)</div></pre></td></tr></table></figure></p>
<p><strong>预览数据集：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DT::datatable(final)</div></pre></td></tr></table></figure></p>
<p><strong>以下过程将电影的详情介绍信息（包含类型、剧情及演员相关信息）做了分词处理，以便后续进行词云可视化：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-paste(final$Abstract,collapse=<span class="string">" "</span>)</div><div class="line">temp1 &lt;- str_split(newdata,<span class="string">' '</span>)</div><div class="line">temp1&lt;-temp1[[<span class="number">1</span>]]</div><div class="line">temp1&lt;-gsub(<span class="string">"\\.&#123;3&#125;"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp1&lt;-gsub(<span class="string">"[a-zA-Z]&#123;2,&#125;"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp1&lt;-grep(<span class="string">"\\S"</span>,temp1,value=<span class="literal">T</span>)</div><div class="line"></div><div class="line">count1&lt;-count(temp1)</div><div class="line">count1$x&lt;-as.character(count1$x)</div><div class="line">mydata&lt;-filter(count1,nchar(x)&gt;=<span class="number">2</span>,freq&gt;=<span class="number">37</span>,x!=<span class="string">"()"</span>)</div></pre></td></tr></table></figure>
<h3 id="数据可视化过程："><a href="#数据可视化过程：" class="headerlink" title="数据可视化过程："></a>数据可视化过程：</h3><p><strong>加载词云包，可视化电影类型及高频出境电影明星的词频可视化：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(wordcloud2)</div><div class="line">wordcloud2(mydata, size = <span class="number">2</span>, fontFamily = <span class="string">"微软雅黑"</span>,minRotation = -pi/<span class="number">6</span>, maxRotation = -pi/<span class="number">6</span>,rotateRatio = <span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image1.png" alt="image1"></p>
<p>所有电影类型中，排在前五位的是：剧情片、爱情片、喜剧片、动作片、纪录片。纪录片的上映率这么高吗，感觉有点难以置信。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#提取并清洗电影演员及明星的出镜率词频数据：</span></div><div class="line">temp2&lt;-gsub(<span class="string">"[\\((][\\s\\S]*[\\))]"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp2&lt;-gsub(<span class="string">"\\d+"</span>,<span class="string">""</span>,temp1)</div><div class="line">temp2&lt;-grep(<span class="string">"\\S"</span>,temp2,value=<span class="literal">T</span>)</div><div class="line"></div><div class="line">count2&lt;-count(temp2)</div><div class="line">count2&lt;-count2[-c(<span class="number">1</span>:<span class="number">107</span>),]</div><div class="line">count2$l&lt;-count2$x %<span class="keyword">in</span>% mydata$x </div><div class="line">mydata2&lt;-filter(count2,l==<span class="literal">FALSE</span>)</div><div class="line">mydata2&lt;-mydata2[-c(<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>),]</div><div class="line">mydata2&lt;-mydata2[,<span class="number">1</span>:<span class="number">2</span>]</div></pre></td></tr></table></figure>
<p><strong>电影参演明星及演员可视化词云</strong><br>wordcloud2(mydata2, size =.3,fontFamily = “微软雅黑”,color = “random-light”, backgroundColor = “grey”,shape = ‘star’)</p>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image2.png" alt="image2"></p>
<blockquote>
<p>排在前十位的电影明星分别是：范爷、黄晓明、周迅、黄渤、刘桦、邓超、佟大为、李晨、曾志伟、杨幂。</p>
</blockquote>
<p><strong>前三十的电影明星如下:</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata2&lt;-filter(mydata2,x!=<span class="string">"音乐"</span>,x!=<span class="string">"日本"</span>,x!=<span class="string">"日语"</span>)</div><div class="line">mydata3&lt;-mydata2[order(-mydata2$freq),][<span class="number">1</span>:<span class="number">30</span>,]</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"微软雅黑"</span>)) </div><div class="line">ggplot(mydata3,aes(reorder(x,freq),freq))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(freq+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影最频繁出境明星"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image3.png" alt="image3"></p>
<blockquote>
<p>以上是通过对各部电影的详情描述进行分词所获得的电影类型及明星出镜率分析，接下来我们回到最初的数据集，对各部电影的评分评价分数以及上映年份进行更为详细的可视化分析。（为啥冯导可以与范爷并驾齐驱，可能是因为导演的电影比较多，这里爬的时候没有区分出来）</p>
</blockquote>
<p><strong>国产电影上映年份、季度、月份、周度</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lubridate)</div><div class="line">final$Date&lt;-as.Date(final$Date) </div><div class="line">final$Year&lt;-year(final$Date)</div><div class="line">final$Month&lt;-month(final$Date)</div><div class="line">final$Week&lt;-week(final$Date)</div><div class="line">final$Quarter&lt;-quarter(final$Date)</div></pre></td></tr></table></figure>
<blockquote>
<p>以上通过超级好用的时间处理函数lubridate，整理出了所有影片上映的日期的年份、月份、季度、周等时间信息，接下来我们用这四个时间维度分别对电影的评分数据、评论数据进行精细化分析。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">datayear&lt;-data.frame(with(final,table(Year)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">datayear$Year&lt;-as.numeric(as.character(datayear$Year))</div><div class="line">ggplot(datayear,aes(Year,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">xlim(<span class="number">2000</span>,<span class="number">2017</span>)+</div><div class="line">ggtitle(<span class="string">"国产电影上映年份频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image4.png" alt="image4"></p>
<blockquote>
<p>因为抓取的电影上映年份以16年居多，所以16年是个高峰不足为奇，17年刚过去一周多，数量自然少一些。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">dataquarter&lt;-data.frame(with(final,table(Quarter)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">dataquarter$Quarter&lt;-as.numeric(as.character(dataquarter$Quarter))</div><div class="line">ggplot(dataquarter,aes(Quarter,Freq))+geom_bar(stat=<span class="string">"identity"</span>,fill=<span class="string">"steelblue"</span>)+</div><div class="line">ggtitle(<span class="string">"国产电影上映季度频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image11.png" alt="image11"></p>
<blockquote>
<p>从季度上来看，3、4季度上映上映最为频繁，可能是暑期档接着和贺岁档，时间段比较特殊。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">datamonth&lt;-data.frame(with(final,table(Month)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">datamonth$Month&lt;-as.numeric(as.character(datamonth$Month))</div><div class="line">ggplot(datamonth,aes(Month,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">scale_x_continuous(breaks=seq(<span class="number">0</span>,<span class="number">12</span>,<span class="number">1</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影上映月份频率分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image5.png" alt="image5"></p>
<blockquote>
<p>从月度数据上来看，也验证了季度数据的趋势，其中第三季度的高峰在9月（算是暑期的尾巴吧），第四季度高峰在12月（年末岁尾的最电影最火了）。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">dataweek&lt;-data.frame(with(final,table(Week)),stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">dataweek$Week&lt;-as.numeric(as.character(dataweek$Week))</div><div class="line"></div><div class="line">ggplot(na.omit(dataweek),aes(Week,Freq,group=<span class="number">1</span>))+geom_line(size=<span class="number">2</span>,linetype=<span class="number">1</span>,col=<span class="string">"steelblue"</span>)+</div><div class="line">scale_x_continuous(breaks=seq(<span class="number">0</span>,<span class="number">52</span>,<span class="number">1</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影上映周分布"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.y=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.x=element_blank(),</div><div class="line">      axis.ticks.y=element_blank(),</div><div class="line">      axis.ticks.x=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.y=element_blank(),</div><div class="line">      axis.line.x=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image6.png" alt="image6"></p>
<blockquote>
<p>周度数据也非常有趣，第7周、29周、36、37周、45周和51周出现了几个特高点，基本都超过40部/月的量级，也是与月度上映数据吻合。</p>
</blockquote>
<p><strong>接下来分析一下评分最高和最低的十部国产影片：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">datapointtop&lt;-final[order(-final$Point),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line">ggplot(datapointtop,aes(reorder(Name,Point),Point))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Point+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影评分最高TOP15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image7.png" alt="image7"></p>
<blockquote>
<p>这次真的有点惊讶了，数据显示（仅限所抓取的数据，未覆盖全，并不代表真实情况），评分最高的一部国产剧是老农民，评分高达9.7，从名字上来看挺挺朴实的一部剧，不过我好想没有看过，有空要补脑一下。</p>
<p>评分最高的电影有一个趋势，选材和主题都偏现实和文化类，我觉得这是一个好的现象，能体现电影写实性和文化传承的效果，虽然这样的剧本和影片，可能很多小伙伴不愿意付费去看。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">datapointbot&lt;-final[order(final$Point),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line">ggplot(datapointbot,aes(reorder(Name,Point),Point))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Point+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影评分最低BOT"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image8.png" alt="image8"></p>
<blockquote>
<p>评分最低的一部是心理罪，仅为2.1，而且评分最低的几部好像也不是大家耳熟能详的名字，好吧突然看到了16年的央视春晚，我能说我已经不看春晚好多年了吗！（实在不好意思，本来是想抓电影的，不知道为啥央视春晚要出来捣乱，肯定是走错片场了~）</p>
<p>以各部电影评价人数多少作为该作品关注度指标，我们可以统计最受关注的电影和最不受关注的电影榜单。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">final$Value&lt;-as.numeric(final$Value)</div><div class="line">dataValuetop15&lt;-final[order(-final$Value),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line"></div><div class="line">ggplot(dataValuetop15,aes(reorder(Name,Value),Value))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Value+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影关注度最高TOP15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image9.png" alt="image9"></p>
<blockquote>
<p>关注度最高的一步电影是《让子弹飞》，好吧竟然是好你年前的一步老电影，获评570641。前十名中我看到了《少年派的奇幻漂流》、《大话西游之大圣娶亲》、《人在囧途之泰囧》、《老炮》、《美人鱼》等。虽然热度很高，都是评分并非遥遥领先，基本都在7~8分之间。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">dataValuebot15&lt;-final[order(final$Value),][<span class="number">1</span>:<span class="number">15</span>,]</div><div class="line"></div><div class="line">ggplot(dataValuebot15,aes(reorder(Name,Value),Value))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(Value+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">3</span>,fontface=<span class="string">"bold"</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"国产电影关注度最低BOT15"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      title=element_text(family=<span class="string">"myFont"</span>,size=<span class="number">18</span>), </div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">8</span>,family=<span class="string">"myFont"</span>)</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oquzuycs2.bkt.clouddn.com/image10.png" alt="image10"></p>
<blockquote>
<p>最后是几部评论最少的电影，好吧几乎都没咋听过这几部影片的名字，但是好奇怪，虽然关注度不高，但是评分都还是马马虎虎的。是不是可以说国产电影的评分和关注度并非严格相关吧。</p>
<p>声明：<br>限于技术手段和个人水平，以上所抓取数据，进涵盖豆瓣电影库中的一部分，而且其中还混杂诸多娱乐节目、连续剧以及纪录片等，所统计分析结果并不准确，仅作为爬虫和数据可视化练习使用，请勿做为商业决策依据！</p>
</blockquote>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 国产电影 </tag>
            
            <tag> rvest </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言爬虫可视化——用数据来聊聊2017年首周各大城市空气质量]]></title>
      <url>/2017/05/31/R%E8%AF%AD%E8%A8%80%E7%88%AC%E8%99%AB%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E7%94%A8%E6%95%B0%E6%8D%AE%E6%9D%A5%E8%81%8A%E8%81%8A2017%E5%B9%B4%E9%A6%96%E5%91%A8%E5%90%84%E5%A4%A7%E5%9F%8E%E5%B8%82%E7%A9%BA%E6%B0%94%E8%B4%A8%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>最近学了些revst包的基础知识，勉强能爬到一些有用的数据，刚好趁着周末，捂着脸跟大家分享。</p>
<a id="more"></a>
<p>这一篇使用revst包爬取了中国环保部环境监测中心公布367个主要城市的日度AQI指数信息（2017年1~7日），由于个别城市数据有缺失，可视化过程可能会遗漏部分城市信息。</p>
<h3 id="以下是本篇需要加载的环境包："><a href="#以下是本篇需要加载的环境包：" class="headerlink" title="以下是本篇需要加载的环境包："></a>以下是本篇需要加载的环境包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div><div class="line"><span class="keyword">library</span>(ggmap)</div><div class="line"><span class="keyword">library</span>(Hmisc)</div><div class="line"><span class="keyword">library</span>(leafletCN)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div></pre></td></tr></table></figure>
<h3 id="数据爬取过程："><a href="#数据爬取过程：" class="headerlink" title="数据爬取过程："></a>数据爬取过程：</h3><p>使用revst包爬取了2017年1日至7日的367各主要城市AQI指数数据：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://datacenter.mep.gov.cn/report/air_daily/air_dairy.jsp?city=&amp;startdate=2017-01-01&amp;enddate=2017-01-07&amp;page="</span></div><div class="line">final &lt;- data.frame()</div><div class="line"><span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:<span class="number">86</span>)&#123;</div><div class="line">fun&lt;-<span class="keyword">function</span>(m)&#123;</div><div class="line">url&lt;-paste(url,m,sep=<span class="string">''</span>)</div><div class="line">web&lt;-read_html(url,encoding=<span class="string">"UTF-8"</span>)</div><div class="line">Num&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(1)"</span>) %&gt;% html_text()</div><div class="line">City&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(2)"</span>) %&gt;% html_text()</div><div class="line">Date&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(3)"</span>) %&gt;% html_text()</div><div class="line">AQI&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(4)"</span>) %&gt;% html_text()</div><div class="line">Level&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(5)"</span>) %&gt;% html_text()</div><div class="line">Mainpo&lt;-web %&gt;% html_nodes(<span class="string">"tr&gt;td:nth-child(6)"</span>) %&gt;% html_text()</div><div class="line">final&lt;-data.frame(Num=Num[<span class="number">6</span>:<span class="number">35</span>],City=City[<span class="number">6</span>:<span class="number">35</span>],Date=Date[<span class="number">4</span>:<span class="number">33</span>],</div><div class="line">AQI=AQI[<span class="number">4</span>:<span class="number">33</span>],Level=Level[<span class="number">3</span>:<span class="number">32</span>],Mainpo=Mainpo[<span class="number">2</span>:<span class="number">31</span>],</div><div class="line">stringsAsFactors =<span class="literal">FALSE</span>)</div><div class="line">&#125;</div><div class="line">final&lt;-rbind(final,fun(m))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="数据预处理："><a href="#数据预处理：" class="headerlink" title="数据预处理："></a>数据预处理：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">final&lt;-final[<span class="number">1</span>:<span class="number">2569</span>,]</div><div class="line">final$AQI&lt;-as.numeric(final$AQI)</div><div class="line">final$Level&lt;-factor(final$Level,levels=c(<span class="string">"重度污染"</span>,<span class="string">"严重污染"</span>,<span class="string">"轻度污染"</span>,<span class="string">"中度污染"</span>,<span class="string">"良"</span>,<span class="string">"优"</span>),order=<span class="literal">TRUE</span>)</div><div class="line">address&lt;-unique(final$City)</div><div class="line">add&lt;-get_geo_position(address)</div><div class="line">final1&lt;-merge(final,add, by.x = <span class="string">"City"</span>, by.y = <span class="string">"city"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">final1$day&lt;-substr(final1$Date,<span class="number">10</span>,<span class="number">10</span>)</div><div class="line">names(final1)</div><div class="line">final1&lt;-final1[,c(<span class="string">"City"</span>,<span class="string">"Num"</span>,<span class="string">"Date"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>,<span class="string">"Level"</span>,<span class="string">"Mainpo"</span>,<span class="string">"lon"</span>,<span class="string">"lat"</span>)]</div><div class="line">newdata1&lt;-final1[,c(<span class="string">"City"</span>,<span class="string">"lon"</span>,<span class="string">"lat"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>,<span class="string">"Level"</span>,<span class="string">"Mainpo"</span>)]</div></pre></td></tr></table></figure>
<h3 id="地图素材导入："><a href="#地图素材导入：" class="headerlink" title="地图素材导入："></a>地图素材导入：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">x &lt;- china_map@data      </div><div class="line">xs &lt;- data.frame(id=row.names(x),x) </div><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div><div class="line">首先查看下所选取的<span class="number">367</span>个主要城市在全国的分布情况：</div><div class="line"></div><div class="line">ggplot()+</div><div class="line"> geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">     geom_point(data=newdata1,aes(x=lon,y=lat),colour=<span class="string">"red"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">     theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image1.png" alt="image1"></p>
<h3 id="用气泡图展示主要城市AQI指数相对高低"><a href="#用气泡图展示主要城市AQI指数相对高低" class="headerlink" title="用气泡图展示主要城市AQI指数相对高低"></a>用气泡图展示主要城市AQI指数相对高低</h3><p><strong>（气泡图大小及颜色深浅均表示AQI指数强弱）</strong></p>
<blockquote>
<p>（以下数据基于2017年1日~7日367个城市的平均AQI指数数据）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">newdata2&lt;-newdata1[,c(<span class="string">"City"</span>,<span class="string">"day"</span>,<span class="string">"AQI"</span>)];newdata2$day&lt;-as.factor(newdata2$day)</div><div class="line">newdata2&lt;-tapply(newdata2$AQI,list(newdata2$City),mean,na.rm=<span class="literal">TRUE</span>)</div><div class="line">newdata2&lt;-as.data.frame(newdata2)</div><div class="line">newdata2$Address&lt;-rownames(newdata2)</div><div class="line">names(newdata2)&lt;-c(<span class="string">"AQIM"</span>,<span class="string">"Address"</span>);newdata2&lt;-newdata2[,c(<span class="string">"Address"</span>,<span class="string">"AQIM"</span>)]</div><div class="line">newdata2&lt;-na.omit(newdata2)</div><div class="line">mynewdata&lt;-merge(newdata2,add, by.x = <span class="string">"Address"</span>, by.y = <span class="string">"city"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">ggplot()+</div><div class="line">    geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">     geom_point(data=mynewdata,aes(x=lon,y=lat,size=AQIM,fill=AQIM),shape=<span class="number">21</span>,colour=<span class="string">"black"</span>)+</div><div class="line">     scale_size_area(max_size=<span class="number">5</span>)+</div><div class="line">     scale_fill_gradient(low=<span class="string">"white"</span>,high=<span class="string">"#D73434"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">     theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image2.png" alt="image2"></p>
<p>###使用中心辐射热度图及散点图叠加</p>
<p><strong>在宏观上洞察全国各省各地区的空气质量级别及集中分布趋势：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_polygon(data=mynewdata,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.5</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">geom_point(data=mynewdata,aes(x=lon,y=lat),col=<span class="string">"red"</span>,size=<span class="number">1</span>)+</div><div class="line">scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image3.png" alt="image3"></p>
<h3 id="使用热力地图查看整体城市空气质量的地域分布特征："><a href="#使用热力地图查看整体城市空气质量的地域分布特征：" class="headerlink" title="使用热力地图查看整体城市空气质量的地域分布特征："></a>使用热力地图查看整体城市空气质量的地域分布特征：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">geojsonMap(mynewdata,<span class="string">"city"</span>,popup =  paste0(mynewdata$Address,<span class="string">":"</span>,dat$AQIM),palette = <span class="string">"Reds"</span>, legendTitle = <span class="string">"AQI Index"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image4.png" alt="image4"></p>
<h3 id="AQI指数最高的10个城市："><a href="#AQI指数最高的10个城市：" class="headerlink" title="AQI指数最高的10个城市："></a>AQI指数最高的10个城市：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mynewdata3&lt;-newdata2[order(-newdata2$AQIM),][<span class="number">1</span>:<span class="number">10</span>,]</div><div class="line">ggplot(mynewdata3,aes(reorder(Address,AQIM),AQIM))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,position=<span class="string">"dodge"</span>,fill=<span class="string">"#D6B869"</span>)+</div><div class="line">theme_wsj()+</div><div class="line">coord_flip()+</div><div class="line">scale_fill_wsj(<span class="string">"rgby"</span>, <span class="string">""</span>)+</div><div class="line">theme(axis.ticks.length=unit(<span class="number">0.5</span>,<span class="string">'cm'</span>))+</div><div class="line">geom_text(aes(label=round(AQIM+<span class="number">0.05</span>,<span class="number">1</span>)), position = position_dodge(<span class="number">0.9</span>),hjust=<span class="number">1.1</span>,colour=<span class="string">"white"</span>,size=<span class="number">5</span>)+</div><div class="line">guides(fill=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">ggtitle(<span class="string">"十大污染最严重城市"</span>)+</div><div class="line">theme(</div><div class="line">      axis.title = element_blank(),</div><div class="line">      legend.position=<span class="string">'none'</span>,</div><div class="line">      panel.grid.major.x=element_line(linetype=<span class="string">"dashed"</span>,colour=<span class="string">"grey60"</span>),</div><div class="line">      panel.grid.major.y=element_blank(),</div><div class="line">      axis.ticks.x=element_blank(),</div><div class="line">      axis.ticks.y=element_line(),</div><div class="line">      axis.ticks.length=unit(<span class="number">0.3</span>,<span class="string">'cm'</span>),</div><div class="line">      axis.line.x=element_blank(),</div><div class="line">      axis.line.y=element_line(),</div><div class="line">      axis.text.x=element_text(size=<span class="number">10</span>),</div><div class="line">      )</div></pre></td></tr></table></figure>
<p><img src="http://oqt5sb5k7.bkt.clouddn.com/image5.png" alt="image5"></p>
<p>因为所收集的数据中，行政区划名称与现有地图素材有出入，鉴于城市较多，匹配比较麻烦，暂时没有制作基于空气质量水平的离散填充地图，但是方法之前已经多有介绍，感兴趣的小伙伴儿可以借此自己练习。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 空气质量可视化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——中心放射状路径图]]></title>
      <url>/2017/05/31/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94%E4%B8%AD%E5%BF%83%E6%94%BE%E5%B0%84%E7%8A%B6%E8%B7%AF%E5%BE%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>最近一直在研究ggplot剩余还没有涉略过的图表类型，试图挖掘出一些新的图表形式，就像是该包的作者所暗示的那样，ggplot2只是给你搭建了一个图层语法环境，至于具体能创造出何种图形，全凭自己的想象力。</p>
<p>慢慢的我发现还有一类geom_segment对象自己一直没有尝试过，于是满心欢喜的尝试了一下，果然还是有收获的，我发现通过这个segment图层，可以批量的创建放射状线条图，也就是路径图，这解决了我一直以来的难题，今天顺便分享给大家。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggmap)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(maptools)</div></pre></td></tr></table></figure>
<h3 id="加载中国省份行政地图："><a href="#加载中国省份行政地图：" class="headerlink" title="加载中国省份行政地图："></a>加载中国省份行政地图：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)</div><div class="line">x &lt;- china_map@data      </div><div class="line">xs &lt;- data.frame(id=row.names(x),x)</div></pre></td></tr></table></figure>
<p><strong>转换为数据框并合并城市数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">china_map1 &lt;- fortify(china_map) </div><div class="line">china_map_data &lt;- join(china_map1, xs, type = <span class="string">"full"</span>) </div><div class="line">mydata &lt;- read.csv(<span class="string">"c:/rstudy/geshengzhibiao.csv"</span>)</div><div class="line">china_data &lt;- join(china_map_data, mydata, type=<span class="string">"full"</span>)</div><div class="line">province_city &lt;- read.csv(<span class="string">"c:/rstudy/chinaprovincecity.csv"</span>)</div></pre></td></tr></table></figure></p>
<p><strong>拆分兰州数据：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">newdata&lt;-subset(province_city,city==<span class="string">"兰州"</span>)</div><div class="line">newdata1&lt;-subset(province_city,city!=<span class="string">"兰州"</span>)</div><div class="line">sourcex&lt;-rep(newdata$jd,<span class="number">33</span>)</div><div class="line">sourcey&lt;-rep(newdata$wd,<span class="number">33</span>)</div></pre></td></tr></table></figure></p>
<p><strong>制作以兰州为中心的点对点作图数据：</strong>（可以类比之前REmap路径图数据源）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tagetx&lt;-newdata1$jd</div><div class="line">tagety&lt;-newdata1$wd</div><div class="line"></div><div class="line">dataA&lt;-data.frame(sourcex,sourcey,tagetx,tagety)</div><div class="line">dataB&lt;-newdata1[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">dataC&lt;-cbind(dataB,dataA)</div><div class="line">dataC$point&lt;-round(runif(<span class="number">33</span>,<span class="number">10</span>,<span class="number">50</span>))</div></pre></td></tr></table></figure>
<h3 id="图形可视化过程"><a href="#图形可视化过程" class="headerlink" title="图形可视化过程"></a>图形可视化过程</h3><p><strong>利用geom_segment（）图层制作放射路径图：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image1.png" alt="image1"></p>
<p>这里再稍微的扩展一下，其实以上你看到的放射状线条是兰州与其他城市之间的直线，之所以变的有弧度，只是因为加了地图投影的缘故，这里我可以取消投影参数，看下效果。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image2.png" alt="image2"></p>
<p>这里取消投影参数之后，线条变成了点间直线，但是默认的不带投影的地图看起来与我们认知中的中国地图形状有些不一样，好像被压扁了一样。</p>
<p>其实这里还有一个图层函数也可以做出来这种放射状线条，geom_curve（）,图层，不过它本身就是有弧度的曲线，曲率可以通过参数进行微调。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image3.png" alt="image3"></p>
<p><strong>曲率调整：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>),curvature = <span class="number">0.8</span>)+ <span class="comment">#用于调整曲率，范围在-1~1之间。</span></div><div class="line">theme_nothing()</div></pre></td></tr></table></figure></p>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image4.png" alt="image4"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">geom_curve(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>),curvature =-<span class="number">0.5</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image5.png" alt="image5"></p>
<p><strong>当然，通过图形叠加，我们还可以重复多次这样的放射状线条图。</strong></p>
<blockquote>
<p>以下以北京为例：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">newdataA&lt;-subset(province_city,city==<span class="string">"北京"</span>)</div><div class="line">newdataB&lt;-subset(province_city,city!=<span class="string">"北京"</span>)</div><div class="line">soux&lt;-rep(newdataA$jd,<span class="number">33</span>)</div><div class="line">souy&lt;-rep(newdataA$wd,<span class="number">33</span>)</div><div class="line">tagx&lt;-newdataB$jd</div><div class="line">tagy&lt;-newdataB$wd</div><div class="line">dataD&lt;-data.frame(soux,souy,tagx,tagy)</div><div class="line">dataE&lt;-newdataB[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">dataF&lt;-cbind(dataD,dataE)</div><div class="line">dataF$point&lt;-round(runif(<span class="number">33</span>,<span class="number">10</span>,<span class="number">50</span>))</div></pre></td></tr></table></figure></p>
<p>两个中心的路径图（兰州、北京）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_data,aes(x=long,y=lat,group=group),fill=<span class="string">"white"</span>,colour=<span class="string">"grey60"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) + </div><div class="line">geom_segment(data=dataC,aes(x=sourcex,y=sourcey,xend=tagetx,yend=tagety,colour=<span class="string">"red"</span>))+</div><div class="line">geom_segment(data=dataF,aes(x=soux,y=souy,xend=tagx,yend=tagy,colour=<span class="string">"blue"</span>))+</div><div class="line">geom_point(data =province_city,aes(x=jd,y=wd),colour=<span class="string">"red"</span>)+</div><div class="line">theme_nothing()</div></pre></td></tr></table></figure>
<p><img src="http://oqsmlm3sr.bkt.clouddn.com/image6.png" alt="image6"></p>
<p>当然，根据实际需要，你也可以将图层叠加N次，从而制作出与业务需求一致的多中心放射状路径图，这里只给出思路和大致步骤，感兴趣的小伙伴可以自己尝试。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 路径图 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R语言可视化——ggplot绘制中心密度辐射图]]></title>
      <url>/2017/05/30/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E2%80%94%E2%80%94ggplot%E7%BB%98%E5%88%B6%E4%B8%AD%E5%BF%83%E5%AF%86%E5%BA%A6%E8%BE%90%E5%B0%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>今天这篇算是之前ggplot2图表系列的增补。</p>
<p>因为在ggplot2中一直没有看到好的关于密度辐射图（或者称它为热力辐射图，就是那种PowerMap中可以通过颜色色度探查区域指标分布密度的图表类型）的合适解决方案，最近在看github官网上ggmap的介绍帖，看到作者在ggmap函数中嵌套了geom_polygon图层并并使用fill=..level..参数和stat=”density_2d”来来制作类似的热度辐射图。</p>
<p>我就突发奇想，如果不是通过ggmap而是通过ggplot函数是否也可以呢，果然也是可以出效果的，先将方法介绍如下：</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><p>首先需要加载如下包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)      </div><div class="line"><span class="keyword">library</span>(plyr)         </div><div class="line"><span class="keyword">library</span>(maptools) </div><div class="line"><span class="keyword">library</span>(ggmap)</div></pre></td></tr></table></figure></p>
<h3 id="导入数据集："><a href="#导入数据集：" class="headerlink" title="导入数据集："></a>导入数据集：</h3><p>接下来导入两个数据集：</p>
<p>其中一个是中国省级边界轮廓图，早期关注过数据小魔方的用户大概都知道，我曾经共享过一个名为rstudy的文件包（我在刘万祥老师的公众号里发现的，现在应该也还可以获取），如果手上没有数据可以添加魔方学院的QQ群，在群共享里查找R语言资料。（共享文件比较多，可能需要找一阵子）</p>
<p>另一个是之前在讲解REmap热度辐射图时用过的城市价值指标数据集，推送后会共享在魔方学院的QQ群里。</p>
<p><strong>导入数据集：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">china_map&lt;-readShapePoly(<span class="string">"c:/rstudy/bou2_4p.shp"</span>)  <span class="comment">#地图数据 </span></div><div class="line">china_map1 &lt;- fortify(china_map)                   <span class="comment">#转换为数据框</span></div><div class="line">data&lt;- read.csv(file=<span class="string">"D:\\R\\map\\MoveChart\\cityvaluetop10.csv"</span>,header=<span class="literal">T</span>)  <span class="comment">#城市指标数据</span></div></pre></td></tr></table></figure>
<p>因为这里使用地图仅仅是作为底图用作定位信息，可以说是陪衬，所以无需对地图和城市指标进行合并。</p>
<h3 id="图表的正式生成过程："><a href="#图表的正式生成过程：" class="headerlink" title="图表的正式生成过程："></a>图表的正式生成过程：</h3><h4 id="画底图："><a href="#画底图：" class="headerlink" title="画底图："></a>画底图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p&lt;-ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>);p</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image1.png" alt="image1"></p>
<h4 id="添加热度图层"><a href="#添加热度图层" class="headerlink" title="添加热度图层"></a>添加热度图层</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p&lt;-p+geom_polygon(data=data,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.3</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>);p</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image22.jpg" alt="image2"></p>
<h4 id="调整热度图层"><a href="#调整热度图层" class="headerlink" title="调整热度图层"></a>调整热度图层</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)）</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image2.png" alt="image3"></p>
<h4 id="清楚冗余元素"><a href="#清楚冗余元素" class="headerlink" title="清楚冗余元素"></a>清楚冗余元素</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+theme_nothing())</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image3.png" alt="image4"></p>
<h4 id="可以给以上热图添加散点辅助观测"><a href="#可以给以上热图添加散点辅助观测" class="headerlink" title="可以给以上热图添加散点辅助观测"></a>可以给以上热图添加散点辅助观测</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+geom_point(data=data,aes(x=lon,y=lat),col=<span class="string">"white"</span>))</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image4.png" alt="image5"></p>
<h4 id="当然，你也可以给三点指定城市的指标数据使其变成气泡图"><a href="#当然，你也可以给三点指定城市的指标数据使其变成气泡图" class="headerlink" title="当然，你也可以给三点指定城市的指标数据使其变成气泡图"></a>当然，你也可以给三点指定城市的指标数据使其变成气泡图</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p&lt;-p+geom_point(data=data,aes(x=lon,y=lat,size=prob),col=<span class="string">"white"</span>)+scale_size_area(max_size=<span class="number">6</span>))</div></pre></td></tr></table></figure>
<p><img src="http://oqrauaruh.bkt.clouddn.com/image5.png" alt="image6"></p>
<p><strong>记得清除掉第5步，即从第四步开始</strong></p>
<p>至于实际的数据标签，指标名称和区域名称，酌情添加，但是针对地图类图表，数据展示到位即可，不建议添加太多标签，影响美观性。</p>
<p>针对本图表类型，核心参数是第二个geom_polygon()中的fill = ..level..和stat=”density_2d”统计变换，使得多边形图转换成为二维水平密度图，但是至今我还没有搞懂里面的算法是什么样的，只能大概模仿出来，至于怎么用，看大家自由发挥了，效果跟真正的热力辐射图还是有些差别，但是勉强能用。</p>
<p>总结下，用到的所有代码如下：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggplot()+</div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),fill=<span class="string">"#005A32"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_polygon(data=data,aes(x=lon,y=lat,fill = ..level..), stat=<span class="string">"density_2d"</span>, alpha = <span class="number">.3</span>, color = <span class="literal">NA</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">geom_point(data=data,aes(x=lon,y=lat,size=prob),col=<span class="string">"white"</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">6</span>)+</div><div class="line">scale_fill_gradient2( low = <span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">theme_nothing()  <span class="comment">#这一句清空主题的代码是ggmap包中的，必须加载才能用</span></div></pre></td></tr></table></figure></p>
<p>感兴趣的小伙伴儿可以移步去github官网上搜索ggmap官方介绍，里面使用ggmap调用谷歌地图做的热度图，效果很棒。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 热力地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用ggplot2制作静态数据可视化报告!]]></title>
      <url>/2017/05/30/%E7%94%A8ggplot2%E5%88%B6%E4%BD%9C%E9%9D%99%E6%80%81%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<p>对于可视化呈现来说，一个图表呈现的数据信息是有限的，更多时候，我们需要呈现的是多角度多维度的数据信息。</p>
<p>这时候，就需要用在同一个版面上容纳多副相关的图表形成一个版面的可视化报告，今天是网易数独的一个数据报告，使用ggplot还原了（其中用到的国旗出现了点儿小bug，至今没有解决，有知情的的大神还望赐教！）</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"tidyverse"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"scales"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"countrycode"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggimage"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div></pre></td></tr></table></figure>
<p><strong>以下是原图：</strong></p>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/source.png" alt="source"></p>
<p>很明显这个版面是由上下两幅图表组成的，那个使用R来做也是同样的思路，制作两幅 单独的图然后将二者合并。</p>
<h3 id="图形可视化过程"><a href="#图形可视化过程" class="headerlink" title="图形可视化过程"></a>图形可视化过程</h3><p>以下是模仿过程的代码：</p>
<h4 id="图一（上半部分圆环图）"><a href="#图一（上半部分圆环图）" class="headerlink" title="图一（上半部分圆环图）"></a>图一（上半部分圆环图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">name&lt;-c(<span class="string">"司法界"</span>,<span class="string">"商人"</span>,<span class="string">"外交领域"</span>,<span class="string">"军人"</span>,<span class="string">"记者"</span>,<span class="string">"经济学家"</span>,<span class="string">"医学界"</span>,<span class="string">"学术界"</span>,<span class="string">"工程师"</span>)</div><div class="line">label&lt;-factor(name,levels=name,order=<span class="literal">T</span>)</div><div class="line">percent&lt;-c(<span class="number">0.196</span>,<span class="number">0.166</span>,<span class="number">0.126</span>,<span class="number">0.107</span>,<span class="number">0.083</span>,<span class="number">0.083</span>,<span class="number">0.082</span>,<span class="number">0.078</span>,<span class="number">0.072</span>)</div><div class="line">mydata&lt;-data.frame(label,percent)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mydata$anti_percent&lt;-<span class="number">1</span>-mydata$percent</div><div class="line">mydata1&lt;-gather(mydata,index,Percent,-label)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">conservation_status &lt;-paste0(name,<span class="string">"\n"</span>,percent(percent))</div><div class="line">names(conservation_status)&lt;-name</div><div class="line">global_labeller &lt;-labeller(.defalut=label_value,label=conservation_status)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyhl.ttc"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_col(data=mydata1,aes(x=<span class="number">1</span>,y=Percent,fill=index),width=<span class="number">.2</span>)+</div><div class="line">scale_fill_manual(values=c(<span class="string">"percent"</span>=<span class="string">"#00A0E9"</span>,<span class="string">"anti_percent"</span>=<span class="string">"#EAEBEB"</span>),guide=<span class="literal">FALSE</span>)+</div><div class="line">xlim(<span class="number">0.6</span>,<span class="number">1.1</span>)+</div><div class="line">coord_polar(theta=<span class="string">"y"</span>)+</div><div class="line">facet_grid(.~label,labeller=global_labeller)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">    line=element_blank(),</div><div class="line">    axis.text=element_blank(),</div><div class="line">    title=element_blank(),</div><div class="line">    panel.spacing=unit(<span class="number">0</span>,<span class="string">"cm"</span>),</div><div class="line">    strip.text=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">25</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">    plot.margin=unit(c(<span class="number">.5</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>),<span class="string">'lines'</span>)</div><div class="line">    );p1</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表"</span>)</div><div class="line">CairoPNG(file=<span class="string">"infography1.png"</span>,width=<span class="number">1600</span>,height=<span class="number">480</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">p1</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography1.png" alt="infography1"></p>
<h4 id="图二：（堆积条形图）"><a href="#图二：（堆积条形图）" class="headerlink" title="图二：（堆积条形图）"></a>图二：（堆积条形图）</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">name2&lt;-c(<span class="string">"学术界"</span>,<span class="string">"商人"</span>,<span class="string">"公务员"</span>,<span class="string">"外交领域"</span>,<span class="string">"经济学家"</span>,<span class="string">"工程师"</span>,<span class="string">"司法界"</span>,<span class="string">"医学界"</span>,<span class="string">"军人"</span>,<span class="string">"教育工作者"</span>,<span class="string">"其他"</span>)</div><div class="line">巴西&lt;-c(<span class="number">1</span>,<span class="number">1.7</span>,<span class="number">0</span>,<span class="number">0.5</span>,<span class="number">1.4</span>,<span class="number">0.3</span>,<span class="number">2.2</span>,<span class="number">2.25</span>,<span class="number">0.3</span>,<span class="number">1.4</span>)</div><div class="line">中国&lt;-c(<span class="number">0.15</span>,<span class="number">0</span>,<span class="number">3.2</span>,<span class="number">0.5</span>,<span class="number">0.35</span>,<span class="number">6.3</span>,<span class="number">0.75</span>,<span class="number">0.2</span>,<span class="number">1.1</span>,<span class="number">1.1</span>)</div><div class="line">埃及&lt;-c(<span class="number">3.15</span>,<span class="number">0.5</span>,<span class="number">0.3</span>,<span class="number">1.7</span>,<span class="number">1.9</span>,<span class="number">1.9</span>,<span class="number">3.5</span>,<span class="number">0.4</span>,<span class="number">0.9</span>,<span class="number">0</span>)</div><div class="line">印度&lt;-c(<span class="number">0.6</span>,<span class="number">2.1</span>,<span class="number">0.35</span>,<span class="number">0.4</span>,<span class="number">1.9</span>,<span class="number">1</span>,<span class="number">4.2</span>,<span class="number">0.5</span>,<span class="number">0</span>,<span class="number">0</span>)</div><div class="line">韩国&lt;-c(<span class="number">2</span>,<span class="number">1.6</span>,<span class="number">2.1</span>,<span class="number">1.7</span>,<span class="number">1.75</span>,<span class="number">0</span>,<span class="number">1.2</span>,<span class="number">0</span>,<span class="number">3.2</span>,<span class="number">0</span>)</div><div class="line">美国&lt;-c(<span class="number">0</span>,<span class="number">2.6</span>,<span class="number">0.2</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8.6</span>,<span class="number">0.4</span>,<span class="number">1</span>,<span class="number">1.1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">colorpalette&lt;-c(<span class="string">"#5B8DA2"</span>,<span class="string">"#155E7B"</span>,<span class="string">"#E49D85"</span>,<span class="string">"#1C98CB"</span>,<span class="string">"#6CC5E8"</span>,<span class="string">"#22918B"</span>,<span class="string">"#6DB3A8"</span>,<span class="string">"#211E1F"</span>,<span class="string">"#E35840"</span>,<span class="string">"#76261C"</span>,<span class="string">"#798A94"</span>)</div><div class="line"></div><div class="line">mydata2&lt;-data.frame(巴西,中国,埃及,印度,韩国,美国)</div><div class="line">mydata2&lt;-data.frame(t(mydata2))</div><div class="line">mydata2[,<span class="number">11</span>]&lt;-<span class="number">16</span>-apply(mydata2,<span class="number">1</span>,sum)</div><div class="line">names(mydata2)&lt;-name2</div><div class="line">mydata2&lt;-mydata2/<span class="number">16</span></div><div class="line">mydata2$country&lt;-rownames(mydata2)</div><div class="line"></div><div class="line">coname&lt;-c(<span class="string">"Brazil"</span>,<span class="string">"China"</span>,<span class="string">"Egypt"</span>,<span class="string">"India"</span>,<span class="string">"Korea"</span>,<span class="string">"United States of America"</span>)</div><div class="line">code=countrycode(coname, <span class="string">"country.name"</span>, <span class="string">"iso2c"</span>)</div><div class="line">mydata2$code&lt;-code</div><div class="line">rownames(mydata2)&lt;-<span class="literal">NULL</span></div><div class="line"></div><div class="line">mydata2&lt;-cbind(mydata2[,<span class="number">12</span>:<span class="number">13</span>],mydata2[,<span class="number">1</span>:<span class="number">11</span>])</div><div class="line">mydata3&lt;-gather(mydata2,cato,percent,-<span class="number">1</span>:-<span class="number">2</span>)</div><div class="line">mydata3$cato&lt;-factor(mydata3$cato,levels=rev(name2),order=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot(data=mydata3,aes(x=country,y=percent,fill=cato))+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">0.8</span>)+</div><div class="line">expand_limits(y =-<span class="number">.1</span>)  +</div><div class="line">scale_x_discrete(limits=rev(c(<span class="string">"巴西"</span>,<span class="string">"中国"</span>,<span class="string">"埃及"</span>,<span class="string">"印度"</span>,<span class="string">"韩国"</span>,<span class="string">"美国"</span>)))+</div><div class="line">scale_fill_manual(values=rev(colorpalette),breaks=rev(levels(mydata3$cato)))+</div><div class="line">geom_flag(y=-<span class="number">.08</span>,aes(image=code),size=<span class="number">.1</span>) + </div><div class="line">guides(fill=guide_legend(keywidth=<span class="number">3.5</span>,keyheight=<span class="number">.2</span>,nrow=<span class="number">1</span>,title.hjust=<span class="number">.5</span>,title.vjust=<span class="number">.5</span>,title=<span class="literal">NULL</span>))+</div><div class="line">geom_text(aes(label=ifelse(mydata3$percent!=<span class="number">0</span>,percent(mydata3$percent),<span class="string">""</span>)),position=position_stack(vjust=<span class="number">0.5</span>),family=<span class="string">"myfont"</span>,size=<span class="number">6.5</span>,col=<span class="string">"white"</span>)+</div><div class="line">coord_flip()+</div><div class="line">theme_transparent()+</div><div class="line">theme(</div><div class="line">text=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">25</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">legend.direction=<span class="string">"horizontal"</span>,</div><div class="line">legend.key.size=unit(<span class="number">.5</span>,<span class="string">'cm'</span>),</div><div class="line">legend.position=<span class="string">"top"</span>,</div><div class="line">line=element_blank(),</div><div class="line">panel.spacing=unit(<span class="number">1</span>,<span class="string">"cm"</span>),</div><div class="line">title=element_blank(),</div><div class="line">axis.text.x=element_blank(),</div><div class="line">plot.margin=unit(c(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>),<span class="string">'lines'</span>)</div><div class="line">);p2</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography2.png" alt="infography2"></p>
<h4 id="图层合并："><a href="#图层合并：" class="headerlink" title="图层合并："></a>图层合并：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表"</span>)</div><div class="line">CairoPNG(file=<span class="string">"infography2.png"</span>,width=<span class="number">1600</span>,height=<span class="number">720</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">p2</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqqq8mo4s.bkt.clouddn.com/infography.png" alt="infography"></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 信息图 </tag>
            
            <tag> 版面设计 </tag>
            
            <tag> 图层控制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[百分比方块比较图]]></title>
      <url>/2017/05/29/%E7%99%BE%E5%88%86%E6%AF%94%E6%96%B9%E5%9D%97%E6%AF%94%E8%BE%83%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>该图案例来自经济学人，国内看到刘老师在博客上用Excel仿制过，这里仍然使用ggplot2进行仿制。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(ggmap)</div></pre></td></tr></table></figure>
<h3 id="构造数据源："><a href="#构造数据源：" class="headerlink" title="构造数据源："></a>构造数据源：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(X=c(<span class="number">3</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">19</span>),A=c(<span class="number">2471</span>,<span class="number">1893</span>,<span class="number">1248</span>,<span class="number">1078</span>,<span class="number">556</span>),B=c(<span class="number">1385</span>,<span class="number">951</span>,<span class="number">869</span>,<span class="number">784</span>,<span class="number">366</span>),C=c(<span class="number">56</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">40</span>))</div><div class="line">mydata$Axmin&lt;-mydata$X-sqrt(mydata$A)/<span class="number">30</span></div><div class="line">mydata$Axmax&lt;-mydata$X+sqrt(mydata$A)/<span class="number">30</span></div><div class="line">mydata$Aymin&lt;-<span class="number">0</span></div><div class="line">mydata$Aymax&lt;-sqrt(mydata$A)/<span class="number">15</span></div><div class="line"></div><div class="line">mydata$Bxmin&lt;-mydata$X+sqrt(mydata$A)/<span class="number">30</span>-sqrt(mydata$B)/<span class="number">15</span></div><div class="line">mydata$Bxmax&lt;-mydata$X+sqrt(mydata$A)/<span class="number">30</span></div><div class="line">mydata$Bymin&lt;-<span class="number">0</span></div><div class="line">mydata$Bymax&lt;-sqrt(mydata$B)/<span class="number">15</span></div><div class="line"></div><div class="line"></div><div class="line">mydata$Cxmin&lt;-mydata$X+sqrt(mydata$A)/<span class="number">30</span>-sqrt(mydata$C)/<span class="number">10</span></div><div class="line">mydata$Cxmax&lt;-mydata$X+sqrt(mydata$A)/<span class="number">30</span></div><div class="line">mydata$Cymin&lt;-<span class="number">0</span></div><div class="line">mydata$Cymax&lt;-sqrt(mydata$C)/<span class="number">10</span></div><div class="line"></div><div class="line">mydata$text&lt;-c(<span class="string">"University of\n Pennsylvania"</span>,<span class="string">"University of\n Notre Dame"</span>,<span class="string">"Princeton\n University"</span>,<span class="string">"Stanford\n University"</span>,<span class="string">"California Institute\n of Technology"</span>)</div><div class="line">mydata$full&lt;-c(<span class="string">"31663"</span>,<span class="string">"16548"</span>,<span class="string">"27189"</span>,<span class="string">"34348"</span>,<span class="string">"5225"</span>)</div></pre></td></tr></table></figure>
<h3 id="可视化图形过程："><a href="#可视化图形过程：" class="headerlink" title="可视化图形过程："></a>可视化图形过程：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont = windowsFont(<span class="string">"arial"</span>))</div><div class="line">ggplot(mydata)+</div><div class="line">geom_rect(aes(xmin=Axmin,xmax=Axmax,ymin=Aymin,ymax=Aymax),fill=<span class="string">"#59AF8A"</span>)+</div><div class="line">geom_rect(aes(xmin=Bxmin,xmax=Bxmax,ymin=Bymin,ymax=Bymax),fill=<span class="string">"#0074A3"</span>)+</div><div class="line">geom_rect(aes(xmin=Cxmin,xmax=Cxmax,ymin=Cymin,ymax=Cymax),fill=<span class="string">"#C72733"</span>)+</div><div class="line">geom_linerange(aes(x=X+<span class="number">2</span>,ymin=<span class="number">0</span>,ymax=<span class="number">4.8</span>),col=<span class="string">"grey"</span>,linetype=<span class="number">2</span>)+</div><div class="line">ylim(-<span class="number">.5</span>,<span class="number">6</span>)+</div><div class="line">labs(x=<span class="string">""</span>,y=<span class="string">""</span>)+</div><div class="line">geom_text(aes(x=X,y=<span class="number">4.5</span>,label=text),size=<span class="number">4</span>,fontface=<span class="string">"bold"</span>,family=<span class="string">"myFont"</span>)+</div><div class="line">geom_label(aes(x=X,y=<span class="number">3.7</span>,label=full),fill=<span class="string">"#EFE5CA"</span>,colour=<span class="string">"black"</span>,fontface=<span class="string">"bold"</span>,size=<span class="number">3.5</span>,label.r=unit(<span class="number">0.15</span>,<span class="string">"lines"</span>),family=<span class="string">"myFont"</span>)+</div><div class="line">geom_text(aes(x=Axmin,y=Aymax,label=A),hjust=-<span class="number">.2</span>,vjust=<span class="number">1</span>,size=<span class="number">3.5</span>,col=<span class="string">"white"</span>,family=<span class="string">"myFont"</span>)+</div><div class="line">geom_text(aes(x=Bxmin,y=Bymax,label=B),hjust=-<span class="number">.2</span>,vjust=<span class="number">1</span>,size=<span class="number">3.5</span>,col=<span class="string">"white"</span>,family=<span class="string">"myFont"</span>)+</div><div class="line">geom_text(aes(x=Cxmin,y=Cymax,label=C),hjust=-<span class="number">.2</span>,vjust=<span class="number">1</span>,size=<span class="number">3</span>,col=<span class="string">"white"</span>,family=<span class="string">"myFont"</span>)+</div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">2.5</span>,y=<span class="number">5.7</span>,label=<span class="string">"Class Struggle"</span>,col=<span class="string">"black"</span>, size=<span class="number">6</span>,family=<span class="string">"myFont"</span>)+  </div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">8.85</span>,y=<span class="number">5.2</span>,label=<span class="string">"A spot on a university or college's waitlist rarely translates into admission. A look at the numbers for several institutions"</span>, size=<span class="number">4</span>,family=<span class="string">"myFont"</span>)+  </div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">3.9</span>,y=-<span class="number">.32</span>,label=<span class="string">"Source:The universities and 2011-2012 Common Data Set"</span>,col=<span class="string">"black"</span>,size=<span class="number">3</span>,family=<span class="string">"myFont"</span>)+  </div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">19.8</span>,y=-<span class="number">.32</span>,label=<span class="string">"The wall Street Jaunual"</span>,col=<span class="string">"black"</span>,size=<span class="number">3</span>,family=<span class="string">"myFont"</span>)+  </div><div class="line">theme_nothing()+</div><div class="line">theme(panel.background=element_rect(fill=<span class="string">"#F5F2E1"</span>))</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqp4xxgxu.bkt.clouddn.com/image1.png" width="526" height="182" alt="image1" align="center"><br></div>

<p><strong>建议保存尺寸（1035*330）</strong> </p>
<h3 id="更加紧促的方式："><a href="#更加紧促的方式：" class="headerlink" title="更加紧促的方式："></a>更加紧促的方式：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">mydata1&lt;-mydata[,<span class="number">5</span>:<span class="number">8</span>]</div><div class="line">names(mydata1)&lt;-c(<span class="string">"xmin"</span>,<span class="string">"xmax"</span>,<span class="string">"ymin"</span>,<span class="string">"ymax"</span>)</div><div class="line">mydata1$Group&lt;-<span class="string">"A"</span></div><div class="line"></div><div class="line">mydata2&lt;-mydata[,<span class="number">9</span>:<span class="number">12</span>]</div><div class="line">names(mydata2)&lt;-c(<span class="string">"xmin"</span>,<span class="string">"xmax"</span>,<span class="string">"ymin"</span>,<span class="string">"ymax"</span>)</div><div class="line">mydata2$Group&lt;-<span class="string">"B"</span></div><div class="line"></div><div class="line">mydata3&lt;-mydata[,<span class="number">13</span>:<span class="number">16</span>]</div><div class="line">names(mydata3)&lt;-c(<span class="string">"xmin"</span>,<span class="string">"xmax"</span>,<span class="string">"ymin"</span>,<span class="string">"ymax"</span>)</div><div class="line">mydata3$Group&lt;-<span class="string">"C"</span></div><div class="line"></div><div class="line">mynewdata&lt;-rbind(mydata1,mydata2,mydata3)</div><div class="line">mynewdata$Group&lt;-factor(mynewdata$Group,order=<span class="literal">T</span>)</div><div class="line"></div><div class="line">ggplot(mynewdata)+</div><div class="line">geom_rect(aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax,fill=Group))+</div><div class="line">scale_fill_manual(values=c(<span class="string">"#59AF8A"</span>,<span class="string">"#0074A3"</span>,<span class="string">"#C72733"</span>))</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqp4xxgxu.bkt.clouddn.com/image2.jpg" width="512" height="285" alt="image2" align="center"><br></div>


<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 信息图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国人口金字塔动态图]]></title>
      <url>/2017/05/29/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%8F%A3%E9%87%91%E5%AD%97%E5%A1%94%E5%8A%A8%E6%80%81%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p><strong>中国人口金字塔动态图</strong></p>
<p>以下是一个之前在网络上引起巨大轰动的人口金字塔动态图：</p>
<p><img src="http://oqoy8x3as.bkt.clouddn.com/%E4%BA%BA%E5%8F%A3%E9%87%91%E5%AD%97%E5%A1%94%EF%BC%881950-2050%EF%BC%89.gif" alt="人口金字塔"></p>
<p>没有找到原始数据，后来在UN的官网上找到了一个五年间隔的数据，顺便还原了下图表：</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(animation)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(tidyr)</div><div class="line"><span class="keyword">library</span>(xlsx)</div><div class="line"><span class="keyword">library</span>(ggthemes)</div><div class="line">setwd(<span class="string">"E:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表/动态图表"</span>)</div></pre></td></tr></table></figure>
<h3 id="整理并导入人口结构数据："><a href="#整理并导入人口结构数据：" class="headerlink" title="整理并导入人口结构数据："></a>整理并导入人口结构数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">female&lt;-read.xlsx(<span class="string">"Population.xlsx"</span>,sheetName=<span class="string">"Female"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line">male&lt;-read.xlsx(<span class="string">"Population.xlsx"</span>,sheetName=<span class="string">"Male"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,check.names = <span class="literal">FALSE</span>)</div><div class="line"></div><div class="line">female&lt;-female%&gt;%gather(Year,Poputation,-<span class="number">1</span>)</div><div class="line">male&lt;-male%&gt;%gather(Year,Poputation,-<span class="number">1</span>)</div><div class="line">female$Poputation&lt;-female$Poputation*-<span class="number">1</span></div><div class="line"></div><div class="line">male$sex&lt;-<span class="string">"male"</span>;female$sex&lt;-<span class="string">"female"</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">China_Population&lt;-rbind(male,female)%&gt;%mutate(abs_pop=abs(Poputation))</div><div class="line">China_Population$agegroup&lt;-factor(China_Population$agegroup,</div><div class="line">levels=c(<span class="string">"0-4"</span>,<span class="string">"5-9"</span>,<span class="string">"10-14"</span>,<span class="string">"15-19"</span>,<span class="string">"20-24"</span>,<span class="string">"25-29"</span>,<span class="string">"30-34"</span>,<span class="string">"35-39"</span>,<span class="string">"40-44"</span>,<span class="string">"45-49"</span>,<span class="string">"50-54"</span>,<span class="string">"55-59"</span>,<span class="string">"60-64"</span>,<span class="string">"65-69"</span>,<span class="string">"70-74"</span>,<span class="string">"75-79"</span>,<span class="string">"80+"</span>) ,order=<span class="literal">T</span>)</div><div class="line"></div><div class="line">m&lt;-seq(<span class="number">1950</span>,<span class="number">2015</span>,by=<span class="number">5</span>)</div></pre></td></tr></table></figure>
<h3 id="可视化动态图表："><a href="#可视化动态图表：" class="headerlink" title="可视化动态图表："></a>可视化动态图表：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">saveGIF(&#123;</div><div class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> m) &#123; </div><div class="line">    title &lt;- as.character(i)</div><div class="line">    year_data &lt;- filter(China_Population,Year==i)</div><div class="line">     g1&lt;-ggplot(year_data,aes(x =agegroup,y=Poputation,fill=sex,width=<span class="number">1</span>)) +</div><div class="line">        coord_fixed()+ </div><div class="line">        coord_flip() +</div><div class="line">        geom_bar(data=subset(year_data,sex==<span class="string">"female"</span>),stat = <span class="string">"identity"</span>) +</div><div class="line">        geom_bar(data=subset(year_data,sex==<span class="string">"male"</span>), stat = <span class="string">"identity"</span>) +</div><div class="line">        scale_y_continuous(breaks = seq(-<span class="number">70000</span>,<span class="number">70000</span>,length=<span class="number">9</span>),</div><div class="line">                         labels = paste0(as.character(c(abs(seq(-<span class="number">70</span>,<span class="number">70</span>,length=<span class="number">9</span>)))), <span class="string">"m"</span>), </div><div class="line">                         limits = c(-<span class="number">75000</span>, <span class="number">75000</span>)) +</div><div class="line">        theme_economist(base_size = <span class="number">14</span>) + </div><div class="line">        scale_fill_manual(values = c(<span class="string">'#D40225'</span>, <span class="string">'#374F8F'</span>)) + </div><div class="line">        labs(title=paste0(<span class="string">"Population structure of China:"</span>, title),</div><div class="line">        caption=<span class="string">"Data Source:United Nations Department of Economic and Docial Affairs\nPopulation Division\nWorld Population Prospects,the 2015 Revision"</span></div><div class="line">        ,y=<span class="string">"Population"</span>,x=<span class="string">"Age"</span>) + </div><div class="line">        guides(fill=guide_legend(reverse = <span class="literal">TRUE</span>))+</div><div class="line">        theme(</div><div class="line">             legend.position =c(<span class="number">0.8</span>,<span class="number">0.9</span>),</div><div class="line">             legend.title = element_blank(),</div><div class="line">             plot.title = element_text(size=<span class="number">20</span>),</div><div class="line">             plot.caption = element_text(size=<span class="number">12</span>,hjust=<span class="number">0</span>),</div><div class="line">         )</div><div class="line"></div><div class="line">        print(g1)</div><div class="line">  &#125;</div><div class="line">&#125;,movie.name=<span class="string">'japan_pyramid.gif'</span>,interval=<span class="number">0.5</span>,ani.width=<span class="number">700</span>,ani.height=<span class="number">600</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqoy8x3as.bkt.clouddn.com/China_pyramid.gif" alt="China_pyramid"></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 动态图表 </tag>
            
            <tag> gif </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[动态世界地图]]></title>
      <url>/2017/05/28/%E5%8A%A8%E6%80%81%E4%B8%96%E7%95%8C%E5%9C%B0%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p><strong>上帝视角——给世界一个特写~</strong></p>
<p>最近在研究使用R包制作动画图表，也就是类似GIF动图，感觉很有趣，也是动态图表呈现的一个非常独特的领域，刚刚研究出了些成果，今天这篇分享使用GIF动画+球型投影来制作呈现地球转动效果的动态GIF图表。<br></p>
<p>过程要使用谢益辉大神的动画包——animation，该包依赖可执行程序——ImageMagic，所以导入animation包之前要提前下载并安装该动画软件。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(maps)  </div><div class="line"><span class="keyword">library</span>(plyr)        </div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(xlsx)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(<span class="string">"animation"</span>)</div></pre></td></tr></table></figure>
<h3 id="可视化过程："><a href="#可视化过程：" class="headerlink" title="可视化过程："></a>可视化过程：</h3><hr>
<p><strong>本次使用maps中的世界地图素材：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">world_map &lt;- map_data(<span class="string">"world"</span>)</div></pre></td></tr></table></figure>
<h4 id="预览地图素材效果："><a href="#预览地图素材效果：" class="headerlink" title="预览地图素材效果："></a>预览地图素材效果：</h4><blockquote>
<p>为了区分大洲，我将该地图中的国家按照地理位置进行了归类（七大洲）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">data&lt;-read.csv(<span class="string">"D:/R/mapdata/Word_State.csv"</span>,stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)  </div><div class="line">ggplot(data,aes(map_id=region))+</div><div class="line">geom_map(aes(fill=Address),map=world_map,col=<span class="string">"white"</span>)+</div><div class="line">expand_limits(x=world_map$long,y=world_map$lat)+</div><div class="line">scale_y_continuous(breaks=(-<span class="number">2</span>:<span class="number">2</span>)*<span class="number">30</span>) +</div><div class="line">scale_x_continuous(breaks=(-<span class="number">4</span>:<span class="number">4</span>)*<span class="number">45</span>)+</div><div class="line">coord_map(<span class="string">"ortho"</span>, orientation = c(<span class="number">30</span>,<span class="number">110</span>,<span class="number">0</span>))</div></pre></td></tr></table></figure>
<p><img src="http://oqn83owfg.bkt.clouddn.com/image1.png" alt="image1"></p>
<h4 id="呈现特定视角地球："><a href="#呈现特定视角地球：" class="headerlink" title="呈现特定视角地球："></a>呈现特定视角地球：</h4><p>筛选其中某一个州进行特定角度呈现：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">data1&lt;-data[data$Address==<span class="string">"North America"</span>,]</div><div class="line">ggplot()+</div><div class="line">geom_map(data=data,aes(map_id=region),map=world_map,col=<span class="string">"white"</span>,fill=<span class="string">"#A3A3A3"</span>)+</div><div class="line">geom_map(data=data1,aes(map_id=region,fill=Address),map=world_map,col=<span class="literal">NA</span>)+</div><div class="line">expand_limits(x=world_map$long,y=world_map$lat)+</div><div class="line">scale_y_continuous(breaks=(-<span class="number">6</span>:<span class="number">6</span>)*<span class="number">15</span>) +</div><div class="line">scale_x_continuous(breaks=(-<span class="number">12</span>:<span class="number">12</span>)*<span class="number">15</span>)+</div><div class="line">coord_map(<span class="string">"ortho"</span>, orientation = c(<span class="number">0</span>,-<span class="number">95</span>,<span class="number">0</span>))+</div><div class="line">guides(fill=<span class="literal">FALSE</span>) +</div><div class="line">theme(</div><div class="line">    axis.ticks=element_blank(),</div><div class="line">    axis.text=element_blank(),</div><div class="line">    axis.title=element_blank(),</div><div class="line">    panel.background=element_rect(fill=<span class="string">"white"</span>,colour=<span class="literal">NA</span>),</div><div class="line">    panel.grid.major = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">    panel.grid.minor = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>)</div><div class="line">    </div><div class="line">)</div></pre></td></tr></table></figure>
<p><img src="http://oqn83owfg.bkt.clouddn.com/image2.png" alt="image2"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">world_map_data&lt;-merge(world_map,data,all.x=<span class="literal">TRUE</span>)</div><div class="line">midpos&lt;-<span class="keyword">function</span>(x) mean(range(x,na.rm=<span class="literal">TRUE</span>))</div><div class="line">centres&lt;-ddply(world_map_data,.(Address),colwise(midpos,.(long,lat)))</div><div class="line">centres&lt;-centres[centres$Address!=<span class="string">"Antarctica"</span>,]</div><div class="line">centres$angle&lt;-<span class="number">0</span></div><div class="line">centres$long[centres$Address==<span class="string">"Asia"</span>]=<span class="number">100</span></div><div class="line">centres$long[centres$Address==<span class="string">"North America"</span>]=-<span class="number">100</span></div><div class="line">centres$long[centres$Address==<span class="string">"Oceania"</span>]=<span class="number">130</span></div></pre></td></tr></table></figure>
<p>计算每个大洲的地区中心（个别中心偏离中心大陆太远，需要手动调整）<br></p>
<h3 id="使用grid的版面控制系统进行多图排版："><a href="#使用grid的版面控制系统进行多图排版：" class="headerlink" title="使用grid的版面控制系统进行多图排版："></a>使用grid的版面控制系统进行多图排版：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"E:/数据可视化/R/R语言学习笔记/可视化/Shiny/动态图表"</span>)</div><div class="line">world_map_data&lt;-arrange(world_map_data,group,order)</div><div class="line">CairoPNG(file=<span class="string">"wordmap.png"</span>,width=<span class="number">1600</span>,height=<span class="number">1200</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">pushViewport(viewport(layout=grid.layout(<span class="number">2</span>,<span class="number">3</span>)))</div><div class="line">vplayout&lt;-<span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row =x,layout.pos.col=y)&#125;</div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:nrow(centres))&#123;</div><div class="line">mydata&lt;-world_map_data[world_map_data$Address==centres$Address[i],]</div><div class="line">p&lt;-ggplot()+</div><div class="line">geom_polygon(data=world_map_data,aes(x=long,y=lat,group=group),fill=<span class="string">"grey95"</span>,colour=<span class="string">"grey"</span>,size=<span class="number">.25</span>)+</div><div class="line">geom_map(data=mydata,aes(map_id=region),map=world_map_data,colour=<span class="string">"white"</span>,fill=<span class="string">"#F8766D"</span>,size=<span class="number">.25</span>)+</div><div class="line">coord_map(<span class="string">"ortho"</span>,orientation=c(centres$lat[i],centres$long[i],<span class="number">0</span>))+</div><div class="line">scale_y_continuous(breaks=(-<span class="number">6</span>:<span class="number">6</span>)*<span class="number">15</span>) +</div><div class="line">scale_x_continuous(breaks=(-<span class="number">12</span>:<span class="number">12</span>)*<span class="number">15</span>)+</div><div class="line">labs(title=centres$Address[i])+</div><div class="line">theme(</div><div class="line">panel.background=element_rect(fill=<span class="string">"white"</span>,colour=<span class="literal">NA</span>),</div><div class="line">panel.grid.major = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">panel.grid.minor = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">text=element_text(size=<span class="number">20</span>),</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank(),</div><div class="line">plot.title=element_text(size=<span class="number">20</span>,family=<span class="string">"myfont"</span>,hjust=<span class="number">.5</span>),</div><div class="line">plot.margin = unit(c(ifelse(i&lt;=<span class="number">3</span>,<span class="number">5</span>,<span class="number">.5</span>),<span class="number">1</span>,ifelse(i&gt;=<span class="number">3</span>,<span class="number">5</span>,<span class="number">.5</span>),<span class="number">1</span>),<span class="string">"lines"</span>)</div><div class="line">)</div><div class="line">print(p,vp=vplayout(ifelse(i&lt;=<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>),ifelse(i&lt;=<span class="number">3</span>,i,i-<span class="number">3</span>)))</div><div class="line">&#125;</div><div class="line">grid.text(label=<span class="string">"God's Perspective"</span>,x=<span class="number">.01</span>,y=<span class="number">.98</span>,gp=gpar(col=<span class="string">"black"</span>,fontsize=<span class="number">35</span>),draw=<span class="literal">TRUE</span>,just=<span class="string">"left"</span>)</div><div class="line">grid.text(label=<span class="string">"Data Source:DataMofang"</span>,x=<span class="number">.02</span>,y=<span class="number">.02</span>,gp=gpar(col=<span class="string">"black"</span>,fontsize=<span class="number">20</span>),draw=<span class="literal">TRUE</span>,just=<span class="string">"left"</span>)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqn83owfg.bkt.clouddn.com/image3.png" alt="image3"></p>
<h3 id="使用animation包将361帧地图合并为GIF动画"><a href="#使用animation包将361帧地图合并为GIF动画" class="headerlink" title="使用animation包将361帧地图合并为GIF动画"></a>使用animation包将361帧地图合并为GIF动画</h3><p>使用animation包将361帧地图合并为GIF动画<br>（友情提示：机器性能太弱请不要随便玩火，容易爆内存~！！！）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">saveGIF(&#123;</div><div class="line">ani.options(interval=<span class="number">.15</span>,convert=shQuote(<span class="string">"D:/Program Files/ImageMagick-7.0.5-Q16/convert.exe"</span>))</div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">0</span>:<span class="number">360</span>)&#123;</div><div class="line">p&lt;-ggplot()+</div><div class="line">geom_polygon(data=world_map_data,aes(x=long,y=lat,group=group,fill=Address),colour=<span class="string">"grey"</span>,size=<span class="number">.25</span>)+</div><div class="line">coord_map(<span class="string">"ortho"</span>,orientation=c(<span class="number">0</span>,i,<span class="number">0</span>))+</div><div class="line">scale_y_continuous(breaks=(-<span class="number">6</span>:<span class="number">6</span>)*<span class="number">15</span>) +</div><div class="line">scale_x_continuous(breaks=(-<span class="number">12</span>:<span class="number">12</span>)*<span class="number">15</span>)+</div><div class="line">scale_fill_brewer(name=<span class="string">"million($)"</span>,palette=<span class="string">"Set2"</span>)+</div><div class="line">theme(</div><div class="line">panel.background=element_rect(fill=<span class="string">"white"</span>,colour=<span class="literal">NA</span>),</div><div class="line">panel.grid.major = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">panel.grid.minor = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank()</div><div class="line">)</div><div class="line">print(p)</div><div class="line">&#125;</div><div class="line">&#125;,movie.name=<span class="string">'Movingworld_map.gif'</span>,ani.width=<span class="number">1200</span>,ani.height=<span class="number">1000</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqn83owfg.bkt.clouddn.com/wordmap.gif" alt="worldmap"></p>
<p>因为原图有13M，微信公众平台限制图片大小为5m，所以大图能就没法奉上了，不过又做了一个压缩版的小图，效果如下：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">draw = <span class="keyword">function</span>(i)&#123;  </div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=world_map_data,aes(x=long,y=lat,group=group,fill=Address),colour=<span class="string">"grey"</span>,size=<span class="number">.25</span>)+</div><div class="line">coord_map(<span class="string">"ortho"</span>,orientation=c(<span class="number">0</span>,i,<span class="number">0</span>))+</div><div class="line">scale_y_continuous(breaks=(-<span class="number">6</span>:<span class="number">6</span>)*<span class="number">15</span>) +</div><div class="line">scale_x_continuous(breaks=(-<span class="number">12</span>:<span class="number">12</span>)*<span class="number">15</span>)+</div><div class="line">scale_fill_brewer(name=<span class="string">"million($)"</span>,palette=<span class="string">"Set2"</span>)+</div><div class="line">theme(</div><div class="line">panel.background=element_rect(fill=<span class="string">"white"</span>,colour=<span class="literal">NA</span>),</div><div class="line">panel.grid.major = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">panel.grid.minor = element_line(colour = <span class="string">"grey60"</span>,size=<span class="number">.25</span>),</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank()</div><div class="line">)</div><div class="line">                  &#125; </div><div class="line"></div><div class="line">oopts=ani.options(ffmpeg = <span class="string">"D:/Program Files/ImageMagick-7.0.5-Q16/ffmpeg.exe"</span>) </div><div class="line">saveVideo(&#123;  </div><div class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">36</span>) print(draw(i))</div><div class="line">    ani.options(interval = <span class="number">0.6</span>,nmax=<span class="number">230</span>)&#125;,  </div><div class="line">    video.name =<span class="string">"world_map_move.gif"</span>,other.opts=<span class="string">"-b 4000k"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqn83owfg.bkt.clouddn.com/image4.gif" alt="image4"></p>
<p>该案例涉及到的技术面比较广，需要使用循环、grid图形版面控制、地图投影、自编函数、颜色填充等，仅作为探索可视化道路上的一个小台阶，<br><br>也许现在看起来有些高不可攀，但是当你真正深入的了解R语法以及函数编程和ggplot2之后，就没那么难理解了！<br></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> gif </tag>
            
            <tag> 动态地图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[炫彩仪表盘图表]]></title>
      <url>/2017/05/28/%E7%82%AB%E5%BD%A9%E4%BB%AA%E8%A1%A8%E7%9B%98%E5%9B%BE%E8%A1%A8/</url>
      <content type="html"><![CDATA[<p>该图表示利用ggplot2来模拟制作实际商务分析场景中应用的单值仪表盘。</p>
<p>这种单值仪表盘最初发源于汽车驾驶舱的控制系统，也广泛用于飞行器、机械驾驶舱内的导航控制系统，但用在商务分析与决策系统却是别有一番风味。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div><div class="line"><span class="keyword">library</span>(grid)</div></pre></td></tr></table></figure>
<h3 id="生成辅助数据："><a href="#生成辅助数据：" class="headerlink" title="生成辅助数据："></a>生成辅助数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">bardata&lt;-seq(from=<span class="number">0</span>,to=<span class="number">270</span>,length=<span class="number">1000</span>)</div><div class="line">rectdata&lt;-seq(from=<span class="number">0</span>,to=<span class="number">270</span>,by=<span class="number">27</span>)%&gt;%c(<span class="number">360</span>)</div><div class="line">setwd(<span class="string">"F:/微信公众号/公众号——数据小魔方/2017年4月/20170415"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">target&lt;-<span class="number">1</span>/<span class="number">3</span></div><div class="line">assist&lt;-target*<span class="number">270</span></div></pre></td></tr></table></figure>
<h3 id="生成单个仪表盘："><a href="#生成单个仪表盘：" class="headerlink" title="生成单个仪表盘："></a>生成单个仪表盘：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"dashboard.png"</span>,width=<span class="number">800</span>,height=<span class="number">540</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=<span class="literal">NULL</span>)+</div><div class="line">geom_rect(aes(xmin=rectdata[-<span class="number">12</span>],xmax=rectdata[-<span class="number">1</span>],ymin=<span class="number">5</span>,ymax=<span class="number">10</span>),fill=<span class="string">"#F2F2F2"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_bar(aes(x=bardata,y=<span class="number">5</span>,col=bardata),stat=<span class="string">"identity"</span>,fill=<span class="literal">NA</span>,size=<span class="number">2</span>)+</div><div class="line">geom_text(aes(x=rectdata[-<span class="number">12</span>],y=-<span class="number">5</span>,label=seq(<span class="number">0</span>,<span class="number">100</span>,by=<span class="number">10</span>)),vjust=<span class="number">.5</span>,hjust=<span class="number">.5</span>,size=<span class="number">5</span>,family=<span class="string">"myfont"</span>,col=<span class="string">"#0F1110"</span>)+</div><div class="line">geom_segment(aes(x=assist,y=-<span class="number">50</span>,xend=assist,yend=-<span class="number">10</span>),arrow =arrow(length=unit(<span class="number">0.4</span>,<span class="string">"cm"</span>)),size=<span class="number">1.2</span>,col=<span class="string">"red"</span>)+</div><div class="line">geom_point(aes(x=assist,y=-<span class="number">50</span>),shape=<span class="number">21</span>,fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>,size=<span class="number">7</span>)+</div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">315</span>,y=-<span class="number">30</span>,label=percent(target),size=<span class="number">12</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">.5</span>,family=<span class="string">"myfont"</span>,col=ifelse(target&lt;<span class="number">.5</span>,<span class="string">"#F32626"</span>,<span class="string">"#38E968"</span>),fontface=<span class="string">"plain"</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">315</span>,y=-<span class="number">15</span>,label=<span class="string">"指标1"</span>,size=<span class="number">15</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">.5</span>,family=<span class="string">"myfont"</span>)+ </div><div class="line">ylim(-<span class="number">50</span>,<span class="number">12</span>)+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">179.85</span>)+</div><div class="line">scale_colour_gradient(low=<span class="string">"#F32626"</span>,high=<span class="string">"#38E968"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">text=element_blank(),</div><div class="line">line=element_blank(),</div><div class="line">rect=element_blank()</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqn1i92yh.bkt.clouddn.com/dashboard.png" width="600" height="405" alt="dashboard" align="center"><br></div>

<hr>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">123</span>)</div><div class="line">target&lt;-runif(<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>)</div><div class="line">assist&lt;-<span class="number">270</span>*target</div></pre></td></tr></table></figure>
<h3 id="生成仪表盘组合："><a href="#生成仪表盘组合：" class="headerlink" title="生成仪表盘组合："></a>生成仪表盘组合：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"bigdashboard.png"</span>,width=<span class="number">1500</span>,height=<span class="number">675</span>)</div><div class="line">showtext.begin()</div><div class="line">grid.newpage()</div><div class="line">pushViewport(viewport(layout=grid.layout(<span class="number">1</span>,<span class="number">5</span>)))</div><div class="line">vplayout&lt;-<span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row =x,layout.pos.col=y)&#125;</div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</div><div class="line">p&lt;-ggplot(data=<span class="literal">NULL</span>)+</div><div class="line">geom_rect(aes(xmin=rectdata[-<span class="number">12</span>],xmax=rectdata[-<span class="number">1</span>],ymin=<span class="number">5</span>,ymax=<span class="number">12</span>),fill=<span class="string">"#F2F2F2"</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_bar(aes(x=bardata,y=<span class="number">5</span>,col=bardata),stat=<span class="string">"identity"</span>,fill=<span class="literal">NA</span>,size=<span class="number">2</span>)+</div><div class="line">geom_text(aes(x=rectdata[-<span class="number">12</span>],y=-<span class="number">5</span>,label=seq(<span class="number">0</span>,<span class="number">100</span>,by=<span class="number">10</span>)),vjust=<span class="number">.5</span>,hjust=<span class="number">.5</span>,size=<span class="number">3.5</span>,family=<span class="string">"myfont"</span>,col=<span class="string">"#0F1110"</span>)+</div><div class="line">geom_segment(aes(x=assist[i],y=-<span class="number">50</span>,xend=assist[i],yend=-<span class="number">10</span>),arrow =arrow(length=unit(<span class="number">0.4</span>,<span class="string">"cm"</span>)),size=<span class="number">1.2</span>,col=<span class="string">"red"</span>)+</div><div class="line">geom_point(aes(x=assist[i],y=-<span class="number">50</span>),shape=<span class="number">21</span>,fill=<span class="string">"white"</span>,col=<span class="string">"black"</span>,size=<span class="number">7</span>)+</div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">315</span>,y=-<span class="number">30</span>,label=percent(target[i]),size=<span class="number">7.5</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">.5</span>,family=<span class="string">"myfont"</span>,col=ifelse(target[i]&lt;<span class="number">.5</span>,<span class="string">"#F32626"</span>,<span class="string">"#38E968"</span>),fontface=<span class="string">"plain"</span>)+ </div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">315</span>,y=-<span class="number">15</span>,label=paste0(<span class="string">"指标"</span>,i),size=<span class="number">8.5</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">.5</span>,family=<span class="string">"myfont"</span>)+ </div><div class="line">ylim(-<span class="number">50</span>,<span class="number">12</span>)+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">179.85</span>)+</div><div class="line">scale_colour_gradient(low=<span class="string">"#F32626"</span>,high=<span class="string">"#38E968"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">text=element_blank(),</div><div class="line">line=element_blank(),</div><div class="line">rect=element_blank()</div><div class="line">)</div><div class="line">print(p,vp=vplayout(<span class="number">1</span>,i))</div><div class="line">&#125;</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqn1i92yh.bkt.clouddn.com/bigdashboard.png" width="750" height="337.5" alt="bigdashboard" align="center"><br></div>



<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 仪表盘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 仪表盘 </tag>
            
            <tag> 排版 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[鱼眼百分比信息图]]></title>
      <url>/2017/05/27/%E9%B1%BC%E7%9C%BC%E7%99%BE%E5%88%86%E6%AF%94%E4%BF%A1%E6%81%AF%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>该图表案例来源于某财经杂志，我是从刘万祥老师那里看来的，之后又在知乎上发现有人发帖求做法。我就抱着试一试的心态，用ggplot2尝试着做，没想到真的让我给弄出来了。</p>
<p>这里分享给大家我的做法和思路：</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(tidyverse)</div><div class="line"><span class="keyword">require</span>(grid)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Rmisc"</span>)</div></pre></td></tr></table></figure>
<h3 id="生成辅助数据："><a href="#生成辅助数据：" class="headerlink" title="生成辅助数据："></a>生成辅助数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">px1&lt;-seq(from=<span class="number">0</span>,to=<span class="number">10</span>,length=<span class="number">1000</span>)</div><div class="line">py1&lt;-sqrt(<span class="number">5</span>^<span class="number">2</span>-(px1-<span class="number">5</span>)^<span class="number">2</span>)</div><div class="line"></div><div class="line">Project1x&lt;-c(px1,rev(px1))</div><div class="line">Project1y&lt;-c(py1,-py1)</div></pre></td></tr></table></figure>
<hr>
<h4 id="圆环数据构造过程："><a href="#圆环数据构造过程：" class="headerlink" title="圆环数据构造过程："></a>圆环数据构造过程：</h4><p><strong>这里全部都是同一个套路的数据</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Project1&lt;-data.frame(lon=Project1x,lat=Project1y)</div><div class="line">Project1$group&lt;-<span class="string">"ProjectA"</span></div><div class="line">Project1$order&lt;-<span class="number">1</span>:nrow(Project1)</div><div class="line"></div><div class="line">Project2&lt;-data.frame(lon=Project1x+<span class="number">15</span>,lat=Project1y)</div><div class="line">Project2$group&lt;-<span class="string">"ProjectB"</span></div><div class="line">Project2$order&lt;-<span class="number">1</span>:nrow(Project2)</div><div class="line"></div><div class="line">Project3&lt;-data.frame(lon=Project1x+<span class="number">30</span>,lat=Project1y)</div><div class="line">Project3$group&lt;-<span class="string">"ProjectC"</span></div><div class="line">Project3$order&lt;-<span class="number">1</span>:nrow(Project3)</div><div class="line"></div><div class="line">Project4&lt;-data.frame(lon=Project1x+<span class="number">45</span>,lat=Project1y)</div><div class="line">Project4$group&lt;-<span class="string">"ProjectD"</span></div><div class="line">Project4$order&lt;-<span class="number">1</span>:nrow(Project4)</div><div class="line"></div><div class="line">Project5&lt;-data.frame(lon=Project1x+<span class="number">60</span>,lat=Project1y)</div><div class="line">Project5$group&lt;-<span class="string">"ProjectE"</span></div><div class="line">Project5$order&lt;-<span class="number">1</span>:nrow(Project5)</div><div class="line"></div><div class="line">Project&lt;-rbind(Project1,Project2,Project3,Project4,Project5)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(Project)+geom_path(aes(lon,lat,group=group))</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/five.jpg" width="632.6" height="130.8" alt="five" align="center"><br></div>


<h4 id="多边形数据构造过程："><a href="#多边形数据构造过程：" class="headerlink" title="多边形数据构造过程："></a>多边形数据构造过程：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">Proj1&lt;-Project1[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%filter(lat&lt;=-<span class="number">4</span>)</div><div class="line">Proj1[nrow(Proj1)+<span class="number">1</span>,]&lt;-c(<span class="number">8</span>,-<span class="number">4</span>)</div><div class="line">Proj1$group&lt;-<span class="string">"ProjA"</span></div><div class="line">Proj1$order&lt;-<span class="number">1</span>:nrow(Proj1)</div><div class="line"></div><div class="line">Proj2&lt;-Project2[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%filter(lat&lt;=-<span class="number">3</span>)</div><div class="line">Proj2[nrow(Proj2)+<span class="number">1</span>,]&lt;-c(<span class="number">24</span>,-<span class="number">3</span>)</div><div class="line">Proj2$group&lt;-<span class="string">"ProjB"</span></div><div class="line">Proj2$order&lt;-<span class="number">1</span>:nrow(Proj2)</div><div class="line"></div><div class="line">Proj3&lt;-Project3[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%filter(lat&lt;=<span class="number">0</span>)</div><div class="line">Proj3[nrow(Proj3)+<span class="number">1</span>,]&lt;-c(<span class="number">40</span>,<span class="number">0</span>)</div><div class="line">Proj3$group&lt;-<span class="string">"ProjC"</span></div><div class="line">Proj3$order&lt;-<span class="number">1</span>:nrow(Proj3)</div><div class="line"></div><div class="line">Proj4&lt;-Project4[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%filter(lat&lt;=<span class="number">3</span>)</div><div class="line">Proj4$group&lt;-<span class="string">"ProjD"</span></div><div class="line">Proj4$order&lt;-<span class="number">1</span>:nrow(Proj4)</div><div class="line"></div><div class="line">Proj5&lt;-Project5[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%filter(lat&lt;=<span class="number">4</span>)</div><div class="line">Proj5$group&lt;-<span class="string">"ProjE"</span></div><div class="line">Proj5$order&lt;-<span class="number">1</span>:nrow(Proj5)</div><div class="line"></div><div class="line">Projdata&lt;-rbind(Proj1,Proj2,Proj3,Proj4,Proj5)</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/six.jpg" width="635.8" height="135.5" alt="six" align="center"><br></div>

<h3 id="可视化图形："><a href="#可视化图形：" class="headerlink" title="可视化图形："></a>可视化图形：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">windowsFonts(myFont=windowsFont(<span class="string">"msyh.ttc"</span>))</div><div class="line">labeldata&lt;-data.frame(x=seq(from=<span class="number">5</span>,to=<span class="number">65</span>,length=<span class="number">5</span>),y=c(-<span class="number">4</span>,-<span class="number">3</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>),label=sprintf(<span class="string">"%2d%%"</span>,c(<span class="number">10</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">80</span>,<span class="number">90</span>)))</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot()+</div><div class="line">geom_polygon(data=Projdata,aes(x=lon,y=lat,group=group),fill=<span class="string">"#92D24F"</span>,col=<span class="literal">NA</span>)+</div><div class="line">geom_path(data=Project,aes(x=lon,y=lat,group=group),col=<span class="string">"black"</span>,size=<span class="number">1.2</span>)+</div><div class="line">geom_text(data=labeldata,aes(x=x,y=y+<span class="number">1</span>,label=label),hjust=<span class="number">.5</span>)+</div><div class="line">scale_x_continuous(breaks=labeldata$x,labels=paste0(<span class="string">"Project"</span>,LETTERS[<span class="number">1</span>:<span class="number">5</span>]))+</div><div class="line">ylim(-<span class="number">5.5</span>,<span class="number">6</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">panel.grid=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text.y=element_blank(),</div><div class="line">plot.margin = unit(c(<span class="number">.2</span>,<span class="number">.2</span>,<span class="number">1</span>,<span class="number">.2</span>), <span class="string">"cm"</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/one.png" width="660" height="280" alt="one" align="center"><br></div>


<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot()+</div><div class="line">geom_polygon(data=Projdata,aes(x=lon,y=lat,group=group),fill=<span class="string">"#FFC000"</span>,col=<span class="literal">NA</span>)+</div><div class="line">geom_path(data=Project,aes(x=lon,y=lat,group=group),col=<span class="string">"black"</span>,size=<span class="number">1.2</span>)+</div><div class="line">geom_text(data=labeldata,aes(x=x,y=y+<span class="number">1</span>,label=label),hjust=<span class="number">.5</span>)+</div><div class="line">scale_x_continuous(breaks=labeldata$x,labels=paste0(<span class="string">"Project"</span>,LETTERS[<span class="number">1</span>:<span class="number">5</span>]))+</div><div class="line">ylim(-<span class="number">5.5</span>,<span class="number">6</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">panel.grid=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text.y=element_blank(),</div><div class="line">plot.margin = unit(c(<span class="number">.2</span>,<span class="number">.2</span>,<span class="number">1</span>,<span class="number">.2</span>), <span class="string">"cm"</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/two.png" width="600" height="270" alt="two" align="center"><br></div>



<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">grid.newpage()</div><div class="line">pushViewport(viewport(layout=grid.layout(<span class="number">2</span>,<span class="number">2</span>)))</div><div class="line">vplayout &lt;- <span class="keyword">function</span>(x,y)&#123;viewport(layout.pos.row = x, layout.pos.col = y)&#125;</div><div class="line">print(p1,vp=vplayout(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>))</div><div class="line">print(p2,vp=vplayout(<span class="number">2</span>,<span class="number">1</span>:<span class="number">2</span>))</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/three.png" width="681.6" height="323.6" alt="three" align="center"><br></div>



<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(gridExtra)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lattice"</span>)</div><div class="line">multiplot(p1,p2,layout=matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>),nrow=<span class="number">2</span>,byrow=<span class="literal">TRUE</span>))</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqlznmmja.bkt.clouddn.com/four.png" width="700" height="280" alt="four" align="center"><br></div>

<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 信息图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[北京历史天气emoji表情包可视化]]></title>
      <url>/2017/05/27/%E5%8C%97%E4%BA%AC%E5%8E%86%E5%8F%B2%E5%A4%A9%E6%B0%94emoji%E8%A1%A8%E6%83%85%E5%8C%85%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>最近在网络上看到一个R圈大神开发的关于emoji表情包，可以将表情装入ggplot2的aes（）函数美学映射内。</p>
<p>感觉这是一个很好的创意，我学着它的路子，抓取了北京历史天气数据，用该不同表情还原了一年中的不同天气。</p>
<a id="more"></a>
<h3 id="数据获取："><a href="#数据获取：" class="headerlink" title="数据获取："></a>数据获取：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(RCurl)</div><div class="line"><span class="keyword">library</span>(XML)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(tidyr)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(ggimage)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(lubridate)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://lishi.tianqi.com/beijing/index.html"</span></div><div class="line">myheader &lt;-c(<span class="string">"User-Agent"</span>=<span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>)</div><div class="line">webpage&lt;-getURL(url,httpheader=myheader)</div><div class="line">mymonthlink&lt;-getHTMLLinks(url,externalOnly=<span class="literal">TRUE</span>)%&gt;%grep(<span class="string">".*?2016\\d&#123;2&#125;.html"</span>,.,value=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p>以下是最初想用的办法解决数据清洗问题，但是结果失败了，于是又转回传统的路子。</p>
</blockquote>
<h4 id="失败的探索："><a href="#失败的探索：" class="headerlink" title="失败的探索："></a>失败的探索：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">####</span></div><div class="line"><span class="comment">#page1&lt;-getURL(mymonthlink[2],.encoding="gbk")</span></div><div class="line"><span class="comment">#rd&lt;-iconv(page1,"gbk","utf-8")</span></div><div class="line"><span class="comment">#rdhtml&lt;-htmlParse(rd,encoding="UTF-8")</span></div><div class="line"><span class="comment">#cesh&lt;-readHTMLList(rdhtml,trim=TRUE,elFun=xmlValue)%&gt;%grep("\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;",.,value=T)</span></div><div class="line"><span class="comment">#cesh&lt;-cesh%&gt;%sub("([a-z])(\\()(\\\)","",.)</span></div><div class="line"><span class="comment">#cesh&lt;-cesh1%&gt;%str_split(',')%&gt;%plyr::ldply(.fun=NULL)</span></div><div class="line"><span class="comment">#cesh$V1&lt;-cesh$V1%&gt;%sub("[a-z]\\(","",.)%&gt;%as.Date()</span></div><div class="line"><span class="comment">#names(cesh)&lt;-c("date","high","low","state","wind","index")</span></div><div class="line"><span class="comment">####</span></div><div class="line"><span class="comment">#以上代码写了一半写不下去了，我有rvest为啥要用RCurl，肯定自己脑抽筋了！</span></div></pre></td></tr></table></figure>
<h4 id="用rvest包解决了问题："><a href="#用rvest包解决了问题：" class="headerlink" title="用rvest包解决了问题："></a>用rvest包解决了问题：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mynewdata&lt;-c()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> mymonthlink)&#123;</div><div class="line">mymonthdata&lt;-read_html(i,encoding=<span class="string">"gbk"</span>)%&gt;%html_nodes(<span class="string">"div.tqtongji2&gt;ul"</span>)%&gt;%html_text(trim=<span class="literal">FALSE</span>)%&gt;%str_trim(.,side=<span class="string">"right"</span>)%&gt;%.[-<span class="number">1</span>]</div><div class="line">mynewdata&lt;-c(mynewdata,mymonthdata)</div><div class="line">&#125;</div><div class="line"></div><div class="line">mynewdata1&lt;-mynewdata</div><div class="line">mynewdata&lt;-mynewdata1%&gt;%gsub(<span class="string">"\t\t\t|\t|\r\n"</span>,<span class="string">""</span>,.)%&gt;%str_split(<span class="string">'   '</span>)%&gt;%plyr::ldply(.fun=<span class="literal">NULL</span>)%&gt;%.[,-<span class="number">2</span>]</div><div class="line">names(mynewdata)&lt;-c(<span class="string">"date"</span>,<span class="string">"high"</span>,<span class="string">"low"</span>,<span class="string">"state"</span>,<span class="string">"wind"</span>,<span class="string">"index"</span>)</div><div class="line">mynewdata$date&lt;-as.Date(mynewdata$date)</div><div class="line">mynewdata$high&lt;-as.numeric(mynewdata$high)</div><div class="line">mynewdata$low&lt;-as.numeric(mynewdata$low)</div></pre></td></tr></table></figure>
<h3 id="数据清洗与预处理："><a href="#数据清洗与预处理：" class="headerlink" title="数据清洗与预处理："></a>数据清洗与预处理：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#cleanning the dirty data.  </span></div><div class="line">unique(mynewdata$state)  </div><div class="line">happy&lt;-c(<span class="string">"晴"</span>,<span class="string">"阵雨~晴"</span>,<span class="string">"多云转晴"</span>,<span class="string">"多云~晴"</span>,<span class="string">"雷阵雨~晴"</span>,<span class="string">"阴~晴"</span>,<span class="string">"霾~晴"</span>,<span class="string">"浮尘~晴"</span>)  </div><div class="line">depressed&lt;-c(<span class="string">"霾"</span>,<span class="string">"阴"</span>,<span class="string">"多云"</span>,<span class="string">"晴~多云"</span>,<span class="string">"霾~多云"</span>,<span class="string">"晴~霾"</span>,<span class="string">"多云~霾"</span>,<span class="string">"阵雨转多云"</span>,<span class="string">"多云转阴"</span>,<span class="string">"阴~多云"</span>,<span class="string">"多云~阴"</span>,<span class="string">"晴~阴"</span>,<span class="string">"阵雨~多云"</span>,<span class="string">"小雨~多云"</span>,<span class="string">"小雨~阴"</span>,<span class="string">"霾~雾"</span>,<span class="string">"小雪~阴"</span>,<span class="string">"阴~小雪"</span>,<span class="string">"小雨~雨夹雪"</span>)  </div><div class="line">angry&lt;-c(<span class="string">"小雨"</span>,<span class="string">"雨夹雪"</span>,<span class="string">"小雪"</span>,<span class="string">"雷阵雨"</span>,<span class="string">"阵雨"</span>,<span class="string">"中雨"</span>,<span class="string">"小到中雨"</span>,<span class="string">"雷阵雨~阴"</span>,<span class="string">"多云~雷阵雨"</span>,<span class="string">"阴~雷阵雨"</span>,<span class="string">"霾~雷阵雨"</span>,<span class="string">"多云~阵雨"</span>,<span class="string">"晴~阵雨"</span>,<span class="string">"阴~小雨"</span>,<span class="string">"阵雨~小雨"</span>)  </div><div class="line">Terrified&lt;-c(<span class="string">"中到大雨"</span>,<span class="string">"暴雨"</span>,<span class="string">"雷阵雨~中到大雨"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#create a new factor[categorical] varibale.</span></div><div class="line">mynewdata$mode&lt;-<span class="literal">NULL</span></div><div class="line">mynewdata$mood&lt;-ifelse(mynewdata$state%<span class="keyword">in</span>% happy,<span class="string">"happy"</span>,ifelse(mynewdata$state%<span class="keyword">in</span>% depressed,<span class="string">"depressed"</span>,ifelse(mynewdata$state%<span class="keyword">in</span>% angry,<span class="string">"angry"</span>,<span class="string">"Terrified"</span>)))    </div><div class="line">mynewdata &lt;- within(mynewdata,&#123;</div><div class="line">  mood_code &lt;- <span class="literal">NA</span></div><div class="line">  mood_code[mood==<span class="string">"happy"</span>]&lt;-<span class="string">"1f604"</span></div><div class="line">  mood_code[mood==<span class="string">"depressed"</span>]&lt;-<span class="string">"1f633"</span></div><div class="line">  mood_code[mood==<span class="string">"angry"</span>]&lt;-<span class="string">"1f62d"</span></div><div class="line">  mood_code[mood==<span class="string">"Terrified"</span>]&lt;-<span class="string">"1f621"</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#tidy the time/date varibales.</span></div><div class="line">mynewdata$month&lt;-as.numeric(as.POSIXlt(mynewdata$date)$mon+<span class="number">1</span>)</div><div class="line">mynewdata$monthf&lt;-factor(mynewdata$month,levels=as.character(<span class="number">1</span>:<span class="number">12</span>),labels=c(<span class="string">"Jan"</span>,<span class="string">"Feb"</span>,<span class="string">"Mar"</span>,<span class="string">"Apr"</span>,<span class="string">"May"</span>,<span class="string">"Jun"</span>,<span class="string">"Jul"</span>,<span class="string">"Aug"</span>,<span class="string">"Sep"</span>,<span class="string">"Oct"</span>,<span class="string">"Nov"</span>,<span class="string">"Dec"</span>),ordered=<span class="literal">TRUE</span>)    </div><div class="line">mynewdata$weekday&lt;-as.POSIXlt(mynewdata$date)$wday</div><div class="line">mynewdata$weekdayf&lt;-factor(mynewdata$weekday,levels=rev(<span class="number">0</span>:<span class="number">6</span>),labels=rev(c(<span class="string">"Sun"</span>,<span class="string">"Mon"</span>,<span class="string">"Tue"</span>,<span class="string">"Wed"</span>,<span class="string">"Thu"</span>,<span class="string">"Fri"</span>,<span class="string">"Sat"</span>)),ordered=<span class="literal">TRUE</span>)</div><div class="line">mynewdata$week &lt;- as.numeric(format(mynewdata$date,<span class="string">"%W"</span>))</div><div class="line">mynewdata&lt;-ddply(mynewdata,.(monthf),transform,monthweek=<span class="number">1</span>+week-min(week))</div><div class="line">mynewdata$day&lt;-day(mynewdata$date)</div></pre></td></tr></table></figure>
<h3 id="可视化图形："><a href="#可视化图形：" class="headerlink" title="可视化图形："></a>可视化图形：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/数据可视化/R/R语言学习笔记/可视化/ggplot2/商务图表"</span>)</div><div class="line">write.table(mynewdata,<span class="string">"historyweather.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">mynewdata&lt;-read.csv(<span class="string">"historyweather.csv"</span>,stringsAsFactors = <span class="literal">FALSE</span>,check.names = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mytheme&lt;-theme(</div><div class="line">         rect=element_blank(),</div><div class="line">         axis.ticks=element_blank(),</div><div class="line">         text=element_text(face=<span class="string">"plain"</span>,lineheight=<span class="number">0.9</span>,hjust=<span class="number">0.5</span>,vjust=<span class="number">0.5</span>,size=<span class="number">15</span>),</div><div class="line">         title=element_text(face=<span class="string">"plain"</span>,lineheight=<span class="number">0.9</span>,hjust=<span class="number">0</span>,vjust=<span class="number">0.5</span>,size=<span class="number">30</span>),</div><div class="line">         axis.title=element_blank(), </div><div class="line">         strip.text=element_text(size = rel(<span class="number">0.8</span>)), </div><div class="line">         plot.margin = unit(c(<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">2</span>),<span class="string">"lines"</span>)</div><div class="line">         )</div></pre></td></tr></table></figure>
<h4 id="日历emoji表情天气可视化"><a href="#日历emoji表情天气可视化" class="headerlink" title="日历emoji表情天气可视化"></a>日历emoji表情天气可视化</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">CairoPNG(<span class="string">"emoji1.png"</span>,<span class="number">1000</span>,<span class="number">870</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(mynewdata,aes(weekdayf,monthweek,fill=high))+</div><div class="line">geom_tile(colour=<span class="string">'white'</span>)+</div><div class="line">scale_fill_gradient(low=<span class="literal">NA</span>, high=<span class="literal">NA</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">ggtitle(<span class="string">"The emoji-weather visualization of beijing in 2016"</span>)+</div><div class="line">scale_y_reverse(breaks=seq(from=<span class="number">6</span>,to=<span class="number">0</span>,by=-<span class="number">1</span>))+</div><div class="line">ggimage::geom_emoji(aes(image=mood_code),size=<span class="number">.1</span>)+</div><div class="line">facet_wrap(~monthf ,nrow=<span class="number">3</span>)+</div><div class="line">mytheme</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oql9c4pn6.bkt.clouddn.com/emoji1.png" width="750" height="652.5" alt="emoji1" align="center"><br></div>


<h4 id="环形日历emoji表情天气可视化"><a href="#环形日历emoji表情天气可视化" class="headerlink" title="环形日历emoji表情天气可视化"></a>环形日历emoji表情天气可视化</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mytheme2&lt;-theme(</div><div class="line">         rect=element_blank(),</div><div class="line">         axis.ticks=element_blank(),</div><div class="line">         text=element_text(face=<span class="string">"plain"</span>,lineheight=<span class="number">0.9</span>,hjust=<span class="number">0.5</span>,vjust=<span class="number">0.5</span>,size=<span class="number">15</span>),</div><div class="line">         title=element_text(face=<span class="string">"plain"</span>,lineheight=<span class="number">0.9</span>,hjust=<span class="number">0</span>,vjust=<span class="number">0.5</span>,size=<span class="number">30</span>),</div><div class="line">         axis.title=element_blank(), </div><div class="line">         strip.text=element_text(size = rel(<span class="number">0.8</span>)), </div><div class="line">         plot.margin = unit(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="string">"lines"</span>)</div><div class="line">         )</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">CairoPNG(<span class="string">"emoji2.png"</span>,<span class="number">1200</span>,<span class="number">1200</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(mynewdata,aes(x=factor(day),y=monthf,fill=high))+</div><div class="line">geom_tile(colour=<span class="string">'white'</span>)+</div><div class="line">expand_limits(y =c(-<span class="number">12</span>,<span class="number">12</span>))+</div><div class="line">scale_x_discrete(position=c(<span class="string">"bottom"</span>))+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>)+</div><div class="line">scale_fill_gradient(low=<span class="literal">NA</span>, high=<span class="literal">NA</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">ggimage::geom_emoji(aes(image=mood_code),size=<span class="number">.015</span>)+</div><div class="line">geom_image(aes(x=<span class="number">0</span>,y=-<span class="number">12</span>),image =<span class="string">"weather.png"</span>, size =<span class="number">.15</span>)+</div><div class="line">ggtitle(<span class="string">"The emoji-weather visualization of beijing in 2016"</span>)+</div><div class="line">mytheme2</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oql9c4pn6.bkt.clouddn.com/emoji2.png" width="650" height="650" alt="emoji2" align="center"><br></div>


<p>and this one is a small-background in the second photo  which i search on the web.<br></p>
<div align="center"><br><img src="http://oql9c4pn6.bkt.clouddn.com/weather.png" width="350" height="350" alt="weather" align="center"><br></div>

<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com<br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/resume.png" alt="resume"></p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> emoji </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[仿ECO事件圆环图]]></title>
      <url>/2017/05/26/%E4%BB%BFECO%E4%BA%8B%E4%BB%B6%E5%9C%86%E7%8E%AF%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>该案例取自刘万祥老师的博客——EexclPro。最初使用Excel完成，相当复杂，我自己是没有那个水平了，所以本例使用R语言完成。</p>
<p>还原度相对来说比较高，但是该图实用性确实不很高，经济学人也只是偶尔亮出来装点门面而已。</p>
<a id="more"></a>
<h3 id="加载包："><a href="#加载包：" class="headerlink" title="加载包："></a>加载包：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"ggplot2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"Cairo"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"ggmap"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"xlsx"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"lubridate"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"reshape2"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"showtext"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"grid"</span>)</div><div class="line"><span class="keyword">library</span>(<span class="string">"plyr"</span>)</div></pre></td></tr></table></figure>
<h3 id="案例图"><a href="#案例图" class="headerlink" title="案例图:"></a>案例图:</h3><p><strong>经济学人版</strong></p>
<p><img src="http://oqjxwq9ix.bkt.clouddn.com/one.png" alt="one"></p>
<p><strong>刘老师版</strong></p>
<p><img src="http://oqjxwq9ix.bkt.clouddn.com/two.png" alt="two"></p>
<blockquote>
<p>关键步骤：</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/微信公众号/公众号——数据小魔方/2017年4月/20170403"</span>)</div><div class="line">ECOdata&lt;-read.xlsx(<span class="string">"ECOCircle.xlsx"</span>,sheetName=<span class="string">"Sheet1"</span>,header=<span class="literal">T</span>,encoding=<span class="string">"UTF-8"</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">f&lt;-c(<span class="number">99</span>,<span class="number">91</span>,<span class="number">84</span>,<span class="number">77</span>)</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(ECOdata))&#123;</div><div class="line">m&lt;-sum(ECOdata[i,<span class="number">3</span>:<span class="number">6</span>]==<span class="number">1</span>)</div><div class="line">h&lt;-grep(<span class="number">1</span>,ECOdata[i,<span class="number">3</span>:<span class="number">6</span>])</div><div class="line">ECOdata[i,h+<span class="number">2</span>]&lt;-f[<span class="number">1</span>:m]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建时间轴："><a href="#创建时间轴：" class="headerlink" title="创建时间轴："></a>创建时间轴：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">newdate&lt;-seq(from=as.Date(<span class="string">"2014-01-01"</span>),to=as.Date(<span class="string">"2014-12-31"</span>),by=<span class="string">"1 day"</span>)</div><div class="line">newmonth&lt;-month(newdate)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-data.frame(newdate,newmonth);mydata$ID&lt;-<span class="number">1</span>:nrow(mydata)</div><div class="line">mydata$Type&lt;-ifelse(mydata$newmonth%%<span class="number">2</span>==<span class="number">0</span>,<span class="string">"A"</span>,<span class="string">"B"</span>)</div><div class="line">mydata$Scale&lt;-<span class="number">100</span></div><div class="line">a&lt;-seq(from=<span class="number">90</span>,to=-<span class="number">90</span>,length=<span class="number">181</span>);b&lt;-seq(from=<span class="number">90</span>,to=-<span class="number">90</span>,length=<span class="number">184</span>)</div><div class="line">mydata$Circle&lt;-c(a,b)</div></pre></td></tr></table></figure>
<hr>
<h3 id="合并数据："><a href="#合并数据：" class="headerlink" title="合并数据："></a>合并数据：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mynewdata&lt;-merge(mydata,ECOdata,by.x=<span class="string">"newdate"</span>,by.y=<span class="string">"date"</span>,all.x=<span class="literal">T</span>)</div><div class="line">mynewdataone&lt;-melt(na.omit(mynewdata), id.vars =names(mynewdata)[<span class="number">1</span>:<span class="number">7</span>],variable.name = <span class="string">"Class"</span>, value.name = <span class="string">"Fact"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">circlemonth&lt;-seq(<span class="number">15</span>,<span class="number">345</span>,length=<span class="number">12</span>)</div><div class="line">circlebj&lt;-rep(c(-circlemonth[<span class="number">1</span>:<span class="number">3</span>],rev(circlemonth[<span class="number">1</span>:<span class="number">3</span>])),<span class="number">2</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mynewdataoneA&lt;-mynewdataone[mynewdataone$Fact!=<span class="number">0</span>&amp;mynewdataone$ID&lt;<span class="number">180</span>,]</div><div class="line">mynewdataoneA&lt;-mynewdataoneA[!duplicated(mynewdataoneA[,<span class="number">1</span>]),]</div><div class="line">mynewdataoneB&lt;-mynewdataone[mynewdataone$Fact!=<span class="number">0</span>&amp;mynewdataone$ID&gt;<span class="number">180</span>,]</div><div class="line">mynewdataoneB&lt;-mynewdataoneB[!duplicated(mynewdataoneB[,<span class="number">1</span>]),]</div></pre></td></tr></table></figure>
<hr>
<h3 id="可视化图形："><a href="#可视化图形：" class="headerlink" title="可视化图形："></a>可视化图形：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyhl.ttc"</span>)</div><div class="line">CairoPNG(file=<span class="string">"ECOCircle.png"</span>,width=<span class="number">1000</span>,height=<span class="number">1050</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata[mydata$Type==<span class="string">"A"</span>,],aes(x=ID,y=Scale),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#ECEDD1"</span>,col=<span class="string">"#ECEDD1"</span>)+</div><div class="line">geom_bar(data=mydata[mydata$Type==<span class="string">"B"</span>,],aes(x=ID,y=Scale),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#DFE0B1"</span>,col=<span class="string">"#DFE0B1"</span>)+</div><div class="line">geom_point(data=mynewdataone[mynewdataone$Fact!=<span class="number">0</span>,],aes(x=ID,y=Fact,fill=Class),size=<span class="number">5</span>,shape=<span class="number">21</span>,col=<span class="string">"white"</span>)+</div><div class="line">ylim(-<span class="number">90</span>,<span class="number">130</span>)+</div><div class="line">scale_fill_manual(limits=c(<span class="string">"Legislative"</span>,<span class="string">"Referendum"</span>,<span class="string">"President"</span>,<span class="string">"Primary"</span>),values=c(<span class="string">"#93A299"</span>,<span class="string">"#CF543F"</span>,<span class="string">"#B5AE53"</span>,<span class="string">"#86825B"</span>),labels=c(<span class="string">"立法"</span>,<span class="string">"公投"</span>,<span class="string">"总统"</span>,<span class="string">"初选"</span>))+</div><div class="line">geom_text(data=mynewdataoneA,aes(x=ID,y=max(mynewdataoneA$Fact)+<span class="number">20</span>,label=State,angle=Circle),family=<span class="string">"sans"</span>,size=<span class="number">5</span>,hjust=<span class="number">0</span>)+</div><div class="line">geom_text(data=mynewdataoneB,aes(x=ID,y=max(mynewdataoneB$Fact)+<span class="number">20</span>,label=State,angle=Circle),family=<span class="string">"sans"</span>,size=<span class="number">5</span>,hjust=<span class="number">1</span>)+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=circlemonth,y=<span class="number">30</span>,label=paste0(<span class="number">1</span>:<span class="number">12</span>,<span class="string">"月"</span>),angle=circlebj),family=<span class="string">"myfont"</span>,size=<span class="number">7</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">.5</span>)+</div><div class="line">guides(colour=guide_legend(title=<span class="literal">NULL</span>))+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>)+</div><div class="line">labs(title=<span class="string">"2014年全球选举事件图"</span>,subtitle=<span class="string">"这是一幅用心良苦的好图"</span>,caption=<span class="string">"Source：Economics\nMake:EasyCharts"</span>,x=<span class="string">""</span>,y=<span class="string">""</span>,fill=<span class="string">""</span>)+</div><div class="line">theme(</div><div class="line">text=element_text(family=<span class="string">"myfont"</span>),</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.ticks=element_blank(),</div><div class="line">panel.background=element_blank(),</div><div class="line">panel.grid=element_blank(),</div><div class="line">panel.border=element_blank(),</div><div class="line">legend.position=c(<span class="number">0.03</span>,<span class="number">0.92</span>),</div><div class="line">legend.background=element_blank(),</div><div class="line">legend.key=element_blank(),</div><div class="line">legend.key.size=unit(<span class="number">1.55</span>,<span class="string">'cm'</span>),</div><div class="line">legend.key.height=unit(<span class="number">1.2</span>,<span class="string">'cm'</span>),</div><div class="line">legend.text=element_text(size=<span class="number">20</span>,hjust=<span class="number">3</span>,vjust=<span class="number">3</span>,face=<span class="string">"bold"</span>),</div><div class="line">plot.background=element_blank(),</div><div class="line">plot.title=element_text(size=<span class="number">50</span>),</div><div class="line">plot.subtitle=element_text(size=<span class="number">35</span>),</div><div class="line">plot.caption=element_text(size=<span class="number">25</span>,hjust=<span class="number">0</span>),</div><div class="line">plot.margin=unit(c(<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>),<span class="string">"lines"</span>),</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjxwq9ix.bkt.clouddn.com/three.png" alt="three"></p>
<p><img src="http://oqjxwq9ix.bkt.clouddn.com/four.png" alt="four"></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国经管类核心期刊地域分布数据可视化]]></title>
      <url>/2017/05/26/%E4%B8%AD%E5%9B%BD%E7%BB%8F%E7%AE%A1%E7%B1%BB%E6%A0%B8%E5%BF%83%E6%9C%9F%E5%88%8A%E5%9C%B0%E5%9F%9F%E5%88%86%E5%B8%83%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>最近在看文献，看的有些烦躁了，想找点儿数据练练手，刚好看到百度百科有这个关于经管类核心期刊的汇总表，顺手就抓过来练习练习。</p>
<p>本来百度百度中核心期刊栏目的列表里，关于经济学72中核心期刊的详细地址不全，我申请了编辑字条，编完一直在审核，想想算了，根据百度百科的审核流程和效率，估计不知道要申到猴年马月了，自己搜了确实的地址信息。</p>
<a id="more"></a>
<p><strong>以下数数据的爬取、清洗和可视化过程：</strong></p>
<hr>
<h3 id="数据抓取："><a href="#数据抓取：" class="headerlink" title="数据抓取："></a>数据抓取：</h3><p>加载包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(rjson)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(maptools)</div></pre></td></tr></table></figure></p>
<p>表格爬取（这里用revst来爬，效率特别高）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://baike.baidu.com/link?url=VRCRtZ-GR4Lv483tBm2d6IQ3mOjTlcc1z80EBBzFwCGAlDT16NvxH_yqshJdSD95_AEEu_Hzg4uE3ok3bDIohkkl9sTwpE9cVJcRP7RpAmVBIeEmwZ4gdXNetbA8lvmU"</span></div><div class="line">info&lt;-read_html(url,encoding=<span class="string">"UTF-8"</span>)%&gt;%html_nodes(<span class="string">"table"</span>)%&gt;%html_table(header=<span class="literal">TRUE</span>,fill=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<hr>
<h3 id="数据清洗："><a href="#数据清洗：" class="headerlink" title="数据清洗："></a>数据清洗：</h3><p>表格的提取过程：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">economic&lt;-info[[<span class="number">1</span>]][,-<span class="number">1</span>];names(economic)&lt;-c(<span class="string">"Name"</span>,<span class="string">"Address"</span>);economic$Class&lt;-<span class="string">"C"</span></div><div class="line">mangement&lt;-info[[<span class="number">2</span>]][,-<span class="number">1</span>];names(mangement)&lt;-c(<span class="string">"Name"</span>,<span class="string">"Address"</span>);mangement$Class&lt;-<span class="string">"M"</span></div></pre></td></tr></table></figure></p>
<p>打开数据编辑器，自己把缺失的地址补全<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fix(economic)</div></pre></td></tr></table></figure></p>
<p>剔除掉地址中的哪些邮箱类信息（可能会干扰经纬度抓取的准确性）<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">myfulldata&lt;-rbind(economic,mangement)</div><div class="line">myfulldata$Address&lt;-sub(<span class="string">"\\（\\d.+\\）"</span>,<span class="string">""</span>,myfulldata$Address)</div><div class="line">myfulldata$Address&lt;-sub(<span class="string">"\\(\\d.+\\)"</span>,<span class="string">""</span>,myfulldata$Address)</div><div class="line">myfulldata$Address&lt;-sub(<span class="string">"\\d.+\\信箱"</span>,<span class="string">""</span>,myfulldata$Address)</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="抓取经纬度数据"><a href="#抓取经纬度数据" class="headerlink" title="抓取经纬度数据"></a>抓取经纬度数据</h3><p>使用过百度地图的API匹配经纬度（各位小伙伴儿高抬贵手，自己去申请个API把，不要老拿我的API玩耍，这个有限额，用完了就不能用了）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">baidu_lng &lt;- c()</div><div class="line">baidu_lat &lt;- c()</div><div class="line">ak&lt;-<span class="string">"X8zlxPUdSe2weshrZ1WqnWxb43cfBI2N"</span></div><div class="line">address&lt;-myfulldata$Address</div><div class="line"><span class="keyword">for</span>(location <span class="keyword">in</span> address)&#123;</div><div class="line">url&lt;-paste(<span class="string">"http://api.map.baidu.com/geocoder/v2/?ak="</span>,ak,<span class="string">"&amp;callback=renderOption&amp;output=json&amp;address="</span>,location,sep=<span class="string">""</span>)</div><div class="line">url_string &lt;- URLencode(url)                  </div><div class="line">json&lt;- readLines(url_string, warn=<span class="literal">F</span>)         </div><div class="line">geo &lt;- fromJSON(substr(json,regexpr(<span class="string">"\\("</span>,json)+<span class="number">1</span>,nchar(json)-<span class="number">1</span>))  </div><div class="line">lng&lt;-geo$result$location$lng</div><div class="line">lat&lt;-geo$result$location$lat                 </div><div class="line">baidu_lng&lt;-c(baidu_lng,lng)                 </div><div class="line">baidu_lat&lt;-c(baidu_lat,lat)</div><div class="line">&#125;</div><div class="line">result&lt;-data.frame(address=address,longitude=baidu_lng,latitude=baidu_lat,stringsAsFactors=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>合并经纬度数据：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mynewfulldata&lt;-merge(myfulldata,result,by.x=<span class="string">"Address"</span>,by.y=<span class="string">"address"</span>,all.x=<span class="literal">T</span>)</div><div class="line">mynewfulldata&lt;-unique(mynewfulldata)</div><div class="line">mynewfulldata&lt;-mynewfulldata[,c(<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>)];names(mynewfulldata)[<span class="number">3</span>:<span class="number">4</span>]&lt;-c(<span class="string">"lon"</span>,<span class="string">"lat"</span>)</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="地域可视化："><a href="#地域可视化：" class="headerlink" title="地域可视化："></a>地域可视化：</h3><p>导入地图数据：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">china_map &lt;- readShapePoly(<span class="string">"D:/R/rstudy/CHN_adm/bou2_4p.shp"</span>)       </div><div class="line">china_map1 &lt;- fortify(china_map)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>接下来我们通过几张图表来展示社科经管类核心期刊的地域分布、城市分布情况。</p>
</blockquote>
<h4 id="经管类总体数量分布："><a href="#经管类总体数量分布：" class="headerlink" title="经管类总体数量分布："></a>经管类总体数量分布：</h4><p><strong>提取出所有的地址中地级市数量：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">diyufenbujing&lt;-myfulldata$Address</div><div class="line">diyufenbu&lt;-sub(<span class="string">"中国"</span>,<span class="string">""</span>,diyufenbujing)</div><div class="line">part1&lt;-grep(<span class="string">"市"</span>,diyufenbu,value=<span class="literal">T</span>)</div><div class="line">part1&lt;-sub(<span class="string">"(安徽|四川省|湖南省)"</span>,<span class="string">""</span>,part1)</div><div class="line">order&lt;-gregexpr(<span class="string">"市"</span>,part1)</div><div class="line">city&lt;-c()</div><div class="line"><span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:length(part1))&#123;</div><div class="line">city&lt;-substring(part1,<span class="number">0</span>,order[[j]][<span class="number">1</span>])</div><div class="line">&#125;</div><div class="line">part2&lt;-grep(<span class="string">"市"</span>,diyufenbu,value=<span class="literal">T</span>,invert =<span class="literal">T</span>)</div><div class="line">part2&lt;-sub(<span class="string">"四川"</span>,<span class="string">""</span>,part2)</div><div class="line">cityvalue2&lt;-paste0(substring(part2,<span class="number">1</span>,<span class="number">2</span>),<span class="string">"市"</span>)</div><div class="line">cityvalue&lt;-c(city,cityvalue2)%&gt;%count()%&gt;%arrange(-freq)</div></pre></td></tr></table></figure>
<p><strong>所有核心期刊的城市分布情况</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"hexinqikanall.png"</span>,width=<span class="number">800</span>,height=<span class="number">600</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(cityvalue,aes(reorder(x,freq),freq))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">coord_flip()+</div><div class="line">labs(title=<span class="string">"经管类核心期刊数量城市分布"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+</div><div class="line">geom_text(aes(label=freq),hjust=<span class="number">1.2</span>,colour=<span class="string">"white"</span>,size=<span class="number">8</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">15</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">10</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/hexinqikanall.png" alt="hexinqikanall"></p>
<h4 id="经济学核心期刊城市分布："><a href="#经济学核心期刊城市分布：" class="headerlink" title="经济学核心期刊城市分布："></a>经济学核心期刊城市分布：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">diyufenbujingji&lt;-myfulldata[which(myfulldata$Class==<span class="string">"C"</span>),]$Address</div><div class="line">diyufenbujingji&lt;-sub(<span class="string">"中国"</span>,<span class="string">""</span>,diyufenbujingji)</div><div class="line">part1&lt;-grep(<span class="string">"市"</span>,diyufenbujingji,value=<span class="literal">T</span>)</div><div class="line">part1&lt;-sub(<span class="string">"(河南省|湖南省)"</span>,<span class="string">""</span>,part1)</div><div class="line">order&lt;-gregexpr(<span class="string">"市"</span>,part1)</div><div class="line">city&lt;-c()</div><div class="line"><span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:length(part1))&#123;</div><div class="line">city&lt;-substring(part1,<span class="number">0</span>,order[[j]][<span class="number">1</span>])</div><div class="line">&#125;</div><div class="line">part2&lt;-grep(<span class="string">"市"</span>,diyufenbujingji,value=<span class="literal">T</span>,invert =<span class="literal">T</span>)</div><div class="line">cityvalue2&lt;-paste0(substring(part2,<span class="number">1</span>,<span class="number">2</span>),<span class="string">"市"</span>)</div><div class="line">cityvalue&lt;-c(city,cityvalue2)%&gt;%count()%&gt;%arrange(-freq)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"F:/微信公众号/公众号——数据小魔方/2017年3月/20170319"</span>)</div><div class="line">CairoPNG(file=<span class="string">"jingjixue1.png"</span>,width=<span class="number">900</span>,height=<span class="number">620</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(cityvalue,aes(reorder(x,freq),freq))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">coord_flip()+</div><div class="line">labs(title=<span class="string">"经济学核心期刊城市分布"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+</div><div class="line">geom_text(aes(label=freq),hjust=<span class="number">1</span>,colour=<span class="string">"white"</span>,size=<span class="number">7</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">15</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">10</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/jingjixue1.png" alt="jingjixue1"></p>
<h4 id="管理学核心期刊城市分布："><a href="#管理学核心期刊城市分布：" class="headerlink" title="管理学核心期刊城市分布："></a>管理学核心期刊城市分布：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">diyufenbujinggl&lt;-myfulldata[which(myfulldata$Class==<span class="string">"M"</span>),]$Address</div><div class="line">diyufenbujinggl&lt;-sub(<span class="string">"中国"</span>,<span class="string">""</span>,diyufenbujinggl)</div><div class="line">part1&lt;-grep(<span class="string">"市"</span>,diyufenbujinggl,value=<span class="literal">T</span>)</div><div class="line">part1&lt;-sub(<span class="string">"(安徽省|四川省)"</span>,<span class="string">""</span>,part1)</div><div class="line">order&lt;-gregexpr(<span class="string">"市"</span>,part1)</div><div class="line">city&lt;-c()</div><div class="line"><span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:length(part1))&#123;</div><div class="line">city&lt;-substring(part1,<span class="number">0</span>,order[[j]][<span class="number">1</span>])</div><div class="line">&#125;</div><div class="line">part2&lt;-grep(<span class="string">"市"</span>,diyufenbujinggl,value=<span class="literal">T</span>,invert =<span class="literal">T</span>)</div><div class="line">cityvalue2&lt;-paste0(substring(part2,<span class="number">1</span>,<span class="number">2</span>),<span class="string">"市"</span>)</div><div class="line">cityvalue2&lt;-c(city,cityvalue2)%&gt;%count()%&gt;%arrange(-freq)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"jingjixue2.png"</span>,width=<span class="number">800</span>,height=<span class="number">600</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(cityvalue2,aes(reorder(x,freq),freq))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">coord_flip()+</div><div class="line">labs(title=<span class="string">"管理学核心期刊数量城市分布"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+</div><div class="line">geom_text(aes(label=freq),hjust=<span class="number">2</span>,colour=<span class="string">"white"</span>,size=<span class="number">10</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">15</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">10</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/jingjixue2.png" alt="jingjixue2"></p>
<blockquote>
<p>下面我们通过几张数据地图来观察一下这些期刊在地图空间分布上的趋势。</p>
</blockquote>
<h4 id="经济学类核心期刊地域分布"><a href="#经济学类核心期刊地域分布" class="headerlink" title="经济学类核心期刊地域分布"></a>经济学类核心期刊地域分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mynewfulldata1&lt;-filter(mynewfulldata,Class==<span class="string">"C"</span>)</div><div class="line">CairoPNG(file=<span class="string">"hexinqikanC.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>,alpha=<span class="number">.4</span>)+</div><div class="line">geom_polygon(data=mynewfulldata,aes(x=lon,y=lat,fill = ..level..),stat=<span class="string">"density_2d"</span>,alpha=<span class="number">.8</span>,color=<span class="literal">NA</span>)+</div><div class="line">geom_point(data=mynewfulldata,aes(x=lon,y=lat),shape=<span class="number">21</span>,size=<span class="number">3</span>,fill=<span class="string">"orange"</span>,col=<span class="string">"white"</span>)+ </div><div class="line">scale_fill_gradient2(low=<span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">     guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">     labs(title=<span class="string">"经济学核心期刊地域分布密度图"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+   </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>),      </div><div class="line">          panel.grid=element_blank(),</div><div class="line">          panel.background=element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/hexinqikanC.png" alt="hexinqikanC"></p>
<h4 id="管理学核心期刊地域分布"><a href="#管理学核心期刊地域分布" class="headerlink" title="管理学核心期刊地域分布"></a>管理学核心期刊地域分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">mynewfulldata2&lt;-filter(mynewfulldata,Class==<span class="string">"M"</span>)</div><div class="line"></div><div class="line">CairoPNG(file=<span class="string">"hexinqikanM.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>,alpha=<span class="number">.4</span>)+</div><div class="line">geom_polygon(data=mynewfulldata2,aes(x=lon,y=lat,fill = ..level..),stat=<span class="string">"density_2d"</span>,alpha=<span class="number">.8</span>,color=<span class="literal">NA</span>)+</div><div class="line">geom_point(data=mynewfulldata2,aes(x=lon,y=lat),shape=<span class="number">21</span>,size=<span class="number">3</span>,fill=<span class="string">"#0C8DC4"</span>,col=<span class="string">"white"</span>)+ </div><div class="line">scale_fill_gradient2(low=<span class="string">"white"</span>,mid=<span class="string">"yellow"</span>, high = <span class="string">"red"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">     guides(fill=<span class="literal">FALSE</span>)+</div><div class="line">     labs(title=<span class="string">"管理学核心期刊地域分布密度图"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+   </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>),      </div><div class="line">          panel.grid=element_blank(),</div><div class="line">          panel.background=element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/hexinqikanM.png" alt="hexinqikanM"></p>
<h4 id="经济学和管理学核心期刊地域分布对比图。"><a href="#经济学和管理学核心期刊地域分布对比图。" class="headerlink" title="经济学和管理学核心期刊地域分布对比图。"></a>经济学和管理学核心期刊地域分布对比图。</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"jingguanphoto.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=china_map1,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>,alpha=<span class="number">.4</span>)+</div><div class="line">geom_point(data=mynewfulldata,aes(x=lon,y=lat),shape=<span class="number">21</span>,size=<span class="number">8</span>,fill=<span class="string">"transparent"</span>,col=<span class="string">"#014D64"</span>)+ </div><div class="line">geom_point(data=mynewfulldata2,aes(x=lon,y=lat),shape=<span class="number">21</span>,size=<span class="number">3</span>,fill=<span class="string">"#C72E29"</span>,col=<span class="string">"transparent"</span>,alpha=<span class="number">.6</span>)+ </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"中国社科类经管核心期刊地域分布图"</span>,caption=<span class="string">"数据来源：百度百科"</span>)+   </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">63.4</span>, y=<span class="number">45</span>, label=<span class="string">"○ C: 经济学"</span>, color= <span class="string">"#014D64"</span>, size=<span class="number">6.5</span>) + </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">65</span>, y=<span class="number">42</span>, label=<span class="string">" ● M: 管理学"</span>, color= <span class="string">"#C72E29"</span>, size=<span class="number">6</span>) +    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.caption=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>,hjust=<span class="number">0</span>),        </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.6</span>),</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqjd2ymmw.bkt.clouddn.com/hexinqikan/jingguanphoto.png" alt="jingguanphoto"></p>
<p>不知道大家看了以上核心期刊的地域分布滞后，内心作何感想呢，本来想写几句短评到的，但是相信通过以上可视化形式的呈现，大家都已经明白我想说什么了！</p>
<p>再者自己是个学渣，这个话题不适合我~—~，有啥感想，都可以写在底部评论里，让我看到你们的声音！</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实习僧招聘网招聘信息爬虫数据可视化]]></title>
      <url>/2017/05/25/%E5%AE%9E%E4%B9%A0%E5%83%A7%E6%8B%9B%E8%81%98%E7%BD%91%E6%8B%9B%E8%81%98%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>这一篇是在最近开始接触RSelenium以来，第一次尝试使用该工具操控浏览器获取网页数据，确实方便不少。第一次操作能够这么顺利确实令我非常诧异，仅以此篇纪念我的学习经历！</p>
<a id="more"></a>
<p>我本来对实习僧网站是没什么好感的，因为之前自己在实习僧上投的实习简历几乎全部都石沉大海了（一个文科生偏要去投数据分析岗不碰壁才怪~_~）！</p>
<p>然鹅看到最近知乎爬虫圈儿里的两大趋势：爬美图；爬招聘网站。</p>
<p>后来大致了解下了，几乎各类大型的招聘文章都被别人爬过了，自己再去写免不了模仿之嫌，而且大神们都是用Python去爬的（Python我刚学会装包和导数据），自己也学不来。<br>现在只能选一个还没怎么被盯上的招聘网站，没错就它了——实习僧。</p>
<p><a href="http://www.shixiseng.com/" target="_blank" rel="external">实习僧</a></p>
<p>说老实话，实习僧的网站做的还是不错的，看着结构挺简单，可是我用比较主流的Rvest和RCurl都失败了（主要自己技术太渣了，抓包又抓不好）。最后只能勉强用RSelenium爬完了全部所需内容。（用代码驱动浏览器的好处就是不用怎么考虑时延和伪装包头了，但是要遍历成百上千页网址真的很耗时，爬完这个数据用了大约40多分钟）。</p>
<p><strong>以下是爬虫部分：</strong></p>
<hr>
<h3 id="加载包及配置环境："><a href="#加载包及配置环境：" class="headerlink" title="加载包及配置环境："></a>加载包及配置环境：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(Rwebdriver)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(Rwordseg)</div><div class="line"><span class="keyword">library</span>(wordcloud2)</div><div class="line"><span class="keyword">library</span>(treemap)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(Cairo)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(scales)</div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"><span class="keyword">library</span>(RColorBrewer)</div><div class="line"><span class="keyword">library</span>(ggimage)</div><div class="line"><span class="keyword">library</span>(geojsonio)</div></pre></td></tr></table></figure>
<p>本文主要用的Rwebdriver包来驱动Chrome浏览器，使用该包需要提前配置好桌面环境：</p>
<ul>
<li>下载selenium启动服务器；</li>
<li>下载Chrome的chromedriver插件并放入Chrome主目录（添加系统环境变量）</li>
<li>下载Rwebdriver包</li>
</ul>
<hr>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><h4 id="PowerShell启动"><a href="#PowerShell启动" class="headerlink" title="PowerShell启动"></a>PowerShell启动</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd <span class="string">"D:/Rwebdriver-master"</span></div><div class="line">java -jar selenium-server-standalone-<span class="number">3.3</span>.<span class="number">1</span>.jar</div></pre></td></tr></table></figure>
<h4 id="Rstudio启动："><a href="#Rstudio启动：" class="headerlink" title="Rstudio启动："></a>Rstudio启动：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">start_session(root=<span class="string">"http://localhost:4444/wd/hub/"</span>,browser =<span class="string">"chrome"</span>)</div><div class="line">options(stringsAsFactors=<span class="literal">FALSE</span>,warn=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<hr>
<h3 id="爬虫主程序："><a href="#爬虫主程序：" class="headerlink" title="爬虫主程序："></a>爬虫主程序：</h3><h4 id="网页遍历"><a href="#网页遍历" class="headerlink" title="网页遍历"></a>网页遍历</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">遍历实习僧的招聘信息网页</div><div class="line">baseurl&lt;-<span class="string">"http://www.shixiseng.com/interns?k=&amp;t=zh&amp;c=%E5%85%A8%E5%9B%BD&amp;p="</span></div><div class="line">pageurl&lt;-paste0(baseurl,<span class="number">1</span>:<span class="number">500</span>)</div></pre></td></tr></table></figure>
<h4 id="爬虫主体代码部分："><a href="#爬虫主体代码部分：" class="headerlink" title="爬虫主体代码部分："></a>爬虫主体代码部分：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">homepage=internship=companyweb=company=Position=address=salary=period=duration=<span class="literal">NULL</span></div><div class="line">fun&lt;-<span class="keyword">function</span>(url)&#123;</div><div class="line">post.url(url=url)</div><div class="line">baseinfo&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)</div><div class="line">homepage  &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-name&gt;div.names&gt;a"</span>)%&gt;% html_attr(<span class="string">"href"</span>)</div><div class="line">internship&lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-name&gt;div.names&gt;a"</span>)%&gt;%html_text()</div><div class="line">companyweb&lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-name&gt;div.part&gt;a"</span>)%&gt;%html_attr(<span class="string">"href"</span>)</div><div class="line">company   &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-name&gt;div.part&gt;a"</span>)%&gt;%html_text()</div><div class="line">Position  &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-name&gt;div.part"</span>)%&gt;%html_text()</div><div class="line">address   &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-detail&gt;div.addr&gt;span"</span>)%&gt;%html_text()</div><div class="line">salary    &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-detail&gt;div.xz&gt;span:nth-child(2)"</span>)%&gt;%html_text()</div><div class="line">period    &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-detail&gt;div.xz&gt;span:nth-child(5)"</span>)%&gt;%html_text()</div><div class="line">duration  &lt;-baseinfo%&gt;%html_nodes(<span class="string">"div.po-detail&gt;div.xz&gt;span:nth-child(8)"</span>)%&gt;%html_text()</div><div class="line">interninfo&lt;-data.frame(homepage,internship,companyweb,company,Position,address,salary,period,duration)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="爬虫执行程序："><a href="#爬虫执行程序：" class="headerlink" title="爬虫执行程序："></a>爬虫执行程序：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">final&lt;-data.frame()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> pageurl)&#123;</div><div class="line">final&lt;-rbind(final,fun(i))</div><div class="line">&#125;</div><div class="line">quit_session()</div><div class="line"></div><div class="line">DT::datatable(final)</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/image2.png" alt="image2"></p>
<p>保存本地：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">write.table (final,<span class="string">"D:/R/File/shixiseng.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/image1.png" alt="image1"></p>
<hr>
<h3 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h3><p>接下来做数据清洗：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mydata&lt;-read.csv(<span class="string">"D:/R/File/shixiseng.csv"</span>,stringsAsFactors=<span class="literal">FALSE</span>,check.names=<span class="literal">FALSE</span>) </div><div class="line">mydata&lt;-mydata[-<span class="number">5001</span>,]</div><div class="line"><span class="comment">#补全实习发布单位的招聘信息主页：</span></div><div class="line">mydata$homepage&lt;-str_c(<span class="string">"http://www.shixiseng.com"</span>,mydata$homepage,sep=<span class="string">""</span>)</div><div class="line"><span class="comment">#补全实习发布单位的公司信息主页：</span></div><div class="line">mydata$companyweb&lt;-str_c(<span class="string">"http://www.shixiseng.com"</span>,mydata$companyweb,sep=<span class="string">""</span>)</div><div class="line">mydata$work&lt;-str_split(mydata$Position[<span class="number">1</span>:<span class="number">10</span>], <span class="string">" - "</span>, simplify=<span class="literal">TRUE</span>)[,<span class="number">2</span>]</div><div class="line"><span class="comment">#清除salary中的空格和斜杠</span></div><div class="line">mydata$salary&lt;-str_trim(mydata$salary,side=<span class="string">"both"</span>)</div><div class="line">mydata$salary&lt;-str_extract(mydata$salary,<span class="string">"\\d+\\-\\d+"</span>)</div><div class="line"><span class="comment">#拆分实习工资的高低区间</span></div><div class="line">mydata$salary_low&lt;-str_split(mydata$salary, <span class="string">"-"</span>, simplify=<span class="literal">TRUE</span>)[,<span class="number">1</span>]</div><div class="line">mydata$salary_high&lt;-str_split(mydata$salary, <span class="string">"-"</span>, simplify=<span class="literal">TRUE</span>)[,<span class="number">2</span>]</div><div class="line"><span class="comment">#清除period中的汉字和特殊字符</span></div><div class="line">mydata$period&lt;-str_extract(mydata$period,<span class="string">"\\d+"</span>)</div><div class="line"><span class="comment">#清除duration中的汉字和特殊字符</span></div><div class="line">mydata$duration&lt;-str_extract(mydata$duration,<span class="string">"\\d+"</span>)</div><div class="line">mydata &lt;- tbl_df(mydata)</div><div class="line">mydata&lt;-select(mydata,-Position)</div><div class="line"><span class="comment">#因为address中所含的地址可能有存在多个，影响我们后续的可视化分析，这里为了方便起见，一律使用第一个地址。</span></div><div class="line">mydata$address_unique&lt;-str_split(mydata$address, <span class="string">","</span>, simplify=<span class="literal">TRUE</span>)[,<span class="number">1</span>]</div><div class="line">至此，数据清洗工作告一段落，接下来我们要进入分析与可视化阶段</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">names(mydata)</div><div class="line"><span class="string">"homepage"</span>-------公司实习职位简介</div><div class="line"><span class="string">"internship"</span>-----公司招聘性质</div><div class="line"><span class="string">"companyweb"</span>-----公司主页</div><div class="line"><span class="string">"company"</span>--------公司名称</div><div class="line"><span class="string">"address"</span>--------所在地</div><div class="line"><span class="string">"address_unique"</span>-所在地（唯一值，只取默认第一个地址）</div><div class="line"><span class="string">"salary"</span>---------实习工资区间</div><div class="line"><span class="string">"salary_low"</span>-----实习工资（最低值）</div><div class="line"><span class="string">"salary_high"</span>----实习工资（最高值）</div><div class="line"><span class="string">"period"</span>---------到岗天数（每周）</div><div class="line"><span class="string">"duration"</span>-------实习周期（按月算）</div><div class="line"><span class="string">"work"</span>-----------具体职位</div></pre></td></tr></table></figure>
<p>我们最终获取的清洗后数据如上所示。<br>假如本次项目需求（虚拟）要求我们获取以下几个问题：</p>
<ol>
<li>实习僧的实习招聘主页岗位主要是什么性质的？</li>
<li>哪些公司最缺实习僧？</li>
<li>实习岗位具体分布的地域和城市？</li>
<li>哪些城市对实习僧的需要最为强烈？</li>
<li>实习工资大致什么水平，与城市和地域是否有关系？</li>
<li>实习岗位一般都要求每周到岗多少天？</li>
<li>实习周期一般需要多长时间？</li>
<li>哪些职位需求最为频繁，职位需要量与城市之间的大致是如何分布的？</li>
</ol>
<p>带着这些个问题，让我们尽情的畅游在可视化的世界里吧……</p>
<hr>
<h3 id="数据可视化阶段"><a href="#数据可视化阶段" class="headerlink" title="数据可视化阶段"></a>数据可视化阶段</h3><h4 id="实习僧的实习招聘主页主要是什么性质的？"><a href="#实习僧的实习招聘主页主要是什么性质的？" class="headerlink" title="实习僧的实习招聘主页主要是什么性质的？"></a>实习僧的实习招聘主页主要是什么性质的？</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">length(unique(mydata$internship))</div><div class="line"><span class="number">3357</span></div></pre></td></tr></table></figure>
<p>绝望了，一共爬了5000条实习职位信息，做了去重处理，显示仍有3357条，建议实习僧的产品运营团队考虑下要不要标准化一下这个职位性质，内门怎么可以创造这么多独特的职位~_~</p>
<p>对于这个问题，真的难倒我了，因为所爬数据中的职位性质没有统一的预设标准，所以我只能用文本分词的形式来进行提取了，先分词，然后统计高频词，最后按照词频来进行模糊分析啦（可我我对文本挖掘一窍不通啊~_~）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">top100&lt;-table(mydata$internship)%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)%&gt;% arrange(desc(Freq))%&gt;%.[<span class="number">1</span>:<span class="number">100</span>,]</div><div class="line">treemap(top100, index=c(<span class="string">"Var1"</span>), vSize=<span class="string">"Freq"</span>,title=<span class="string">'实习僧职位性质分布图'</span>,palette=<span class="string">'RdBu'</span>,</div><div class="line">fontsize.title=<span class="number">18</span>,fontsize.labels=<span class="number">12</span>,fontface.labels=<span class="string">"plain"</span>,fontfamily.title=<span class="string">"mono"</span>,fontfamily.labels=<span class="string">"mono"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/image3.png" alt="image3"></p>
<blockquote>
<p>从实习职位分布图上来看，人力资源实习生职位需求最为强烈，其次是运营、财务、新媒体，这些类型的职位多为现代新兴服务业，更为符合大学生这一群体的口味和兴趣。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">myrevieww&lt;-mydata$internship</div><div class="line">thewords &lt;- segmentCN(myrevieww,nature=<span class="literal">T</span>)%&gt;%unlist()</div><div class="line">thewords &lt;- gsub(<span class="string">"[a-z]|\\."</span>, <span class="string">""</span>, thewords)</div><div class="line">thewords&lt;-thewords[nchar(thewords)&gt;<span class="number">1</span>]</div><div class="line">reviewdata&lt;-table(thewords)%&gt;%as.data.frame(stringsAsFactors = <span class="literal">FALSE</span>)%&gt;% arrange(desc(Freq))%&gt;%filter(thewords!=<span class="string">"实习生"</span>)</div><div class="line">wordcloud&lt;-wordcloud2(reviewdata[<span class="number">1</span>:<span class="number">1000</span>,],color=<span class="string">"random-light"</span>,minSize=<span class="number">.6</span>,size=<span class="number">1</span>,backgroundColor=<span class="string">"dark"</span>,minRotation=-pi/<span class="number">6</span>,maxRotation=-pi/<span class="number">6</span>,fontFamily =<span class="string">"微软雅黑"</span>);wordcloud</div></pre></td></tr></table></figure>
<p>但是将职位性质分词整理成关键词后，似乎结果有所不同。</p>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/image4.png" alt="image4"></p>
<h4 id="哪些公司最缺实习僧？"><a href="#哪些公司最缺实习僧？" class="headerlink" title="哪些公司最缺实习僧？"></a>哪些公司最缺实习僧？</h4><p>这里我们来统计所爬职位信息中公司发布职位的频率，发布最多的则作为评价公司对实习生需求的标准。<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">myjob&lt;-table(mydata$company)%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)%&gt;%arrange(desc(Freq))</div><div class="line"><span class="comment">#看看前十名都是那些公司：</span></div><div class="line">myjob15&lt;-arrange(myjob[<span class="number">1</span>:<span class="number">15</span>,],desc(Freq))</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/circle-rose.png"</span>,width=<span class="number">1580</span>,height=<span class="number">950</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=myjob15,aes(x=reorder(Var1,-Freq),y=Freq,fill=Freq))+</div><div class="line">geom_linerange(aes(ymin=<span class="number">0</span>,ymax=<span class="number">42</span>),linetype=<span class="number">5</span>,size=<span class="number">.2</span>,colour=<span class="string">"#858585"</span>)+</div><div class="line">geom_image(aes(x=<span class="number">0</span>,y=-<span class="number">40</span>),image=<span class="string">"D:/R/Image/image1.jpg"</span>, size =<span class="number">.2</span>)+</div><div class="line">geom_text(aes(y=<span class="number">45</span>,label=paste0(Var1,<span class="string">"\n"</span>,Freq)),vjust=<span class="number">1</span>,size=<span class="number">5</span>)+</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,col=<span class="string">"white"</span>)+</div><div class="line">geom_hline(yintercept =<span class="number">54</span>,color=<span class="string">"black"</span>,size=<span class="number">.5</span>)+</div><div class="line">geom_point(aes(y=<span class="number">48</span>,size=Freq),shape=<span class="number">21</span>,fill=<span class="string">"#ED7D31"</span>,,alpha=<span class="number">0.6</span>,col=<span class="string">"orange"</span>)+</div><div class="line">labs(title=<span class="string">"Top 15 of Company"</span>,caption=<span class="string">"Data Source:shixiseng"</span>)+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>)+</div><div class="line">ylim(-<span class="number">40</span>,<span class="number">60</span>)+</div><div class="line">scale_size_area(max_size=<span class="number">20</span>)+</div><div class="line">guides(fill=<span class="literal">FALSE</span>,size=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text=element_blank(),</div><div class="line">panel.grid=element_blank(),</div><div class="line">legend.text=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">12</span>),</div><div class="line">legend.title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">15</span>,hjust=<span class="number">1</span>),</div><div class="line">plot.title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">35</span>),</div><div class="line">plot.caption=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>,hjust=<span class="number">0</span>,lineheight=<span class="number">1.2</span>)</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/circle-rose.png" alt="circle-rose"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">write.table (myjob[<span class="number">1</span>:<span class="number">100</span>,],<span class="string">"D:/R/File/shixiseng_job.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><strong>前一百个实习生需求最旺盛企业：</strong></p>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/superbubbles.png" alt="superbubbles"></p>
<h4 id="实习岗位具体分布的地域和城市？"><a href="#实习岗位具体分布的地域和城市？" class="headerlink" title="实习岗位具体分布的地域和城市？"></a>实习岗位具体分布的地域和城市？</h4><p>先做一个地域分布图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">add&lt;-table(mydata$address_unique)%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)%&gt;%arrange(desc(Freq))%&gt;%filter(nchar(Var1)==<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="comment">#城市经纬度查询：</span></div><div class="line"><span class="keyword">library</span>(rjson)</div><div class="line"><span class="keyword">library</span>(RCurl)</div><div class="line"><span class="keyword">library</span>(REmap)</div><div class="line"><span class="keyword">library</span>(baidumap)</div><div class="line">address&lt;-add$Var1</div><div class="line">baidu_lng &lt;- c()</div><div class="line">baidu_lat &lt;- c()</div><div class="line">ak&lt;-<span class="string">"X8zlxPUdSe2weshrZ1WqnWxb43cfBI2N"</span></div><div class="line"><span class="keyword">for</span>(location <span class="keyword">in</span> address)&#123;</div><div class="line">   url&lt;-paste(<span class="string">"http://api.map.baidu.com/geocoder/v2/?ak="</span>,ak,<span class="string">"&amp;callback=renderOption&amp;output=json&amp;address="</span>,location,sep=<span class="string">""</span>)</div><div class="line">   url_string &lt;- URLencode(url)                    </div><div class="line">   msg.load &lt;- <span class="keyword">tryCatch</span>(&#123;</div><div class="line">   json &lt;-readLines(url_string,warn=<span class="literal">F</span>,encoding=<span class="string">"UTF-8"</span>)</div><div class="line">   msg.load &lt;- <span class="string">"TRUE"</span></div><div class="line">   &#125;,error=<span class="keyword">function</span>(e) &#123;</div><div class="line">   <span class="string">"error"</span></div><div class="line">     &#125;</div><div class="line">)</div><div class="line">    <span class="keyword">if</span>(msg.load==<span class="string">'error'</span>)&#123;</div><div class="line">    Sys.sleep(runif(<span class="number">1</span>,<span class="number">3</span>,<span class="number">10</span>))</div><div class="line">    msg.load &lt;- <span class="keyword">tryCatch</span>(&#123;</div><div class="line">    connect &lt;- readLines(url_string,warn=<span class="literal">F</span>,encoding = <span class="string">"UTF-8"</span>)   </div><div class="line">    msg.load &lt;- <span class="string">"TRUE"</span></div><div class="line">     &#125;, error = <span class="keyword">function</span>(e)&#123;</div><div class="line">     <span class="string">"error"</span></div><div class="line">     &#125;</div><div class="line">     )</div><div class="line">    &#125;</div><div class="line">geo &lt;- fromJSON(substr(json,regexpr(<span class="string">"\\("</span>,json)+<span class="number">1</span>,nchar(json)-<span class="number">1</span>))  </div><div class="line">    <span class="keyword">if</span>(msg.load==<span class="string">'error'</span>)&#123;</div><div class="line">    lng&lt;-<span class="string">'error1'</span> </div><div class="line">    lat&lt;-<span class="string">'error1'</span></div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">    lng&lt;-geo$result$location$lng    </div><div class="line">    lat&lt;-geo$result$location$lat</div><div class="line">    <span class="keyword">if</span>(length(lng) == <span class="number">0</span>)&#123;    </div><div class="line">        lng &lt;- <span class="string">"error2"</span></div><div class="line">        lat &lt;- <span class="string">"error2"</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">lng&lt;-geo$result$location$lng</div><div class="line">lat&lt;-geo$result$location$lat                 </div><div class="line">baidu_lng&lt;-c(baidu_lng,lng)</div><div class="line">baidu_lat&lt;-c(baidu_lat,lat)</div><div class="line">&#125;</div><div class="line">result&lt;-data.frame(address=address,long=baidu_lng,lat=baidu_lat,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">pointdata&lt;-left_join(add,result,by=c(<span class="string">"Var1"</span>=<span class="string">"address"</span>))</div><div class="line"><span class="comment">#成功获取目标城市经纬度信息：</span></div></pre></td></tr></table></figure></p>
<p>接下来来制作分布图：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">geojson &lt;-readOGR(<span class="string">"D:/R/mapdata/State/china.geojson"</span>,<span class="string">"OGRGeoJSON"</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">Encoding(geojson$name)&lt;-<span class="string">"UTF-8"</span></div><div class="line">china_Mapdata&lt;-geojson@data</div><div class="line">china_MapdataPloygon&lt;-fortify(geojson)</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/shixiseng_jobcity.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=china_MapdataPloygon,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>,alpha=<span class="number">.4</span>)+</div><div class="line">geom_point(data=pointdata,aes(x=long,y=lat,size=Freq),shape=<span class="number">21</span>,fill=<span class="string">"#C72E29"</span>,col=<span class="string">"#014D64"</span>,alpha=<span class="number">0.6</span>)+ </div><div class="line">scale_size_area(max_size=<span class="number">15</span>,guide=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"实习僧职位需求城市分布图"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+  </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.caption=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>,hjust=<span class="number">0</span>),        </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.6</span>),</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/shixiseng_jobcity.png" alt="shixiseng_jobcity"></p>
<h4 id="哪些城市对实习僧的需要最为强烈？"><a href="#哪些城市对实习僧的需要最为强烈？" class="headerlink" title="哪些城市对实习僧的需要最为强烈？"></a>哪些城市对实习僧的需要最为强烈？</h4><p>从第三个问题及其分析结果上我们已经看出了整体形势，北上广深依然是需求最为旺盛的地区，这也符合城市的实际经济发展情况及我们的预期。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/jingjixue2.png"</span>,width=<span class="number">800</span>,height=<span class="number">600</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(pointdata[<span class="number">1</span>:<span class="number">20</span>,],aes(reorder(Var1,Freq),Freq))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">coord_flip()+</div><div class="line">labs(title=<span class="string">"实习僧职位需求城市分布"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">geom_text(aes(y=Freq+<span class="number">25</span>,label=Freq),hjust=<span class="number">2</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">15</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">10</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/jingjixue2.png" alt="jingjixue2"></p>
<h4 id="实习工资大致什么水平，与城市和地域是否有关系？"><a href="#实习工资大致什么水平，与城市和地域是否有关系？" class="headerlink" title="实习工资大致什么水平，与城市和地域是否有关系？"></a>实习工资大致什么水平，与城市和地域是否有关系？</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">myjob_salary&lt;-mydata[,c(<span class="string">"address_unique"</span>,<span class="string">"salary_low"</span>,<span class="string">"salary_high"</span>)]  </div><div class="line">myjob_salary$salary_low&lt;-as.numeric(myjob_salary$salary_low)</div><div class="line">myjob_salary$salary_high&lt;-as.numeric(myjob_salary$salary_high)</div><div class="line">myjob_salary&lt;-na.omit(myjob_salary)%&gt;%arrange(salary_high)%&gt;%filter(salary_high&gt;=<span class="number">20</span>&amp;salary_high&lt;=<span class="number">500</span>)</div><div class="line">myjob_salary$id&lt;-seq_len(nrow(myjob_salary))</div><div class="line">myjob_salary$meansalary&lt;-(myjob_salary$salary_low+myjob_salary$salary_high)/<span class="number">2</span></div><div class="line"></div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/shixiseng_jobsaleryarea.png"</span>,width=<span class="number">1200</span>,height=<span class="number">800</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(myjob_salary,aes(id))+</div><div class="line">geom_ribbon(aes(ymin=salary_low,ymax=salary_high),fill = <span class="string">"grey70"</span>)+</div><div class="line">labs(title=<span class="string">"实习僧职位工资区间分布"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">geom_line(aes(y=meansalary))+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">30</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">20</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text.y=element_text(size=<span class="number">15</span>),</div><div class="line">      axis.text.x=element_blank()</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/shixiseng_jobsaleryarea.png" alt="shixiseng_jobsaleryarea"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">myjob_salary$address_unique&lt;-substr(myjob_salary$address_unique,<span class="number">1</span>,<span class="number">2</span>)</div><div class="line">myjobcitysalary&lt;-aggregate(meansalary~address_unique,data=myjob_salary,FUN=mean)</div><div class="line"></div><div class="line">treemap(na.omit(myjobcitysalary), index=c(<span class="string">"address_unique"</span>),</div><div class="line">vSize=<span class="string">"meansalary"</span>,title=<span class="string">'实习僧职位薪酬地域分布图'</span>,palette=<span class="string">'RdBu'</span>,</div><div class="line">fontsize.title=<span class="number">18</span>,fontsize.labels=<span class="number">12</span>,fontface.labels=<span class="string">"plain"</span>,</div><div class="line">fontfamily.title=<span class="string">"mono"</span>,fontfamily.labels=<span class="string">"mono"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/shixisengmeansalart.png" alt="shixisengmeansalart"></p>
<p>按照全部参与计算聚合的平均工资来看，北上广深反而没有什么吸引力了排名普遍不高，我猜想是因为一线城市的低工资职位数量过多，压低了平均值。</p>
<p>接下来我们按照100，150的临界点进行工资高低的划分。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">salary100&lt;-myjob_salary%&gt;%filter(meansalary&lt;=<span class="number">100</span>)%&gt;%select(address_unique)%&gt;%table()%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">salary100&lt;-na.omit(salary100)%&gt;%arrange(desc(Freq));names(salary100)&lt;-c(<span class="string">"city"</span>,<span class="string">"num"</span>)</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/salary100.png"</span>,width=<span class="number">1200</span>,height=<span class="number">900</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(salary100[salary100$num&gt;=<span class="number">5</span>,],aes(reorder(city,-num),num))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">labs(title=<span class="string">"实习僧职位薪资城市分布（日薪低于100）"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">geom_text(aes(y=num+<span class="number">10</span>,label=num),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">18</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/salary100.png" alt="salary100"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">salary200&lt;-myjob_salary%&gt;%filter(meansalary&gt;=<span class="number">200</span>)%&gt;%select(address_unique)%&gt;%table()%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">salary200&lt;-na.omit(salary200)%&gt;%arrange(desc(Freq));names(salary200)&lt;-c(<span class="string">"city"</span>,<span class="string">"num"</span>)</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/salary200.png"</span>,width=<span class="number">1200</span>,height=<span class="number">900</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(salary200,aes(reorder(city,-num),num))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">labs(title=<span class="string">"实习僧职位薪资城市分布（日薪高于200）"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">geom_text(aes(y=num+<span class="number">10</span>,label=num),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">18</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/salary200.png" alt="salary200"></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">salary100_200&lt;-myjob_salary%&gt;%filter(meansalary&gt;<span class="number">100</span> &amp; meansalary&lt;<span class="number">200</span>)%&gt;%select(address_unique)%&gt;%table()%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">salary100_200&lt;-na.omit(salary100_200)%&gt;%arrange(desc(Freq));names(salary100_200)&lt;-c(<span class="string">"city"</span>,<span class="string">"num"</span>)</div><div class="line"></div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/salary100-200.png"</span>,width=<span class="number">1600</span>,height=<span class="number">900</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(salary100_200,aes(reorder(city,-num),num))+</div><div class="line">geom_bar(fill=<span class="string">"#0C8DC4"</span>,stat=<span class="string">"identity"</span>)+</div><div class="line">labs(title=<span class="string">"实习僧职位薪资城市分布（日薪处于100-200之间）"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">geom_text(aes(y=num+<span class="number">10</span>,label=num),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">theme_bw()+</div><div class="line">theme(</div><div class="line">      panel.border=element_blank(),</div><div class="line">      panel.grid.major=element_line(linetype=<span class="string">"dashed"</span>),</div><div class="line">      panel.grid.minor=element_blank(),</div><div class="line">      plot.title=element_text(size=<span class="number">25</span>,colour=<span class="string">"#003087"</span>,family=<span class="string">"myfont"</span>),</div><div class="line">      plot.caption=element_text(hjust=<span class="number">0</span>,size=<span class="number">18</span>),</div><div class="line">      axis.title=element_blank(),</div><div class="line">      axis.text=element_text(size=<span class="number">15</span>)</div><div class="line">      )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/salary100-200.png" alt="salary100-200"></p>
<blockquote>
<p>分析到这里，趋势已经很明显了，因为北上广深等一线城市的职位实在是太多了，无论是高新职位还是低薪实习岗位都能排在全国各城市的前列，所以出现日均工资很普通的现象。相对而言，日薪在200以上的高薪职位更能代表各大城市对日常实习生需求的强烈程度，因为在这一阶段，北上广深的优势非常明显，遥遥领先与其他二线城市，而针对日薪高于200的实习职位统计结果可以看出来，北上技压群雄（不愧是帝都和魔都），深圳和广州处于第二线，200以上的高新实习职位遇北上相比，相差比较大，仅占前两者约1/3~1/5。而杭州、南京、武汉、合肥则稳稳处于第三梯队。</p>
</blockquote>
<h4 id="实习岗位一般都要求每周到岗多少天？"><a href="#实习岗位一般都要求每周到岗多少天？" class="headerlink" title="实习岗位一般都要求每周到岗多少天？"></a>实习岗位一般都要求每周到岗多少天？</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">myperiod&lt;-mydata$period</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/internperiod.png"</span>,width=<span class="number">1000</span>,height=<span class="number">750</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=<span class="literal">NULL</span>,aes(myperiod)) +</div><div class="line">geom_histogram(stat=<span class="string">"count"</span>,show.legend=<span class="literal">FALSE</span>,binwidth=<span class="number">1</span>,fill=<span class="string">"#F86977"</span>,col=<span class="literal">NA</span>) +</div><div class="line">labs(title=<span class="string">"实习职位要求每周工作天数"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">theme(panel.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.title =element_text(size=<span class="number">20</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        plot.caption=element_text(hjust=<span class="number">0</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.line=element_line(colour=<span class="string">"grey80"</span>),</div><div class="line">        axis.text=element_text(size=<span class="number">12</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.title=element_blank())</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/internperiod.png" alt="internperiod"></p>
<blockquote>
<p>从分布上看，一周五天居多，这样是正常的工作日现象。3天、4天也是用人单位补缴能接受的周工作天数。</p>
</blockquote>
<h4 id="实习周期一般需要多长时间？"><a href="#实习周期一般需要多长时间？" class="headerlink" title="实习周期一般需要多长时间？"></a>实习周期一般需要多长时间？</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">myduration&lt;-mydata$duration</div><div class="line">mydurationhz&lt;-table(myduration)%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)%&gt;%arrange(desc(Freq))</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/internduration.png"</span>,width=<span class="number">1000</span>,height=<span class="number">750</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=mydurationhz,aes(reorder(myduration,-Freq),Freq)) +</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,show.legend=<span class="literal">FALSE</span>,width=<span class="number">1</span>,fill=<span class="string">"#065573"</span>,col=<span class="literal">NA</span>) +</div><div class="line">geom_text(aes(y=Freq+<span class="number">20</span>,label=Freq),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">labs(title=<span class="string">"实习职位要求工作时间周期"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">theme(panel.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.title =element_text(size=<span class="number">20</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        plot.caption=element_text(hjust=<span class="number">0</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.line=element_line(colour=<span class="string">"grey80"</span>),</div><div class="line">        axis.text=element_text(size=<span class="number">12</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.title=element_blank())</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/internduration.png" alt="internduration"></p>
<h4 id="哪些职位需求最为旺盛？"><a href="#哪些职位需求最为旺盛？" class="headerlink" title="哪些职位需求最为旺盛？"></a>哪些职位需求最为旺盛？</h4><blockquote>
<p>下面开始分析最后一个问题，也是我认为最有价值，最值得探究的问题，最后一个待分析指标是实习职位，这个指标跟我们最初分析的那个岗位性质略有不同，该变量相对比较规范（职位类别有确定的预设范围）。</p>
</blockquote>
<p>我们新建一个分析数据，用职位、工资区间的中间值，地区三个变量进行后续分析：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mydata$salary_high&lt;-as.numeric(mydata$salary_high)</div><div class="line">mydata$salary_low&lt;-as.numeric(mydata$salary_low)</div><div class="line">mydata$salary_mean&lt;-(mydata$salary_low+mydata$salary_high)/<span class="number">2</span></div><div class="line">myworkdata&lt;-mydata[,c(<span class="string">"address_unique"</span>,<span class="string">"work"</span>,<span class="string">"salary_mean"</span>)]</div></pre></td></tr></table></figure></p>
<p><strong>首先分析下岗位的集中分布情况：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">myworkcount&lt;-table(myworkdata[,<span class="number">2</span>])%&gt;%as.data.frame(stringsAsFactors=<span class="literal">FALSE</span>)%&gt;%arrange(desc(Freq))</div><div class="line"></div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/interndworkcount.png"</span>,width=<span class="number">1000</span>,height=<span class="number">750</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=myworkcount,aes(reorder(Var1,-Freq),Freq)) +</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,show.legend=<span class="literal">FALSE</span>,width=<span class="number">.75</span>,fill=<span class="string">"#5D8DA6"</span>,col=<span class="literal">NA</span>) +</div><div class="line">geom_text(aes(y=Freq+<span class="number">50</span>,label=Freq),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">5</span>)+</div><div class="line">labs(title=<span class="string">"实习职位类别分布"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">theme(panel.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.title =element_text(size=<span class="number">20</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        plot.caption=element_text(hjust=<span class="number">0</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.line=element_line(colour=<span class="string">"grey80"</span>),</div><div class="line">        axis.text=element_text(size=<span class="number">12</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.title=element_blank())</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/internduration.png" alt="interndworkcount"></p>
<p><strong>各个岗位工资分布：</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">myworkmean&lt;-aggregate(salary_mean~work,data=myworkdata,FUN=mean)</div><div class="line">CairoPNG(file=<span class="string">"E:/微信公众号/公众号——数据小魔方/2017年5月/20170512/interndworkmean.png"</span>,width=<span class="number">1000</span>,height=<span class="number">750</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=myworkmean,aes(reorder(work,-salary_mean),salary_mean)) +</div><div class="line">geom_bar(stat=<span class="string">"identity"</span>,show.legend=<span class="literal">FALSE</span>,width=<span class="number">.75</span>,fill=<span class="string">"#5D8DA6"</span>,col=<span class="literal">NA</span>) +</div><div class="line">geom_text(aes(y=salary_mean+<span class="number">5</span>,label=round(salary_mean,<span class="number">1</span>)),hjust=<span class="number">.5</span>,colour=<span class="string">"#C72E29"</span>,size=<span class="number">10</span>)+</div><div class="line">labs(title=<span class="string">"实习职位类别平均工资"</span>,caption=<span class="string">"数据来源：实习僧官网"</span>)+</div><div class="line">theme(panel.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.background=element_rect(fill=<span class="literal">NA</span>),</div><div class="line">        plot.title =element_text(size=<span class="number">25</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        plot.caption=element_text(hjust=<span class="number">0</span>,family=<span class="string">"myfont"</span>,size=<span class="number">20</span>),</div><div class="line">        axis.line=element_line(colour=<span class="string">"grey80"</span>),</div><div class="line">        axis.text=element_text(size=<span class="number">18</span>,family=<span class="string">"myfont"</span>),</div><div class="line">        axis.title=element_blank())</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure></p>
<blockquote>
<p>从工资均数上来看，七大类职位差距不大，说明仅就实习岗位工资而言，结合爬取的总体样本，不考虑地域差异，实习工资差异不很明显。也许是因为实习岗位中真正有含金量的并不多，换句话说，企业的高价值岗位，对于工作经验、技能的要求相对较高，而实习生则在这方面都不具备优势。（如果是社招或者小校招岗位信息的话，可能工资均值的差异会大一些）。</p>
</blockquote>
<p>最后，让我们用一个桑基图来完结本次针对实习僧网站的爬虫分析：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">write.table (myworkdata,<span class="string">"D:/R/File/shixiseng_workdata.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="http://oqi3pwnop.bkt.clouddn.com/shixiseng/sankey.png" alt="sankey"></p>
<blockquote>
<p>桑基流向图的趋势灰常明显，北上两市在所有类别职位（7大类）上均居前列，各职位类别中，市场和运营职位需求最为强烈，北京和上海在对市场和运营职位的需求容量机会平分秋色。广州和深圳仍然略于北上，但是与其他二线城市相比较，优势仍然很明显。（也许是因为实习僧做为主打校园实习岗位信息咨询平台，针对的主流群体基本以在校大学生为主，而北上广深的高等教育资源分布差异明显，在高校数量方面，北上的要沾光很多，广州与深圳的高校资源相对比较匮乏，在以上分析的各项指标中都占尽劣势）。</p>
</blockquote>
<p><strong>爬虫和代码分析，算起来整整花了将近12个小时，虽然分析的不是很精准、客观，但是过程还是很有收获的，期待下一次做的更好！</strong></p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> PowerBI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[山东省公共财政预算数据可视化]]></title>
      <url>/2017/05/24/%E5%B1%B1%E4%B8%9C%E7%9C%81%E5%85%AC%E5%85%B1%E8%B4%A2%E6%94%BF%E9%A2%84%E7%AE%97%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>自带学习R语言以来，从来没用把这些技能用在自己的专业方向上，说好的学以致用呢~</p>
<p>最近看到的一篇微信公众号推文，内容是关于山东省各县（细化到137个县级行政区）2016年的GDP规模、公共预算收入规模及其增速指标，数据质量还不错，是山东省发改委公布的。</p>
<p><a href="http://mp.weixin.qq.com/s/Sk4fIh3-ykcNK8uP0gZryw" target="_blank" rel="external">http://mp.weixin.qq.com/s/Sk4fIh3-ykcNK8uP0gZryw</a></p>
<p>感觉自己终于离专业方向近了一些（本人学财政的），数据就在眼前，这次机会一定要抓住了。</p>
<a id="more"></a>
<p>数据虽然质量不错，但是苦于手头没有最新的山东省县级地图素材（之前练习用的SHP素材都是很古老的素材，使用市级范围没啥问题，但是县级行政单位变更太快了，根本没法用）。所以这篇文章写作过程特别艰难~</p>
<p>我用了半个上午爬取并整理数据，却用了两天时间寻找地图素材、最终找到了山东省17个地级市的json素材（还不会合并json数据），找到了个在线json转shp的平台，用17个json文件拼接成一个 完整的山东省地图，然后导出shp数据，这才搞定了县级地图工作。（想想也是太执着了~）</p>
<p>本篇文章主要主要还是演示地图可视化为主，其中包含基础的数据抓取、数据清洗、数据聚合、变量结构和ggplot图层语法，最终得到7福高质量的数据地图。</p>
<h3 id="加载包"><a href="#加载包" class="headerlink" title="加载包"></a>加载包</h3><p>以下是本文需要用到的包：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(XML)</div><div class="line"><span class="keyword">library</span>(RCurl)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(plyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)      </div><div class="line"><span class="keyword">library</span>(maptools)   </div><div class="line"><span class="keyword">library</span>(Cairo)        </div><div class="line"><span class="keyword">library</span>(RColorBrewer) </div><div class="line"><span class="keyword">library</span>(xlsx)</div><div class="line"><span class="keyword">library</span>(rjson)</div><div class="line"><span class="keyword">library</span>(rgdal)</div><div class="line"><span class="keyword">library</span>(data.table)</div><div class="line"><span class="keyword">library</span>(tidyr)</div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(sqldf)</div></pre></td></tr></table></figure>
<h3 id="数据抓取"><a href="#数据抓取" class="headerlink" title="数据抓取"></a>数据抓取</h3><p><strong>数据抓取过程</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"http://mp.weixin.qq.com/s/Sk4fIh3-ykcNK8uP0gZryw"</span></div><div class="line">Name&lt;- getURL(url,.encoding=<span class="string">"utf-8"</span>)%&gt;%htmlParse(encoding=<span class="string">"UTF-8"</span>)%&gt;%getNodeSet(<span class="string">"//strong/span"</span>)   </div><div class="line">title&lt;-grep(<span class="string">"按"</span>,laply(Name,xmlValue,trim=<span class="literal">T</span>),value=<span class="literal">T</span>);title</div><div class="line"></div><div class="line">tbls&lt;-readHTMLTable(url,header=<span class="literal">TRUE</span>,trim=<span class="literal">TRUE</span>)</div><div class="line"></div><div class="line">names(tbls)&lt;-title;names(tbls)</div><div class="line">sapply(tbls,nrow)</div><div class="line">[<span class="number">1</span>] <span class="string">"按公共财政预算收入规模："</span>     <span class="string">"按公共财政预算收入增长幅度："</span></div><div class="line">[<span class="number">3</span>] <span class="string">"按GDP规模："</span>                  <span class="string">"按GDP增长幅度："</span>             </div><div class="line">[<span class="number">5</span>] <span class="string">"按人均GDP："</span></div></pre></td></tr></table></figure></p>
<p><strong>以下数据网页中五张表格的提取过程：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">BudgetScale&lt;-tbls$`按公共财政预算收入规模：`[-<span class="number">1</span>];names(BudgetScale)&lt;-c(<span class="string">"Country"</span>,<span class="string">"BudgetScale"</span>)</div><div class="line">BudgetScale$Country&lt;-as.character(BudgetScale$Country)</div><div class="line">BudgetScale$BudgetScale&lt;-as.numeric(as.character(BudgetScale$BudgetScale))</div><div class="line"></div><div class="line">BudgetGrowth&lt;-tbls$`按公共财政预算收入增长幅度：`[-<span class="number">1</span>];names(BudgetGrowth)&lt;-c(<span class="string">"Country"</span>,<span class="string">"BudgetGrowth"</span>)</div><div class="line">BudgetGrowth$Country&lt;-as.character(BudgetGrowth$Country)</div><div class="line">BudgetGrowth$BudgetGrowth&lt;-as.numeric(as.character(BudgetGrowth$BudgetGrowth))</div><div class="line"></div><div class="line">GDPScale&lt;-tbls$`按GDP规模：`[-<span class="number">1</span>];names(GDPScale)&lt;-c(<span class="string">"Country"</span>,<span class="string">"GDPScale"</span>)</div><div class="line">GDPScale$Country&lt;-as.character(GDPScale$Country)</div><div class="line">GDPScale$GDPScale&lt;-as.numeric(as.character(GDPScale$GDPScale))</div><div class="line"></div><div class="line">GDPGrowth&lt;-tbls$`按GDP增长幅度：`[-<span class="number">1</span>];names(GDPGrowth)&lt;-c(<span class="string">"Country"</span>,<span class="string">"GDPGrowth"</span>)</div><div class="line">GDPGrowth$Country&lt;-as.character(GDPGrowth$Country)</div><div class="line">GDPGrowth$GDPGrowth&lt;-as.numeric(as.character(GDPGrowth$GDPGrowth))</div><div class="line"></div><div class="line"></div><div class="line">PerGDPGrowth&lt;-tbls$`按人均GDP：`[-<span class="number">1</span>];names(PerGDPGrowth)&lt;-c(<span class="string">"Country"</span>,<span class="string">"PerGDPGrowth"</span>)</div><div class="line">PerGDPGrowth$Country&lt;-as.character(PerGDPGrowth$Country)</div><div class="line">PerGDPGrowth$PerGDPGrowth&lt;-as.numeric(as.character(PerGDPGrowth$PerGDPGrowth))</div><div class="line"></div><div class="line">BudgetScale&lt;-arrange(BudgetScale,Country)</div><div class="line">BudgetGrowth&lt;-arrange(BudgetGrowth,Country)</div><div class="line">GDPScale&lt;-arrange(GDPScale,Country)</div><div class="line">GDPGrowth&lt;-arrange(GDPGrowth,Country)</div><div class="line">PerGDPGrowth&lt;-arrange(PerGDPGrowth,Country)</div></pre></td></tr></table></figure>
<p>本来137个县级行政区的名称应该是一致的，但是网页中公布的数据名称不一致，所以没法合并，需要自己集合最新的行政区划名称手动修改，费老大劲！</p>
<p>先将五张表格的数据写入一个工作薄中，然后手动修改:</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">write.xlsx(BudgetScale,<span class="string">"D:/R/File/shddata.xlsx"</span>,sheetName=<span class="string">"BudgetScale"</span>,append=<span class="literal">FALSE</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">write.xlsx(BudgetGrowth,<span class="string">"D:/R/File/shddata.xlsx"</span>,sheetName=<span class="string">"BudgetGrowth"</span>,append=<span class="literal">TRUE</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">write.xlsx(GDPScale,<span class="string">"D:/R/File/shddata.xlsx"</span>,sheetName=<span class="string">"GDPScale"</span>,append=<span class="literal">TRUE</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">write.xlsx(GDPGrowth,<span class="string">"D:/R/File/shddata.xlsx"</span>,sheetName=<span class="string">"GDPGrowth"</span>,append=<span class="literal">TRUE</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">write.xlsx(PerGDPGrowth,<span class="string">"D:/R/File/shddata.xlsx"</span>,sheetName=<span class="string">"PerGDPGrowth"</span>,append=<span class="literal">TRUE</span>,row.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>因为以上五个表格所用到的行政区划名称不完全相同，需要手动各县级行政区划对应的隶属地级市名称才能进行列合并。</p>
<p>以下是我从网络上找到并整理的山东省17地级市，137县级（包含县级市）行政单位的代号，名称，经纬度信息。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/mapdata/Country/shandong"</span>)</div><div class="line">shandong_city&lt;-read.xlsx(<span class="string">"City.xlsx"</span>,sheetName=<span class="string">"City"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">shandong_district&lt;-read.xlsx(<span class="string">"City.xlsx"</span>,sheetName=<span class="string">"District"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line"></div><div class="line">shandong_district&lt;-</div><div class="line">unite(shandong_district,address,City,Name,sep=<span class="string">""</span>)</div><div class="line">shandong_district&lt;-transform(shandong_district,Adress=paste0(<span class="string">"山东省"</span>,shandong_district$address))[,-<span class="number">1</span>][,c(<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)]</div><div class="line">names(shandong_district)[<span class="number">1</span>]&lt;-<span class="string">"address"</span></div></pre></td></tr></table></figure>
<p>通过以上shandong_district表中的城市、县级市名称字段合理规范以上五张表中的县级行政单位名称，总最终合并至表6——shandongdata注意五张表在同一个工作薄中。</p>
<h3 id="经纬度地址解析："><a href="#经纬度地址解析：" class="headerlink" title="经纬度地址解析："></a>经纬度地址解析：</h3><p>解析经纬度地址：这里调用百度地图的API解析县级市的经纬度地址：<br>（大家最好自己去注册百度地图开发者，然后申请免费秘钥）</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">baidu_lng &lt;- c()</div><div class="line">baidu_lat &lt;- c()</div><div class="line">ak&lt;-<span class="string">"X8zlxPUdSe2weshrZ1WqnWxb43cfBI2N"</span></div><div class="line">address&lt;-shandong_district$address</div><div class="line"><span class="keyword">for</span>(location <span class="keyword">in</span> address)&#123;</div><div class="line">url&lt;-paste(<span class="string">"http://api.map.baidu.com/geocoder/v2/?ak="</span>,ak,<span class="string">"&amp;callback=renderOption&amp;output=json&amp;address="</span>,location,sep=<span class="string">""</span>)</div><div class="line">url_string &lt;- URLencode(url)                  </div><div class="line">json&lt;- readLines(url_string, warn=<span class="literal">F</span>)         </div><div class="line">geo &lt;- fromJSON(substr(json,regexpr(<span class="string">"\\("</span>,json)+<span class="number">1</span>,nchar(json)-<span class="number">1</span>))  </div><div class="line">lng&lt;-geo$result$location$lng</div><div class="line">lat&lt;-geo$result$location$lat                 </div><div class="line">baidu_lng&lt;-c(baidu_lng,lng)                 </div><div class="line">baidu_lat&lt;-c(baidu_lat,lat)</div><div class="line">&#125;</div><div class="line">result&lt;-data.frame(address=address,longitude=baidu_lng,latitude=baidu_lat,stringsAsFactors=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p>将县级市数据与经纬度数据合并：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">shandong_district_data&lt;-merge(shandong_district,result,by=<span class="string">"address"</span>)[,-c(<span class="number">3</span>,<span class="number">4</span>)]</div><div class="line">names(shandong_district_data)[<span class="number">3</span>:<span class="number">4</span>]&lt;-c(<span class="string">"lon"</span>,<span class="string">"lat"</span>)</div><div class="line">shandong_district_data$address&lt;-as.character(shandong_district_data$address)</div><div class="line">shandong_zhibiao_data&lt;-read.xlsx(<span class="string">"shddata.xlsx"</span>,sheetName=<span class="string">"Shandongdata"</span>,header=<span class="literal">T</span>,encoding=<span class="string">'UTF-8'</span>,stringsAsFactors=<span class="literal">FALSE</span>)</div><div class="line">names(shandong_zhibiao_data)[<span class="number">2</span>]&lt;-<span class="string">"address"</span></div><div class="line">shandong_district_data&lt;-merge(shandong_district_data,shandong_zhibiao_data,by=<span class="string">"address"</span>)</div></pre></td></tr></table></figure>
<p>以上得到了山东省所有县级行政单位的点坐标信息。</p>
<h3 id="导入背景地图素材数据"><a href="#导入背景地图素材数据" class="headerlink" title="导入背景地图素材数据"></a>导入背景地图素材数据</h3><p>读图背景素材导入：</p>
<p><strong>素材一：山东省县级地图素材：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mymap&lt;-readOGR(<span class="string">"."</span>,<span class="string">"map"</span>,encoding = <span class="string">"UTF-8"</span>,verbose=<span class="literal">FALSE</span>)</div><div class="line">myShape &lt;- fortify(mymap)  </div><div class="line">x &lt;- mymap@data</div><div class="line">names(x)[<span class="number">3</span>]&lt;-<span class="string">"Code"</span>   </div><div class="line">xs &lt;- data.frame(x,ID=seq(<span class="number">0</span>:<span class="number">139</span>)-<span class="number">1</span>)[,c(<span class="number">3</span>,<span class="number">8</span>)]</div><div class="line">shandong_district_map_data&lt;-merge(myShape,xs,by.x=<span class="string">"id"</span>,by.y=<span class="string">"ID"</span>,type=<span class="string">"full"</span>)[,-c(<span class="number">5</span>,<span class="number">6</span>)]</div></pre></td></tr></table></figure>
<p>很遗憾，我们从以上素材中所提取的城市名称数据，可能涉及到编码的问题，中文全部成为了乱码，这样我们前期整理的山东省GDP及公共财政相关数据的中名称便无法与该地图进行匹配，好在行政区代码还在，这样我们就可以从之前找到行政区划代码和名称信息进行匹配。</p>
<p>将县级行政区地图与县级市进行匹配，获得信息完整的县级地图数据。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shandong_district_map_data&lt;-merge(shandong_district_map_data,shandong_district_data[,-c(<span class="number">3</span>,<span class="number">4</span>)],by=<span class="string">"Code"</span>,all.x=<span class="literal">TRUE</span>)</div><div class="line">shandong_district_map_data&lt;-shandong_district_map_data[order(shandong_district_map_data$order),]</div></pre></td></tr></table></figure>
<p><strong>素材2：山东省市级地图素材：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CHN_adm2 &lt;- readOGR(<span class="string">"D:/R/rstudy/CHN_adm/CHN_adm2.shp"</span>) </div><div class="line">CHN_adm2_1 &lt;- fortify(CHN_adm2)  </div><div class="line">CHN_adm2_1$id&lt;-as.numeric(CHN_adm2_1$id)</div><div class="line">shx &lt;- CHN_adm2@data          </div><div class="line">shxs &lt;- data.frame(shx,id=seq(<span class="number">0</span>:<span class="number">344</span>)-<span class="number">1</span>)        </div><div class="line">china_map_data &lt;- join(CHN_adm2_1,shxs,type=<span class="string">"full"</span>) </div><div class="line">shandong_city_map_data&lt;-subset(china_map_data,NAME_1==c(<span class="string">"Shandong"</span>))[,c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">14</span>)]</div><div class="line">mydata&lt;-read.csv(<span class="string">"D:/R/rstudy/State/huanbohai.csv"</span>,header=<span class="literal">T</span>)[,-<span class="number">3</span>]</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#匹配市级行政单位信息：</span></div><div class="line">shandong_city_map_data &lt;-join(shandong_city_map_data,mydata,by=<span class="string">"NAME_2"</span>,type=<span class="string">"left"</span>)</div></pre></td></tr></table></figure>
<h3 id="接下来整合指标信息与地图作图数据："><a href="#接下来整合指标信息与地图作图数据：" class="headerlink" title="接下来整合指标信息与地图作图数据："></a>接下来整合指标信息与地图作图数据：</h3><p><strong>山东省市级地图作图数据：</strong></p>
<p>因为我们之前获取的指标数据是按照县级行政区划整理的，这里需要使用聚合函数，整理成市级的。因为增长比率数据汇总聚合后意义不大，即便是平均值也不是很有意义，所以这里只用市级的公共预算支出和GDP数据。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">shandongdata&lt;-data.table(shandong_zhibiao_data)</div><div class="line">shandongnewdata&lt;-shandongdata[,.(SUM_BudgetScale=sum(BudgetScale),SUM_GDPScale=sum(GDPScale)),by=City]</div><div class="line">shandong_city_map_data&lt;-merge(shandong_city_map_data,shandongnewdata,by.x=<span class="string">"city"</span>,by.y=<span class="string">"City"</span>) </div><div class="line">shandong_fill_map_data&lt;-shandongnewdata</div><div class="line">shandong_fill_map_data$city&lt;-paste0(shandong_fill_map_data$City,<span class="string">"市"</span>)</div><div class="line">shandong_fill_map_data&lt;-shandong_fill_map_data[,c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>)]</div><div class="line">shandong_fill_map_data&lt;-merge(shandong_fill_map_data[,-<span class="number">1</span>],shandong_city,by.x=<span class="string">"city"</span>,by.y=<span class="string">"City"</span>)</div><div class="line">shandong_fill_map_data&lt;-shandong_fill_map_data[,c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>)]</div></pre></td></tr></table></figure>
<p>现在所有的数据已经整理完毕，我们一共得到了四张有用的数据集：</p>
<ul>
<li>市级地图数据——shandong_city_map_data（含城市指标）  </li>
<li>县级地图数据——shandong_district_map_data（含17个地级市指标及经纬度）  </li>
<li>市级指标数据——shandong_fill_map_data（含城市经纬度及两个指标：GDP规模和公众预算规模）  </li>
<li>县级指标数据——shandong_district_data（含137个行政县指标及经纬度和五个指标数据，GDP规模、GDP增速，人均GDP增速，预算规模、预算增速）。  </li>
</ul>
<p>因为地级市数据限制，只有两个指标（GDP规模和预算规模），所以，最多只能制作两张地图。<br>县级行政区数据比较齐全，这里计划的呈现的维度是GDP规模与GDP增速，GDP规模与人均GDP增速，GDP增速与人均GDP增速。预算规模和预算增速。合计一共四张图。</p>
<h3 id="接下来我们进入地图制作环节："><a href="#接下来我们进入地图制作环节：" class="headerlink" title="接下来我们进入地图制作环节："></a>接下来我们进入地图制作环节：</h3><p><strong>市级地图：（这两将包含两幅地图：GDP规模、公共预算收入规模）</strong></p>
<blockquote>
<p>为了更加明显的呈现出各个地级市的GDP和预算规模，这里我准备将两个指标的连续数值型变量切割成有序分段因子变量。</p>
</blockquote>
<p>首先浏览下各市GDP的极差分布：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; range(shandong_city_map_data$SUM_GDPScale)</div><div class="line">[<span class="number">1</span>]  <span class="number">703</span> <span class="number">9901</span></div></pre></td></tr></table></figure>
<p>所以这里范围使用0~10000，均分为5组；</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shandong_city_map_data$FA_SUM_GDPScale&lt;-cut(shandong_city_map_data$SUM_GDPScale, breaks=c(<span class="number">0</span>,<span class="number">1500</span>,<span class="number">3000</span>,<span class="number">4500</span>,<span class="number">6000</span>,<span class="number">10000</span>),labels=c(<span class="string">'0~1500'</span>,<span class="string">'1500~3000'</span>,<span class="string">'3000~4500'</span>,<span class="string">'4500~6000'</span>,<span class="string">'6000~10000'</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"GDPScale.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=shandong_city_map_data,aes(x=long,y=lat,group=group,fill=FA_SUM_GDPScale),col=<span class="string">"white"</span>,size=<span class="number">.2</span>)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各地级市2016年GDP规模分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+   </div><div class="line">     geom_text(data=shandong_fill_map_data,aes(x=long,y=lat,label=city),family=<span class="string">"myfont"</span>,fontface=<span class="string">"plain"</span>,size=<span class="number">6</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18), </span></div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          legend.text=element_text(hjust=-<span class="number">5</span>,size=<span class="number">12</span>),          </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/GDPScale.png" width="1200" height="640" alt="GDPScale" align="center"><br></div>


<hr>
<p><strong>浏览下各市公共预算规模的极差分布：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; range(shandong_city_map_data$SUM_BudgetScale)</div><div class="line">[<span class="number">1</span>]   <span class="number">47.2</span> <span class="number">1003.3</span></div></pre></td></tr></table></figure>
<p>使用直方图大致了解下最终的预算规模数据分布；</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(shandong_city_map_data,aes(SUM_BudgetScale))+geom_histogram()</div></pre></td></tr></table></figure>
<p>所以这里范围使用0~1200，不等分为5组；</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">shandong_city_map_data$FA_SUM_BudgetScale&lt;-cut(shandong_city_map_data$SUM_BudgetScale, breaks=c(<span class="number">0</span>,<span class="number">150</span>,<span class="number">300</span>,<span class="number">450</span>,<span class="number">600</span>,<span class="number">1005</span>),labels=c(<span class="string">'0~150'</span>,<span class="string">'150~300'</span>,<span class="string">'300~450'</span>,<span class="string">'450~600'</span>,<span class="string">'600~       '</span>),order=<span class="literal">TRUE</span>) </div><div class="line"></div><div class="line">CairoPNG(file=<span class="string">"BudgetScale.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_polygon(data=shandong_city_map_data,aes(x=long,y=lat,group=group,fill=FA_SUM_BudgetScale),col=<span class="string">"white"</span>,size=<span class="number">.2</span>)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"OrRd"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各地级市2016年公共预算收入规模分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+       </div><div class="line"> guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+   </div><div class="line"> geom_text(data=shandong_fill_map_data,aes(x=long,y=lat,label=city),family=<span class="string">"myfont"</span>,fontface=<span class="string">"plain"</span>,size=<span class="number">6</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18), </span></div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          legend.text=element_text(hjust=-<span class="number">5</span>,size=<span class="number">12</span>),          </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.08</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/BudgetScale.png" width="1200" height="640" alt="BudgetScale" align="center"><br></div>

<hr>
<p>以上是地级市数据可视化两个维度的全部代码，通过2016GDP规模以公共预算支出的规模对比可以发现，山东省地区间经济发展水平差异还是很大的，其中青岛在两个指标上都遥遥领先，也是全国为数不多的地级市发展好于省会的城市之一。</p>
<p>县级地图，以下过程将会输出五福图形，展示山东省县级行政区在GDP和预算规模的绝对量、增长率等各维度信息。分别包含GDP规模与增速、GDP规模与人均GDP增速、预算规模与预算增速、GDP规模与预算规模、GDP增速与预算增速对比。</p>
<p>为了与上面过程保持一致，这里的绝对量还是要换算成分段因子变量，这样比较适合通过分段颜色来更好的呈现山东省各县的相关数据信息。</p>
<p><strong>首先还是简略查看下GDP的极差分布：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">range(shandong_district_map_data$GDPScale)</div><div class="line">[<span class="number">1</span>]   <span class="number">67</span> <span class="number">2766</span></div><div class="line"></div><div class="line">shandong_district__data</div><div class="line">ggplot(shandong_district_map_data,aes(GDPScale))+geom_histogram()</div></pre></td></tr></table></figure>
<p>可以看出来，县级地区GDP的分布比较诡异，出现了一个特别的值，其他县市都集中在1200以下。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sqldf(<span class="string">"SELECT address,Max(GDPScale)  AS  GDPmax  FROM shandong_district_data"</span>)</div><div class="line">             address GDPmax</div><div class="line"><span class="number">1</span> 山东省青岛市黄岛区   <span class="number">2766</span></div></pre></td></tr></table></figure>
<p>果然青岛市各县GDP黄岛区占了大头儿。如果数据分布不是很规律的话，平均分组可能 导致有些组没数据，有些组特别集中的情况。</p>
<p>这里尝试着对各县GDP进行分组，期待能够分组合理的利用可视化呈现的分组。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">shandong_district_map_data$FA_GDPScale&lt;-cut(shandong_district_map_data$GDPScale, breaks=c(<span class="number">0</span>,<span class="number">300</span>,<span class="number">600</span>,<span class="number">900</span>,<span class="number">1200</span>,<span class="number">3000</span>),labels=c(<span class="string">'0~300'</span>,<span class="string">'300~600'</span>,<span class="string">'600~900'</span>,<span class="string">'900~1200'</span>,<span class="string">'1200~3000'</span>),order=<span class="literal">TRUE</span>) </div><div class="line">summary(shandong_district_map_data$FA_GDPScale)</div><div class="line"></div><div class="line">    <span class="number">0</span>~<span class="number">300</span>   <span class="number">300</span>~<span class="number">600</span>   <span class="number">600</span>~<span class="number">900</span>  <span class="number">900</span>~<span class="number">1200</span> <span class="number">1200</span>~<span class="number">3000</span> </div><div class="line">     <span class="number">2930</span>      <span class="number">2549</span>      <span class="number">1064</span>       <span class="number">539</span>        <span class="number">85</span> </div><div class="line"></div><div class="line">text&lt;-arrange(shandong_district_data,desc(GDPScale))%&gt;%select(Country,lon,lat,GDPScale)</div><div class="line">text&lt;-text[<span class="number">1</span>:<span class="number">10</span>,]</div></pre></td></tr></table></figure>
<p><strong>山东省各行政县（包含县级市）2016年GDP规模&amp;增速分布</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"DistrictGDPScale.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=shandong_district_map_data,aes(x=long,y=lat,group=group,fill=FA_GDPScale),col=<span class="string">"grey60"</span>,size=<span class="number">.2</span>)+</div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=GDPGrowth),shape=<span class="number">21</span>,fill=<span class="string">"#FB832D"</span>,col=<span class="string">"#ED7D31"</span>,alpha=<span class="number">.6</span>)+ <span class="comment">#ED7D31E02939</span></div><div class="line">scale_size(range=c(<span class="number">1</span>,<span class="number">8</span>),guide=<span class="literal">FALSE</span>)+ </div><div class="line">scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各行政县（包含县级市）2016年GDP规模&amp;增速分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+   </div><div class="line">     geom_text(data=text,aes(x=lon,y=lat-<span class="number">.1</span>,label=Country),family=<span class="string">"myfont"</span>,fontface=<span class="string">"plain"</span>,size=<span class="number">4</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18), </span></div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          legend.text=element_text(hjust=-<span class="number">5</span>,size=<span class="number">12</span>),          </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/DistrictGDPScale.png" width="1200" height="640" alt="DistrictGDPScale" align="center"><br></div>

<hr>
<p><strong>山东省各行政县（包含县级市）2016年GDP规模&amp;人均GDP增速分布</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"DistrictPerGDPScale.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=shandong_district_map_data,aes(x=long,y=lat,group=group,fill=FA_GDPScale),col=<span class="string">"grey60"</span>,size=<span class="number">.2</span>)+</div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=PerGDPGrowth),shape=<span class="number">21</span>,fill=<span class="string">"#098154"</span>,col=<span class="string">"#ED7D31"</span>,alpha=<span class="number">.6</span>)+ <span class="comment">#ED7D31E02939</span></div><div class="line">scale_size(range=c(<span class="number">1</span>,<span class="number">8</span>),guide=<span class="literal">FALSE</span>)+ </div><div class="line">scale_fill_brewer(palette=<span class="string">"OrRd"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各行政县（包含县级市）2016年GDP规模&amp;人均GDP增速分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+   </div><div class="line">     geom_text(data=text,aes(x=lon,y=lat-<span class="number">.1</span>,label=Country),family=<span class="string">"myfont"</span>,fontface=<span class="string">"plain"</span>,size=<span class="number">4</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18), </span></div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          legend.text=element_text(hjust=-<span class="number">5</span>,size=<span class="number">12</span>),          </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.05</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/DistrictPerGDPScale.png" width="1200" height="640" alt="DistrictPerGDPScale" align="center"><br></div>



<p>除了GDP之外，还有另一个规模性指标——预算规模，接下来，我们针对预算规模来分析。</p>
<p>查看各县预算规模的极差分布状况。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">summary(shandong_district_map_data$BudgetScale)</div><div class="line"></div><div class="line">  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    <span class="literal">NA</span><span class="string">'s </span></div><div class="line">   1.30   14.00   22.90   34.26   46.00  212.40     346 </div><div class="line"></div><div class="line">shandong_district_map_data$FA_BudgetScale&lt;-cut(shandong_district_map_data$BudgetScale, breaks=c(0,40,80,120,160,240),labels=c('<span class="number">0</span>~<span class="number">50</span><span class="string">','</span><span class="number">50</span>~<span class="number">100</span><span class="string">','</span><span class="number">100</span>~<span class="number">150</span><span class="string">','</span><span class="number">150</span>~<span class="number">200</span><span class="string">','</span><span class="number">200</span>~<span class="number">250</span><span class="string">'),order=TRUE) </span></div><div class="line"></div><div class="line">&gt; summary(shandong_district_map_data$FA_BudgetScale)</div><div class="line">   0~50  50~100 100~150 150~200 200~250    NA's </div><div class="line">   <span class="number">4999</span>    <span class="number">1544</span>     <span class="number">521</span>      <span class="number">53</span>      <span class="number">50</span>     <span class="number">346</span> </div><div class="line"></div><div class="line">text1&lt;-arrange(shandong_district_data,desc(BudgetScale))%&gt;%select(Country,lon,lat,BudgetScale)</div><div class="line">text1&lt;-text1[<span class="number">1</span>:<span class="number">10</span>,]</div></pre></td></tr></table></figure>
<p><strong>山东省各行政县（包含县级市）2016年公共预算收入规模&amp;增速分布</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; summary(shandong_district_data$BudgetGrowth)</div><div class="line">   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </div><div class="line">-<span class="number">15.600</span>   <span class="number">6.500</span>   <span class="number">9.500</span>   <span class="number">9.085</span>  <span class="number">11.400</span>  <span class="number">31.300</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"DistrictBudgetScale.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=shandong_district_map_data,aes(x=long,y=lat,group=group,fill=FA_BudgetScale),col=<span class="string">"grey60"</span>,size=<span class="number">.2</span>)+</div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=abs(BudgetGrowth)),shape=<span class="number">21</span>,fill=ifelse(shandong_district_data$BudgetGrowth&gt;<span class="number">0</span>,<span class="string">"#FB832D"</span>,<span class="string">"#014D64"</span>),col=<span class="string">"#ED7D31"</span>,alpha=<span class="number">.6</span>)+ <span class="comment">#气泡图颜色根据正负值分开填充</span></div><div class="line">scale_size(range=c(<span class="number">1</span>,<span class="number">8</span>),guide=<span class="literal">FALSE</span>)+ </div><div class="line">scale_fill_brewer(palette=<span class="string">"Greens"</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各行政县（包含县级市）2016年公共预算收入规模&amp;增速分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+       </div><div class="line">     guides(fill=guide_legend(reverse=<span class="literal">TRUE</span>,title=<span class="literal">NULL</span>))+   </div><div class="line">     geom_text(data=text1,aes(x=lon,y=lat-<span class="number">.1</span>,label=Country),family=<span class="string">"myfont"</span>,fontface=<span class="string">"plain"</span>,size=<span class="number">4</span>)+    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18), </span></div><div class="line">          legend.text.align=<span class="number">1</span>, </div><div class="line">          legend.text=element_text(hjust=-<span class="number">5</span>,size=<span class="number">12</span>),          </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/DistrictBudgetScale.png" width="1200" height="640" alt="DistrictBudgetScale" align="center"><br></div>


<p>以上三个维度分别展示了山东省各县GDP规模与增速指标、GDP规模与人均GDP增速指标、财政公共预算收入与增速指标的分布情况。</p>
<hr>
<p><strong>接下来我们在呈现各县GDP相对于公共预算收入规模的分布情况。</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"DistrictGDP&amp;Budget.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=shandong_district_map_data,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>)+</div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=GDPScale,fill=BudgetScale),shape=<span class="number">21</span>,col=<span class="string">"grey60"</span>,alpha=<span class="number">.8</span>)+ </div><div class="line">scale_size(range=c(<span class="number">1</span>,<span class="number">12</span>),guide=<span class="literal">FALSE</span>)+ </div><div class="line">scale_fill_gradient2(low=<span class="string">"#014D64"</span>,mid=<span class="string">"grey"</span>,high=<span class="string">"#C72E29"</span>,midpoint=range(na.omit(shandong_district_map_data$BudgetScale))/<span class="number">2</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各行政县（包含县级市）2016年GDP规模&amp;公共预算收入分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+   </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">114.8</span>, y=<span class="number">38.3</span>, label=<span class="string">"● 高（预算）"</span>, color= <span class="string">"#C72E29"</span>, size=<span class="number">6</span>) +    </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">114.8</span>, y=<span class="number">38</span>, label=<span class="string">"● 低（预算）"</span>, color= <span class="string">"#014D64"</span>, size=<span class="number">6</span>) +    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18),        </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/DistrictGDP&Budget.png" width="1200" height="640" alt="DistrictGDP&Budget" align="center"><br></div>


<p><strong>下面是关于人均GDP增速与各县公共预算收入增速之间的关系：</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">CairoPNG(file=<span class="string">"DistrictPerGDPGrowth&amp;BudgetGrodth.png"</span>,width=<span class="number">1200</span>,height=<span class="number">640</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>, <span class="string">"msyh.ttc"</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+ </div><div class="line">geom_polygon(data=shandong_district_map_data,aes(x=long,y=lat,group=group),col=<span class="string">"grey60"</span>,fill=<span class="string">"white"</span>,size=<span class="number">.2</span>)+</div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=GDPScale),shape=<span class="number">21</span>,fill=<span class="string">"transparent"</span>,col=<span class="string">"#014D64"</span>)+ </div><div class="line">geom_point(data=shandong_district_data,aes(x=lon,y=lat,size=BudgetScale),shape=<span class="number">21</span>,fill=<span class="string">"#C72E29"</span>,col=<span class="string">"transparent"</span>,alpha=<span class="number">.6</span>)+ </div><div class="line">scale_size(range=c(<span class="number">1</span>,<span class="number">12</span>),guide=<span class="literal">FALSE</span>)+ </div><div class="line">     coord_map(<span class="string">"polyconic"</span>) +</div><div class="line">     labs(title=<span class="string">"山东省各行政县（包含县级市）2016年GDP增速&amp;公共预算收入增速分布"</span>,subtitle=<span class="string">"单位：（亿元）"</span>,caption=<span class="string">"数据来源：山东省发展与改革委员会"</span>)+   </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">114.8</span>, y=<span class="number">38.3</span>, label=<span class="string">"○ GDP（增速）"</span>, color= <span class="string">"#014D64"</span>, size=<span class="number">6</span>) + </div><div class="line">     annotate(<span class="string">"text"</span>, x=<span class="number">114.8</span>, y=<span class="number">38</span>,   label=<span class="string">"● 预算（预算）"</span>, color= <span class="string">"#C72E29"</span>, size=<span class="number">6</span>) +    </div><div class="line">     theme(</div><div class="line">          title=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>),</div><div class="line">          plot.title=element_text(size=<span class="number">24</span>), </div><div class="line">          plot.subtitle=element_text(family=<span class="string">"myfont"</span>,size=<span class="number">18</span>), </div><div class="line">          <span class="comment">#plot.caption=element_text(family="myfont",size=18),        </span></div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          legend.position = c(<span class="number">0.02</span>,<span class="number">0.8</span>),</div><div class="line">          plot.caption=element_text(hjust=<span class="number">0</span>)</div><div class="line">          )</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqfmz6sk5.bkt.clouddn.com/DistrictPerGDPGrowth&BudgetGrodth.png" width="1200" height="640" alt="DistrictPerGDPGrowth&BudgetGrodth" align="center"><br></div>

<p>以上过程确实有些烧脑，大篇幅的代码，可以就是代码驱动的可视化，让数据呈现更为直观，数据可视化本就服务于数据呈现，无助于数据呈现的可视化相当于数据灾难。</p>
<p>本篇算是学习R以来比较完善的一篇以实战为目的的案例练习，虽然写的有些杂乱，但是过程还是学习了很东西，补了很多平时遗忘的漏洞。</p>
<hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> 数据可视化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[emoji表情可视化北京历史天气]]></title>
      <url>/2017/05/23/emoji%E8%A1%A8%E6%83%85%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8C%97%E4%BA%AC%E5%8E%86%E5%8F%B2%E5%A4%A9%E6%B0%94/</url>
      <content type="html"><![CDATA[<h3 id="数据抓取："><a href="#数据抓取：" class="headerlink" title="数据抓取："></a>数据抓取：</h3><p>加载包<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(RCurl)</div><div class="line"><span class="keyword">library</span>(XML)</div><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(lubridate)</div><div class="line"><span class="keyword">library</span>(<span class="string">"DT"</span>)</div><div class="line"><span class="keyword">library</span>(openair)</div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line"><span class="keyword">library</span>(scales)</div><div class="line"><span class="keyword">library</span>(showtext)</div><div class="line"><span class="keyword">library</span>(grid)</div><div class="line"><span class="keyword">library</span>(Cairo)</div></pre></td></tr></table></figure></p>
<p>用更加优雅的方式加载包：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">all.pcg&lt;-c(<span class="string">"RCurl"</span>,<span class="string">"XML"</span>,<span class="string">"dplyr"</span>,<span class="string">"ggplot2"</span>,<span class="string">"stringr"</span>,<span class="string">"rvest"</span>,<span class="string">"lubridate"</span>,<span class="string">"DT"</span>,<span class="string">"scales"</span>,<span class="string">"showtext"</span>,<span class="string">"grid"</span>,<span class="string">"Cairo"</span>) </div><div class="line">req.pcg &lt;- <span class="keyword">function</span>(pcg)&#123; </div><div class="line">new &lt;- pcg[!(pcg %<span class="keyword">in</span>% installed.packages()[, <span class="string">"Package"</span>])] </div><div class="line"><span class="keyword">if</span> (length(new)) install.packages(new, dependencies = <span class="literal">T</span>) </div><div class="line">sapply(req.pcg, <span class="keyword">require</span>, ch = <span class="literal">T</span>) </div><div class="line">&#125; </div><div class="line">req.pcg(all.pcg)</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>构建历史天气数据网页链接：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">year&lt;-<span class="number">2014</span>:<span class="number">2016</span></div><div class="line">month&lt;-sprintf(<span class="string">"%02d"</span>,<span class="number">1</span>:<span class="number">12</span>)</div><div class="line">url&lt;- paste(<span class="string">"https://www.aqistudy.cn/historydata/daydata.php?city=北京&amp;month="</span>,expand.grid(year,month)$Var1</div><div class="line">,expand.grid(year,month)$Var2,sep=<span class="string">""</span>)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>以上过程构造了北京市2014~2016年三整年的历史空气质量数据：</p>
</blockquote>
<p>测试单段代码：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">先写完一个看下具体情况:</div><div class="line">tbls&lt;-read_html(url[<span class="number">1</span>],encoding=<span class="string">"utf-8"</span>)%&gt;%html_table(.,header=<span class="literal">TRUE</span>,trim=<span class="literal">TRUE</span>);tbls&lt;-tbls[[<span class="number">1</span>]]</div><div class="line"></div><div class="line">构建循环下载函数：</div><div class="line">mytable&lt;-data.frame()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> url)&#123;</div><div class="line">Sys.sleep(sample(<span class="number">1</span>:<span class="number">5</span>,<span class="number">1</span>))</div><div class="line">fun&lt;-<span class="keyword">function</span>(m)&#123;</div><div class="line">table&lt;-read_html(m,encoding=<span class="string">"utf-8"</span>)%&gt;%html_table(.,header=<span class="literal">TRUE</span>,trim=<span class="literal">TRUE</span>)</div><div class="line">table&lt;-table[[<span class="number">1</span>]]</div><div class="line">&#125;</div><div class="line">mytable&lt;-rbind(mytable,fun(i))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h3 id="数据清洗与处理："><a href="#数据清洗与处理：" class="headerlink" title="数据清洗与处理："></a>数据清洗与处理：</h3><p>预览一下以上数据结构：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dim(mytable)</div><div class="line">[<span class="number">1</span>] <span class="number">1096</span>   <span class="number">11</span></div><div class="line"></div><div class="line">attributes(mytable)$names</div><div class="line"></div><div class="line"> [<span class="number">1</span>] <span class="string">"日期"</span>     <span class="string">"AQI"</span>      <span class="string">"范围"</span>     <span class="string">"质量等级"</span> <span class="string">"PM2.5"</span>    <span class="string">"PM10"</span>     <span class="string">"SO2"</span>     </div><div class="line"> [<span class="number">8</span>] <span class="string">"CO"</span>       <span class="string">"NO2"</span>      <span class="string">"O3"</span>       <span class="string">"排名"</span></div></pre></td></tr></table></figure></p>
<p>使用DT表格预览数据集：<br>datatable(mytable)</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mytable&lt;-read.csv(<span class="string">"beijingtianqi.csv"</span>,stringsAsFactors=<span class="literal">FALSE</span>,check.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#查看数据结构和变量属性是否符合分析需要：</span></div><div class="line">str(mytable)</div><div class="line"><span class="string">'data.frame'</span>:	<span class="number">1096</span> obs. of  <span class="number">11</span> variables:</div><div class="line"> $ 日期    : chr  <span class="string">"2014-01-01"</span> <span class="string">"2014-01-02"</span> <span class="string">"2014-01-03"</span> <span class="string">"2014-01-04"</span> <span class="keyword">...</span></div><div class="line"> $ AQI     : int  <span class="number">87</span> <span class="number">119</span> <span class="number">81</span> <span class="number">151</span> <span class="number">121</span> <span class="number">181</span> <span class="number">144</span> <span class="number">29</span> <span class="number">44</span> <span class="number">86</span> <span class="keyword">...</span></div><div class="line"> $ 范围    : chr  <span class="string">"76~99"</span> <span class="string">"80~218"</span> <span class="string">"38~202"</span> <span class="string">"87~229"</span> <span class="keyword">...</span></div><div class="line"> $ 质量等级: chr  <span class="string">"良"</span> <span class="string">"轻度污染"</span> <span class="string">"良"</span> <span class="string">"中度污染"</span> <span class="keyword">...</span></div><div class="line"> $ PM2.5   : num  <span class="number">45</span> <span class="number">111.4</span> <span class="number">46.5</span> <span class="number">114.4</span> <span class="number">90.5</span> <span class="keyword">...</span></div><div class="line"> $ PM10    : num  <span class="number">111.3</span> <span class="number">168.5</span> <span class="number">97.7</span> <span class="number">147</span> <span class="number">117.5</span> <span class="keyword">...</span></div><div class="line"> $ SO2     : num  <span class="number">27.7</span> <span class="number">69.3</span> <span class="number">29</span> <span class="number">40</span> <span class="number">35.9</span> <span class="number">46.3</span> <span class="number">34.4</span> <span class="number">13</span> <span class="number">19.3</span> <span class="number">53.2</span> <span class="keyword">...</span></div><div class="line"> $ CO      : num  <span class="number">1.5</span> <span class="number">3.43</span> <span class="number">1.31</span> <span class="number">2.82</span> <span class="number">2.31</span> <span class="keyword">...</span></div><div class="line"> $ NO2     : num  <span class="number">61.9</span> <span class="number">93.1</span> <span class="number">52</span> <span class="number">75.4</span> <span class="number">67</span> <span class="number">68.2</span> <span class="number">59.8</span> <span class="number">21.1</span> <span class="number">34.5</span> <span class="number">70.5</span> <span class="keyword">...</span></div><div class="line"> $ O3      : int  <span class="number">64</span> <span class="number">17</span> <span class="number">65</span> <span class="number">10</span> <span class="number">57</span> <span class="number">11</span> <span class="number">55</span> <span class="number">59</span> <span class="number">65</span> <span class="number">28</span> <span class="keyword">...</span></div><div class="line"> $ 排名    : int  <span class="number">32</span> <span class="number">66</span> <span class="number">41</span> <span class="number">112</span> <span class="number">67</span> <span class="number">104</span> <span class="number">85</span> <span class="number">9</span> <span class="number">25</span> <span class="number">58</span> <span class="keyword">...</span></div></pre></td></tr></table></figure>
<hr>
<p>定义日期变量格式：<br></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mytable$日期&lt;-as.Date(mytable$日期)</div><div class="line"></div><div class="line">names(mytable)[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">11</span>)]&lt;-c(<span class="string">"date"</span>,<span class="string">"Range"</span>,<span class="string">"Level"</span>,<span class="string">"Order"</span>)</div><div class="line">mytable$Year&lt;-year(mytable$date)</div><div class="line"></div><div class="line">breaks&lt;-c(<span class="number">0</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">500</span>)</div><div class="line">label&lt;-c(<span class="string">"excellent"</span>,<span class="string">"good"</span>,<span class="string">"Mild pollution"</span>,<span class="string">"moderate pollution"</span>,<span class="string">"heavy pollution "</span>,<span class="string">"serious pollution"</span>)</div><div class="line"></div><div class="line">filter(mytable,Year==<span class="number">2014</span>)%&gt;%calendarPlot(.,pollutant=<span class="string">"AQI"</span>,breaks=breaks,labels=label,year=<span class="number">2014</span>)</div><div class="line">filter(mytable,Year==<span class="number">2015</span>)%&gt;%calendarPlot(.,pollutant=<span class="string">"AQI"</span>,breaks=breaks,labels=label,year=<span class="number">2015</span>)</div><div class="line">filter(mytable,Year==<span class="number">2016</span>)%&gt;%calendarPlot(.,pollutant=<span class="string">"AQI"</span>,breaks=breaks,labels=label,year=<span class="number">2016</span>)</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/calendar1.png" width="550" height="400" alt="calendar1" align="center"><br></div>



<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/calendar2.png" width="550" height="400" alt="calendar2" align="center"><br></div>



<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/calendar3.png" width="550" height="400" alt="calendar3" align="center"><br></div>


<h3 id="可视化阶段"><a href="#可视化阶段" class="headerlink" title="可视化阶段"></a>可视化阶段</h3><p>接下来让我们疯狂一把，将北京三年的空气质量指标AQI用一幅图形尽数呈现。<br></p>
<h4 id="数据整体与备份："><a href="#数据整体与备份：" class="headerlink" title="数据整体与备份："></a>数据整体与备份：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mydata1&lt;-mytable</div><div class="line">write.table (mytable,<span class="string">"beijingtianqi.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">mydata11&lt;-mydata1[c(<span class="string">"date"</span>,<span class="string">"AQI"</span>,<span class="string">"Year"</span>)]</div><div class="line">myasst&lt;-mydata11[mydata11$date %<span class="keyword">in</span>% as.Date(c(<span class="string">"2014-01-01"</span>,<span class="string">"2015-01-01"</span>,<span class="string">"2016-01-01"</span>)),]</div><div class="line">mydata11&lt;-rbind(mydata11,myasst)</div></pre></td></tr></table></figure>
<p>因为作图需要，2016年是闰年，2月有29天，14、15年均为28天，会导致最终数据不等长，影响之后的图表制作过程，这里暂且将其去除。<br><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mydata11&lt;-arrange(mydata11,Year,date)</div><div class="line">mydata11&lt;-mydata11[mydata11$date!=<span class="string">"2016-02-29"</span>,]</div><div class="line">mydata11$Month&lt;-month(mydata11$date)</div><div class="line">mydata11$Monthdata&lt;--<span class="number">5</span></div><div class="line">mydata11$Monthjo&lt;-ifelse(mydata11$Month%%<span class="number">2</span>==<span class="number">0</span>,<span class="string">"A"</span>,<span class="string">"B"</span>)</div><div class="line">circlemonth&lt;-seq(<span class="number">0</span>,<span class="number">180</span>,length=<span class="number">17</span>)</div><div class="line">circlebj&lt;-rep(c(-circlemonth[<span class="number">1</span>:<span class="number">3</span>],rev(circlemonth[<span class="number">1</span>:<span class="number">3</span>])),<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">mydata11$ID&lt;-rep(seq(from=<span class="number">0</span>,to=<span class="number">365</span>),<span class="number">3</span>)</div><div class="line">mydata11$Year&lt;-factor(mydata11$Year,order=<span class="literal">T</span>)</div><div class="line">mydata11$Asst&lt;-<span class="number">5</span></div><div class="line">mydata11$Asst[mydata11$Year==<span class="number">2015</span>]&lt;-<span class="number">10</span></div><div class="line">mydata11$Asst[mydata11$Year==<span class="number">2016</span>]&lt;-<span class="number">15</span></div><div class="line">mydata11A&lt;-mydata11[mydata11$Year==<span class="number">2014</span>&amp;mydata11$Monthjo==<span class="string">"A"</span>,]</div><div class="line">mydata11B&lt;-mydata11[mydata11$Year==<span class="number">2014</span>&amp;mydata11$Monthjo==<span class="string">"B"</span>,]</div><div class="line"></div><div class="line">mydata11$Quarter&lt;-quarter(mydata11$date)</div><div class="line">mydata11$Quarterdata&lt;-<span class="number">20</span></div><div class="line">mydata11C&lt;-mydata11%&gt;%filter(mydata11$Year==<span class="number">2014</span>)%&gt;%filter(Quarter %<span class="keyword">in</span>% c(<span class="number">1</span>,<span class="number">3</span>)) </div><div class="line">mydata11D&lt;-mydata11%&gt;%filter(mydata11$Year==<span class="number">2014</span>)%&gt;%filter(Quarter %<span class="keyword">in</span>% c(<span class="number">2</span>,<span class="number">4</span>)) </div><div class="line">circlequarter&lt;-seq(<span class="number">45</span>,<span class="number">315</span>,length=<span class="number">4</span>)</div><div class="line">circleqd&lt;-rep(c(-circlequarter[<span class="number">1</span>],circlequarter[<span class="number">1</span>]),<span class="number">2</span>)</div><div class="line"></div><div class="line">mydata11$FADD&lt;-cut(mydata11$AQI,breaks=c(<span class="number">0</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">500</span>),labels=c(<span class="string">"0~50"</span>,<span class="string">"51~100"</span>,<span class="string">"101~150"</span>,<span class="string">"151~200"</span>,<span class="string">"201~300"</span>,<span class="string">"301~500"</span>),order=<span class="literal">T</span>)</div></pre></td></tr></table></figure>
<h4 id="瓦片图可视化历史天气"><a href="#瓦片图可视化历史天气" class="headerlink" title="瓦片图可视化历史天气"></a>瓦片图可视化历史天气</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#作图方法1：（简便方法，但效果不太好调整）</span></div><div class="line">CairoPNG(file=<span class="string">"ECOCirclejj.png"</span>,width=<span class="number">1488</span>,height=<span class="number">996</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=mydata11)+</div><div class="line">geom_tile(aes(ID,Year,fill=FADD))+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>)+</div><div class="line">expand_limits(ylim=c(-<span class="number">4</span>,<span class="number">4</span>))+</div><div class="line">scale_fill_brewer(palette=<span class="string">"YlOrRd"</span>,type=<span class="string">"seq"</span>,direction=<span class="number">1</span>,guide=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">labs(title=<span class="string">"2014~2016年度北京市空气质量水平可视化"</span>,subtitle=<span class="string">"数据根据AQI指标水平进行分段分割"</span>,caption=<span class="string">"Source：https://www.aqistudy.cn/"</span>,x=<span class="string">""</span>,y=<span class="string">""</span>,fill=<span class="string">""</span>)+</div><div class="line">theme(</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank(),</div><div class="line">panel.background=element_blank(),</div><div class="line">panel.grid=element_blank(),</div><div class="line">panel.border=element_blank(),</div><div class="line">legend.key.size=unit(<span class="number">1.2</span>,<span class="string">'cm'</span>),</div><div class="line">legend.key.height=unit(<span class="number">1</span>,<span class="string">'cm'</span>),</div><div class="line">legend.text.align=<span class="number">1</span>, </div><div class="line">legend.position=c(<span class="number">1</span>,<span class="number">0.95</span>),legend.justification=c(<span class="number">1</span>,<span class="number">1</span>),</div><div class="line">legend.text=element_text(size=<span class="number">20</span>,hjust=<span class="number">3</span>,vjust=<span class="number">3</span>,face=<span class="string">"bold"</span>),</div><div class="line">plot.background=element_blank(),</div><div class="line">plot.title=element_text(size=<span class="number">50</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.subtitle=element_text(size=<span class="number">35</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.caption=element_text(size=<span class="number">25</span>,hjust=<span class="number">0</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">plot.margin=unit(c(<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>),<span class="string">"lines"</span>)</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/ECOCircle4.png" width="750" height="500" alt="ECOCircle4" align="center"><br></div>

<h4 id="光栅图可视化历史天气"><a href="#光栅图可视化历史天气" class="headerlink" title="光栅图可视化历史天气"></a>光栅图可视化历史天气</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#这里使用geom_raster()图层进行映射（不支持极坐标转换）</span></div><div class="line">breaks&lt;-aggregate(ID~Month,data=mydata11[mydata11$Year==<span class="number">2014</span>,],FUN=median)</div><div class="line">CairoPNG(file=<span class="string">"ECOCirclejjj.png"</span>,width=<span class="number">1200</span>,height=<span class="number">600</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(data=mydata11)+</div><div class="line">geom_raster(aes(ID,Year,fill=FADD))+</div><div class="line">scale_fill_brewer(palette=<span class="string">"YlOrRd"</span>,type=<span class="string">"seq"</span>,direction=<span class="number">1</span>,guide=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">scale_x_continuous(breaks=breaks[,<span class="number">2</span>],labels=paste0(<span class="number">1</span>:<span class="number">12</span>,<span class="string">"月"</span>))+</div><div class="line">labs(title=<span class="string">"2014~2016年度北京市空气质量水平可视化"</span>,subtitle=<span class="string">"数据根据AQI指标水平进行分段分割"</span>,caption=<span class="string">"Source：https://www.aqistudy.cn/"</span>,fill=<span class="string">""</span>)+</div><div class="line">theme(</div><div class="line">text=element_text(family=<span class="string">"myfont"</span>),</div><div class="line">axis.text=element_text(size=<span class="number">20</span>),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank(),</div><div class="line">panel.background=element_blank(),</div><div class="line">panel.grid=element_blank(),</div><div class="line">panel.border=element_blank(),</div><div class="line">legend.key.size=unit(<span class="number">1.2</span>,<span class="string">'cm'</span>),</div><div class="line">legend.key.height=unit(<span class="number">1</span>,<span class="string">'cm'</span>),</div><div class="line">legend.text.align=<span class="number">1</span>,</div><div class="line">legend.text=element_text(size=<span class="number">20</span>,hjust=<span class="number">3</span>,vjust=<span class="number">3</span>,face=<span class="string">"bold"</span>),</div><div class="line">plot.background=element_blank(),</div><div class="line">plot.title=element_text(size=<span class="number">50</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.subtitle=element_text(size=<span class="number">35</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.caption=element_text(size=<span class="number">25</span>,hjust=<span class="number">0</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">plot.margin=unit(c(<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>),<span class="string">"lines"</span>)</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/ECOCircle5.png" width="800" height="500" alt="ECOCircle5" align="center"><br></div>


<h4 id="构造多重柱形图模拟北京历史天气可视化"><a href="#构造多重柱形图模拟北京历史天气可视化" class="headerlink" title="构造多重柱形图模拟北京历史天气可视化"></a>构造多重柱形图模拟北京历史天气可视化</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#作图方法2：（虽然代码多但是调整相对自由）</span></div><div class="line">setwd(<span class="string">"F:/微信公众号/公众号——数据小魔方/2017年4月/20170404"</span>)</div><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"msyhl.ttc"</span>)</div><div class="line">CairoPNG(file=<span class="string">"ECOCircle.png"</span>,width=<span class="number">1488</span>,height=<span class="number">996</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot()+</div><div class="line">geom_bar(data=mydata11A,aes(x=ID,y=Monthdata),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#ECEDD1"</span>,col=<span class="string">"#ECEDD1"</span>)+</div><div class="line">geom_bar(data=mydata11B,aes(x=ID,y=Monthdata),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#DFE0B1"</span>,col=<span class="string">"#DFE0B1"</span>)+</div><div class="line">geom_bar(data=mydata11C,aes(x=ID,y=Quarterdata),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#BDBDBD"</span>,col=<span class="string">"#BDBDBD"</span>)+</div><div class="line">geom_bar(data=mydata11D,aes(x=ID,y=Quarterdata),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>,fill=<span class="string">"#D4D2D3"</span>,col=<span class="string">"#D4D2D3"</span>)+</div><div class="line">geom_bar(data=mydata11[mydata11$Year==<span class="number">2016</span>,],aes(x=ID,y=Asst,fill=FADD),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>)+</div><div class="line">geom_bar(data=mydata11[mydata11$Year==<span class="number">2015</span>,],aes(x=ID,y=Asst,fill=FADD),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>)+</div><div class="line">geom_bar(data=mydata11[mydata11$Year==<span class="number">2014</span>,],aes(x=ID,y=Asst,fill=FADD),stat=<span class="string">"identity"</span>,width=<span class="number">1</span>)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"YlOrRd"</span>,type=<span class="string">"seq"</span>,direction=<span class="number">1</span>,guide=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>)+</div><div class="line">ylim(-<span class="number">20</span>,<span class="number">20</span>)+</div><div class="line">guides(colour=guide_legend(reverse=<span class="literal">TRUE</span>))+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=circlemonth,y=-<span class="number">2.5</span>,label=paste0(<span class="number">1</span>:<span class="number">12</span>,<span class="string">"月"</span>),angle=circlebj),family=<span class="string">"myfont"</span>,size=<span class="number">7</span>,hjust=<span class="number">0.5</span>,vjust=<span class="number">.5</span>)+</div><div class="line">geom_text(data=<span class="literal">NULL</span>,aes(x=circlequarter,y=<span class="number">17.5</span>,label=paste0(c(<span class="string">"一"</span>,<span class="string">"二"</span>,<span class="string">"三"</span>,<span class="string">"四"</span>),<span class="string">"季度"</span>),angle=circleqd),family=<span class="string">"myfont"</span>,size=<span class="number">7</span>,hjust=<span class="number">0.5</span>,vjust=<span class="number">.5</span>)+</div><div class="line">annotate(<span class="string">"text"</span>,x=<span class="number">0</span>,y=-<span class="number">15</span>,label=<span class="string">"北京"</span>,size=<span class="number">25</span>,hjust=<span class="number">.5</span>,vjust=<span class="number">1</span>,family=<span class="string">"myfont"</span>) +    </div><div class="line">labs(title=<span class="string">"2014~2016年度北京市空气质量水平可视化"</span>,subtitle=<span class="string">"数据根据AQI指标水平进行分段分割"</span>,caption=<span class="string">"Source：https://www.aqistudy.cn/"</span>,x=<span class="string">""</span>,y=<span class="string">""</span>,fill=<span class="string">""</span>)+</div><div class="line">theme(</div><div class="line">text=element_text(family=<span class="string">"myfont"</span>),</div><div class="line">axis.text=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.ticks=element_blank(),</div><div class="line">panel.background=element_blank(),</div><div class="line">panel.grid=element_blank(),</div><div class="line">panel.border=element_blank(),</div><div class="line">legend.key.size=unit(<span class="number">1.2</span>,<span class="string">'cm'</span>),</div><div class="line">legend.key.height=unit(<span class="number">1</span>,<span class="string">'cm'</span>),</div><div class="line">legend.text.align=<span class="number">1</span>, </div><div class="line">legend.position=c(<span class="number">1</span>,<span class="number">0</span>),legend.justification=c(<span class="number">1</span>,<span class="number">0</span>),</div><div class="line">legend.text=element_text(size=<span class="number">20</span>,hjust=<span class="number">3</span>,vjust=<span class="number">3</span>,face=<span class="string">"bold"</span>),</div><div class="line">plot.background=element_blank(),</div><div class="line">plot.title=element_text(size=<span class="number">50</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.subtitle=element_text(size=<span class="number">35</span>,lineheight=<span class="number">1.5</span>),</div><div class="line">plot.caption=element_text(size=<span class="number">25</span>,hjust=<span class="number">0</span>,lineheight=<span class="number">1.2</span>),</div><div class="line">plot.margin=unit(c(<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>,<span class="number">.5</span>),<span class="string">"lines"</span>),</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/ECOCircle2.png" width="650" height="440" alt="ECOCircle2" align="center"><br></div>

<p><br></p>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/ECOCircle3.png" width="650" height="440" alt="ECOCircle3" align="center"><br></div>

<p><br></p>
<div align="center"><br><img src="http://oqdvmreg2.bkt.clouddn.com/beijingweather/jpg/ECOCircle6.png" width="650" height="440" alt="ECOCircle6" align="center"><br></div>


<hr>
<p><strong>联系方式：</strong></p>
<p>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508  </p>
<p><strong>个人简介：</strong></p>
<p><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。 <br><br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国字体地图]]></title>
      <url>/2017/05/22/%E4%B8%AD%E5%9B%BD%E5%AD%97%E4%BD%93%E5%9C%B0%E5%9B%BE/</url>
      <content type="html"><![CDATA[<h3 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h3><p>加载包<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(rvest)           </div><div class="line"><span class="keyword">library</span>(dplyr)          </div><div class="line"><span class="keyword">library</span>(stringr)        </div><div class="line"><span class="keyword">library</span>(showtext)      </div><div class="line"><span class="keyword">library</span>(Cairo)          </div><div class="line"><span class="keyword">library</span>(RColorBrewer)   </div><div class="line"><span class="keyword">library</span>(ggplot2)        </div><div class="line"><span class="keyword">library</span>(grid)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>由于本文用到了一款中国行政区划的字体地图——EyesAsia，每一个行政区都是以一个字母代替的，所以需要获取该地图字体对应的索引表。该字体的开源项目主页为：<a href="https://github.com/HaoyunS/EyesAsia" target="_blank" rel="external">EyesAsia</a><br>与此对应的，还有一款也很fashion的字体地图（StateFace），是美帝的行政区划字体地图。项目主页在这里:<a href="https://propublica.github.io/stateface" target="_blank" rel="external">stateface</a></p>
</blockquote>
<p>一共43个编号，以下是提取过程，因为是一个table，所以可以直接使用rvest非常便捷的表格抓取工具。<br></p>
<a id="more"></a>
<h4 id="抓取数据"><a href="#抓取数据" class="headerlink" title="抓取数据"></a>抓取数据</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">url&lt;-<span class="string">"https://github.com/haoyuns/EyesAsia"</span></div><div class="line">table&lt;-read_html(url,encoding=<span class="string">"utf-8"</span>)%&gt;%html_table()%&gt;%.[[<span class="number">2</span>]]</div><div class="line">table1&lt;-table[table$lowercase!=<span class="string">""</span>,]</div><div class="line">table2&lt;-table[table$lowercase==<span class="string">""</span>,]%&gt;%.[,<span class="number">2</span>:<span class="number">3</span>]</div><div class="line">table11&lt;-table1[,<span class="number">1</span>:<span class="number">2</span>]%&gt;%rename(case=lowercase)</div><div class="line">table12&lt;-table1[,<span class="number">3</span>:<span class="number">4</span>]%&gt;%rename(case=UPPERCASE)</div><div class="line">table13&lt;-table2%&gt;%rename(case=Content,Content=UPPERCASE)</div><div class="line">tabledata&lt;-rbind(table11,table12,table13)</div></pre></td></tr></table></figure>
<h4 id="筛选出中国的34个省级行政区"><a href="#筛选出中国的34个省级行政区" class="headerlink" title="筛选出中国的34个省级行政区"></a>筛选出中国的34个省级行政区</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">tabledata$Cname&lt;-str_extract(tabledata$Content,<span class="string">"[\\u4e00-\\u9fa5]+"</span>)</div><div class="line">tabledata$Ename&lt;-str_extract(tabledata$Content,<span class="string">"[^\\u4e00-\\u9fa5]+"</span>)%&gt;%str_trim(side=c(<span class="string">"right"</span>))</div><div class="line">tabledata&lt;-tabledata[,-<span class="number">2</span>]</div><div class="line">setwd(<span class="string">"D:/R/File"</span>)</div><div class="line">write.table(tabledata,<span class="string">"EyesAsia.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div><div class="line">word&lt;-c(<span class="string">"日本"</span>,<span class="string">"蒙古"</span>,<span class="string">"朝鲜"</span>,<span class="string">"韩国"</span>,<span class="string">"青海湖"</span>,<span class="string">"鄱阳湖"</span>,<span class="string">"洞庭湖"</span>,<span class="string">"太湖"</span>,<span class="string">"洪泽湖"</span>)</div><div class="line">mymapdata&lt;-tabledata</div><div class="line">mymapdata$m&lt;-mymapdata$Cname %<span class="keyword">in</span>% word</div><div class="line">mymapdata&lt;-mymapdata%&gt;%filter(m==<span class="literal">FALSE</span>)%&gt;%.[,<span class="number">1</span>:<span class="number">3</span>]</div><div class="line">write.table(mymapdata,<span class="string">"EyesAsia.csv"</span>,sep=<span class="string">","</span>,row.names=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<hr>
<h3 id="作图主要过程分为三部分："><a href="#作图主要过程分为三部分：" class="headerlink" title="作图主要过程分为三部分："></a>作图主要过程分为三部分：</h3><h4 id="步骤一：外围字体圆环图："><a href="#步骤一：外围字体圆环图：" class="headerlink" title="步骤一：外围字体圆环图："></a>步骤一：外围字体圆环图：</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#导入数据：</span></div><div class="line"><span class="comment">#生成一个虚拟指标，并分割为有序分段因子变量。</span></div><div class="line">mymapdata&lt;-read.csv(<span class="string">"EyesAsia.csv"</span>,stringsAsFactors=<span class="literal">FALSE</span>,check.names=<span class="literal">FALSE</span>)</div><div class="line">mymapdata&lt;-transform(mymapdata,scale=<span class="number">5</span>,peform=runif(<span class="number">34</span>,<span class="number">20</span>,<span class="number">50</span>))</div><div class="line">mymapdata$scale&lt;-as.numeric(mymapdata$scale)</div><div class="line">mymapdata$group&lt;-cut(mymapdata$peform,breaks=c(<span class="number">20</span>,<span class="number">26</span>,<span class="number">32</span>,<span class="number">38</span>,<span class="number">44</span>,<span class="number">50</span>),levels=,labels=c(<span class="string">"20~26"</span>,<span class="string">"26~32"</span>,<span class="string">"32~38"</span>,<span class="string">"38~44"</span>,<span class="string">"44~50"</span>),order=<span class="literal">TRUE</span>)</div><div class="line">mymapdata&lt;-arrange(mymapdata,desc(peform));mymapdata$order=<span class="number">1</span>:nrow(mymapdata)</div><div class="line">mymapdata$order&lt;-as.numeric(mymapdata$order)</div></pre></td></tr></table></figure>
<p>作图函数：  </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CairoPNG(<span class="string">"chineserador.png"</span>,<span class="number">900</span>,<span class="number">900</span>)</div><div class="line">showtext.begin()</div><div class="line">ggplot(mymapdata,aes(order,scale,label=case))+</div><div class="line">ylim(-<span class="number">6</span>,<span class="number">6</span>)+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">geom_text(aes(colour=group),family=<span class="string">"myfont"</span>,size=<span class="number">20</span>)+</div><div class="line">scale_colour_brewer(palette=<span class="string">"Greens"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">panel.grid=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text=element_blank(),</div><div class="line">)</div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/circle.png" width="500" height="500" alt="circle" align="center"><br></div>


<h4 id="制作中心中国地图"><a href="#制作中心中国地图" class="headerlink" title="制作中心中国地图"></a>制作中心中国地图</h4><p>其实针对中国省级地图素材而言，大部分shp格式的地图都是可以放心使用的，但是为了练习自己对于json数据的操控能力（毕竟是非常流行的web端数据存储格式），<br>这里我硬生生的抽取了json格式的中国地图数据，所以以下代码看着有些不适，请大家谨慎观看！<br></p>
<p>载入包：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(plyr)         </div><div class="line"><span class="keyword">library</span>(maptools)      </div><div class="line"><span class="keyword">library</span>(scales)       </div><div class="line"><span class="keyword">library</span>(jsonlite)</div><div class="line"><span class="keyword">library</span>(jsonview)</div></pre></td></tr></table></figure>
<p>导入json格式中国地图：     </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">"D:/R/mapdata/State/"</span>)</div><div class="line">china_data&lt;-fromJSON(<span class="string">"china.json"</span>)</div><div class="line">json_tree_view(china_data)</div></pre></td></tr></table></figure>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/jsonview.png" width="400" height="400" alt="jsontree" align="center"><br></div>

<p>最新发现的可以自动化解析并渲染json树结构的包，它不仅可以渲染json数据，也可以渲染xml、html格式的树结构：<br></p>
<p>抽取行政区里列表信息：     </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">china_city_data&lt;-china_data$features$properties[,c(<span class="number">1</span>,<span class="number">3</span>)]</div><div class="line">names(china_city_data)[<span class="number">2</span>]&lt;-<span class="string">"region"</span></div><div class="line">china_city_data$ID&lt;-<span class="number">1</span>:nrow(china_city_data)</div><div class="line">china_city_data$size&lt;-runif(<span class="number">34</span>,<span class="number">900</span>,<span class="number">1150</span>)</div><div class="line">china_city_data$group&lt;-cut(china_city_data$size,breaks=c(<span class="number">900</span>,<span class="number">950</span>,<span class="number">1000</span>,<span class="number">1050</span>,<span class="number">1100</span>,<span class="number">1150</span>),labels=c(<span class="string">"900~950"</span>,<span class="string">"951~1000"</span>,<span class="string">"1001~1050"</span>,<span class="string">"1051~1100"</span>,<span class="string">"1101~1150"</span>),order=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p>抽取行政区划边界经纬度多边形数据：（最艰难的部分）    </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">china_map_data&lt;-china_data$features$geometry$coordinates</div></pre></td></tr></table></figure>
<p>还时上次讲到的困难，中国某些省份辖区内有独立于主区域的分离区域（比如河北的廊坊，以及山东、及南部沿海多岛屿的省份）。<br></p>
<p>今天这个json素材要比上次提取的那个安徽省的素材更加复杂，具体步骤也不详细讲解了，看不太懂就直接略过吧，反正代码写的也比较烂，基本写不出那种可以通用的代码！<br></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">num&lt;-c();id&lt;-c()</div><div class="line"><span class="keyword">for</span>( i <span class="keyword">in</span> <span class="number">1</span>:length(china_map_data))&#123;</div><div class="line">citymapdata&lt;-china_map_data[[i]]</div><div class="line">num[i]&lt;-length(citymapdata)</div><div class="line">id&lt;-<span class="number">1</span>:i</div><div class="line">a&lt;-data.frame(id,num)</div><div class="line">&#125;</div><div class="line">a[a$num&lt;=<span class="number">2</span>,]</div><div class="line">   id num</div><div class="line"><span class="number">12</span> <span class="number">12</span>   <span class="number">2</span></div><div class="line"><span class="number">14</span> <span class="number">14</span>   <span class="number">2</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dim(china_map_data[[<span class="number">14</span>]][[<span class="number">1</span>]])=c(length(china_map_data[[<span class="number">14</span>]][[<span class="number">1</span>]])/<span class="number">2</span>,<span class="number">2</span>)</div><div class="line">dim(china_map_data[[<span class="number">14</span>]][[<span class="number">2</span>]])=c(length(china_map_data[[<span class="number">14</span>]][[<span class="number">2</span>]])/<span class="number">2</span>,<span class="number">2</span>)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mapdata1&lt;-data.frame()</div><div class="line">mapdata2&lt;-data.frame()</div><div class="line"><span class="keyword">for</span>( i <span class="keyword">in</span> <span class="number">1</span>:length(china_map_data))&#123;</div><div class="line">    citymapdata&lt;-china_map_data[[i]]</div><div class="line">        <span class="keyword">if</span> (length(citymapdata)&lt;=<span class="number">2</span>)&#123;</div><div class="line">            <span class="keyword">for</span>(m <span class="keyword">in</span> <span class="number">1</span>:length(citymapdata))&#123;</div><div class="line">                citymapdata1&lt;-data.frame(citymapdata[[m]])%&gt;%dplyr::rename(long=X1,lat=X2)</div><div class="line">                citymapdata1$ID&lt;-i</div><div class="line">                citymapdata1$group&lt;-as.numeric(paste0(i,<span class="string">"."</span>,m,<span class="number">1</span>))</div><div class="line">                citymapdata1$order&lt;-<span class="number">1</span>:nrow(citymapdata1)</div><div class="line">             mapdata1&lt;-rbind(mapdata1,citymapdata1,citymapdata2)</div><div class="line">             &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">             dim(citymapdata)=c(length(citymapdata)/<span class="number">2</span>,<span class="number">2</span>)</div><div class="line">             citymapdata2&lt;-data.frame(citymapdata)%&gt;%dplyr::rename(long=X1,lat=X2)</div><div class="line">             citymapdata2$ID&lt;-i</div><div class="line">             citymapdata2$group&lt;-as.numeric(paste0(i,<span class="string">"."</span>,<span class="number">1</span>))</div><div class="line">             citymapdata2$order&lt;-<span class="number">1</span>:nrow(citymapdata2)</div><div class="line">         mapdata2&lt;-rbind(mapdata2,citymapdata2)</div><div class="line">        &#125;</div><div class="line">    mydatanew&lt;-rbind(mapdata1,mapdata2)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>至此经纬度的边界点信息也有了，接下来就可可以映射地图了：<br></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydatanew&lt;-dplyr::arrange(mydatanew,ID,order)</div></pre></td></tr></table></figure>
<p>合并经纬度边界点信息和行政区划信息。  </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mydatanew_map_data&lt;-merge(mydatanew,china_city_data[,c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)])</div></pre></td></tr></table></figure>
<p>预览地图素材是否可用：<br></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ggplot(mydatanew_map_data,aes(long,lat,group=group))+geom_polygon(col=<span class="string">"white"</span>,fill=<span class="string">"grey"</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">     theme(               </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank()</div><div class="line">          )</div></pre></td></tr></table></figure>
<p>预览效果图：<br></p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/ploygon.png" width="400" height="400" alt="test" align="center"><br></div>

<h4 id="拼接两幅地图。"><a href="#拼接两幅地图。" class="headerlink" title="拼接两幅地图。"></a>拼接两幅地图。</h4><p>第一款字体时最初提到的地图字体（需要事先下载哦）；第二款就是微软雅黑喽，渲染省份标签用的。  </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">font.add(<span class="string">"myfont"</span>,<span class="string">"EyesAsia-Regular.otf"</span>)</div><div class="line">font.add(<span class="string">"myyh"</span>,<span class="string">"msyhl.ttc"</span>)</div></pre></td></tr></table></figure>
<p>为了更加舒适的看圆环上的省份标签，这里给标签添加角度偏移量。   </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">circle&lt;-seq(<span class="number">0</span>,<span class="number">95</span>,length=<span class="number">9</span>)</div><div class="line">circleALL&lt;-rep(c(-circle,rev(circle[<span class="number">2</span>:<span class="number">9</span>])),<span class="number">2</span>)</div><div class="line">mymapdata$circle&lt;-circleALL</div></pre></td></tr></table></figure>
<p>鉴于ggplot极坐标下的首尾不衔接的缺陷，这里再查补一个缺失值。    </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mymapdata&lt;-arrange(mymapdata,order)</div><div class="line">mapx&lt;-mymapdata[mymapdata$order==<span class="number">34</span>,]</div><div class="line">mapx$order&lt;-<span class="number">35</span>;mapx$Cname=<span class="literal">NA</span>;mapx$case=<span class="literal">NA</span></div><div class="line">mymapdata1&lt;-rbind(mymapdata,mapx)</div></pre></td></tr></table></figure>
<p>所有的步骤都弄完之后，接下来将两幅图表存为对象。    </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">p1&lt;-ggplot(mymapdata1,aes(x=order,y=scale))+</div><div class="line">ylim(-<span class="number">6</span>,<span class="number">7.5</span>)+</div><div class="line">coord_polar(theta=<span class="string">"x"</span>,start=<span class="number">0</span>)+</div><div class="line">geom_text(aes(colour=group,label=case),family=<span class="string">"myfont"</span>,size=<span class="number">15</span>)+</div><div class="line">geom_text(aes(y=scale+<span class="number">2</span>,angle=circle,label=Cname),family=<span class="string">"myyh"</span>,size=<span class="number">6</span>,vjust=<span class="number">0.5</span>,hjust=<span class="number">.5</span>)+</div><div class="line">scale_colour_brewer(palette=<span class="string">"Greens"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">theme_minimal()+</div><div class="line">theme(</div><div class="line">panel.grid=element_blank(),</div><div class="line">axis.title=element_blank(),</div><div class="line">axis.text=element_blank(),</div><div class="line">)</div></pre></td></tr></table></figure>
<p>图表效果大致是这样的：  </p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/circle.png" width="450" height="450" alt="circle" align="center"><br></div>

<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">p2&lt;-ggplot(china_city_data,aes(map_id=region,fill=group))+</div><div class="line">geom_map(map=mydatanew_map_data,colour=<span class="string">"white"</span>)+</div><div class="line">expand_limits(x=mydatanew_map_data$long,y=mydatanew_map_data$lat)+</div><div class="line">scale_fill_brewer(palette=<span class="string">"YlOrRd"</span>,guide=<span class="literal">FALSE</span>)+</div><div class="line">coord_map(<span class="string">"polyconic"</span>)+</div><div class="line">     theme(             </div><div class="line">          panel.grid = element_blank(),</div><div class="line">          panel.background = element_blank(),</div><div class="line">          axis.text = element_blank(),</div><div class="line">          axis.ticks = element_blank(),</div><div class="line">          axis.title = element_blank(),</div><div class="line">          plot.background=element_rect(I(<span class="number">0</span>),linetype=<span class="number">0</span>)</div><div class="line">          )</div></pre></td></tr></table></figure>
<p>图表效果大致是这样的：<br></p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/China.png" width="500" height="500" alt="ChinaMap" align="center"><br></div>


<p>拼接：<br></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CairoPNG(<span class="string">"chineserador.png"</span>,<span class="number">1000</span>,<span class="number">1000</span>)</div><div class="line">showtext.begin()</div><div class="line">vs &lt;- viewport(width=<span class="number">0.95</span>,height=<span class="number">0.95</span>,x=<span class="number">0.5</span>,y=<span class="number">0.5</span>)    </div><div class="line">print(p1,vp=vs)  </div><div class="line">vs &lt;- viewport(width=<span class="number">0.75</span>,height=<span class="number">0.8</span>,x=<span class="number">0.5</span>,y=<span class="number">0.5</span>)   </div><div class="line">print(p2,vp=vs) </div><div class="line">showtext.end()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p>以下是最终的结果：<br></p>
<div align="center"><br><img src="http://oqbxptw4f.bkt.clouddn.com/FontMap-of-China/Final.png" width="400" height="400" alt="Final" align="center"><br></div>

<h3 id="OK了，做完收工"><a href="#OK了，做完收工" class="headerlink" title="OK了，做完收工~"></a>OK了，做完收工~</h3><hr>
<p><strong>联系方式：</strong><br>wechat：ljty1991<br>Mail:578708965@qq.com<br>个人公众号：数据小魔方（datamofang）<br>团队公众号：EasyCharts<br>qq交流群：[魔方学院]298236508</p>
<p><strong>个人简介：</strong><br><strong><em>杜雨</em></strong><br>财经专业研究僧；<br>伪数据可视化达人；<br>文科背景的编程小白；<br>喜欢研究商务图表与地理信息数据可视化，爱倒腾PowerBI、SAP DashBoard、Tableau、R ggplot2、Think-cell chart等诸如此类的数据可视化软件，创建并运营微信公众号“数据小魔方”。<br>Mail:578708965@qq.com </p>
<hr>
<p><strong>备注信息：</strong><br><a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      
        <categories>
            
            <category> R语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> R语言 </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
